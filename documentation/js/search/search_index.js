var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.557,1,1.173]],["body/components/AppComponent.html",[0,0.894,1,2.032,2,0.214,3,0.193,4,0.995,5,0.995,6,0.995,7,0.132,8,1.663,9,1.513,10,2.896,11,3.42,12,1.617,13,3.127,14,0.995,15,0.928,16,1.768,17,1.882,18,2.493,19,2.047,20,2.087,21,1.33,22,3.42,23,1.33,24,3.42,25,0.236,26,0.596,27,2.002,28,2.612,29,4.664,30,2.612,31,1.937,32,4.664,33,5.701,34,4.664,35,4.664,36,4.664,37,0.842,38,3.42,39,2.412,40,4.664,41,3.949,42,3.949,43,0.959,44,1.153,45,1.856,46,1.489,47,2.329,48,2.412,49,2.594,50,1.941,51,2.299,52,1.565,53,2.23,54,1.244,55,1.423,56,0.788,57,0.026,58,0.495,59,0.547,60,0.596,61,1.653,62,1.882,63,2.087,64,3.42,65,3.42,66,2.23,67,2.087,68,2.293,69,2.244,70,3.42,71,3.42,72,1.035,73,2.23,74,3.42,75,2.896,76,2.846,77,1.489,78,2.23,79,2.23,80,2.23,81,1.418,82,2.23,83,0.958,84,2.074,85,1.146,86,3.522,87,2.23,88,1.549,89,2.23,90,2.23,91,2.744,92,1.308,93,2.23,94,3.42,95,2.23,96,2.23,97,4.494,98,3.42,99,5.308,100,2.896,101,3.522,102,1.526,103,3.42,104,2.293,105,2.23,106,1.588,107,2.23,108,0.604,109,1.069,110,1.889,111,0.418,112,1.495,113,0.995,114,2.551,115,2.551,116,2.551,117,1.249,118,3.42,119,2.23,120,0.811,121,1.069,122,1.069,123,1.361,124,1.361,125,1.955,126,1.249,127,0.295,128,0.398,129,2.612,130,1.617,131,1.244,132,2.23,133,1.663,134,2.23,135,2.23,136,1.889,137,1.889,138,1.663,139,2.23,140,1.889,141,2.23,142,2.23,143,2.23,144,2.23,145,2.23,146,2.23,147,2.23,148,3.42,149,1.495,150,2.23,151,2.23,152,2.23,153,2.23,154,2.551,155,2.23,156,2.23,157,2.23,158,2.23,159,1.663,160,2.23,161,0.928,162,0.928,163,1.526,164,1.663,165,1.663,166,2.23,167,2.23,168,2.23,169,1.495,170,1.495,171,2.23,172,1.663,173,2.23,174,4.664,175,3.42,176,1.249,177,1.889,178,1.889,179,1.889,180,3.42,181,1.889,182,1.889,183,2.23,184,2.23,185,3.949,186,1.64,187,3.42,188,3.42,189,1.915,190,0.76,191,1.526,192,1.526,193,1.526,194,0.995,195,0.995,196,0.625,197,1.526,198,0.625,199,0.695,200,0.995,201,0.76,202,1.526,203,0.712,204,1.526,205,0.76,206,1.856,207,0.712,208,0.811,209,0.995,210,0.76,211,0.995,212,0.76,213,0.736,214,0.76,215,0.995,216,0.667,217,1.165,218,0.712,219,0.76,220,0.995,221,0.76,222,0.995,223,0.995,224,0.012,225,0.012]],["title/modules/AppModule.html",[226,1.252,227,2.308]],["body/modules/AppModule.html",[1,2.328,2,0.362,3,0.326,7,0.223,16,2.883,17,2.157,46,2.022,57,0.026,62,1.899,69,1.682,108,0.747,111,0.706,117,2.111,120,1.371,121,1.808,122,1.808,127,0.43,128,0.439,186,1.808,190,1.284,207,1.203,221,2.157,224,0.018,225,0.018,226,1.811,227,4.702,228,2.111,229,3.738,230,3.192,231,3.192,232,3.192,233,3.192,234,3.192,235,3.762,236,3.453,237,3.275,238,3.547,239,3.338,240,2.3,241,3.771,242,4.98,243,3.771,244,3.192,245,4.98,246,1.284,247,3.192,248,3.771,249,3.771,250,3.771,251,3.192,252,3.192,253,4.98,254,4.216,255,3.771,256,4.98,257,2.812,258,3.771,259,2.812,260,3.771,261,3.192,262,2.527,263,3.192,264,3.714,265,3.771,266,4.216,267,2.812,268,3.714,269,3.714,270,2.812,271,4.98,272,1.466,273,4.98,274,3.771,275,4.98,276,3.771,277,3.338,278,3.192,279,3.771,280,3.192,281,3.771,282,3.771,283,3.771]],["title/injectables/AuthGuardService.html",[237,1.78,284,1.252]],["body/injectables/AuthGuardService.html",[2,0.32,3,0.288,7,0.197,9,1.667,12,2.193,14,1.487,17,2.204,25,0.354,26,0.799,27,1.958,28,2.933,37,1.128,43,0.935,44,1.724,49,2.915,50,2.792,51,2.792,52,1.455,54,1.905,55,2.179,56,0.768,57,0.026,58,0.354,59,0.542,60,0.581,61,2.04,62,2.27,63,3.441,69,2.726,72,1.172,81,1.362,88,1.285,106,1.371,108,0.555,111,0.625,120,1.213,127,0.487,128,0.656,129,3.422,130,2.193,163,2.045,164,2.487,165,2.487,224,0.016,225,0.016,237,3.236,238,3.311,284,2.052,285,4.557,286,2.487,287,4.435,288,3.947,289,4.557,290,3.881,291,4.882,292,3.335,293,3.335,294,4.435,295,4.096,296,3.906,297,2.708,298,3.196,299,5.238,300,2.487,301,3.418,302,3.881]],["title/modules/AuthenticatedModule.html",[226,1.252,235,2.101]],["body/modules/AuthenticatedModule.html",[0,0.821,2,0.372,3,0.335,7,0.229,9,1.41,16,3.1,19,1.238,20,2.366,28,2.84,57,0.026,62,1.925,72,0.95,108,0.727,111,0.726,127,0.537,128,0.59,130,1.507,186,1.859,190,1.321,196,1.914,198,1.087,201,1.321,210,2.174,219,2.174,224,0.018,225,0.018,226,2.181,228,2.171,229,2.599,235,4.262,236,3.484,239,3.4,240,2.366,264,3.783,266,4.295,267,2.892,268,3.783,269,3.783,270,2.892,272,1.507,277,3.789,280,3.284,298,3.095,303,3.284,304,3.284,305,3.878,306,3.284,307,3.284,308,3.574,309,3.878,310,4.295,311,2.892,312,3.284,313,3.284,314,2.171,315,3.284,316,3.284,317,2.599,318,2.171,319,3.878,320,4.295,321,4.295,322,2.892,323,3.878,324,4.295,325,3.878,326,3.284,327,3.878,328,3.284,329,3.284,330,4.295,331,3.284,332,3.284,333,3.284,334,4.295,335,3.284,336,4.295,337,4.786,338,3.878,339,3.284,340,3.284,341,3.783,342,3.284]],["title/interfaces/Config.html",[199,0.476,343,0.476]],["body/interfaces/Config.html",[0,0.602,2,0.24,3,0.215,7,0.147,12,1.447,18,0.97,19,0.796,21,0.97,23,0.97,25,0.265,26,0.649,27,1.581,30,2.958,31,2.112,39,1.29,43,0.7,45,1.113,46,1.188,47,1.397,48,1.925,49,1.853,50,1.038,51,1.549,54,0.908,57,0.026,58,0.626,59,0.358,72,1.038,77,0.796,81,1.026,83,1.453,88,1.249,92,1.249,102,1.113,106,1.581,108,0.683,109,1.196,111,0.467,112,2.496,113,1.987,120,0.908,121,1.196,122,1.196,127,0.385,128,0.433,131,2.146,149,1.673,161,1.549,162,1.549,163,1.661,169,2.986,170,2.986,176,2.085,196,0.7,198,0.7,199,0.89,203,0.796,216,0.747,217,0.85,224,0.013,225,0.013,246,0.85,272,0.97,297,2.303,314,1.397,318,1.397,343,0.515,344,1.673,345,1.673,346,3.541,347,2.272,348,0.97,349,2.496,350,1.549,351,1.673,352,2.272,353,1.861,354,1.861,355,3.322,356,1.861,357,1.861,358,1.522,359,2.496,360,2.496,361,1.861,362,1.861,363,2.496,364,3.541,365,1.29,366,1.673,367,1.861,368,1.861,369,1.861,370,3.322,371,1.673,372,2.777,373,1.268,374,1.861,375,3.956,376,2.777,377,1.861,378,1.861,379,1.861,380,1.861,381,1.861,382,2.717,383,1.861,384,1.673,385,1.673,386,1.397,387,2.496,388,1.673,389,1.673,390,2.777,391,1.861,392,1.861,393,1.861,394,1.861,395,1.861,396,3.322,397,3.322,398,2.472,399,3.683,400,2.777,401,1.861,402,2.777,403,3.683,404,3.322,405,2.777,406,1.861,407,1.861,408,1.861,409,2.777,410,1.861,411,1.861,412,1.861,413,1.522,414,3.683,415,2.777,416,1.673,417,2.777,418,1.673,419,2.777,420,1.861,421,1.673,422,3.503,423,1.673,424,1.673,425,1.522,426,1.673,427,1.673,428,1.861,429,3.31,430,2.496,431,2.496,432,1.861,433,2.496,434,2.496,435,2.496,436,2.777,437,2.496,438,2.496,439,2.777,440,2.777,441,2.272,442,2.496,443,2.777,444,1.861,445,1.861,446,1.861,447,1.861,448,1.673,449,1.861,450,1.861,451,1.861,452,2.777,453,1.861,454,1.861,455,1.861,456,1.861,457,1.861,458,1.673,459,1.861,460,1.861,461,1.861,462,1.861,463,1.673,464,1.861,465,1.861,466,1.861,467,1.673,468,1.861,469,3.683,470,1.673,471,1.861,472,1.861,473,1.861,474,1.861,475,1.861,476,1.861,477,1.861,478,1.861,479,1.861,480,1.861,481,1.673,482,1.861,483,0.85,484,1.861,485,1.861,486,1.861,487,1.861,488,1.861]],["title/classes/ConfigBuilder.html",[128,0.401,489,1.928]],["body/classes/ConfigBuilder.html",[2,0.305,3,0.441,7,0.188,25,0.337,37,1.091,52,1.43,56,1.338,57,0.026,58,0.706,59,0.558,60,1.013,72,1.215,81,1.021,83,1.553,88,0.891,106,0.951,108,0.47,127,0.274,128,0.516,131,1.613,199,0.764,213,0.955,224,0.016,225,0.016,341,5.029,343,0.439,489,2.483,490,5.097,491,2.131,492,5.107,493,4.435,494,4.435,495,5.107,496,4.435,497,3.179,498,2.453,499,5.526,500,5.526,501,2.423,502,5.526,503,5.336,504,2.402,505,3.179,506,4.435,507,3.179,508,2.148,509,4.435,510,2.247,511,3.179,512,3.179,513,3.179,514,4.679,515,5.526,516,5.526,517,1.98,518,3.179,519,4.324,520,4.435,521,3.179,522,1.236,523,2.691,524,4.489,525,4.435,526,2.01,527,3.179,528,3.179,529,4.435,530,3.179,531,1.322,532,4.324,533,3.179,534,3.179,535,2.371,536,3.179,537,2.691,538,3.179,539,3.179,540,3.179,541,3.179,542,3.179,543,3.179,544,3.179,545,3.179,546,2.691,547,2.691,548,6.302,549,3.809,550,3.179,551,5.097,552,3.809,553,3.179,554,5.097,555,3.673,556,3.179,557,3.179,558,3.179,559,3.179]],["title/components/ConfigComponent.html",[0,0.557,196,0.965]],["body/components/ConfigComponent.html",[0,0.986,1,2.075,2,0.291,3,0.261,4,1.35,5,1.35,6,1.35,7,0.179,9,1.101,12,1.933,13,3.334,14,1.35,15,1.259,18,2.617,19,2.149,21,1.666,23,1.666,25,0.321,26,0.747,27,1.773,31,1.945,37,1.054,39,2.796,43,1.201,49,2.535,50,2.069,51,2.25,52,1.532,54,1.558,55,1.783,56,0.697,57,0.026,58,0.527,59,0.478,60,0.528,62,1.459,72,1.166,76,3.3,77,1.726,81,1.145,84,1.101,85,0.608,88,1.201,92,1.201,106,1.282,108,0.646,111,0.567,113,1.35,120,1.101,125,2.102,127,0.37,128,0.499,130,1.177,131,1.809,163,1.35,190,1.031,191,1.911,192,1.911,193,1.911,194,1.35,195,1.35,196,1.745,197,1.911,198,0.849,199,0.875,200,1.35,201,1.459,202,1.911,203,0.966,204,1.911,205,1.031,206,2.219,207,0.966,208,1.101,209,1.35,210,1.031,211,1.35,212,1.031,213,0.922,214,1.031,215,1.35,216,0.906,217,1.459,218,0.966,219,1.031,220,1.35,221,1.031,222,1.35,223,1.35,224,0.015,225,0.015,247,2.563,272,1.177,317,2.029,318,1.695,349,3.334,350,2.25,359,3.625,364,3.625,375,2.872,385,3.334,386,3.029,398,1.35,421,3.625,422,3.616,423,2.029,424,2.029,425,1.847,426,2.029,427,2.029,429,2.872,430,2.029,431,2.029,433,2.029,434,2.029,435,2.029,437,2.872,438,2.029,442,2.029,458,3.625,560,2.563,561,2.872,562,2.872,563,3.195,564,3.195,565,3.195,566,5.409,567,5.409,568,3.027,569,4.285,570,3.027,571,3.027,572,3.027,573,3.027,574,3.027,575,3.027,576,3.027,577,3.027,578,3.027,579,3.027,580,3.027,581,1.847,582,3.027,583,2.563,584,3.027,585,3.027,586,3.027,587,3.027,588,2.257,589,3.027,590,3.027,591,3.027]],["title/classes/ConfigDataSource.html",[128,0.401,382,2.101]],["body/classes/ConfigDataSource.html",[0,0.56,2,0.218,3,0.196,7,0.134,12,1.633,18,0.881,19,0.723,21,0.881,23,0.881,25,0.24,26,0.603,27,1.662,30,3.208,31,2.14,37,0.852,39,1.171,43,0.971,45,1.011,46,1.105,47,1.269,48,1.79,49,1.748,50,0.943,51,1.44,52,1.41,54,0.824,56,0.967,57,0.026,58,0.607,59,0.332,60,0.732,72,1.122,77,1.341,81,0.967,83,1.319,84,1.71,85,0.945,88,1.178,92,1.42,102,1.011,106,1.515,108,0.67,109,1.086,111,0.424,112,2.816,113,1.874,120,0.824,121,1.086,122,1.086,127,0.363,128,0.489,131,2.084,149,1.519,161,1.44,162,1.44,163,1.544,169,2.816,170,2.816,176,1.938,196,0.635,198,0.635,199,0.865,203,0.723,216,0.678,217,0.772,224,0.012,225,0.012,246,0.772,272,0.881,297,2.619,314,3.288,318,1.269,343,0.313,344,3.936,345,1.519,346,2.32,347,2.112,348,0.881,349,2.32,350,1.44,351,1.519,352,2.112,353,1.69,354,1.69,355,3.507,356,1.69,357,1.69,358,1.382,359,2.32,360,2.32,361,1.69,362,1.69,363,2.816,364,3.396,365,1.171,366,1.519,367,1.69,368,1.69,369,1.69,370,3.778,371,1.519,372,3.133,373,1.179,374,1.69,375,4.343,376,3.133,377,1.69,378,1.69,379,1.69,380,1.69,381,1.69,382,2.869,383,1.69,384,1.519,385,1.519,386,1.269,387,2.32,388,1.519,389,1.519,390,2.582,391,1.69,392,1.69,393,1.69,394,1.69,395,1.69,396,3.133,397,3.133,398,2.479,399,3.507,400,2.582,401,1.69,402,2.582,403,3.507,404,3.133,405,2.582,406,1.69,407,1.69,408,1.69,409,2.582,410,1.69,411,1.69,412,1.69,413,1.382,414,3.507,415,2.582,416,1.519,417,2.582,418,1.519,419,2.582,420,1.69,421,1.519,422,3.39,423,1.519,424,1.519,425,1.382,426,1.519,427,1.519,428,1.69,429,3.152,430,2.32,431,2.32,432,1.69,433,2.32,434,2.32,435,2.32,436,2.582,437,2.32,438,2.32,439,2.582,440,2.582,441,2.112,442,2.32,443,2.582,444,1.69,445,1.69,446,1.69,447,1.69,448,1.519,449,1.69,450,1.69,451,1.69,452,2.582,453,1.69,454,1.69,455,1.69,456,1.69,457,1.69,458,1.519,459,1.69,460,1.69,461,1.69,462,1.69,463,3.152,464,3.507,465,2.582,466,2.582,467,1.519,468,2.582,469,4.273,470,3.152,471,1.69,472,3.507,473,1.69,474,1.69,475,2.582,476,1.69,477,1.69,478,1.69,479,1.69,480,1.69,481,1.519,482,1.69,483,0.772,484,1.69,485,1.69,486,1.69,487,1.69,488,1.69,592,3.462,593,2.931,594,2.266,595,3.462,596,2.266,597,2.266,598,2.266,599,2.266,600,2.266,601,2.266]],["title/interfaces/ConfigInterface.html",[343,0.476,522,1.338]],["body/interfaces/ConfigInterface.html",[2,0.425,3,0.476,7,0.261,25,0.469,26,0.962,57,0.026,58,0.701,59,0.605,81,1.019,83,1.639,85,1.209,108,0.469,127,0.579,199,0.612,213,0.952,224,0.02,225,0.02,246,1.507,343,0.936,348,2.145,373,2.207,483,1.507,498,1.609,501,2.187,504,1.72,508,1.72,510,2.007,517,1.507,522,2.145,526,2.187,531,1.841,602,2.121,603,2.121,604,2.121,605,2.288,606,2.296,607,1.841,608,2.121,609,2.809,610,2.121,611,2.121,612,1.841,613,2.853,614,1.841]],["title/components/ConfigListComponent.html",[0,0.557,198,0.965]],["body/components/ConfigListComponent.html",[0,0.727,1,0.601,2,0.169,3,0.152,4,0.787,5,0.787,6,0.787,7,0.104,12,1.389,15,0.734,18,2.38,19,1.954,21,1.106,23,1.106,25,0.187,26,0.496,27,1.765,30,2.944,31,2.141,37,0.7,39,2.119,43,0.798,45,1.594,46,1.308,47,1.593,48,2.119,49,2.102,50,1.487,51,1.705,52,1.594,54,1.3,56,1.035,57,0.026,58,0.642,59,0.594,60,0.783,72,1.147,77,1.733,81,1.211,83,1.458,84,1.491,85,0.824,88,1.002,92,1.26,102,1.594,106,1.512,108,0.634,109,1.713,111,0.331,112,1.907,113,1.594,120,0.642,121,0.846,122,0.846,125,1.593,127,0.309,128,0.331,131,1.912,149,1.183,161,1.183,162,1.183,163,1.269,169,2.395,170,2.395,176,1.593,190,0.601,191,1.269,192,1.269,193,1.269,194,0.787,195,0.787,196,0.798,197,1.269,198,1.149,199,0.881,200,0.787,201,0.601,202,1.269,203,0.908,204,1.828,205,0.601,206,1.594,207,0.563,208,0.642,209,0.787,210,0.601,211,0.787,212,0.601,213,0.612,214,0.601,215,0.787,216,0.851,217,1.217,218,0.563,219,0.601,220,0.787,221,0.601,222,0.787,223,0.787,224,0.01,225,0.01,246,0.601,272,0.686,297,1.848,314,3.645,318,0.988,343,0.244,344,4.363,345,1.183,346,1.907,347,2.501,348,0.686,349,2.395,350,1.487,351,1.907,352,1.735,353,1.316,354,1.316,355,3.583,356,1.316,357,1.316,358,1.077,359,2.747,360,2.747,361,1.316,362,1.316,363,1.907,364,3.954,365,0.912,366,2.747,367,2.121,368,2.121,369,1.316,370,3.583,371,2.747,372,3.352,373,1.531,374,3.057,375,3.819,376,2.665,377,3.057,378,3.057,379,3.057,380,3.057,381,3.057,382,2.742,383,3.057,384,2.747,385,2.395,386,2.295,387,1.907,388,1.183,389,1.183,390,2.121,391,1.316,392,1.316,393,1.316,394,1.316,395,1.316,396,2.665,397,2.665,398,2.143,399,3.057,400,2.121,401,1.316,402,2.121,403,3.057,404,2.665,405,2.121,406,1.316,407,1.316,408,1.316,409,2.121,410,1.316,411,1.316,412,1.316,413,1.077,414,3.057,415,2.121,416,1.183,417,2.121,418,1.183,419,2.121,420,1.316,421,2.747,422,3.083,423,1.183,424,1.183,425,1.077,426,1.183,427,1.183,428,3.057,429,2.747,430,1.907,431,1.907,432,1.316,433,1.907,434,1.907,435,1.907,436,2.121,437,1.907,438,1.907,439,2.121,440,2.121,441,1.735,442,1.907,443,2.121,444,1.316,445,3.057,446,2.121,447,1.316,448,1.907,449,1.316,450,1.316,451,2.121,452,3.352,453,1.316,454,1.316,455,2.121,456,1.316,457,2.121,458,2.747,459,1.316,460,1.316,461,1.316,462,1.316,463,1.183,464,1.316,465,1.316,466,1.316,467,1.183,468,1.316,469,3.057,470,1.183,471,1.316,472,1.316,473,1.316,474,1.316,475,1.316,476,1.316,477,1.316,478,1.316,479,1.316,480,1.316,481,1.183,482,1.316,483,0.601,484,1.316,485,1.316,486,1.316,487,1.316,488,1.316,535,2.121,615,2.409,616,2.845,617,2.409,618,2.409,619,1.765,620,2.845,621,1.765,622,1.765,623,1.765,624,1.765,625,1.765,626,1.765,627,1.765,628,1.765,629,1.765,630,1.765,631,1.765,632,1.765,633,1.765,634,1.765,635,1.765,636,1.765,637,1.765,638,1.765,639,1.765,640,1.765,641,1.765,642,1.765,643,1.765,644,1.494,645,2.845,646,2.409,647,2.845,648,2.845,649,2.845,650,1.494]],["title/modules/ConfigModule.html",[226,1.252,236,1.928]],["body/modules/ConfigModule.html",[2,0.329,3,0.296,7,0.203,16,2.417,19,1.095,20,2.093,57,0.026,62,1.811,72,0.876,108,0.729,111,0.643,127,0.493,128,0.399,130,1.334,186,1.645,190,1.169,198,1.878,199,0.9,201,2.186,203,2.049,205,2.099,207,1.967,212,2.099,213,1.006,214,2.099,216,1.92,218,1.967,224,0.017,225,0.017,226,2.076,228,1.921,229,2.3,236,3.95,239,3.133,240,2.093,261,2.905,262,2.3,263,2.905,264,3.486,267,3.486,268,3.486,269,3.486,270,3.486,272,1.334,277,3.564,310,3.958,311,2.558,313,2.905,314,1.921,315,2.905,316,2.905,317,2.3,318,2.617,320,3.958,321,3.958,322,2.558,324,3.958,326,3.958,328,3.958,329,3.958,330,3.958,331,3.958,332,3.958,333,3.958,334,3.958,335,3.958,336,3.958,337,4.501,340,2.905,341,3.486,342,2.905,352,2.093,358,2.093,360,2.3,365,1.774,651,2.905,652,2.905,653,2.905,654,2.905,655,3.76,656,3.76,657,3.431,658,4.674,659,3.958,660,2.558,661,4.501,662,4.674,663,3.431,664,4.674,665,3.958,666,2.558,667,2.558,668,3.431,669,3.431,670,3.431,671,3.958,672,2.3,673,3.431]],["title/modules/ConfigRoutingModule.html",[226,1.252,656,2.101]],["body/modules/ConfigRoutingModule.html",[0,1.023,2,0.43,3,0.387,7,0.264,57,0.026,69,2.698,97,5.355,101,3.793,108,0.72,111,0.839,120,1.63,127,0.48,128,0.521,131,1.63,154,4.717,177,3.793,178,3.793,179,3.793,196,1.559,199,0.916,205,1.894,212,1.894,218,1.775,224,0.02,225,0.02,226,1.63,237,3.362,251,3.793,252,3.793,277,3.728,278,4.709,291,4.717,312,3.793,483,2.154,656,3.393,659,3.793,660,3.341,661,5.121,665,3.793,666,3.341,671,3.793,672,3.003,674,4.48,675,4.48,676,3.793,677,3.793,678,3.793,679,3.793,680,4.48]],["title/interfaces/ConfigsInterface.html",[343,0.476,498,1.252]],["body/interfaces/ConfigsInterface.html",[2,0.416,3,0.47,7,0.256,25,0.459,26,0.949,57,0.026,58,0.722,59,0.631,81,0.997,83,1.641,85,1.197,108,0.459,127,0.576,199,0.599,213,0.932,224,0.02,225,0.02,246,1.475,343,0.932,348,2.117,373,1.855,483,1.475,498,1.98,501,2.166,504,1.684,508,2.429,510,1.98,517,1.475,522,1.684,526,2.39,531,1.802,602,2.076,603,2.076,604,2.076,605,2.239,606,2.265,607,1.802,608,2.076,609,2.787,610,2.076,611,2.076,612,1.802,613,3.231,614,1.802]],["title/injectables/DatabaseService.html",[46,1.099,284,1.252]],["body/injectables/DatabaseService.html",[2,0.234,3,0.211,7,0.144,25,0.259,26,0.638,27,1.935,31,2.093,37,0.901,43,1.027,46,1.169,47,2.461,48,2.525,52,1.647,56,1.381,57,0.026,58,0.636,59,0.616,60,1.045,72,1.177,76,3.576,77,2.079,83,1.541,84,1.903,85,1.052,88,1.027,91,2.706,92,1.541,104,1.636,106,1.095,108,0.583,109,1.755,111,0.457,113,1.088,122,1.17,127,0.211,128,0.284,131,0.887,161,2.494,162,1.828,199,0.506,224,0.013,225,0.013,246,0.831,284,1.598,343,0.337,347,2.979,348,1.898,371,3.274,373,0.831,387,1.636,388,1.636,389,1.636,448,3.274,463,3.274,481,2.454,489,1.366,498,2.073,501,2.073,503,4.135,504,1.898,510,1.776,514,4.135,517,1.663,519,3.721,522,0.949,583,3.1,614,1.015,615,3.1,617,3.1,618,3.1,681,2.066,682,4.884,683,4.884,684,4.884,685,4.884,686,4.884,687,4.884,688,4.884,689,3.661,690,4.135,691,4.395,692,3.661,693,3.661,694,3.661,695,2.44,696,3.661,697,3.661,698,2.44,699,4.135,700,2.44,701,2.44,702,4.884,703,4.884,704,2.44,705,3.661,706,2.44,707,3.661,708,3.357,709,2.44,710,3.902,711,3.661,712,2.44,713,2.44,714,3.661,715,2.44,716,3.661,717,2.44,718,3.661,719,2.44,720,3.661,721,2.44,722,2.44,723,3.661,724,2.44,725,5.699,726,2.44,727,2.44,728,3.661,729,2.44,730,2.44,731,2.44,732,2.44,733,1.82,734,1.636,735,2.44,736,2.44,737,3.661,738,2.44,739,4.395,740,2.44,741,2.44,742,5.233,743,2.44,744,2.44,745,2.44,746,4.884,747,4.135,748,4.395,749,2.73,750,3.902,751,2.44,752,2.73,753,3.661,754,1.82,755,2.44,756,2.44,757,2.44,758,2.44,759,2.44,760,3.661,761,2.44,762,2.44,763,2.44,764,2.44,765,2.44,766,3.661,767,3.661,768,2.44,769,2.44,770,2.44,771,3.661,772,2.44,773,2.44]],["title/classes/DriveQueryBuilder.html",[128,0.401,774,2.308]],["body/classes/DriveQueryBuilder.html",[2,0.191,3,0.172,7,0.399,9,2.262,14,0.888,25,0.332,26,0.546,31,1.401,37,0.771,43,0.558,52,1.545,54,2.102,55,1.303,56,1.417,57,0.026,58,0.696,59,0.633,60,1.072,61,0.937,68,2.942,72,1.249,81,1.01,83,1.574,84,0.724,85,0.4,127,0.334,128,0.555,129,3.355,130,2.362,189,3.355,208,1.408,224,0.011,225,0.011,295,2.099,491,1.335,526,1.139,552,3.273,555,4.245,581,3.091,607,0.828,774,4.612,775,4.722,776,3.841,777,2.651,778,2.335,779,1.501,780,3.132,781,3.132,782,3.132,783,3.132,784,3.132,785,3.132,786,3.132,787,3.132,788,3.132,789,3.132,790,3.132,791,3.132,792,3.132,793,3.132,794,3.132,795,4.771,796,1.991,797,4.388,798,3.132,799,2.099,800,3.132,801,1.991,802,2.651,803,3.132,804,1.991,805,4.306,806,5.894,807,3.132,808,1.991,809,5.992,810,3.132,811,1.991,812,4.311,813,3.132,814,5.781,815,4.388,816,3.716,817,3.132,818,3.786,819,1.991,820,4.388,821,4.649,822,1.991,823,1.991,824,2.361,825,1.991,826,3.277,827,1.991,828,3.132,829,3.132,830,1.991,831,1.991,832,1.991,833,4.29,834,3.132,835,1.991,836,3.132,837,1.991,838,4.388,839,3.132,840,1.991,841,1.991,842,1.991,843,3.871,844,3.132,845,1.991,846,3.132,847,1.991,848,1.991,849,1.686,850,5.316,851,1.686,852,1.686,853,1.686,854,1.686,855,1.686,856,1.485,857,1.686,858,1.686,859,1.686,860,1.686,861,1.686,862,1.686,863,1.686,864,1.686,865,1.686,866,1.686,867,1.686,868,1.686,869,1.686,870,1.686,871,1.686,872,1.686,873,1.686,874,1.686,875,1.686,876,1.686,877,1.686,878,1.686,879,1.686,880,6.077,881,1.991,882,3.132,883,3.132,884,3.871,885,1.991,886,1.991]],["title/interfaces/FolderCreation.html",[343,0.476,510,1.252]],["body/interfaces/FolderCreation.html",[2,0.407,3,0.463,7,0.25,25,0.449,26,0.935,57,0.026,58,0.719,59,0.671,81,0.975,83,1.628,85,1.184,108,0.449,127,0.573,199,0.585,213,0.911,224,0.019,225,0.019,246,1.442,343,0.928,348,2.087,373,1.828,483,1.442,498,1.54,501,2.144,504,1.646,508,1.646,510,2.144,517,1.442,522,1.646,526,2.144,531,1.762,602,2.03,603,2.03,604,2.03,605,2.189,606,2.233,607,2.578,608,2.03,609,2.765,610,2.972,611,2.972,612,1.762,613,2.775,614,1.762,887,6.717]],["title/components/FolderCreationComponent.html",[0,0.557,207,1.099]],["body/components/FolderCreationComponent.html",[0,0.841,1,0.819,2,0.231,3,0.208,4,1.073,5,1.073,6,1.073,7,0.142,12,1.408,13,2.92,15,1.001,17,1.651,18,2.526,19,2.074,20,1.467,21,1.408,23,1.408,25,0.255,26,0.631,27,1.895,31,1.547,37,0.891,39,2.507,43,0.674,44,1.243,52,1.599,56,0.834,57,0.026,58,0.702,59,0.619,60,0.631,61,1.084,72,1.119,77,1.744,81,1.344,84,1.892,85,1.33,88,1.59,92,1.222,106,0.72,108,0.514,111,0.451,117,1.347,125,1.885,127,0.208,128,0.28,131,0.875,161,1.001,172,2.701,190,0.819,191,1.616,192,1.616,193,1.616,194,1.073,195,1.073,196,0.674,197,1.616,198,0.674,199,0.719,200,1.073,201,0.819,202,1.616,203,0.768,204,1.616,205,0.819,206,1.943,207,1.547,208,2.303,209,1.073,210,0.819,211,1.073,212,0.819,213,0.78,214,0.819,215,1.073,216,0.72,217,1.234,218,0.768,219,0.819,220,1.073,221,0.819,222,1.073,223,1.073,224,0.013,225,0.013,240,2.658,262,4.386,272,0.935,343,0.332,350,1.001,398,1.073,418,2.428,467,1.612,510,2.063,517,1.651,532,4.105,552,3.878,555,2.958,581,2.958,606,2.164,607,1.507,608,2.325,609,2.714,610,2.325,611,2.325,747,2.036,779,2.089,888,5.54,889,2.036,890,4.105,891,3.622,892,3.622,893,4.848,894,4.848,895,4.848,896,4.848,897,5.201,898,4.848,899,3.622,900,4.848,901,4.357,902,4.848,903,4.357,904,3.249,905,3.616,906,2.405,907,2.405,908,4.357,909,2.405,910,2.405,911,2.405,912,2.405,913,2.405,914,2.405,915,3.622,916,4.848,917,2.405,918,2.405,919,2.405,920,2.405,921,2.428,922,5.201,923,2.405,924,2.405,925,2.405,926,2.405,927,2.405,928,2.405,929,2.405,930,4.357,931,3.622,932,2.405,933,2.405,934,2.405,935,2.405,936,4.357,937,2.405,938,2.405,939,3.622,940,2.405,941,2.405,942,3.622,943,2.405,944,2.405,945,3.622,946,2.405,947,3.622,948,1.467,949,2.405,950,5.465]],["title/injectables/GoogleService.html",[17,1.173,284,1.252]],["body/injectables/GoogleService.html",[2,0.215,3,0.194,7,0.203,9,0.816,14,1,17,2.126,25,0.238,26,0.599,27,1.591,28,2.979,30,1.923,31,1.698,37,0.845,41,3.961,42,3.961,43,0.963,45,1.532,46,1.493,47,2.337,48,2.418,52,1.567,54,1.518,55,1.737,56,1.275,57,0.026,58,0.675,59,0.532,60,0.965,61,1.509,62,1.17,63,2.095,67,2.095,68,2.302,72,1.233,75,1.899,76,2.095,77,1.992,81,0.961,83,1.569,84,1.518,85,0.839,88,0.963,91,2.75,92,1.552,108,0.606,109,1.075,110,1.899,111,0.42,113,1.532,122,1.075,123,1.368,124,1.368,125,1.335,126,1.256,127,0.297,128,0.544,129,1.256,130,2.22,131,1.701,138,1.672,159,1.672,162,0.933,185,3.961,186,1.647,199,0.475,208,1.701,224,0.012,225,0.012,226,1.249,284,1.518,288,3.484,298,2.095,363,1.503,366,1.503,517,1.17,526,1.518,581,2.095,607,2.213,699,2.908,708,3.495,710,4.366,734,1.503,749,2.561,750,2.561,752,1.672,776,2.337,777,2.908,778,1.672,818,1.503,821,1.899,856,1.672,951,1.503,952,3.435,953,4.678,954,4.678,955,4.678,956,3.566,957,4.678,958,3.435,959,4.678,960,3.435,961,3.435,962,4.678,963,3.435,964,2.243,965,3.435,966,3.435,967,2.243,968,2.561,969,2.243,970,5.319,971,3.435,972,5.319,973,2.243,974,5.855,975,2.243,976,3.435,977,3.435,978,3.961,979,5.043,980,2.243,981,3.435,982,3.435,983,2.243,984,3.435,985,2.243,986,2.243,987,3.435,988,2.243,989,2.243,990,3.435,991,4.678,992,2.243,993,2.243,994,3.435,995,2.302,996,4.174,997,4.678,998,3.435,999,2.243,1000,3.435,1001,2.243,1002,1.899,1003,1.899,1004,1.503,1005,1.899,1006,1.899,1007,1.899,1008,3.113,1009,1.672,1010,1.899,1011,3.435,1012,2.243,1013,2.243,1014,1.672,1015,2.243,1016,2.243,1017,3.435,1018,2.243,1019,2.243,1020,2.243,1021,2.243,1022,2.243,1023,2.243,1024,2.243,1025,3.435,1026,2.243,1027,2.243,1028,2.243,1029,2.243,1030,2.243,1031,2.243,1032,2.243,1033,2.243,1034,2.243,1035,2.243,1036,2.243,1037,2.243,1038,2.243,1039,2.243,1040,2.243,1041,2.243,1042,2.243,1043,2.243,1044,2.243,1045,2.243,1046,2.243,1047,2.243,1048,4.678,1049,2.243,1050,5.043,1051,3.435,1052,4.678,1053,3.435,1054,3.435,1055,2.243,1056,2.243,1057,3.435,1058,3.435,1059,2.243,1060,2.243,1061,2.243,1062,3.435,1063,2.243,1064,2.243,1065,2.243,1066,2.243]],["title/interfaces/GroupFolderInterface.html",[343,0.476,501,1.252]],["body/interfaces/GroupFolderInterface.html",[2,0.412,3,0.467,7,0.253,25,0.455,26,0.943,57,0.026,58,0.721,59,0.63,60,1.143,81,1.366,83,1.64,85,1.192,108,0.455,127,0.575,199,0.593,213,0.924,224,0.019,225,0.019,246,1.462,343,0.931,348,2.105,373,1.844,483,1.462,498,1.561,501,2.265,504,1.668,508,1.668,510,1.969,517,1.462,522,1.668,526,2.157,531,1.786,602,2.058,603,2.058,604,2.058,605,3.22,606,2.672,607,1.786,608,2.058,609,2.778,610,2.058,611,2.058,612,1.786,613,2.799,614,1.786]],["title/interfaces/GroupInterface.html",[343,0.476,612,1.432]],["body/interfaces/GroupInterface.html",[2,0.401,3,0.55,7,0.246,25,0.442,26,0.927,57,0.026,58,0.717,59,0.649,60,1.074,81,0.961,83,1.636,85,1.176,108,0.442,127,0.571,199,0.577,213,1.327,224,0.019,225,0.019,246,1.421,343,0.926,348,2.067,373,1.811,483,1.421,498,1.518,501,2.406,504,1.622,508,1.622,510,2.242,517,2.1,522,1.622,526,2.368,531,2.565,602,2.001,603,2.001,604,2.001,605,2.157,606,2.213,607,1.736,608,2.001,609,2.75,610,2.001,611,2.001,612,2.213,613,3.187,614,1.736]],["title/components/HomeComponent.html",[0,0.557,210,1.173]],["body/components/HomeComponent.html",[0,1.025,1,1.034,2,0.292,3,0.262,4,1.355,5,1.355,6,1.355,7,0.179,9,1.105,12,1.937,13,3.34,14,1.355,15,1.263,18,2.618,19,2.15,21,1.669,23,1.669,25,0.322,26,0.748,27,1.775,30,2.405,31,1.824,37,1.057,39,2.8,43,1.204,45,2.223,46,1.729,49,2.537,50,1.787,51,2.253,52,1.46,54,1.562,55,1.787,56,0.699,57,0.026,58,0.528,59,0.478,60,0.529,61,1.285,62,1.463,72,0.933,76,2.62,77,1.59,81,1.147,83,1.147,84,1.562,85,0.863,88,1.397,92,1.204,100,4.586,102,1.355,104,2.879,106,0.908,108,0.606,111,0.569,120,1.105,121,1.456,125,2.105,127,0.371,128,0.5,130,1.669,133,2.265,159,2.265,161,1.263,162,1.263,163,1.355,176,2.79,190,1.034,191,1.916,192,1.916,193,1.916,194,1.355,195,1.355,196,0.851,197,1.916,198,0.851,199,0.861,200,1.355,201,1.034,202,1.916,203,0.969,204,1.916,205,1.034,206,2.223,207,0.969,208,1.105,209,1.355,210,2.158,211,1.355,212,1.034,213,0.924,214,1.034,215,1.355,216,0.908,217,1.463,218,0.969,219,1.034,220,1.355,221,1.034,222,1.355,223,1.355,224,0.015,225,0.015,272,1.181,296,3.203,298,2.62,308,3.415,339,2.571,350,1.263,373,1.034,413,1.853,535,2.265,561,2.879,562,2.879,563,3.203,644,4.219,646,3.636,650,4.219,779,2.389,904,3.716,905,4.039,921,4.247,1067,2.571,1068,4.295,1069,4.295,1070,5.933,1071,5.416,1072,5.416,1073,5.416,1074,2.571,1075,4.295,1076,3.037,1077,3.037,1078,3.037,1079,3.037,1080,3.037,1081,2.571,1082,4.295,1083,4.295,1084,3.037,1085,3.037,1086,3.037,1087,3.037,1088,3.037,1089,3.037,1090,3.037,1091,2.571,1092,4.295,1093,4.295]],["title/components/PresetConfigComponent.html",[0,0.557,216,1.03]],["body/components/PresetConfigComponent.html",[0,0.881,1,0.914,2,0.258,3,0.232,4,1.197,5,1.197,6,1.197,7,0.158,12,1.527,15,1.116,17,1.742,18,2.571,19,2.111,21,1.527,23,1.527,25,0.284,26,0.685,27,2.001,31,1.816,37,0.967,43,1.101,45,2.073,46,1.633,49,2.665,50,2.265,51,2.367,52,1.558,56,0.905,57,0.026,58,0.577,59,0.491,60,0.685,61,1.39,72,1.02,77,1.483,83,1.07,84,1.98,85,1.094,88,1.303,91,2.403,92,1.434,106,1.53,108,0.652,111,0.503,113,1.197,117,1.502,120,0.976,121,1.286,125,1.989,127,0.232,128,0.312,131,1.861,133,2.001,161,1.116,162,1.116,189,2.2,190,0.914,191,1.752,192,1.752,193,1.752,194,1.197,195,1.197,196,0.752,197,1.752,198,0.752,199,0.885,200,1.197,201,0.914,202,1.752,203,0.856,204,1.752,205,0.914,206,2.073,207,0.856,208,1.69,209,1.197,210,0.914,211,1.197,212,0.914,213,0.846,214,0.914,215,1.197,216,1.53,217,2.322,218,0.856,219,0.914,220,1.197,221,0.914,222,1.197,223,1.197,224,0.014,225,0.014,272,1.043,350,1.933,365,3.312,386,2.864,398,1.752,441,3.121,489,1.502,508,1.527,517,0.914,523,2.272,524,3.815,526,0.976,564,2.929,565,2.929,588,3.815,606,1.116,733,2.001,734,1.798,904,3.466,905,3.815,948,2.397,1014,2.929,1074,2.272,1094,4.777,1095,2.272,1096,4.331,1097,4.331,1098,4.331,1099,3.326,1100,3.928,1101,3.326,1102,2.683,1103,2.929,1104,2.683,1105,2.683,1106,2.683,1107,3.326,1108,2.683,1109,2.683,1110,2.683,1111,2.683,1112,2.683,1113,2.683,1114,2.683,1115,2.683,1116,2.683,1117,2.683,1118,2.683,1119,4.647,1120,4.647,1121,4.647,1122,2.683,1123,2.272,1124,2.683,1125,2.683,1126,2.683,1127,2.683,1128,2.272,1129,2.683,1130,2.683,1131,2.683,1132,2.683,1133,2.683,1134,2.272,1135,2.683,1136,2.683,1137,2.683,1138,2.272,1139,2.683,1140,2.683,1141,2.272,1142,2.683,1143,2.001,1144,3.326,1145,3.326,1146,3.326]],["title/components/PresetConfigPageComponent.html",[0,0.557,218,1.099]],["body/components/PresetConfigPageComponent.html",[0,0.948,1,1.109,2,0.313,3,0.281,4,1.452,5,1.452,6,1.452,7,0.192,15,1.354,18,2.643,19,2.17,21,1.752,23,1.752,25,0.345,26,0.786,27,2.024,31,1.439,37,1.109,49,2.439,50,2.152,51,1.876,52,1.633,56,0.749,57,0.026,58,0.548,59,0.497,60,0.567,72,1.046,77,1.782,83,1.038,84,2.206,85,1.219,88,0.913,91,1.683,92,1.45,106,1.547,108,0.478,111,0.61,125,2.17,127,0.281,128,0.379,163,1.452,189,2.524,190,1.109,191,2.011,192,2.011,193,2.011,194,1.452,195,1.452,196,0.913,197,2.011,198,0.913,199,0.944,200,1.452,201,1.109,202,2.011,203,1.039,204,2.011,205,1.109,206,2.307,207,1.039,208,1.184,209,1.452,210,1.109,211,1.452,212,1.109,213,0.97,214,1.109,215,1.452,216,2.013,217,2.343,218,1.782,219,1.109,220,1.452,221,1.109,222,1.452,223,1.452,224,0.016,225,0.016,297,2.331,350,1.354,352,1.986,365,3.031,386,2.896,441,3.794,564,3.362,565,3.362,588,3.857,672,3.467,1014,3.362,1091,2.756,1094,3.857,1096,4.379,1097,4.379,1098,5.265,1099,3.817,1101,2.756,1103,2.427,1107,2.756,1144,3.817,1145,3.817,1146,3.817,1147,2.756,1148,4.508,1149,3.255,1150,6.515,1151,3.255,1152,3.255,1153,3.255,1154,3.255,1155,3.255,1156,3.255,1157,3.255,1158,3.255,1159,3.255,1160,3.255,1161,3.255]],["title/injectables/PreventAuthGuardService.html",[238,1.928,284,1.252]],["body/injectables/PreventAuthGuardService.html",[2,0.321,3,0.288,7,0.197,9,1.669,12,2.194,14,1.489,17,2.204,25,0.354,26,0.799,27,1.959,28,2.935,37,1.129,43,0.936,44,1.726,49,2.916,50,2.793,51,2.793,52,1.456,54,1.906,55,2.181,56,0.769,57,0.026,58,0.354,59,0.542,60,0.582,61,2.041,62,2.271,63,3.443,69,2.727,72,1.173,81,1.362,88,1.286,106,1.372,108,0.556,111,0.625,120,1.214,127,0.487,128,0.657,129,3.423,130,2.194,163,2.046,164,2.49,165,2.49,224,0.016,225,0.016,237,3.059,238,3.506,284,2.053,285,4.558,286,2.49,287,4.438,288,3.948,289,4.558,290,2.827,291,4.883,294,4.438,295,4.097,296,3.909,297,2.71,298,3.198,300,2.49,301,3.421,302,3.884,1162,3.339,1163,3.339,1164,5.242]],["title/interfaces/RuleInterface.html",[343,0.476,504,1.338]],["body/interfaces/RuleInterface.html",[2,0.405,3,0.462,7,0.249,25,0.447,26,0.933,57,0.026,58,0.718,59,0.644,60,1.137,81,0.971,83,1.645,85,1.182,108,0.447,127,0.572,199,0.583,213,0.907,224,0.019,225,0.019,246,1.436,343,0.927,348,2.081,373,1.823,483,2.108,498,1.533,501,2.139,504,2.081,508,1.639,510,1.947,517,1.436,522,1.639,526,2.374,531,1.754,602,2.021,603,2.967,604,2.967,605,2.18,606,2.227,607,1.754,608,2.021,609,2.76,610,2.021,611,2.021,612,1.754,613,2.768,614,1.754]],["title/components/SettingsComponent.html",[0,0.557,219,1.173]],["body/components/SettingsComponent.html",[0,1.038,1,1.253,2,0.353,3,0.318,4,1.641,5,1.641,6,1.641,7,0.217,9,1.338,14,1.641,15,1.53,17,2,18,2.683,19,2.203,21,1.904,23,1.904,25,0.39,31,1.563,37,1.205,43,1.374,44,1.902,45,2.457,46,1.874,48,1.902,52,1.355,54,1.782,55,2.038,56,0.847,57,0.026,58,0.584,59,0.353,60,0.641,61,1.465,62,1.876,72,0.918,77,1.563,92,1.374,102,2.185,104,3.937,108,0.648,111,0.689,117,2.06,121,1.764,122,1.764,123,2.244,124,2.244,125,2.378,126,2.06,127,0.423,128,0.57,130,1.43,161,1.53,162,2.038,181,3.114,190,1.253,191,2.185,192,2.185,193,2.185,194,1.641,195,1.641,196,1.031,197,2.185,198,1.031,199,0.845,200,1.641,201,1.253,202,2.185,203,1.174,204,2.185,205,1.253,206,2.457,207,1.174,208,1.338,209,1.641,210,1.253,211,1.641,212,1.253,213,1.054,214,1.253,215,1.641,216,1.1,217,1.669,218,1.174,219,2.221,220,1.641,221,1.253,222,1.641,223,1.641,224,0.018,225,0.018,246,1.253,347,2.244,350,1.53,561,3.284,562,3.284,563,3.653,690,4.973,754,3.653,1165,2.743,1166,4.899,1167,4.899,1168,5.873,1169,3.678,1170,3.678,1171,3.678,1172,3.678,1173,3.678,1174,4.148,1175,4.148]],["title/injectables/SorterService.html",[284,1.252,308,1.928]],["body/injectables/SorterService.html",[2,0.274,3,0.246,7,0.168,17,1.792,25,0.302,26,0.715,31,1.955,37,1.01,43,1.151,44,1.473,45,2.145,46,1.679,52,1.429,56,1.212,57,0.026,58,0.558,59,0.575,60,0.917,61,1.228,62,0.97,72,1.121,77,1.31,83,0.945,88,1.151,92,1.348,106,1.439,108,0.616,111,0.534,123,1.738,124,1.738,125,1.107,126,1.595,127,0.246,128,0.332,131,1.036,161,1.185,162,1.185,199,0.803,224,0.015,225,0.015,284,1.749,300,2.125,308,2.298,343,0.394,373,0.97,413,1.738,416,1.91,489,1.595,498,1.914,501,1.914,508,1.107,531,1.185,537,2.412,546,4.918,547,2.412,549,4.464,551,5.793,554,5.793,555,1.738,593,3.474,612,2.189,708,2.693,710,3.586,733,2.125,734,2.75,749,2.125,750,3.06,752,2.125,774,1.91,776,1.595,779,1.366,799,3.893,812,3.06,816,4.918,818,1.91,921,3.527,948,1.738,968,2.125,1002,2.412,1003,2.412,1081,2.412,1123,2.412,1128,2.412,1134,2.412,1176,2.125,1177,4.103,1178,4.103,1179,4.103,1180,4.103,1181,2.849,1182,4.103,1183,2.849,1184,4.103,1185,2.849,1186,2.849,1187,4.103,1188,6.796,1189,2.849,1190,2.849,1191,2.849,1192,3.474,1193,2.849,1194,2.849,1195,2.849,1196,2.849,1197,2.849,1198,2.849,1199,2.849,1200,2.849,1201,2.849,1202,2.849,1203,2.849,1204,2.849,1205,4.072,1206,2.849,1207,2.849,1208,2.849,1209,2.849,1210,2.849,1211,2.849,1212,2.849,1213,2.849,1214,2.849,1215,2.849,1216,2.849,1217,2.849,1218,2.849,1219,2.849,1220,2.849,1221,2.849,1222,2.849,1223,6.126,1224,2.849,1225,4.103,1226,4.809,1227,4.809,1228,4.809,1229,4.809,1230,2.849,1231,2.849,1232,2.849,1233,2.849,1234,2.849,1235,2.849,1236,2.849,1237,2.849,1238,2.849,1239,2.849,1240,2.849,1241,2.849,1242,2.849]],["title/pipes/UnNamedPipe.html",[655,2.101,1243,2.308]],["body/pipes/UnNamedPipe.html",[2,0.482,3,0.434,7,0.297,12,1.953,15,2.09,37,1.236,52,1.236,56,1.157,57,0.026,58,0.697,59,0.482,60,0.875,72,1.117,85,1.198,108,0.533,111,0.941,127,0.434,128,0.585,224,0.021,225,0.021,398,2.241,655,3.637,968,3.747,1243,4.262,1244,5.048,1245,4.254,1246,5.962,1247,4.254,1248,5.962,1249,6.358,1250,5.024,1251,5.962,1252,5.024]],["title/components/UnauthenticatedComponent.html",[0,0.557,221,1.173]],["body/components/UnauthenticatedComponent.html",[0,1.008,1,1.116,2,0.315,3,0.283,4,1.462,5,1.462,6,1.462,7,0.347,9,1.647,10,3.835,14,1.462,15,1.363,17,2.122,18,2.645,19,2.172,21,1.761,23,1.761,25,0.347,26,0.789,27,1.355,28,2.536,37,1.378,43,0.919,44,1.694,52,1.277,54,1.647,55,1.884,56,0.755,57,0.026,58,0.623,59,0.538,60,0.571,61,2.052,62,2.002,63,3.167,68,3.036,72,0.614,77,1.046,92,1.27,102,2.498,108,0.48,111,0.614,117,1.835,125,2.177,127,0.391,128,0.527,129,1.835,130,1.761,182,2.775,190,1.116,191,2.02,192,2.02,193,2.02,194,1.462,195,1.462,196,0.919,197,2.02,198,0.919,199,0.812,200,1.462,201,1.116,202,2.02,203,1.046,204,2.02,205,1.116,206,2.315,207,1.046,208,1.192,209,1.462,210,1.116,211,1.462,212,1.116,213,0.975,214,1.116,215,1.462,216,0.98,217,1.907,218,1.046,219,1.116,220,1.462,221,2.195,222,2.315,223,1.462,224,0.016,225,0.016,288,3.874,289,3.378,301,2.444,343,0.626,350,1.363,351,2.197,555,2.763,561,3.036,779,3.186,805,3.036,812,3.378,890,3.835,921,4.074,995,3.036,1253,2.775,1254,4.53,1255,4.53,1256,4.53,1257,5.599,1258,3.277,1259,3.277,1260,4.53,1261,3.277,1262,4.176,1263,4.176,1264,4.741,1265,4.53,1266,4.53,1267,4.53,1268,4.53,1269,4.53,1270,4.53,1271,4.53,1272,4.53,1273,4.53,1274,5.599,1275,4.53,1276,4.53,1277,4.53,1278,5.599,1279,4.741,1280,4.53,1281,4.53]],["title/interfaces/UserDocument.html",[343,0.476,614,1.432]],["body/interfaces/UserDocument.html",[2,0.42,3,0.473,7,0.258,25,0.464,26,0.955,57,0.026,58,0.699,59,0.62,81,1.008,83,1.638,85,1.203,108,0.464,127,0.577,199,0.867,213,0.942,224,0.02,225,0.02,246,1.491,343,0.934,348,2.438,373,2.2,483,1.491,498,1.592,501,2.177,504,1.702,508,1.702,510,1.994,517,1.491,522,1.702,526,2.177,531,1.821,602,2.099,603,2.099,604,2.099,605,2.263,606,2.28,607,1.821,608,2.099,609,2.798,610,2.099,611,2.099,612,1.821,613,2.834,614,2.28]],["title/coverage.html",[1282,3.967]],["body/coverage.html",[0,1.087,1,1.096,7,0.19,8,3.336,17,1.096,46,1.027,57,0.026,59,0.309,61,0.963,92,0.902,114,2.4,115,2.4,126,3.111,128,0.598,196,0.902,198,0.902,199,0.887,201,1.096,203,1.027,205,1.096,207,1.027,210,1.096,212,1.096,213,1.196,214,1.096,216,0.963,217,1.096,218,1.027,219,1.096,221,1.096,224,0.016,225,0.016,237,1.664,238,1.802,259,3.336,262,2.157,284,2.124,285,3.336,286,3.336,308,1.802,314,2.879,317,2.157,343,0.874,344,3.446,345,3.446,358,1.963,365,1.664,382,1.963,398,3.161,489,1.802,490,2.725,491,2.998,498,1.17,501,1.17,504,1.251,510,1.17,522,1.251,560,2.725,602,2.972,612,1.339,614,1.339,655,1.963,660,2.4,666,2.4,667,3.336,672,2.157,681,2.725,708,1.802,774,2.157,775,2.4,776,1.802,805,2.157,824,1.963,888,2.725,889,2.725,951,4.155,956,2.998,1004,4.644,1008,2.4,1009,2.4,1067,2.725,1094,3.336,1095,2.725,1143,4.941,1147,4.353,1165,3.336,1176,3.336,1243,2.157,1244,2.725,1245,2.725,1253,2.725,1282,2.725,1283,3.218,1284,3.218,1285,5.117,1286,6.789,1287,2.725,1288,6.321,1289,2.725,1290,2.725,1291,2.725,1292,3.218,1293,3.218,1294,4.473,1295,3.218,1296,3.218,1297,3.218,1298,4.473,1299,4.473,1300,4.473,1301,4.473,1302,3.218,1303,4.353,1304,3.218,1305,3.787,1306,2.725,1307,3.218,1308,3.218,1309,4.473,1310,3.218,1311,3.218,1312,3.218,1313,3.218,1314,3.787,1315,2.725,1316,3.218,1317,3.218,1318,3.218,1319,3.218,1320,4.473,1321,3.218,1322,3.218,1323,3.218,1324,4.473,1325,2.725,1326,2.725,1327,3.218,1328,4.473,1329,3.218,1330,2.725,1331,2.725,1332,3.787,1333,2.725,1334,3.218,1335,3.218]],["title/dependencies.html",[228,2.317,1336,2.882]],["body/dependencies.html",[57,0.026,109,2.327,111,0.909,113,2.605,116,3.619,120,1.765,224,0.021,225,0.021,228,2.718,244,4.109,254,4.945,257,4.355,272,1.887,311,3.619,322,3.619,524,3.619,1337,4.853,1338,6.975,1339,4.853,1340,5.84,1341,4.853,1342,4.853,1343,4.853,1344,4.853,1345,4.853,1346,4.853,1347,4.853,1348,4.853,1349,4.853,1350,5.84,1351,4.853,1352,4.853,1353,4.853,1354,4.853,1355,4.853,1356,4.853,1357,4.109,1358,4.853,1359,4.853,1360,4.853,1361,4.853,1362,4.853,1363,4.853]],["title/miscellaneous/enumerations.html",[1364,1.614,1365,3.503]],["body/miscellaneous/enumerations.html",[7,0.343,25,0.51,57,0.021,59,0.462,61,1.44,85,1.427,208,1.75,224,0.021,225,0.021,491,3.895,775,3.589,776,3.254,779,2.307,818,3.895,824,2.936,849,4.075,850,6.01,851,4.075,852,4.075,853,4.075,854,4.075,855,4.075,856,3.589,857,4.075,858,4.075,859,4.075,860,4.075,861,4.075,862,4.075,863,4.075,864,4.075,865,4.075,866,4.075,867,4.075,868,4.075,869,4.075,870,4.075,871,4.075,872,4.075,873,4.075,874,4.075,875,4.075,876,4.075,877,4.075,878,4.075,879,4.075,1364,2.695,1365,4.92,1366,4.812]],["title/miscellaneous/functions.html",[708,2.317,1364,1.614]],["body/miscellaneous/functions.html",[25,0.575,56,1.249,57,0.024,58,0.575,59,0.521,60,0.945,224,0.022,225,0.022,483,1.848,708,3.038,951,3.636,956,4.18,1010,4.593,1364,3.038,1367,4.593]],["title/index.html",[25,0.306,67,1.758,1368,2.149]],["body/index.html",[7,0.268,9,1.653,19,1.45,27,1.359,57,0.025,61,1.678,102,2.027,189,2.545,224,0.02,225,0.02,288,2.772,343,0.628,581,2.772,779,3.131,802,3.848,824,3.713,826,3.848,995,3.046,1141,3.848,1175,3.848,1262,4.184,1263,4.539,1264,4.751,1279,3.848,1357,3.848,1369,4.544,1370,4.544,1371,3.848,1372,3.848,1373,6.651,1374,4.544,1375,4.544,1376,4.544,1377,3.848,1378,4.544,1379,4.544,1380,3.848,1381,4.544,1382,4.544,1383,4.544,1384,4.544,1385,4.544,1386,4.544,1387,4.544,1388,4.544,1389,4.544,1390,4.544,1391,4.544,1392,4.544,1393,4.544,1394,4.544,1395,4.544,1396,4.544,1397,4.544,1398,3.848,1399,3.848,1400,6.087,1401,6.087,1402,5.611,1403,4.544,1404,4.544,1405,4.544,1406,4.544,1407,4.544,1408,6.087,1409,4.544,1410,4.544,1411,4.544,1412,4.544,1413,4.544,1414,4.544,1415,4.544,1416,4.544,1417,4.544,1418,5.611,1419,4.544,1420,4.544,1421,4.544,1422,3.848,1423,4.544,1424,4.544,1425,4.544,1426,4.544,1427,4.539,1428,4.544,1429,3.848]],["title/license.html",[67,1.758,1368,2.149,1427,2.149]],["body/license.html",[7,0.278,16,2.439,57,0.021,91,2.439,172,3.518,186,2.262,224,0.021,225,0.021,295,3.162,384,3.162,470,3.162,799,4.148,824,2.878,833,3.994,995,3.848,1371,3.994,1372,3.994,1380,5.847,1398,3.994,1399,3.994,1427,3.518,1429,3.994,1430,6.188,1431,4.717,1432,4.717,1433,5.74,1434,4.717,1435,4.717,1436,4.717,1437,5.74,1438,4.717,1439,6.439,1440,5.74,1441,6.188,1442,4.717,1443,5.74,1444,4.717,1445,4.717,1446,4.717,1447,4.717,1448,4.717,1449,4.717,1450,4.717,1451,4.717,1452,4.717,1453,4.717,1454,4.717,1455,4.717,1456,5.74,1457,5.74,1458,4.717,1459,4.717,1460,5.74,1461,4.717,1462,4.717,1463,4.717,1464,4.717,1465,4.717,1466,4.717,1467,4.717,1468,4.717,1469,4.717,1470,4.717,1471,4.717,1472,4.717,1473,4.717,1474,4.717,1475,4.717,1476,4.717,1477,4.717,1478,4.717]],["title/modules.html",[226,1.704]],["body/modules.html",[57,0.022,224,0.022,225,0.022,226,1.951,227,3.595,235,3.272,236,3.003,257,4.871,656,3.272,1422,5.531,1479,6.532,1480,6.715,1481,5.364,1482,5.364]],["title/overview.html",[1483,3.967]],["body/overview.html",[0,0.648,1,2.232,16,2.07,17,1.955,46,1.832,57,0.026,62,1.363,69,1.786,127,0.346,128,0.466,186,1.919,190,1.363,196,1.837,198,1.837,201,1.955,203,1.832,205,1.955,207,1.832,210,1.955,212,1.955,214,1.955,216,1.717,218,1.832,219,1.955,221,1.955,224,0.019,225,0.019,226,1.883,227,4.708,228,2.241,229,2.683,230,3.389,231,3.389,232,3.389,233,3.389,234,3.389,235,4.222,236,3.982,237,2.968,238,3.214,239,3.471,240,2.442,284,1.456,303,3.389,304,3.389,306,3.389,307,3.389,308,3.214,343,0.553,651,3.389,652,3.389,653,3.389,654,3.389,655,3.502,656,3.502,948,2.442,1243,2.683,1483,3.389,1484,4.385,1485,4.003,1486,3.389,1487,3.389,1488,4.003]],["title/routes.html",[69,2.09]],["body/routes.html",[57,0.023,69,2.481,224,0.023,225,0.023]],["title/todo.html",[67,1.758,1368,2.149,1489,2.44]],["body/todo.html",[57,0.023,58,0.585,189,3.09,224,0.023,225,0.023,1489,4.673,1490,5.519,1491,5.519]],["title/miscellaneous/variables.html",[1004,2.773,1364,1.614]],["body/miscellaneous/variables.html",[3,0.342,8,1.536,9,0.749,16,1.065,20,2.414,25,0.218,55,0.857,57,0.026,58,0.649,59,0.601,60,1.053,61,1.184,69,0.919,72,0.386,84,2.254,85,1.27,86,2.723,88,1.637,91,1.065,92,0.578,102,0.919,106,1.537,109,1.542,114,2.95,115,2.95,116,4.257,123,2.728,124,2.728,126,3.383,136,2.723,137,2.723,138,2.398,140,2.723,154,2.398,176,1.801,186,0.988,213,1.106,214,0.702,217,1.652,224,0.012,225,0.012,259,4.142,297,1.065,346,2.997,398,1.994,422,2.728,425,2.414,483,1.523,508,1.738,517,0.702,526,0.749,531,1.646,549,1.536,562,1.381,603,1.897,604,1.897,606,1.646,609,0.919,667,1.536,676,4.106,677,3.35,678,3.35,679,3.35,754,1.536,776,3.43,778,2.398,779,2.851,799,2.652,805,2.652,948,2.958,951,1.381,956,2.652,978,3.785,1004,2.156,1005,1.744,1006,1.744,1007,1.744,1008,2.95,1009,2.95,1103,2.95,1138,2.723,1143,4.003,1165,1.536,1174,1.744,1176,1.536,1192,4.351,1205,1.744,1247,5.248,1262,3.832,1263,4.142,1285,1.744,1287,4.106,1289,5.533,1290,4.351,1291,4.351,1303,1.744,1305,2.723,1306,3.35,1314,1.744,1315,3.35,1325,1.744,1326,1.744,1330,1.744,1331,3.35,1332,1.744,1333,3.35,1364,1.153,1367,4.106,1377,1.744,1484,1.744,1486,1.744,1487,2.723,1492,3.216,1493,2.06,1494,2.06,1495,2.06,1496,5.139,1497,2.06,1498,2.06,1499,2.06,1500,2.06,1501,3.216,1502,2.06,1503,2.06,1504,2.06,1505,2.06,1506,2.06,1507,2.06,1508,3.956,1509,3.216,1510,3.216,1511,3.216,1512,3.216,1513,3.216,1514,3.216,1515,3.216,1516,3.216,1517,3.216,1518,2.06,1519,6.567,1520,2.06,1521,2.06,1522,2.06,1523,3.216,1524,2.06,1525,5.708,1526,5.554,1527,4.471,1528,4.471,1529,5.554,1530,5.708,1531,3.216,1532,2.06,1533,3.216,1534,3.956,1535,2.06,1536,5.139,1537,4.849,1538,4.849,1539,4.849,1540,4.849,1541,2.06,1542,2.06,1543,3.956,1544,3.956,1545,3.956,1546,2.06,1547,3.216,1548,3.216,1549,3.216,1550,4.471,1551,3.216,1552,3.956,1553,2.06,1554,3.956,1555,2.06,1556,2.06,1557,2.06,1558,4.849,1559,2.06,1560,3.216,1561,2.06,1562,2.06,1563,2.06,1564,2.06,1565,2.06,1566,2.06,1567,2.06,1568,2.06,1569,3.956,1570,3.956,1571,3.956,1572,3.956,1573,2.06,1574,2.06,1575,2.06,1576,4.471]]],"invertedIndex":[["",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"interfaces/UserDocument.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":398,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/PresetConfigComponent.html":{},"pipes/UnNamedPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.5",{"_index":1530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.8.26",{"_index":1363,"title":{},"body":{"dependencies.html":{}}}],["0.9}px",{"_index":436,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["0/1",{"_index":1286,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1313,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1312,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1302,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1327,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":1321,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":1307,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1309,"title":{},"body":{"coverage.html":{}}}],["0/31",{"_index":1301,"title":{},"body":{"coverage.html":{}}}],["0/32",{"_index":1299,"title":{},"body":{"coverage.html":{}}}],["0/33",{"_index":1304,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1328,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1329,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1294,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1324,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1308,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":948,"title":{},"body":{"components/FolderCreationComponent.html":{},"components/PresetConfigComponent.html":{},"injectables/SorterService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.5",{"_index":427,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["1/1",{"_index":1288,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":376,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["100",{"_index":1143,"title":{},"body":{"components/PresetConfigComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["1280",{"_index":424,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["14",{"_index":1485,"title":{},"body":{"overview.html":{}}}],["17/17",{"_index":1295,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":425,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"miscellaneous/variables.html":{}}}],["2.0.8",{"_index":1354,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":1361,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1351,"title":{},"body":{"dependencies.html":{}}}],["2.appspot.com",{"_index":1516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.firebaseapp.com",{"_index":1510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.firebaseio.com",{"_index":1513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2/4",{"_index":1319,"title":{},"body":{"coverage.html":{}}}],["2/9",{"_index":1311,"title":{},"body":{"coverage.html":{}}}],["2018",{"_index":1432,"title":{},"body":{"license.html":{}}}],["22",{"_index":1310,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":1292,"title":{},"body":{"coverage.html":{}}}],["250",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["3",{"_index":1487,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["3.1.0",{"_index":1356,"title":{},"body":{"dependencies.html":{}}}],["3.2.1",{"_index":1359,"title":{},"body":{"dependencies.html":{}}}],["3.4.3",{"_index":1345,"title":{},"body":{"dependencies.html":{}}}],["3/7",{"_index":1317,"title":{},"body":{"coverage.html":{}}}],["362606538820",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["4",{"_index":1484,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["4.13.1",{"_index":1352,"title":{},"body":{"dependencies.html":{}}}],["4/16",{"_index":1293,"title":{},"body":{"coverage.html":{}}}],["4/4",{"_index":1296,"title":{},"body":{"coverage.html":{}}}],["42",{"_index":1316,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":1486,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["5.0.0",{"_index":1346,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1318,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["5000",{"_index":1090,"title":{},"body":{"components/HomeComponent.html":{}}}],["56",{"_index":1322,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1358,"title":{},"body":{"dependencies.html":{}}}],["6.0.0",{"_index":1338,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":1340,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1320,"title":{},"body":{"coverage.html":{}}}],["640",{"_index":426,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["750",{"_index":1085,"title":{},"body":{"components/HomeComponent.html":{}}}],["8",{"_index":1488,"title":{},"body":{"overview.html":{}}}],["9/16",{"_index":1323,"title":{},"body":{"coverage.html":{}}}],["9th",{"_index":1563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9}px",{"_index":586,"title":{},"body":{"components/ConfigComponent.html":{}}}],["_activeconfigchang",{"_index":682,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["_authstat",{"_index":954,"title":{},"body":{"injectables/GoogleService.html":{}}}],["_closecommand",{"_index":1096,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["_configsubject",{"_index":683,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["_folderpick",{"_index":1009,"title":{},"body":{"injectables/GoogleService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["_folderpicked.asobserv",{"_index":1000,"title":{},"body":{"injectables/GoogleService.html":{}}}],["_folderpicked.error(tru",{"_index":1015,"title":{},"body":{"injectables/GoogleService.html":{}}}],["_folderpicked.next(data.docs[0",{"_index":1013,"title":{},"body":{"injectables/GoogleService.html":{}}}],["abov",{"_index":1455,"title":{},"body":{"license.html":{}}}],["abreu",{"_index":1383,"title":{},"body":{"index.html":{}}}],["access",{"_index":289,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{},"components/UnauthenticatedComponent.html":{}}}],["accessor",{"_index":926,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["account",{"_index":1175,"title":{},"body":{"components/SettingsComponent.html":{},"index.html":{}}}],["action",{"_index":384,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"license.html":{}}}],["activ",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["activeconfig",{"_index":373,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"interfaces/RuleInterface.html":{},"injectables/SorterService.html":{},"interfaces/UserDocument.html":{}}}],["activeconfigchang",{"_index":684,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["activeconfigchangesubscript",{"_index":380,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["activeconfignam",{"_index":1070,"title":{},"body":{"components/HomeComponent.html":{}}}],["actual_compon",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["ad",{"_index":1142,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["add",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"classes/DriveQueryBuilder.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"index.html":{},"todo.html":{}}}],["addconfig",{"_index":689,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["addconfig(config",{"_index":697,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["addconfig(configbuilder.configfromgroup(group",{"_index":1137,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["addgroup",{"_index":492,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["addgroup(config",{"_index":497,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["addpar",{"_index":1064,"title":{},"body":{"injectables/GoogleService.html":{}}}],["addpreset",{"_index":1099,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["addpreset(presetid",{"_index":1101,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["address",{"_index":815,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["addview(view",{"_index":1041,"title":{},"body":{"injectables/GoogleService.html":{}}}],["afterviewinit",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{}}}],["aizasyb",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["allow",{"_index":991,"title":{},"body":{"injectables/GoogleService.html":{}}}],["and/or",{"_index":1449,"title":{},"body":{"license.html":{}}}],["angular/anim",{"_index":1337,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1339,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/collect",{"_index":356,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["angular/cdk/overlay",{"_index":578,"title":{},"body":{"components/ConfigComponent.html":{}}}],["angular/cli",{"_index":1410,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":311,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"dependencies.html":{}}}],["angular/compil",{"_index":1341,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler/src/cor",{"_index":354,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["angular/cor",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":322,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1342,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":272,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"dependencies.html":{}}}],["angular/material/button",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/menu",{"_index":274,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/tab",{"_index":276,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigRoutingModule.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"injectables/PreventAuthGuardService.html":{},"dependencies.html":{}}}],["angularfire2",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angularfire2/auth",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"components/SettingsComponent.html":{}}}],["angularfire2/firestor",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"interfaces/UserDocument.html":{}}}],["angularfireauth",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"components/SettingsComponent.html":{}}}],["angularfireauthmodul",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodul",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule.initializeapp(environment.firebas",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirestor",{"_index":347,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"components/SettingsComponent.html":{}}}],["angularfirestorecollect",{"_index":348,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/RuleInterface.html":{},"interfaces/UserDocument.html":{}}}],["angularfirestoredocu",{"_index":725,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["angularfirestoremodul",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["angularj",{"_index":1407,"title":{},"body":{"index.html":{}}}],["anim",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["animate('0.1",{"_index":1523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["anyinvalid",{"_index":944,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["api",{"_index":953,"title":{},"body":{"injectables/GoogleService.html":{}}}],["apikey",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"index.html":{}}}],["app.compon",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"components/ConfigComponent.html":{}}}],["app.component.html",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["app.rout",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["app/config",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"modules/ConfigRoutingModule.html":{}}}],["app/config/cr",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"modules/ConfigRoutingModule.html":{}}}],["app/config/edit",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"modules/ConfigRoutingModule.html":{}}}],["app/config/preset",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"modules/ConfigRoutingModule.html":{}}}],["app/hom",{"_index":98,"title":{},"body":{"components/AppComponent.html":{}}}],["app/set",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appconfig",{"_index":676,"title":{},"body":{"modules/ConfigRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["appconfigcr",{"_index":677,"title":{},"body":{"modules/ConfigRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["appconfigedit",{"_index":679,"title":{},"body":{"modules/ConfigRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["appconfigpreset",{"_index":678,"title":{},"body":{"modules/ConfigRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["apphom",{"_index":1536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applic",{"_index":11,"title":{},"body":{"components/AppComponent.html":{}}}],["application/vnd.googl",{"_index":850,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["appmodul",{"_index":227,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approut",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["apps.audio",{"_index":851,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.docu",{"_index":852,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.draw",{"_index":854,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.driv",{"_index":878,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.fil",{"_index":855,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.fold",{"_index":856,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"miscellaneous/enumerations.html":{}}}],["apps.form",{"_index":858,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.fusiont",{"_index":860,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.map",{"_index":862,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.photo",{"_index":864,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.present",{"_index":866,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.script",{"_index":868,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.sit",{"_index":870,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.spreadsheet",{"_index":872,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.unknown",{"_index":874,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.video",{"_index":876,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["appset",{"_index":1539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aren't",{"_index":290,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{}}}],["arg",{"_index":1249,"title":{},"body":{"pipes/UnNamedPipe.html":{}}}],["aris",{"_index":1478,"title":{},"body":{"license.html":{}}}],["array",{"_index":613,"title":{},"body":{"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/RuleInterface.html":{},"interfaces/UserDocument.html":{}}}],["arredondo",{"_index":1376,"title":{},"body":{"index.html":{}}}],["art_track",{"_index":1277,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["ashhad",{"_index":1387,"title":{},"body":{"index.html":{}}}],["assets/images/istem",{"_index":1567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["associ",{"_index":1398,"title":{},"body":{"index.html":{},"license.html":{}}}],["audio",{"_index":849,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["auth",{"_index":1019,"title":{},"body":{"injectables/GoogleService.html":{}}}],["authdomain",{"_index":1509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authenitc",{"_index":1007,"title":{},"body":{"injectables/GoogleService.html":{},"miscellaneous/variables.html":{}}}],["authent",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"injectables/GoogleService.html":{},"injectables/PreventAuthGuardService.html":{},"components/UnauthenticatedComponent.html":{}}}],["authenticatedmodul",{"_index":235,"title":{"modules/AuthenticatedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules.html":{},"overview.html":{}}}],["authenticatedmodule.forroot",{"_index":281,"title":{},"body":{"modules/AppModule.html":{}}}],["authguardservic",{"_index":237,"title":{"injectables/AuthGuardService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/ConfigRoutingModule.html":{},"injectables/PreventAuthGuardService.html":{},"coverage.html":{},"overview.html":{}}}],["authinst",{"_index":1008,"title":{},"body":{"injectables/GoogleService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authinstance.currentuser.get().getauthresponse().access_token",{"_index":1038,"title":{},"body":{"injectables/GoogleService.html":{}}}],["authinstance.currentuser.get().getauthresponse().id_token",{"_index":1047,"title":{},"body":{"injectables/GoogleService.html":{}}}],["authinstance.issignedin.get",{"_index":1025,"title":{},"body":{"injectables/GoogleService.html":{}}}],["authinstance.issignedin.listen",{"_index":1022,"title":{},"body":{"injectables/GoogleService.html":{}}}],["authinstance.signin",{"_index":1044,"title":{},"body":{"injectables/GoogleService.html":{}}}],["authinstance.signout",{"_index":1045,"title":{},"body":{"injectables/GoogleService.html":{}}}],["author",{"_index":1469,"title":{},"body":{"license.html":{}}}],["authstat",{"_index":955,"title":{},"body":{"injectables/GoogleService.html":{}}}],["authstatu",{"_index":1024,"title":{},"body":{"injectables/GoogleService.html":{}}}],["auto",{"_index":1414,"title":{},"body":{"index.html":{}}}],["avail",{"_index":1482,"title":{},"body":{"modules.html":{}}}],["base",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["beed",{"_index":843,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["befor",{"_index":809,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["behaviorsubject",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["behaviorsubject(tru",{"_index":465,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["between",{"_index":1205,"title":{},"body":{"injectables/SorterService.html":{},"miscellaneous/variables.html":{}}}],["boolean",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"interfaces/UserDocument.html":{}}}],["bootstrap",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"overview.html":{}}}],["brandon",{"_index":1371,"title":{},"body":{"index.html":{},"license.html":{}}}],["break",{"_index":554,"title":{},"body":{"classes/ConfigBuilder.html":{},"injectables/SorterService.html":{}}}],["brows",{"_index":1480,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":778,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"miscellaneous/variables.html":{}}}],["builder",{"_index":734,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"components/PresetConfigComponent.html":{},"injectables/SorterService.html":{}}}],["builder.t",{"_index":491,"title":{},"body":{"classes/ConfigBuilder.html":{},"classes/DriveQueryBuilder.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["builder.ts:106",{"_index":840,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:11",{"_index":518,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["builder.ts:113",{"_index":511,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["builder.ts:117",{"_index":830,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:128",{"_index":811,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:139",{"_index":804,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:142",{"_index":507,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["builder.ts:150",{"_index":808,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:161",{"_index":832,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:172",{"_index":835,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:183",{"_index":842,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:196",{"_index":845,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:209",{"_index":823,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:39",{"_index":505,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["builder.ts:40",{"_index":801,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:48",{"_index":827,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:50",{"_index":796,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:57",{"_index":521,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["builder.ts:73",{"_index":819,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:84",{"_index":847,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:95",{"_index":837,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["built",{"_index":828,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["c",{"_index":1431,"title":{},"body":{"license.html":{}}}],["calculatestart",{"_index":592,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["calculatestart(pag",{"_index":468,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["call",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["callback",{"_index":979,"title":{},"body":{"injectables/GoogleService.html":{}}}],["canactiv",{"_index":291,"title":{},"body":{"injectables/AuthGuardService.html":{},"modules/ConfigRoutingModule.html":{},"injectables/PreventAuthGuardService.html":{}}}],["cancel",{"_index":1014,"title":{},"body":{"injectables/GoogleService.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["case",{"_index":551,"title":{},"body":{"classes/ConfigBuilder.html":{},"injectables/SorterService.html":{}}}],["catch(err",{"_index":1129,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["categori",{"_index":1559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cb",{"_index":710,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"injectables/SorterService.html":{}}}],["cb(0",{"_index":769,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["cb(null",{"_index":766,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["cb(resp",{"_index":1051,"title":{},"body":{"injectables/GoogleService.html":{}}}],["cb(snapshot.data",{"_index":761,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["cb(snapshot.data()['activeconfig",{"_index":765,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["cb(snapshot.docs.length",{"_index":768,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["cb(true",{"_index":1066,"title":{},"body":{"injectables/GoogleService.html":{}}}],["cd",{"_index":1405,"title":{},"body":{"index.html":{}}}],["cesped",{"_index":1384,"title":{},"body":{"index.html":{}}}],["chang",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["charg",{"_index":1436,"title":{},"body":{"license.html":{}}}],["checkinterv",{"_index":1130,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["checkout",{"_index":1406,"title":{},"body":{"index.html":{}}}],["claim",{"_index":1472,"title":{},"body":{"license.html":{}}}],["class",{"_index":128,"title":{"classes/ConfigBuilder.html":{},"classes/ConfigDataSource.html":{},"classes/DriveQueryBuilder.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["classes(period",{"_index":1565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["classes/config",{"_index":733,"title":{},"body":{"injectables/DatabaseService.html":{},"components/PresetConfigComponent.html":{},"injectables/SorterService.html":{}}}],["classes/dr",{"_index":1002,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/SorterService.html":{}}}],["classifi",{"_index":603,"title":{},"body":{"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/RuleInterface.html":{},"interfaces/UserDocument.html":{},"miscellaneous/variables.html":{}}}],["clear",{"_index":1174,"title":{},"body":{"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["clearconfig",{"_index":690,"title":{},"body":{"injectables/DatabaseService.html":{},"components/SettingsComponent.html":{}}}],["clearinterval(checkinterv",{"_index":1131,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["clearinterval(databaseinitalizedcheck",{"_index":1084,"title":{},"body":{"components/HomeComponent.html":{}}}],["clearinterval(googleinitinterv",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["client",{"_index":1018,"title":{},"body":{"injectables/GoogleService.html":{}}}],["clientid",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["clone",{"_index":1403,"title":{},"body":{"index.html":{}}}],["close",{"_index":441,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["closecommand",{"_index":588,"title":{},"body":{"components/ConfigComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["closesubscript",{"_index":439,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["closesubscription.unsubscrib",{"_index":443,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["cluster_appmodul",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authenticatedmodul",{"_index":303,"title":{},"body":{"modules/AuthenticatedModule.html":{},"overview.html":{}}}],["cluster_authenticatedmodule_declar",{"_index":304,"title":{},"body":{"modules/AuthenticatedModule.html":{},"overview.html":{}}}],["cluster_authenticatedmodule_export",{"_index":306,"title":{},"body":{"modules/AuthenticatedModule.html":{},"overview.html":{}}}],["cluster_authenticatedmodule_import",{"_index":305,"title":{},"body":{"modules/AuthenticatedModule.html":{}}}],["cluster_authenticatedmodule_provid",{"_index":307,"title":{},"body":{"modules/AuthenticatedModule.html":{},"overview.html":{}}}],["cluster_configmodul",{"_index":651,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_declar",{"_index":652,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_export",{"_index":654,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_import",{"_index":653,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["collection('config",{"_index":393,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["collection('userdata",{"_index":772,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["commonmodul",{"_index":310,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["compat",{"_index":1357,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["compdoc",{"_index":1415,"title":{},"body":{"index.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigRoutingModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component_templ",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["componentinst",{"_index":437,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["componentinstance.closecommand.subscrib",{"_index":440,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["components/auth/unauthenticated/unauthenticated.compon",{"_index":279,"title":{},"body":{"modules/AppModule.html":{}}}],["components/shared/config",{"_index":316,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["components/shared/edit",{"_index":659,"title":{},"body":{"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{}}}],["components/shared/fold",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{}}}],["components/shared/new",{"_index":665,"title":{},"body":{"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{}}}],["components/tabs/config/config",{"_index":313,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["components/tabs/config/config.compon",{"_index":312,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigRoutingModule.html":{}}}],["components/tabs/config/preset",{"_index":671,"title":{},"body":{"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{}}}],["components/tabs/home/home.compon",{"_index":323,"title":{},"body":{"modules/AuthenticatedModule.html":{}}}],["components/tabs/settings/settings.compon",{"_index":338,"title":{},"body":{"modules/AuthenticatedModule.html":{}}}],["condit",{"_index":1454,"title":{},"body":{"license.html":{}}}],["config",{"_index":199,"title":{"interfaces/Config.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{},"interfaces/UserDocument.html":{},"coverage.html":{}}}],["config'},{'nam",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["config.compon",{"_index":352,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/PresetConfigPageComponent.html":{}}}],["config.component.html",{"_index":565,"title":{},"body":{"components/ConfigComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["config.component.scss",{"_index":564,"title":{},"body":{"components/ConfigComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["config.component.t",{"_index":1095,"title":{},"body":{"components/PresetConfigComponent.html":{},"coverage.html":{}}}],["config.component.ts:17",{"_index":1106,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.component.ts:19",{"_index":1108,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.component.ts:21",{"_index":1109,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.component.ts:22",{"_index":1110,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.component.ts:23",{"_index":1100,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.component.ts:26",{"_index":1112,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.component.ts:27",{"_index":1111,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.component.ts:33",{"_index":1105,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.component.ts:35",{"_index":1104,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.component.ts:39",{"_index":1102,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.data.createfold",{"_index":1116,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.data.group",{"_index":1117,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.group",{"_index":533,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["config.id",{"_index":534,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["config.nam",{"_index":535,"title":{},"body":{"classes/ConfigBuilder.html":{},"components/ConfigListComponent.html":{},"components/HomeComponent.html":{}}}],["config.name.length",{"_index":536,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["config/config.modul",{"_index":319,"title":{},"body":{"modules/AuthenticatedModule.html":{}}}],["config/preset",{"_index":365,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"coverage.html":{}}}],["configbuild",{"_index":489,"title":{"classes/ConfigBuilder.html":{}},"body":{"classes/ConfigBuilder.html":{},"injectables/DatabaseService.html":{},"components/PresetConfigComponent.html":{},"injectables/SorterService.html":{},"coverage.html":{}}}],["configbuilder.foldernamebuild",{"_index":1237,"title":{},"body":{"injectables/SorterService.html":{}}}],["configbuilder.generatenewconfig",{"_index":744,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["configchangesubscript",{"_index":379,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["configcollect",{"_index":372,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["configcompon",{"_index":196,"title":{"components/ConfigComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigRoutingModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["configdatasourc",{"_index":382,"title":{"classes/ConfigDataSource.html":{}},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"coverage.html":{}}}],["configdocu",{"_index":685,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["configfromgroup",{"_index":493,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["configfromgroup(group",{"_index":506,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["confighold",{"_index":525,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["configholder.groups[0].createfold",{"_index":527,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["configholder.groups[0].destin",{"_index":528,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["configid",{"_index":448,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{}}}],["configinterfac",{"_index":522,"title":{"interfaces/ConfigInterface.html":{}},"body":{"classes/ConfigBuilder.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/RuleInterface.html":{},"interfaces/UserDocument.html":{},"coverage.html":{}}}],["configkey",{"_index":452,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["configlistcompon",{"_index":198,"title":{"components/ConfigListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["configmodalcompon",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"modules/AuthenticatedModule.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["configmodul",{"_index":236,"title":{"modules/ConfigModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"modules.html":{},"overview.html":{}}}],["configmodule.forroot",{"_index":280,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{}}}],["confignam",{"_index":519,"title":{},"body":{"classes/ConfigBuilder.html":{},"injectables/DatabaseService.html":{}}}],["configroutingmodul",{"_index":656,"title":{"modules/ConfigRoutingModule.html":{}},"body":{"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["configs[config].data()['nam",{"_index":484,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["configs[config].id",{"_index":486,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["configscollect",{"_index":686,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["configsinterfac",{"_index":498,"title":{"interfaces/ConfigsInterface.html":{}},"body":{"classes/ConfigBuilder.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/RuleInterface.html":{},"injectables/SorterService.html":{},"interfaces/UserDocument.html":{},"coverage.html":{}}}],["configsubject",{"_index":463,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{}}}],["configur",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/HomeComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["configuration'",{"_index":644,"title":{},"body":{"components/ConfigListComponent.html":{},"components/HomeComponent.html":{}}}],["configuration\\'",{"_index":650,"title":{},"body":{"components/ConfigListComponent.html":{},"components/HomeComponent.html":{}}}],["connect",{"_index":470,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"license.html":{}}}],["console.debug('databas",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["console.debug('gapi",{"_index":1017,"title":{},"body":{"injectables/GoogleService.html":{}}}],["console.debug('googl",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["console.error",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{}}}],["console.error(err",{"_index":747,"title":{},"body":{"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{}}}],["console.error(resp.err",{"_index":1053,"title":{},"body":{"injectables/GoogleService.html":{}}}],["const",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigRoutingModule.html":{},"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/PresetConfigComponent.html":{},"injectables/SorterService.html":{}}}],["constantli",{"_index":1392,"title":{},"body":{"index.html":{}}}],["constraint",{"_index":604,"title":{},"body":{"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/RuleInterface.html":{},"interfaces/UserDocument.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{}}}],["constructor(appcompon",{"_index":568,"title":{},"body":{"components/ConfigComponent.html":{}}}],["constructor(configcollect",{"_index":594,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["constructor(databas",{"_index":964,"title":{},"body":{"injectables/GoogleService.html":{}}}],["constructor(firebas",{"_index":695,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["constructor(firebaseauth",{"_index":619,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["constructor(googl",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/FolderCreationComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{}}}],["constructor(parentfolderid",{"_index":794,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["constructor(priv",{"_index":467,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{}}}],["constructor(publ",{"_index":301,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{},"components/UnauthenticatedComponent.html":{}}}],["constructor(zon",{"_index":1074,"title":{},"body":{"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{}}}],["contact@brandoncravener.com",{"_index":1426,"title":{},"body":{"index.html":{}}}],["contain",{"_index":882,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["content",{"_index":825,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["content'",{"_index":838,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["context",{"_index":1333,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contract",{"_index":1475,"title":{},"body":{"license.html":{}}}],["contribut",{"_index":1416,"title":{},"body":{"index.html":{}}}],["contributor",{"_index":1386,"title":{},"body":{"index.html":{}}}],["control",{"_index":1093,"title":{},"body":{"components/HomeComponent.html":{}}}],["copi",{"_index":1439,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1430,"title":{},"body":{"license.html":{}}}],["core",{"_index":1349,"title":{},"body":{"dependencies.html":{}}}],["countributor",{"_index":1370,"title":{},"body":{"index.html":{}}}],["coverag",{"_index":1282,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["craven",{"_index":1372,"title":{},"body":{"index.html":{},"license.html":{}}}],["creat",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["createconfig",{"_index":691,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["createconfig(confignam",{"_index":701,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["createconfigbuttonst",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["createdaft",{"_index":781,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["createdafter(d",{"_index":803,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["createdafter(rule.data.firstd",{"_index":1206,"title":{},"body":{"injectables/SorterService.html":{}}}],["createdbefor",{"_index":782,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["createdbefore(d",{"_index":807,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["createdbefore(rule.data.secondd",{"_index":1207,"title":{},"body":{"injectables/SorterService.html":{}}}],["createdfold",{"_index":1118,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["createdirect",{"_index":353,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["createdtim",{"_index":883,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["createfold",{"_index":517,"title":{},"body":{"classes/ConfigBuilder.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/PresetConfigComponent.html":{},"interfaces/RuleInterface.html":{},"interfaces/UserDocument.html":{},"miscellaneous/variables.html":{}}}],["createfolder(fold",{"_index":1124,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["createfolder(nam",{"_index":966,"title":{},"body":{"injectables/GoogleService.html":{}}}],["createfolder(newfoldernam",{"_index":1238,"title":{},"body":{"injectables/SorterService.html":{}}}],["createfolderconfig",{"_index":512,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["createfolderconfig.name.typ",{"_index":556,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["createfolderconfig.name.valu",{"_index":557,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["createfolderconfig.prefix.typ",{"_index":550,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["createfolderconfig.prefix.valu",{"_index":553,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["createfolderconfig.suffix.typ",{"_index":558,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["createfolderconfig.suffix.valu",{"_index":559,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["createfolders.foreach(fold",{"_index":1122,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["creation",{"_index":890,"title":{},"body":{"components/FolderCreationComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["creation'},{'nam",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["creation.compon",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{}}}],["creation.component.html",{"_index":892,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.scss",{"_index":891,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.t",{"_index":889,"title":{},"body":{"components/FolderCreationComponent.html":{},"coverage.html":{}}}],["creation.component.ts:102",{"_index":917,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:118",{"_index":918,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:146",{"_index":910,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:153",{"_index":914,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:19",{"_index":907,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:21",{"_index":909,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:23",{"_index":925,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:25",{"_index":923,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:39",{"_index":919,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:57",{"_index":924,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:59",{"_index":920,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:61",{"_index":928,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:67",{"_index":906,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:71",{"_index":911,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:79",{"_index":912,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:85",{"_index":913,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation/fold",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"coverage.html":{}}}],["creationd",{"_index":1202,"title":{},"body":{"injectables/SorterService.html":{}}}],["creationen",{"_index":1097,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["credenti",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["current",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"components/UnauthenticatedComponent.html":{}}}],["customiz",{"_index":1279,"title":{},"body":{"components/UnauthenticatedComponent.html":{},"index.html":{}}}],["damag",{"_index":1473,"title":{},"body":{"license.html":{}}}],["data",{"_index":483,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigRoutingModule.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/RuleInterface.html":{},"interfaces/UserDocument.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["data.act",{"_index":1011,"title":{},"body":{"injectables/GoogleService.html":{}}}],["data.push",{"_index":485,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["databas",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{}}}],["databaseinitalizedcheck",{"_index":1080,"title":{},"body":{"components/HomeComponent.html":{}}}],["databaseservic",{"_index":46,"title":{"injectables/DatabaseService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"coverage.html":{},"overview.html":{}}}],["databaseurl",{"_index":1511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasourc",{"_index":355,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["date",{"_index":555,"title":{},"body":{"classes/ConfigBuilder.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{}}}],["date.toisostring().split('.')[0",{"_index":884,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["deal",{"_index":1440,"title":{},"body":{"license.html":{}}}],["declar",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"components/ConfigComponent.html":{},"modules/ConfigModule.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{},"overview.html":{}}}],["decor",{"_index":640,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["default",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"miscellaneous/variables.html":{}}}],["default_value_accessor",{"_index":1306,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{}}}],["delet",{"_index":754,"title":{},"body":{"injectables/DatabaseService.html":{},"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["delete_forev",{"_index":647,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["deleteaccount",{"_index":1168,"title":{},"body":{"components/SettingsComponent.html":{}}}],["deleteconfig",{"_index":615,"title":{},"body":{"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{}}}],["deleteconfig(configid",{"_index":705,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["deleteconfig(configkey",{"_index":451,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["depend",{"_index":228,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"components/ConfigComponent.html":{},"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["design",{"_index":1572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["destin",{"_index":531,"title":{},"body":{"classes/ConfigBuilder.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/RuleInterface.html":{},"injectables/SorterService.html":{},"interfaces/UserDocument.html":{},"miscellaneous/variables.html":{}}}],["destinationfold",{"_index":516,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["destinationloc",{"_index":703,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["determin",{"_index":294,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{}}}],["develop",{"_index":1377,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["dialog",{"_index":385,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["dialoginst",{"_index":431,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["dialoginstance.clos",{"_index":442,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["dialoginstance.componentinst",{"_index":438,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["dialogsubscript",{"_index":587,"title":{},"body":{"components/ConfigComponent.html":{}}}],["dialogsubscription.unsubscrib",{"_index":590,"title":{},"body":{"components/ConfigComponent.html":{}}}],["dialogwidth",{"_index":429,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["dialogwidth}px",{"_index":433,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["direct",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["disablefeature(google.picker.feature.support_team_dr",{"_index":1035,"title":{},"body":{"injectables/GoogleService.html":{}}}],["disabletrash",{"_index":795,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["disconnect",{"_index":472,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["discoverydoc",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["distribut",{"_index":1447,"title":{},"body":{"license.html":{}}}],["doc(`users/${this.userid",{"_index":392,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["doc(configid",{"_index":753,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["doc(this.editingconfig",{"_index":757,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["doc:buildandserv",{"_index":1413,"title":{},"body":{"index.html":{}}}],["document",{"_index":824,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{}}}],["document.body.clientheight",{"_index":435,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["document.body.clientwidth",{"_index":423,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["document.getelementbyid('loader').remov",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["document.ref.delet",{"_index":771,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["done",{"_index":897,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["draw",{"_index":853,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["drive",{"_index":779,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["drivemimetyp",{"_index":818,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"injectables/SorterService.html":{},"miscellaneous/enumerations.html":{}}}],["drivemimetype.fold",{"_index":1055,"title":{},"body":{"injectables/GoogleService.html":{}}}],["drivequeri",{"_index":1188,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.createdafter(rule.data.d",{"_index":1203,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.createdbefore(rule.data.d",{"_index":1204,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.excludesowner(own",{"_index":1201,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.excludetype(typ",{"_index":1198,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.fulltextcontains(rule.data.fulltext",{"_index":1191,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.get",{"_index":1218,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.hasowner(own",{"_index":1200,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.modifiedafter(rule.data.d",{"_index":1214,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.modifiedbefore(rule.data.d",{"_index":1215,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.namecontains(titl",{"_index":1194,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.nameexcludes(titl",{"_index":1195,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.openedafter(rule.data.d",{"_index":1209,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.openedbefore(rule.data.d",{"_index":1210,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.requirestype(typ",{"_index":1197,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequerybuild",{"_index":774,"title":{"classes/DriveQueryBuilder.html":{}},"body":{"classes/DriveQueryBuilder.html":{},"injectables/SorterService.html":{},"coverage.html":{}}}],["drivequerybuilder(destination.folderid",{"_index":1219,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequerybuilder(group.source.folderid",{"_index":1189,"title":{},"body":{"injectables/SorterService.html":{}}}],["durat",{"_index":1089,"title":{},"body":{"components/HomeComponent.html":{}}}],["dynam",{"_index":1343,"title":{},"body":{"dependencies.html":{}}}],["eas",{"_index":1531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["easi",{"_index":1005,"title":{},"body":{"injectables/GoogleService.html":{},"miscellaneous/variables.html":{}}}],["easier",{"_index":1266,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["edit",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["editconfig",{"_index":616,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["editconfig(configid",{"_index":446,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["editconfigmodalcompon",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editconfigpagecompon",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editingconfig",{"_index":687,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["effect",{"_index":1268,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["element",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["element.id",{"_index":1115,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["email",{"_index":814,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["engin",{"_index":1571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enter",{"_index":1525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entrycompon",{"_index":658,"title":{},"body":{"modules/ConfigModule.html":{}}}],["enum",{"_index":848,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["enumer",{"_index":1365,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environments/environment.prod",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{}}}],["event",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/FolderCreationComponent.html":{},"license.html":{}}}],["event.check",{"_index":941,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["event.url",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["eventemitt",{"_index":908,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["exampl",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/ConfigComponent.html":{},"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["exclud",{"_index":816,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"injectables/SorterService.html":{}}}],["excludesown",{"_index":783,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["excludesowner(email",{"_index":810,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["excludetyp",{"_index":784,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["excludetype(mimetyp",{"_index":817,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["exclus",{"_index":813,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["execute(resp",{"_index":1050,"title":{},"body":{"injectables/GoogleService.html":{}}}],["export",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"interfaces/UserDocument.html":{},"overview.html":{}}}],["express",{"_index":1462,"title":{},"body":{"license.html":{}}}],["extend",{"_index":1148,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["fabanim",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["faccoldi",{"_index":1379,"title":{},"body":{"index.html":{}}}],["fadeoutin",{"_index":1287,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["fals",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"injectables/SorterService.html":{},"miscellaneous/variables.html":{}}}],["featur",{"_index":1396,"title":{},"body":{"index.html":{}}}],["fernando",{"_index":1375,"title":{},"body":{"index.html":{}}}],["field",{"_index":972,"title":{},"body":{"injectables/GoogleService.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"interfaces/UserDocument.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{}}}],["file.id",{"_index":1231,"title":{},"body":{"injectables/SorterService.html":{}}}],["file.parents.join",{"_index":1063,"title":{},"body":{"injectables/GoogleService.html":{}}}],["fileid",{"_index":974,"title":{},"body":{"injectables/GoogleService.html":{}}}],["fileresourc",{"_index":1054,"title":{},"body":{"injectables/GoogleService.html":{}}}],["fileresource['par",{"_index":1056,"title":{},"body":{"injectables/GoogleService.html":{}}}],["finish",{"_index":893,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["firebas",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["firebase.auth.googleauthprovider.credenti",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["firebase/app",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleService.html":{}}}],["firebase/auth",{"_index":1001,"title":{},"body":{"injectables/GoogleService.html":{}}}],["firebase/database.servic",{"_index":1003,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/SorterService.html":{}}}],["firebaseauth",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{}}}],["firstgroupnam",{"_index":514,"title":{},"body":{"classes/ConfigBuilder.html":{},"injectables/DatabaseService.html":{}}}],["firstgrouprul",{"_index":503,"title":{},"body":{"classes/ConfigBuilder.html":{},"injectables/DatabaseService.html":{}}}],["fit",{"_index":1465,"title":{},"body":{"license.html":{}}}],["fix",{"_index":1528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["folder",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"miscellaneous/enumerations.html":{}}}],["folder.parent.folderid",{"_index":943,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["folder[attribute].typ",{"_index":947,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["folder[attribute].value.length",{"_index":949,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["foldercr",{"_index":510,"title":{"interfaces/FolderCreation.html":{}},"body":{"classes/ConfigBuilder.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/RuleInterface.html":{},"interfaces/UserDocument.html":{},"coverage.html":{}}}],["foldercreationcompon",{"_index":207,"title":{"components/FolderCreationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["folderid",{"_index":606,"title":{},"body":{"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/PresetConfigComponent.html":{},"interfaces/RuleInterface.html":{},"interfaces/UserDocument.html":{},"miscellaneous/variables.html":{}}}],["foldernamebuild",{"_index":494,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["foldernamebuilder(createfolderconfig",{"_index":509,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["folderpick",{"_index":956,"title":{},"body":{"injectables/GoogleService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["folderpicked(data",{"_index":1010,"title":{},"body":{"injectables/GoogleService.html":{},"miscellaneous/functions.html":{}}}],["folderpickedlisten",{"_index":933,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["folderpickedlistener.unsubscrib",{"_index":939,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["folderpicker.setvisible(tru",{"_index":1043,"title":{},"body":{"injectables/GoogleService.html":{}}}],["follow",{"_index":1453,"title":{},"body":{"license.html":{}}}],["form",{"_index":857,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["formsmodul",{"_index":320,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["forroot",{"_index":342,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["forwardref",{"_index":1506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["free",{"_index":1399,"title":{},"body":{"index.html":{},"license.html":{}}}],["friendli",{"_index":1397,"title":{},"body":{"index.html":{}}}],["fulli",{"_index":1278,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["fulltext",{"_index":1190,"title":{},"body":{"injectables/SorterService.html":{}}}],["fulltextcontain",{"_index":785,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["fulltextcontains(text",{"_index":822,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["function",{"_index":708,"title":{"miscellaneous/functions.html":{}},"body":{"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"injectables/SorterService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["furnish",{"_index":1452,"title":{},"body":{"license.html":{}}}],["fustiont",{"_index":859,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["g",{"_index":1262,"title":{},"body":{"components/UnauthenticatedComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["gapi",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gapi.auth2.getauthinst",{"_index":1021,"title":{},"body":{"injectables/GoogleService.html":{}}}],["gapi.client.dr",{"_index":1222,"title":{},"body":{"injectables/SorterService.html":{}}}],["gapi.client.drive.fil",{"_index":1048,"title":{},"body":{"injectables/GoogleService.html":{}}}],["gapi.client.drive.files.upd",{"_index":1060,"title":{},"body":{"injectables/GoogleService.html":{}}}],["gapi.client.init(config).then",{"_index":1020,"title":{},"body":{"injectables/GoogleService.html":{}}}],["gapi.load('client:auth2",{"_index":1016,"title":{},"body":{"injectables/GoogleService.html":{}}}],["gapi.load('pick",{"_index":1027,"title":{},"body":{"injectables/GoogleService.html":{}}}],["gener",{"_index":802,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"index.html":{}}}],["generatenewconfig",{"_index":495,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["generatenewconfig(confignam",{"_index":513,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["geo",{"_index":1573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["geometri",{"_index":1558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get",{"_index":67,"title":{"index.html":{},"license.html":{},"todo.html":{}},"body":{"components/AppComponent.html":{},"injectables/GoogleService.html":{}}}],["getactiveconfig",{"_index":617,"title":{},"body":{"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{}}}],["getactiveconfig(cb",{"_index":707,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["getactiveconfig(configkey",{"_index":457,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["getauthstatu",{"_index":957,"title":{},"body":{"injectables/GoogleService.html":{}}}],["getconfig",{"_index":692,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["getconfig(configid",{"_index":711,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["getdialogwidth",{"_index":421,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["getdrivequeri",{"_index":1177,"title":{},"body":{"injectables/SorterService.html":{}}}],["getdrivequery(group",{"_index":1180,"title":{},"body":{"injectables/SorterService.html":{}}}],["getfileinfo",{"_index":958,"title":{},"body":{"injectables/GoogleService.html":{}}}],["getfileinfo(fileid",{"_index":971,"title":{},"body":{"injectables/GoogleService.html":{}}}],["getitem",{"_index":1553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getroutest",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["getroutestate(outlet",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["gettoken",{"_index":959,"title":{},"body":{"injectables/GoogleService.html":{}}}],["getuntitledfil",{"_index":1178,"title":{},"body":{"injectables/SorterService.html":{}}}],["getuntitledfiles(destin",{"_index":1182,"title":{},"body":{"injectables/SorterService.html":{}}}],["getvalu",{"_index":927,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["git",{"_index":1402,"title":{},"body":{"index.html":{}}}],["gitter",{"_index":1421,"title":{},"body":{"index.html":{}}}],["global",{"_index":1409,"title":{},"body":{"index.html":{}}}],["go",{"_index":296,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/HomeComponent.html":{},"injectables/PreventAuthGuardService.html":{}}}],["googl",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["google.picker.docsview(google.picker.viewid.fold",{"_index":1029,"title":{},"body":{"injectables/GoogleService.html":{}}}],["google.picker.pickerbuild",{"_index":1034,"title":{},"body":{"injectables/GoogleService.html":{}}}],["google/google.servic",{"_index":300,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{},"injectables/SorterService.html":{}}}],["googleinitinterv",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["googleservic",{"_index":17,"title":{"injectables/GoogleService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/PresetConfigComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gotoconfigpag",{"_index":1072,"title":{},"body":{"components/HomeComponent.html":{}}}],["grade",{"_index":1564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grant",{"_index":1435,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1481,"title":{},"body":{"modules.html":{}}}],["group",{"_index":508,"title":{},"body":{"classes/ConfigBuilder.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/PresetConfigComponent.html":{},"interfaces/RuleInterface.html":{},"injectables/SorterService.html":{},"interfaces/UserDocument.html":{},"miscellaneous/variables.html":{}}}],["group.createfold",{"_index":537,"title":{},"body":{"classes/ConfigBuilder.html":{},"injectables/SorterService.html":{}}}],["group.createfolder.nam",{"_index":538,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["group.createfolder.name.value.length",{"_index":542,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["group.createfolder.par",{"_index":539,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["group.createfolder.parent.folderid",{"_index":1239,"title":{},"body":{"injectables/SorterService.html":{}}}],["group.createfolder.prefix",{"_index":540,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["group.createfolder.suffix",{"_index":541,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["group.destin",{"_index":1128,"title":{},"body":{"components/PresetConfigComponent.html":{},"injectables/SorterService.html":{}}}],["group.destination.folderid",{"_index":1232,"title":{},"body":{"injectables/SorterService.html":{}}}],["group.destination.presetid",{"_index":1127,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["group.rules.foreach(rul",{"_index":1134,"title":{},"body":{"components/PresetConfigComponent.html":{},"injectables/SorterService.html":{}}}],["group.source.renameuntitl",{"_index":1233,"title":{},"body":{"injectables/SorterService.html":{}}}],["group['id",{"_index":1133,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["groupfolderinterfac",{"_index":501,"title":{"interfaces/GroupFolderInterface.html":{}},"body":{"classes/ConfigBuilder.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/RuleInterface.html":{},"injectables/SorterService.html":{},"interfaces/UserDocument.html":{},"coverage.html":{}}}],["groupinterfac",{"_index":612,"title":{"interfaces/GroupInterface.html":{}},"body":{"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/RuleInterface.html":{},"injectables/SorterService.html":{},"interfaces/UserDocument.html":{},"coverage.html":{}}}],["groups.find(group",{"_index":1126,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["groups.foreach(group",{"_index":1132,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["guard.servic",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigRoutingModule.html":{}}}],["guard.service.t",{"_index":286,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{},"coverage.html":{}}}],["guard.service.ts:13",{"_index":292,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["guard.service.ts:21",{"_index":299,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["guard.service.ts:28",{"_index":293,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["guard.service.ts:47",{"_index":1162,"title":{},"body":{"injectables/PreventAuthGuardService.html":{}}}],["guard.service.ts:55",{"_index":1164,"title":{},"body":{"injectables/PreventAuthGuardService.html":{}}}],["guard.service.ts:62",{"_index":1163,"title":{},"body":{"injectables/PreventAuthGuardService.html":{}}}],["hammerj",{"_index":1353,"title":{},"body":{"dependencies.html":{}}}],["hanafi",{"_index":1388,"title":{},"body":{"index.html":{}}}],["handl",{"_index":298,"title":{},"body":{"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"injectables/PreventAuthGuardService.html":{}}}],["hasown",{"_index":786,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["hasowner(email",{"_index":829,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["height",{"_index":1546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["herebi",{"_index":1434,"title":{},"body":{"license.html":{}}}],["high",{"_index":1562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hold",{"_index":994,"title":{},"body":{"injectables/GoogleService.html":{}}}],["holder",{"_index":1470,"title":{},"body":{"license.html":{}}}],["home",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["home'},{'nam",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["home.component.html",{"_index":1069,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":1068,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecompon",{"_index":210,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthenticatedModule.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["html",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["https://g",{"_index":1512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://github.com/brandoncravener/g",{"_index":1404,"title":{},"body":{"index.html":{}}}],["https://www.googleapis.com/auth/dr",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["https://www.googleapis.com/discovery/v1/apis/drive/v3/rest",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["i",{"_index":1575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":526,"title":{},"body":{"classes/ConfigBuilder.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/PresetConfigComponent.html":{},"interfaces/RuleInterface.html":{},"interfaces/UserDocument.html":{},"miscellaneous/variables.html":{}}}],["identifi",{"_index":1283,"title":{},"body":{"coverage.html":{}}}],["ignor",{"_index":820,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["imageurl",{"_index":1566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implement",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"injectables/PreventAuthGuardService.html":{},"pipes/UnNamedPipe.html":{}}}],["impli",{"_index":1463,"title":{},"body":{"license.html":{}}}],["import",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"interfaces/UserDocument.html":{}}}],["inact",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["includ",{"_index":799,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"injectables/SorterService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["index",{"_index":25,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{},"interfaces/UserDocument.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"interfaces/UserDocument.html":{}}}],["inform",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["inherit",{"_index":1150,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["init",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{}}}],["init(config",{"_index":977,"title":{},"body":{"injectables/GoogleService.html":{}}}],["initi",{"_index":981,"title":{},"body":{"injectables/GoogleService.html":{}}}],["inject",{"_index":284,"title":{"injectables/AuthGuardService.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"injectables/PreventAuthGuardService.html":{},"injectables/SorterService.html":{}},"body":{"injectables/AuthGuardService.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"injectables/PreventAuthGuardService.html":{},"injectables/SorterService.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":900,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["inputfold",{"_index":901,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["instal",{"_index":1400,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/ConfigComponent.html":{},"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"miscellaneous/variables.html":{}}}],["instanceof",{"_index":173,"title":{},"body":{"components/AppComponent.html":{}}}],["integr",{"_index":1570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["interact",{"_index":952,"title":{},"body":{"injectables/GoogleService.html":{}}}],["interfac",{"_index":343,"title":{"interfaces/Config.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/RuleInterface.html":{},"interfaces/UserDocument.html":{}},"body":{"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/RuleInterface.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{},"interfaces/UserDocument.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["isactiveconfig",{"_index":1071,"title":{},"body":{"components/HomeComponent.html":{}}}],["isn't",{"_index":1254,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["ispag",{"_index":1098,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["issu",{"_index":1418,"title":{},"body":{"index.html":{}}}],["istem",{"_index":1557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ivan",{"_index":1382,"title":{},"body":{"index.html":{}}}],["jasmin",{"_index":1355,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":1350,"title":{},"body":{"dependencies.html":{}}}],["key",{"_index":346,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":1461,"title":{},"body":{"license.html":{}}}],["label",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["land",{"_index":1533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lane",{"_index":1378,"title":{},"body":{"index.html":{}}}],["lastmodifi",{"_index":1213,"title":{},"body":{"injectables/SorterService.html":{}}}],["lastopen",{"_index":1208,"title":{},"body":{"injectables/SorterService.html":{}}}],["leav",{"_index":1526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legend",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"overview.html":{}}}],["liabil",{"_index":1474,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":1471,"title":{},"body":{"license.html":{}}}],["licens",{"_index":1427,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["limit",{"_index":1443,"title":{},"body":{"license.html":{}}}],["limit(pages",{"_index":480,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["link.label",{"_index":188,"title":{},"body":{"components/AppComponent.html":{}}}],["list",{"_index":366,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/GoogleService.html":{}}}],["list'},{'nam",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["list.compon",{"_index":315,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["list.component.html",{"_index":367,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["list.component.scss",{"_index":368,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["list.component.t",{"_index":345,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"coverage.html":{}}}],["list.component.ts:128",{"_index":624,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:139",{"_index":628,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:160",{"_index":629,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:171",{"_index":622,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:193",{"_index":621,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:200",{"_index":630,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:204",{"_index":623,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:208",{"_index":626,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:219",{"_index":596,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["list.component.ts:221",{"_index":597,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["list.component.ts:222",{"_index":595,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["list.component.ts:226",{"_index":598,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["list.component.ts:230",{"_index":599,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["list.component.ts:234",{"_index":600,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["list.component.ts:239",{"_index":601,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["list.component.ts:35",{"_index":641,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:37",{"_index":643,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:38",{"_index":634,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:39",{"_index":631,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:40",{"_index":639,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:41",{"_index":637,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:42",{"_index":642,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:43",{"_index":633,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:44",{"_index":632,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:46",{"_index":636,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:47",{"_index":638,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:48",{"_index":635,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:49",{"_index":620,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:60",{"_index":627,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:80",{"_index":625,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list/config",{"_index":314,"title":{},"body":{"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"coverage.html":{}}}],["listen",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["listfil",{"_index":960,"title":{},"body":{"injectables/GoogleService.html":{}}}],["listfiles(queri",{"_index":982,"title":{},"body":{"injectables/GoogleService.html":{}}}],["liter",{"_index":887,"title":{},"body":{"interfaces/FolderCreation.html":{}}}],["load",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{}}}],["loadconfig",{"_index":593,"title":{},"body":{"classes/ConfigDataSource.html":{},"injectables/SorterService.html":{}}}],["loadconfig(cb",{"_index":1184,"title":{},"body":{"injectables/SorterService.html":{}}}],["loadconfigs(pag",{"_index":475,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["loaderremov",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["loadingsubject",{"_index":464,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["loadingsubscript",{"_index":377,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["localconfig",{"_index":529,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["localconfig.groups.push",{"_index":530,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["log",{"_index":1260,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["login",{"_index":1257,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["logo",{"_index":1390,"title":{},"body":{"index.html":{}}}],["logo.png",{"_index":1568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["made",{"_index":1389,"title":{},"body":{"index.html":{}}}],["main",{"_index":1369,"title":{},"body":{"index.html":{}}}],["major",{"_index":1423,"title":{},"body":{"index.html":{}}}],["make",{"_index":1275,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["manag",{"_index":1417,"title":{},"body":{"index.html":{}}}],["manager/develop",{"_index":1374,"title":{},"body":{"index.html":{}}}],["map",{"_index":861,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["matbuttonmodul",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["matcardmodul",{"_index":324,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["match",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"interfaces/UserDocument.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["matdatepick",{"_index":325,"title":{},"body":{"modules/AuthenticatedModule.html":{}}}],["matdatepickermodul",{"_index":326,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["matdialog",{"_index":359,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["matdialogcont",{"_index":327,"title":{},"body":{"modules/AuthenticatedModule.html":{}}}],["matdialogmodul",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{}}}],["matexpansionmodul",{"_index":328,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["matformfieldmodul",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["matgridlistmodul",{"_index":329,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["maticonmodul",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["matinputmodul",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["matlistmodul",{"_index":330,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["matmenumodul",{"_index":273,"title":{},"body":{"modules/AppModule.html":{}}}],["matnativedatemodul",{"_index":331,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["matpagin",{"_index":360,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{}}}],["matpaginatormodul",{"_index":332,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["matprogressbarmodul",{"_index":662,"title":{},"body":{"modules/ConfigModule.html":{}}}],["matprogressspinnermodul",{"_index":663,"title":{},"body":{"modules/ConfigModule.html":{}}}],["matselectmodul",{"_index":333,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["matslidetogglechang",{"_index":916,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["matslidetogglemodul",{"_index":664,"title":{},"body":{"modules/ConfigModule.html":{}}}],["matsnackbar",{"_index":905,"title":{},"body":{"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{}}}],["matsnackbarmodul",{"_index":334,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["matsteppermodul",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["mattabl",{"_index":361,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["mattabledatasourc",{"_index":362,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["mattablemodul",{"_index":335,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["mattabsmodul",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodul",{"_index":271,"title":{},"body":{"modules/AppModule.html":{}}}],["mattooltipmodul",{"_index":336,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["maxheight",{"_index":434,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["memberof",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"components/ConfigComponent.html":{},"modules/ConfigModule.html":{},"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["merchant",{"_index":1464,"title":{},"body":{"license.html":{}}}],["merg",{"_index":1445,"title":{},"body":{"license.html":{}}}],["messagingsenderid",{"_index":1517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{}}}],["method",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{}}}],["mimetyp",{"_index":821,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{}}}],["miscellan",{"_index":1364,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1429,"title":{},"body":{"index.html":{},"license.html":{}}}],["mock",{"_index":1331,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["modal'},{'nam",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["modal.compon",{"_index":318,"title":{},"body":{"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{}}}],["modal.component.t",{"_index":1298,"title":{},"body":{"coverage.html":{}}}],["modal/config",{"_index":317,"title":{},"body":{"modules/AuthenticatedModule.html":{},"components/ConfigComponent.html":{},"modules/ConfigModule.html":{},"coverage.html":{}}}],["modal/edit",{"_index":358,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"coverage.html":{}}}],["modifi",{"_index":833,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"license.html":{}}}],["modifiedaft",{"_index":787,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["modifiedafter(d",{"_index":831,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["modifiedafter(rule.data.firstd",{"_index":1216,"title":{},"body":{"injectables/SorterService.html":{}}}],["modifiedbefor",{"_index":788,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["modifiedbefore(d",{"_index":834,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["modifiedbefore(rule.data.secondd",{"_index":1217,"title":{},"body":{"injectables/SorterService.html":{}}}],["modifiedtim",{"_index":885,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["modul",{"_index":226,"title":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"injectables/GoogleService.html":{},"modules.html":{},"overview.html":{}}}],["modules/authenticated/authenticated.modul",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/config/config.modul",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["modulewithprovid",{"_index":337,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["more",{"_index":1281,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["more_vert",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["movefil",{"_index":961,"title":{},"body":{"injectables/GoogleService.html":{}}}],["movefile(fileid",{"_index":984,"title":{},"body":{"injectables/GoogleService.html":{}}}],["much",{"_index":1280,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["multi",{"_index":1507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"interfaces/UserDocument.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["namecontain",{"_index":789,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["namecontains('untitl",{"_index":1220,"title":{},"body":{"injectables/SorterService.html":{}}}],["namecontains(str",{"_index":836,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["named.pip",{"_index":670,"title":{},"body":{"modules/ConfigModule.html":{}}}],["named.pipe.t",{"_index":1245,"title":{},"body":{"pipes/UnNamedPipe.html":{},"coverage.html":{}}}],["named.pipe.ts:7",{"_index":1250,"title":{},"body":{"pipes/UnNamedPipe.html":{}}}],["nameexclud",{"_index":790,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["nameexcludes(str",{"_index":839,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["namingopt",{"_index":894,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["navigationend",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationstart",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["necessari",{"_index":1395,"title":{},"body":{"index.html":{}}}],["need",{"_index":826,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"index.html":{}}}],["never",{"_index":1265,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["new",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newconfig",{"_index":720,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["newconfigid",{"_index":417,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["newconfigpagecompon",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["newfolderid",{"_index":1242,"title":{},"body":{"injectables/SorterService.html":{}}}],["newfoldernam",{"_index":1236,"title":{},"body":{"injectables/SorterService.html":{}}}],["newgroupdestin",{"_index":500,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["newgroupnam",{"_index":499,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["newgroupsourc",{"_index":502,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["newrulesteppercompon",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":1348,"title":{},"body":{"dependencies.html":{}}}],["ng",{"_index":1411,"title":{},"body":{"index.html":{}}}],["ng_value_accessor",{"_index":1504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngafterviewinit",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{}}}],["ngmodul",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{}}}],["ngondestroy",{"_index":458,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["ngoninit",{"_index":386,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["ngzone",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{}}}],["noconfig",{"_index":381,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["none",{"_index":922,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["noninfring",{"_index":1468,"title":{},"body":{"license.html":{}}}],["notic",{"_index":1456,"title":{},"body":{"license.html":{}}}],["now",{"_index":1092,"title":{},"body":{"components/HomeComponent.html":{}}}],["null",{"_index":609,"title":{},"body":{"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/RuleInterface.html":{},"interfaces/UserDocument.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":375,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["numberconfig",{"_index":693,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["numberconfigs(cb",{"_index":714,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["numconfig",{"_index":397,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["numnon",{"_index":945,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["object",{"_index":978,"title":{},"body":{"injectables/GoogleService.html":{},"miscellaneous/variables.html":{}}}],["observ",{"_index":363,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/GoogleService.html":{}}}],["obtain",{"_index":1438,"title":{},"body":{"license.html":{}}}],["ok",{"_index":1088,"title":{},"body":{"components/HomeComponent.html":{}}}],["oldpages",{"_index":374,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["om1dhhvv5d9npas7jj02mbtvi5mjksmo.apps.googleusercontent.com",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["on",{"_index":649,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["ondestroy",{"_index":349,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["oninit",{"_index":350,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["opac",{"_index":1529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["open",{"_index":581,"title":{},"body":{"components/ConfigComponent.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"index.html":{}}}],["openconfigmod",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["openconfigmodalfunc",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["openconfigmodallisten",{"_index":566,"title":{},"body":{"components/ConfigComponent.html":{}}}],["openedaft",{"_index":791,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["openedafter(d",{"_index":841,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["openedafter(rule.data.firstd",{"_index":1211,"title":{},"body":{"injectables/SorterService.html":{}}}],["openedbefor",{"_index":792,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["openedbefore(d",{"_index":844,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["openedbefore(rule.data.secondd",{"_index":1212,"title":{},"body":{"injectables/SorterService.html":{}}}],["openfilepick",{"_index":962,"title":{},"body":{"injectables/GoogleService.html":{}}}],["openfolderpick",{"_index":898,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["opennewconfigdialog",{"_index":567,"title":{},"body":{"components/ConfigComponent.html":{}}}],["openpreset",{"_index":428,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["option",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["option.nam",{"_index":950,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["orderby('nam",{"_index":478,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["organ",{"_index":1264,"title":{},"body":{"components/UnauthenticatedComponent.html":{},"index.html":{}}}],["otherwis",{"_index":1477,"title":{},"body":{"license.html":{}}}],["out",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"injectables/GoogleService.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["outlet",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["outlet.activatedroutedata.st",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["output",{"_index":902,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["outputstr",{"_index":548,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["overview",{"_index":1483,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":812,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{}}}],["packag",{"_index":1336,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":297,"title":{},"body":{"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"miscellaneous/variables.html":{}}}],["page'},{'nam",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["page.compon",{"_index":661,"title":{},"body":{"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{}}}],["page.component.t",{"_index":1147,"title":{},"body":{"components/PresetConfigPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:10",{"_index":1154,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["page.component.ts:12",{"_index":1149,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["page/edit",{"_index":660,"title":{},"body":{"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"coverage.html":{}}}],["page/new",{"_index":666,"title":{},"body":{"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"coverage.html":{}}}],["page/preset",{"_index":672,"title":{},"body":{"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"components/PresetConfigPageComponent.html":{},"coverage.html":{}}}],["pages",{"_index":469,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["pagin",{"_index":370,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["paginatorsubscript",{"_index":378,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["param",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"injectables/PreventAuthGuardService.html":{},"components/UnauthenticatedComponent.html":{}}}],["paramet",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":607,"title":{},"body":{"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/RuleInterface.html":{},"interfaces/UserDocument.html":{}}}],["parentfolderid",{"_index":797,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["parentfolderisroot",{"_index":895,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["particular",{"_index":1466,"title":{},"body":{"license.html":{}}}],["pass",{"_index":407,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["path",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"modules/ConfigRoutingModule.html":{}}}],["permiss",{"_index":1433,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1451,"title":{},"body":{"license.html":{}}}],["person",{"_index":1437,"title":{},"body":{"license.html":{}}}],["phi",{"_index":1574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["photo",{"_index":863,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["physic",{"_index":1569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pick",{"_index":1012,"title":{},"body":{"injectables/GoogleService.html":{}}}],["pickedfold",{"_index":935,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["pickedfolder.id",{"_index":937,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["pickedfolder.nam",{"_index":938,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["picker",{"_index":1028,"title":{},"body":{"injectables/GoogleService.html":{}}}],["pipe",{"_index":1243,"title":{"pipes/UnNamedPipe.html":{}},"body":{"pipes/UnNamedPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipes/un",{"_index":669,"title":{},"body":{"modules/ConfigModule.html":{}}}],["pipetransform",{"_index":1251,"title":{},"body":{"pipes/UnNamedPipe.html":{}}}],["pleas",{"_index":1424,"title":{},"body":{"index.html":{}}}],["popup",{"_index":990,"title":{},"body":{"injectables/GoogleService.html":{}}}],["portion",{"_index":1459,"title":{},"body":{"license.html":{}}}],["posit",{"_index":1527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix",{"_index":610,"title":{},"body":{"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/RuleInterface.html":{},"interfaces/UserDocument.html":{}}}],["present",{"_index":865,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["preset",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["preset.categori",{"_index":1145,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["preset.descript",{"_index":1146,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["preset.nam",{"_index":1144,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["presetconfigcompon",{"_index":216,"title":{"components/PresetConfigComponent.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["presetconfigcomponent:17",{"_index":1155,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["presetconfigcomponent:19",{"_index":1156,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["presetconfigcomponent:21",{"_index":1158,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["presetconfigcomponent:22",{"_index":1159,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["presetconfigcomponent:23",{"_index":1157,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["presetconfigcomponent:26",{"_index":1161,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["presetconfigcomponent:27",{"_index":1160,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["presetconfigcomponent:33",{"_index":1153,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["presetconfigcomponent:35",{"_index":1152,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["presetconfigcomponent:39",{"_index":1151,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["presetconfigpagecompon",{"_index":218,"title":{"components/PresetConfigPageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["presetid",{"_index":1103,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"miscellaneous/variables.html":{}}}],["presets.find(el",{"_index":1114,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["prevent",{"_index":287,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{}}}],["preventauthguardservic",{"_index":238,"title":{"injectables/PreventAuthGuardService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{},"coverage.html":{},"overview.html":{}}}],["prevpar",{"_index":1062,"title":{},"body":{"injectables/GoogleService.html":{}}}],["privat",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{}}}],["problem",{"_index":1141,"title":{},"body":{"components/PresetConfigComponent.html":{},"index.html":{}}}],["product",{"_index":1508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":1373,"title":{},"body":{"index.html":{}}}],["projectid",{"_index":1514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promis",{"_index":699,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{}}}],["promise((resolv",{"_index":749,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"injectables/SorterService.html":{}}}],["properti",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{},"interfaces/UserDocument.html":{}}}],["provid",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/UnauthenticatedComponent.html":{},"index.html":{}}}],["publish",{"_index":1446,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":1467,"title":{},"body":{"license.html":{}}}],["q",{"_index":1049,"title":{},"body":{"injectables/GoogleService.html":{}}}],["quarter",{"_index":1576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["quartersarray",{"_index":1315,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["queri",{"_index":776,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"injectables/SorterService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["query'",{"_index":780,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["quick",{"_index":1269,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["rc.5",{"_index":1347,"title":{},"body":{"dependencies.html":{}}}],["reactiveformsmodul",{"_index":321,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["ref.get",{"_index":760,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["ref.set(newconfig",{"_index":758,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["refer",{"_index":1006,"title":{},"body":{"injectables/GoogleService.html":{},"miscellaneous/variables.html":{}}}],["refresh",{"_index":645,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["refreshconfig",{"_index":445,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["regist",{"_index":340,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["reject",{"_index":750,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"injectables/SorterService.html":{}}}],["reject(resp.err",{"_index":1058,"title":{},"body":{"injectables/GoogleService.html":{}}}],["reject(resp.error",{"_index":1228,"title":{},"body":{"injectables/SorterService.html":{}}}],["relat",{"_index":1385,"title":{},"body":{"index.html":{}}}],["removeitem",{"_index":1556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["removepar",{"_index":1065,"title":{},"body":{"injectables/GoogleService.html":{}}}],["renam",{"_index":1491,"title":{},"body":{"todo.html":{}}}],["renamefil",{"_index":963,"title":{},"body":{"injectables/GoogleService.html":{}}}],["renamefile(fileid",{"_index":987,"title":{},"body":{"injectables/GoogleService.html":{}}}],["renameuntitl",{"_index":605,"title":{},"body":{"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/RuleInterface.html":{},"interfaces/UserDocument.html":{}}}],["report",{"_index":1425,"title":{},"body":{"index.html":{}}}],["repositionscrollstrategi",{"_index":577,"title":{},"body":{"components/ConfigComponent.html":{}}}],["repositori",{"_index":1420,"title":{},"body":{"index.html":{}}}],["requestsreciv",{"_index":1120,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["requestss",{"_index":1119,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["requir",{"_index":805,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requirestyp",{"_index":793,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["requirestype(mimetyp",{"_index":846,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["reset",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"overview.html":{}}}],["resolv",{"_index":752,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"injectables/SorterService.html":{}}}],["resolve(resp.id",{"_index":1059,"title":{},"body":{"injectables/GoogleService.html":{}}}],["resourc",{"_index":1057,"title":{},"body":{"injectables/GoogleService.html":{}}}],["resp",{"_index":1226,"title":{},"body":{"injectables/SorterService.html":{}}}],["resp.err",{"_index":1052,"title":{},"body":{"injectables/GoogleService.html":{}}}],["resp.error",{"_index":1227,"title":{},"body":{"injectables/SorterService.html":{}}}],["resp.files.foreach(fil",{"_index":1229,"title":{},"body":{"injectables/SorterService.html":{}}}],["rest",{"_index":1272,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["restrict",{"_index":1442,"title":{},"body":{"license.html":{}}}],["result",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"interfaces/UserDocument.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["retriv",{"_index":412,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["return",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"miscellaneous/variables.html":{}}}],["right",{"_index":1444,"title":{},"body":{"license.html":{}}}],["rlasaf",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["root",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"miscellaneous/variables.html":{}}}],["root'},{'nam",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["roottogglechang",{"_index":899,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["roottogglechange(ev",{"_index":915,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["rout",{"_index":69,"title":{"routes.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/ConfigRoutingModule.html":{},"injectables/PreventAuthGuardService.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{}}}],["routeranim",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routermodul",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigRoutingModule.html":{}}}],["routermodule.forchild(rout",{"_index":680,"title":{},"body":{"modules/ConfigRoutingModule.html":{}}}],["routermodule.forroot(approut",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.modul",{"_index":673,"title":{},"body":{"modules/ConfigModule.html":{}}}],["routing.module.t",{"_index":675,"title":{},"body":{"modules/ConfigRoutingModule.html":{}}}],["rule",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"interfaces/UserDocument.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rule.classifi",{"_index":547,"title":{},"body":{"classes/ConfigBuilder.html":{},"injectables/SorterService.html":{}}}],["rule.constraint",{"_index":546,"title":{},"body":{"classes/ConfigBuilder.html":{},"injectables/SorterService.html":{}}}],["rule.data",{"_index":545,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["rule.data.filetyp",{"_index":1196,"title":{},"body":{"injectables/SorterService.html":{}}}],["rule.data.own",{"_index":1199,"title":{},"body":{"injectables/SorterService.html":{}}}],["rule.data.titl",{"_index":1193,"title":{},"body":{"injectables/SorterService.html":{}}}],["rule.id",{"_index":544,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["rule.nam",{"_index":543,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["rule['id",{"_index":1135,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["ruleinterfac",{"_index":504,"title":{"interfaces/RuleInterface.html":{}},"body":{"classes/ConfigBuilder.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/RuleInterface.html":{},"interfaces/UserDocument.html":{},"coverage.html":{}}}],["run",{"_index":1401,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"components/PresetConfigComponent.html":{},"dependencies.html":{}}}],["scale(0",{"_index":1520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scale(1",{"_index":1521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["school",{"_index":1560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scope",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["screen",{"_index":1542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["script",{"_index":867,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["sdk",{"_index":879,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["search",{"_index":798,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["select",{"_index":563,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"components/SettingsComponent.html":{}}}],["selector",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["sell",{"_index":1450,"title":{},"body":{"license.html":{}}}],["serv",{"_index":1412,"title":{},"body":{"index.html":{}}}],["servic",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/GoogleService.html":{},"injectables/PreventAuthGuardService.html":{},"components/UnauthenticatedComponent.html":{}}}],["services/auth/auth",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigRoutingModule.html":{}}}],["services/firebase/database.servic",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/SettingsComponent.html":{}}}],["services/google/google.servic",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FolderCreationComponent.html":{},"components/PresetConfigComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["services/sorter/sorter.servic",{"_index":339,"title":{},"body":{"modules/AuthenticatedModule.html":{},"components/HomeComponent.html":{}}}],["set",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"components/HomeComponent.html":{},"components/SettingsComponent.html":{}}}],["setactiveconfig",{"_index":618,"title":{},"body":{"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{}}}],["setactiveconfig(configid",{"_index":716,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["setactiveconfig(configkey",{"_index":455,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["setappid(362606538820",{"_index":1036,"title":{},"body":{"injectables/GoogleService.html":{}}}],["setcallback(folderpick",{"_index":1042,"title":{},"body":{"injectables/GoogleService.html":{}}}],["setdeveloperkey('aizasyb",{"_index":1039,"title":{},"body":{"injectables/GoogleService.html":{}}}],["setincludefolders(tru",{"_index":1030,"title":{},"body":{"injectables/GoogleService.html":{}}}],["setinterv",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{}}}],["setitem",{"_index":1555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setoauthtoken",{"_index":1037,"title":{},"body":{"injectables/GoogleService.html":{}}}],["setownedbyme(tru",{"_index":1033,"title":{},"body":{"injectables/GoogleService.html":{}}}],["setparent('root",{"_index":1032,"title":{},"body":{"injectables/GoogleService.html":{}}}],["setselectablemimetypes('application/vnd.googl",{"_index":1040,"title":{},"body":{"injectables/GoogleService.html":{}}}],["setselectfolderenabled(tru",{"_index":1031,"title":{},"body":{"injectables/GoogleService.html":{}}}],["settimeout",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["settimeout(_",{"_index":418,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{}}}],["settings'},{'nam",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["settings.component.html",{"_index":1167,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.scss",{"_index":1166,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings_pow",{"_index":646,"title":{},"body":{"components/ConfigListComponent.html":{},"components/HomeComponent.html":{}}}],["settingscompon",{"_index":219,"title":{"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthenticatedModule.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["shall",{"_index":1457,"title":{},"body":{"license.html":{}}}],["shared/config",{"_index":576,"title":{},"body":{"components/ConfigComponent.html":{}}}],["shared/edit",{"_index":357,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["shown",{"_index":561,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["sign",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleService.html":{}}}],["signin",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleService.html":{}}}],["signout",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleService.html":{}}}],["simplist",{"_index":1274,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["site",{"_index":869,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["slidedown",{"_index":1289,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["slideleft",{"_index":1290,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["slideright",{"_index":1291,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["small",{"_index":1541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["snackbar",{"_index":904,"title":{},"body":{"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{}}}],["snapshot",{"_index":763,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["snapshot.data",{"_index":764,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["snapshot.doc",{"_index":482,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["snapshot.docs.foreach(docu",{"_index":770,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["snapshot.foreach(docu",{"_index":773,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["softwar",{"_index":1380,"title":{},"body":{"index.html":{},"license.html":{}}}],["solv",{"_index":1391,"title":{},"body":{"index.html":{}}}],["sort",{"_index":921,"title":{},"body":{"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{}}}],["sorter",{"_index":1263,"title":{},"body":{"components/UnauthenticatedComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["sorterservic",{"_index":308,"title":{"injectables/SorterService.html":{}},"body":{"modules/AuthenticatedModule.html":{},"components/HomeComponent.html":{},"injectables/SorterService.html":{},"coverage.html":{},"overview.html":{}}}],["sortusersdr",{"_index":1073,"title":{},"body":{"components/HomeComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"interfaces/UserDocument.html":{},"miscellaneous/variables.html":{}}}],["sourcefold",{"_index":515,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["sourceloc",{"_index":702,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["spec\\.t",{"_index":1503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spreadsheet",{"_index":871,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["src/.../animations.t",{"_index":1496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.component.t",{"_index":1499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../drive",{"_index":1366,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.prod.t",{"_index":1495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":1494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../google.service.t",{"_index":1367,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../jestglobalmocks.t",{"_index":1500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../new",{"_index":1493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../presets.t",{"_index":1501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../settings.component.t",{"_index":1497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../sorter.service.t",{"_index":1498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.t",{"_index":1492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/animations.t",{"_index":1285,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.ts:120",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:143",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:147",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:151",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:162",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:31",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:33",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:34",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:35",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:36",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:37",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:38",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:39",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:52",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/classes/config",{"_index":490,"title":{},"body":{"classes/ConfigBuilder.html":{},"coverage.html":{}}}],["src/app/classes/dr",{"_index":775,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/components/auth/unauthenticated/unauthenticated.component.t",{"_index":1253,"title":{},"body":{"components/UnauthenticatedComponent.html":{},"coverage.html":{}}}],["src/app/components/auth/unauthenticated/unauthenticated.component.ts:15",{"_index":1258,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["src/app/components/auth/unauthenticated/unauthenticated.component.ts:21",{"_index":1261,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["src/app/components/auth/unauthenticated/unauthenticated.component.ts:28",{"_index":1259,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["src/app/components/shared/config",{"_index":1297,"title":{},"body":{"coverage.html":{}}}],["src/app/components/shared/edit",{"_index":1300,"title":{},"body":{"coverage.html":{}}}],["src/app/components/shared/fold",{"_index":888,"title":{},"body":{"components/FolderCreationComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/new",{"_index":1303,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/tabs/config/config",{"_index":344,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"coverage.html":{}}}],["src/app/components/tabs/config/config.component.t",{"_index":560,"title":{},"body":{"components/ConfigComponent.html":{},"coverage.html":{}}}],["src/app/components/tabs/config/config.component.ts:22",{"_index":575,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/components/tabs/config/config.component.ts:24",{"_index":569,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/components/tabs/config/config.component.ts:37",{"_index":573,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/components/tabs/config/config.component.ts:46",{"_index":571,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/components/tabs/config/config.component.ts:50",{"_index":572,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/components/tabs/config/config.component.ts:54",{"_index":570,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/components/tabs/config/config.component.ts:65",{"_index":574,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/components/tabs/config/preset",{"_index":1094,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"coverage.html":{}}}],["src/app/components/tabs/config/presets.t",{"_index":1314,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/tabs/home/home.component.t",{"_index":1067,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/components/tabs/home/home.component.ts:20",{"_index":1079,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/tabs/home/home.component.ts:21",{"_index":1075,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/tabs/home/home.component.ts:40",{"_index":1077,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/tabs/home/home.component.ts:59",{"_index":1078,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/tabs/home/home.component.ts:67",{"_index":1076,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/tabs/settings/settings.component.t",{"_index":1165,"title":{},"body":{"components/SettingsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/tabs/settings/settings.component.ts:23",{"_index":1169,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/components/tabs/settings/settings.component.ts:33",{"_index":1170,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/components/tabs/settings/settings.component.ts:37",{"_index":1171,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/authenticated/authenticated.module.t",{"_index":309,"title":{},"body":{"modules/AuthenticatedModule.html":{}}}],["src/app/modules/config/config",{"_index":674,"title":{},"body":{"modules/ConfigRoutingModule.html":{}}}],["src/app/modules/config/config.module.t",{"_index":657,"title":{},"body":{"modules/ConfigModule.html":{}}}],["src/app/pipes/un",{"_index":1244,"title":{},"body":{"pipes/UnNamedPipe.html":{},"coverage.html":{}}}],["src/app/services/auth/auth",{"_index":285,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{},"coverage.html":{}}}],["src/app/services/firebase/database.service.t",{"_index":681,"title":{},"body":{"injectables/DatabaseService.html":{},"coverage.html":{}}}],["src/app/services/firebase/database.service.ts:103",{"_index":706,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/firebase/database.service.ts:118",{"_index":717,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/firebase/database.service.ts:134",{"_index":719,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/firebase/database.service.ts:144",{"_index":712,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/firebase/database.service.ts:153",{"_index":709,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/firebase/database.service.ts:167",{"_index":715,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/firebase/database.service.ts:177",{"_index":700,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/firebase/database.service.ts:21",{"_index":730,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/firebase/database.service.ts:22",{"_index":722,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/firebase/database.service.ts:23",{"_index":729,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/firebase/database.service.ts:25",{"_index":721,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/firebase/database.service.ts:26",{"_index":724,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/firebase/database.service.ts:28",{"_index":732,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/firebase/database.service.ts:30",{"_index":726,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/firebase/database.service.ts:31",{"_index":727,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/firebase/database.service.ts:32",{"_index":731,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/firebase/database.service.ts:34",{"_index":696,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/firebase/database.service.ts:41",{"_index":713,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/firebase/database.service.ts:60",{"_index":704,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/firebase/database.service.ts:87",{"_index":698,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/google/google.service.t",{"_index":951,"title":{},"body":{"injectables/GoogleService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/google/google.service.ts:110",{"_index":986,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:120",{"_index":969,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:133",{"_index":989,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:142",{"_index":992,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:154",{"_index":975,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:158",{"_index":983,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:168",{"_index":973,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:183",{"_index":967,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:202",{"_index":988,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:216",{"_index":985,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:47",{"_index":993,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:54",{"_index":999,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:56",{"_index":965,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:73",{"_index":980,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/sorter/sorter.service.t",{"_index":1176,"title":{},"body":{"injectables/SorterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/sorter/sorter.service.ts:125",{"_index":1183,"title":{},"body":{"injectables/SorterService.html":{}}}],["src/app/services/sorter/sorter.service.ts:131",{"_index":1185,"title":{},"body":{"injectables/SorterService.html":{}}}],["src/app/services/sorter/sorter.service.ts:142",{"_index":1186,"title":{},"body":{"injectables/SorterService.html":{}}}],["src/app/services/sorter/sorter.service.ts:22",{"_index":1179,"title":{},"body":{"injectables/SorterService.html":{}}}],["src/app/services/sorter/sorter.service.ts:34",{"_index":1181,"title":{},"body":{"injectables/SorterService.html":{}}}],["src/environments/environment.prod.t",{"_index":1325,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":1326,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/interfaces.t",{"_index":602,"title":{},"body":{"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/RuleInterface.html":{},"interfaces/UserDocument.html":{},"coverage.html":{}}}],["src/jestglobalmocks.t",{"_index":1330,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.t",{"_index":1332,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":1368,"title":{"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["startat(this.calculatestart(pag",{"_index":479,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["state",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"modules/ConfigRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["statement",{"_index":1284,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":341,"title":{},"body":{"modules/AuthenticatedModule.html":{},"classes/ConfigBuilder.html":{},"modules/ConfigModule.html":{}}}],["statu",{"_index":970,"title":{},"body":{"injectables/GoogleService.html":{}}}],["stem",{"_index":1138,"title":{},"body":{"components/PresetConfigComponent.html":{},"miscellaneous/variables.html":{}}}],["stepper'},{'nam",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["stepper.compon",{"_index":668,"title":{},"body":{"modules/ConfigModule.html":{}}}],["stepper.component.t",{"_index":1305,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stepper/new",{"_index":667,"title":{},"body":{"modules/ConfigModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storag",{"_index":1552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storage[key",{"_index":1554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storagebucket",{"_index":1515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"interfaces/RuleInterface.html":{},"injectables/SorterService.html":{},"interfaces/UserDocument.html":{}}}],["style",{"_index":1519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["styleurl",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["subject",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["sublicens",{"_index":1448,"title":{},"body":{"license.html":{}}}],["subscrib",{"_index":997,"title":{},"body":{"injectables/GoogleService.html":{}}}],["subscribe(clos",{"_index":589,"title":{},"body":{"components/ConfigComponent.html":{}}}],["subscript",{"_index":364,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["substanti",{"_index":1458,"title":{},"body":{"license.html":{}}}],["success",{"_index":1223,"title":{},"body":{"injectables/SorterService.html":{}}}],["suffix",{"_index":611,"title":{},"body":{"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/RuleInterface.html":{},"interfaces/UserDocument.html":{}}}],["suitabl",{"_index":1276,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["suppli",{"_index":806,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["support",{"_index":1422,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1479,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":549,"title":{},"body":{"classes/ConfigBuilder.html":{},"injectables/SorterService.html":{},"miscellaneous/variables.html":{}}}],["tab",{"_index":562,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["tabl",{"_index":1335,"title":{},"body":{"coverage.html":{}}}],["tablecolumn",{"_index":383,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1334,"title":{},"body":{"coverage.html":{}}}],["tablink",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["tabsen",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["templateurl",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["test",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"miscellaneous/variables.html":{}}}],["tester",{"_index":1381,"title":{},"body":{"index.html":{}}}],["text",{"_index":552,"title":{},"body":{"classes/ConfigBuilder.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{}}}],["then(id",{"_index":1125,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["then(newfolderid",{"_index":1240,"title":{},"body":{"injectables/SorterService.html":{}}}],["then(snapshot",{"_index":481,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{}}}],["thirdparti",{"_index":877,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["this._activeconfigchanged.asobserv",{"_index":723,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this._activeconfigchanged.error(err",{"_index":756,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this._activeconfigchanged.next(configid",{"_index":755,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this._authstate.asobserv",{"_index":998,"title":{},"body":{"injectables/GoogleService.html":{}}}],["this._authstate.next(authinstance.issignedin.get",{"_index":1023,"title":{},"body":{"injectables/GoogleService.html":{}}}],["this._authstate.next(authstatu",{"_index":1026,"title":{},"body":{"injectables/GoogleService.html":{}}}],["this._closecommand.asobserv",{"_index":1107,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["this._closecommand.next(tru",{"_index":1113,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["this._configsubject.asobserv",{"_index":728,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this._configsubject.next(fals",{"_index":748,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this._configsubject.next(tru",{"_index":746,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.activeconfig",{"_index":414,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.activeconfigchangesubscript",{"_index":415,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.activeconfigchangesubscription.unsubscrib",{"_index":462,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.activeconfignam",{"_index":1082,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.appcomponent.openconfigmodal$.subscribe(open",{"_index":580,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.authent",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["this.clos",{"_index":1139,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["this.config",{"_index":1221,"title":{},"body":{"injectables/SorterService.html":{}}}],["this.config.groups.foreach(group",{"_index":1224,"title":{},"body":{"injectables/SorterService.html":{}}}],["this.configchangesubscript",{"_index":409,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.configchangesubscription.unsubscrib",{"_index":461,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.configcollect",{"_index":390,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.configcollection.ref",{"_index":477,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.configdocu",{"_index":739,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.configdocument.ref.get().then(snapshot",{"_index":762,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.configscollect",{"_index":742,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.configscollection.add(config).then",{"_index":751,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.configscollection.add(newconfig).then",{"_index":745,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.configscollection.ref.get().then(snapshot",{"_index":767,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.configsubject.asobserv",{"_index":471,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.configsubject.complet",{"_index":473,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.configsubject.next(data",{"_index":487,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.createconfigbuttonst",{"_index":175,"title":{},"body":{"components/AppComponent.html":{}}}],["this.createfold",{"_index":930,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["this.createfolder.par",{"_index":936,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["this.creationen",{"_index":1121,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["this.databas",{"_index":1136,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["this.database.activeconfigchanged.subscrib",{"_index":416,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/SorterService.html":{}}}],["this.database.clearconfigs().catch(err",{"_index":1172,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.database.clearconfigs().then",{"_index":1173,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.database.configsubject.subscrib",{"_index":410,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.database.deleteconfig(configkey",{"_index":454,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.database.editingconfig",{"_index":447,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.database.getactiveconfig(activeconfig",{"_index":413,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/HomeComponent.html":{},"injectables/SorterService.html":{}}}],["this.database.getconfig(activeconfig",{"_index":1081,"title":{},"body":{"components/HomeComponent.html":{},"injectables/SorterService.html":{}}}],["this.database.init",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{}}}],["this.database.numberconfigs(numconfig",{"_index":396,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.database.setactiveconfig(configkey",{"_index":456,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.datasourc",{"_index":394,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.datasource.loadconfig",{"_index":404,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.datasource.loadconfigs(0",{"_index":406,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.datasource.loading$.subscrib",{"_index":420,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.dialog.open(configmodalcompon",{"_index":585,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.dialog.open(editconfigmodalcompon",{"_index":449,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.dialog.open(presetconfigcompon",{"_index":432,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.editingconfig",{"_index":759,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.finish",{"_index":932,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["this.firebas",{"_index":391,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.firebase.doc",{"_index":740,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.firebase.doc(`users/${this.userid",{"_index":738,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.firebase.firestore.set",{"_index":735,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.firebaseauth.auth.currentus",{"_index":387,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{}}}],["this.firebaseauth.auth.currentuser.uid",{"_index":389,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{}}}],["this.firebaseauth.auth.signinwithcredential(credential).then",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["this.firebaseauth.auth.signout",{"_index":1046,"title":{},"body":{"injectables/GoogleService.html":{}}}],["this.getdialogwidth",{"_index":430,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.getfileinfo(fileid",{"_index":1061,"title":{},"body":{"injectables/GoogleService.html":{}}}],["this.googl",{"_index":1123,"title":{},"body":{"components/PresetConfigComponent.html":{},"injectables/SorterService.html":{}}}],["this.google.authstate$.subscribe(st",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["this.google.folderpicked$.subscrib",{"_index":934,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["this.google.getauthstatu",{"_index":302,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{}}}],["this.google.gettoken",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["this.google.init",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["this.google.listfiles(this.getdrivequery(group",{"_index":1225,"title":{},"body":{"injectables/SorterService.html":{}}}],["this.google.listfiles(this.getuntitledfiles(group.sourc",{"_index":1234,"title":{},"body":{"injectables/SorterService.html":{}}}],["this.google.movefil",{"_index":1230,"title":{},"body":{"injectables/SorterService.html":{}}}],["this.google.movefile(file.id",{"_index":1241,"title":{},"body":{"injectables/SorterService.html":{}}}],["this.google.openfilepick",{"_index":940,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["this.google.renamefile(file.id",{"_index":1235,"title":{},"body":{"injectables/SorterService.html":{}}}],["this.google.signin",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["this.google.signout",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/SettingsComponent.html":{}}}],["this.init",{"_index":583,"title":{},"body":{"components/ConfigComponent.html":{},"injectables/DatabaseService.html":{}}}],["this.inputfold",{"_index":931,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["this.isactiveconfig",{"_index":1083,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.load",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.loadconfig",{"_index":1187,"title":{},"body":{"injectables/SorterService.html":{}}}],["this.loaderremov",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadingsubject.asobserv",{"_index":466,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.loadingsubject.complet",{"_index":474,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.loadingsubject.next(fals",{"_index":488,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.loadingsubject.next(tru",{"_index":476,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.loadingsubscript",{"_index":419,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.loadingsubscription.unsubscrib",{"_index":459,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.noconfig",{"_index":399,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.oldpages",{"_index":402,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.openconfigmodal.asobserv",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["this.openconfigmodal.next(tru",{"_index":183,"title":{},"body":{"components/AppComponent.html":{}}}],["this.openconfigmodallisten",{"_index":579,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.openconfigmodallistener.unsubscrib",{"_index":584,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.opennewconfigdialog",{"_index":582,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.pagin",{"_index":395,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.paginator.length",{"_index":408,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.paginator.page.subscrib",{"_index":401,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.paginator.pageindex",{"_index":405,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.paginator.pages",{"_index":403,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.paginatorsubscript",{"_index":400,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.paginatorsubscription.unsubscrib",{"_index":460,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.parentfolderisroot",{"_index":942,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["this.queri",{"_index":880,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["this.refreshconfig",{"_index":411,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.rlasaf",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.events.subscribe(ev",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navig",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{}}}],["this.router.navigate(['/app/config/cr",{"_index":591,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.router.navigate(['/app/config/edit",{"_index":450,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.router.navigate(['/app/config/preset",{"_index":444,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.router.navigate(['/app/hom",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{}}}],["this.router.navigatebyurl('/app/config",{"_index":1091,"title":{},"body":{"components/HomeComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["this.setactiveconfig",{"_index":453,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.snackbar.open('googl",{"_index":1087,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.snackbar.open('ther",{"_index":1140,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["this.sorterservice.sort().then",{"_index":1086,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.tabsen",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["this.userdoc",{"_index":737,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.userdoc.collect",{"_index":743,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.userid",{"_index":388,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{}}}],["this.valid",{"_index":929,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["this.valueattributes.foreach(attribut",{"_index":946,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["this.zone.run",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{}}}],["timestampsinsnapshot",{"_index":736,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["titl",{"_index":1192,"title":{},"body":{"injectables/SorterService.html":{},"miscellaneous/variables.html":{}}}],["todo",{"_index":1489,"title":{"todo.html":{}},"body":{"todo.html":{}}}],["token",{"_index":976,"title":{},"body":{"injectables/GoogleService.html":{}}}],["tort",{"_index":1476,"title":{},"body":{"license.html":{}}}],["tracker",{"_index":1419,"title":{},"body":{"index.html":{}}}],["transform",{"_index":1247,"title":{},"body":{"pipes/UnNamedPipe.html":{},"miscellaneous/variables.html":{}}}],["transform(valu",{"_index":1248,"title":{},"body":{"pipes/UnNamedPipe.html":{}}}],["transit",{"_index":1534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('act",{"_index":1524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('appconfig",{"_index":1538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('appconfigcr",{"_index":1544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('appconfigedit",{"_index":1543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('appconfigpreset",{"_index":1545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('apphom",{"_index":1537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('appset",{"_index":1540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('inact",{"_index":1522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('land",{"_index":1535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatex",{"_index":1551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatex(0",{"_index":1550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatex(100",{"_index":1549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatey(0",{"_index":1548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatey(100",{"_index":1547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trash",{"_index":800,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["trashed=fals",{"_index":881,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["tri",{"_index":648,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["trigger('createconfigfabst",{"_index":1518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigger('routertransit",{"_index":1532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"injectables/SorterService.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"interfaces/UserDocument.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["types/uuid",{"_index":1344,"title":{},"body":{"dependencies.html":{}}}],["unauthent",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["unauthenticated.component.html",{"_index":1256,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["unauthenticated.component.scss",{"_index":1255,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["unauthenticatedcompon",{"_index":221,"title":{"components/UnauthenticatedComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["undefin",{"_index":608,"title":{},"body":{"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/RuleInterface.html":{},"interfaces/UserDocument.html":{}}}],["under",{"_index":1428,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":873,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["unnam",{"_index":1246,"title":{},"body":{"pipes/UnNamedPipe.html":{}}}],["unnamedpip",{"_index":655,"title":{"pipes/UnNamedPipe.html":{}},"body":{"modules/ConfigModule.html":{},"pipes/UnNamedPipe.html":{},"coverage.html":{},"overview.html":{}}}],["untitl",{"_index":1490,"title":{},"body":{"todo.html":{}}}],["updat",{"_index":996,"title":{},"body":{"injectables/GoogleService.html":{}}}],["updateconfig",{"_index":694,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["updateconfig(newconfig",{"_index":718,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["us",{"_index":995,"title":{},"body":{"injectables/GoogleService.html":{},"components/UnauthenticatedComponent.html":{},"index.html":{},"license.html":{}}}],["useexist",{"_index":1505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":288,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/GoogleService.html":{},"injectables/PreventAuthGuardService.html":{},"components/UnauthenticatedComponent.html":{},"index.html":{}}}],["userdoc",{"_index":688,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["userdocu",{"_index":614,"title":{"interfaces/UserDocument.html":{}},"body":{"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/RuleInterface.html":{},"interfaces/UserDocument.html":{},"coverage.html":{}}}],["userid",{"_index":371,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{}}}],["users/${this.userid}/userdata/config",{"_index":741,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["util",{"_index":777,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{}}}],["uuid",{"_index":524,"title":{},"body":{"classes/ConfigBuilder.html":{},"components/PresetConfigComponent.html":{},"dependencies.html":{}}}],["v4",{"_index":523,"title":{},"body":{"classes/ConfigBuilder.html":{},"components/PresetConfigComponent.html":{}}}],["valid",{"_index":532,"title":{},"body":{"classes/ConfigBuilder.html":{},"components/FolderCreationComponent.html":{}}}],["valu",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"interfaces/RuleInterface.html":{},"pipes/UnNamedPipe.html":{},"interfaces/UserDocument.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":1252,"title":{},"body":{"pipes/UnNamedPipe.html":{}}}],["valueattribut",{"_index":896,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["valuechang",{"_index":903,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["var",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{}}}],["variabl",{"_index":1004,"title":{"miscellaneous/variables.html":{}},"body":{"injectables/GoogleService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["verifyconfig",{"_index":496,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["verifyconfig(config",{"_index":520,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["video",{"_index":875,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["view",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleService.html":{}}}],["view_list",{"_index":1267,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["viewchild",{"_index":351,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["viewchild(matpagin",{"_index":369,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["viewedbymetim",{"_index":886,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["visit",{"_index":1270,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["void",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{}}}],["warranti",{"_index":1460,"title":{},"body":{"license.html":{}}}],["way",{"_index":1393,"title":{},"body":{"index.html":{}}}],["web",{"_index":1360,"title":{},"body":{"dependencies.html":{}}}],["websit",{"_index":1271,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["whenev",{"_index":1394,"title":{},"body":{"index.html":{}}}],["whether",{"_index":295,"title":{},"body":{"injectables/AuthGuardService.html":{},"classes/DriveQueryBuilder.html":{},"injectables/PreventAuthGuardService.html":{},"license.html":{}}}],["width",{"_index":422,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"miscellaneous/variables.html":{}}}],["wilson",{"_index":1561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["window['gapi",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["without",{"_index":1441,"title":{},"body":{"license.html":{}}}],["work",{"_index":1273,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["workaround",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"miscellaneous/variables.html":{}}}],["yarn",{"_index":1408,"title":{},"body":{"index.html":{}}}],["ye",{"_index":968,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{}}}],["ye9ixt29vl_eau7bzvzv5qe17flfpzm",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleService.html":{},"miscellaneous/variables.html":{}}}],["zon",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["zone",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{}}}],["zone.j",{"_index":1362,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Base application component.\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            GoogleService\n                \n            \n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authenticated\n                            \n                            \n                                    Public\n                                createConfigButtonState\n                            \n                            \n                                    Public\n                                loaded\n                            \n                            \n                                    Private\n                                loaderRemoved\n                            \n                            \n                                    Private\n                                openConfigModal\n                            \n                            \n                                    Public\n                                openConfigModal$\n                            \n                            \n                                    Public\n                                rlaSafe\n                            \n                            \n                                    Public\n                                tabLinks\n                            \n                            \n                                    Public\n                                tabsEnabled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRouteState\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                openConfigModalFunc\n                            \n                            \n                                signIn\n                            \n                            \n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(google: GoogleService, database: DatabaseService, firebaseAuth: AngularFireAuth, router: Router, zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:52\n                            \n                        \n\n                \n                    \n                            Creates an instance of AppComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        google\n                                                  \n                                                        \n                                                                    GoogleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Declare the Google Service as google\n\n                                                        \n                                                \n                                                \n                                                        database\n                                                  \n                                                        \n                                                                    DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        firebaseAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Declare the Router as router\n\n                                                        \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Declare NgZone as zon\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRouteState\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRouteState(outlet: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:162\n                            \n                        \n\n\n                \n                    \n                            Gets the current route information.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        outlet\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The route\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:120\n                            \n                        \n\n\n                \n                    \n                            Called after the view is initalized.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openConfigModalFunc\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenConfigModalFunc()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:151\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signIn\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignIn()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:147\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:143\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authenticated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authenticated:     Boolean\n\n                    \n                \n                    \n                        \n                            Type :     Boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            createConfigButtonState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        createConfigButtonState:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'inactive'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loaded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loaded:     Boolean\n\n                    \n                \n                    \n                        \n                            Type :     Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loaderRemoved\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loaderRemoved:     Boolean\n\n                    \n                \n                    \n                        \n                            Type :     Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            openConfigModal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        openConfigModal:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            openConfigModal$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        openConfigModal$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.openConfigModal.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rlaSafe\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rlaSafe:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tabLinks\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tabLinks:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      path: 'app/home',\n      label: 'Home'\n    },\n    {\n      path: 'app/config',\n      label: 'Configuration'\n    },\n    {\n      path: 'app/settings',\n      label: 'Settings'\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tabsEnabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tabsEnabled:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import * as firebase from 'firebase/app';\nimport { AfterViewInit, Component, NgZone } from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { fabAnimation, routerAnimation } from '../animations';\nimport { GoogleService } from './services/google/google.service';\nimport { NavigationEnd, NavigationStart, Router } from '@angular/router';\nimport { DatabaseService } from './services/firebase/database.service';\nimport { AngularFireAuth } from 'angularfire2/auth';\n\n/**\n * Workaround for testing\n */\ndeclare var gapi: any;\n\n/**\n * Base application component.\n *\n * @export\n * @class AppComponent\n * @implements {AfterViewInit}\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  providers: [GoogleService],\n  animations: [routerAnimation, fabAnimation]\n})\nexport class AppComponent implements AfterViewInit {\n  private openConfigModal: Subject = new Subject();\n  private loaderRemoved: Boolean = false;\n\n  public tabsEnabled = true;\n  public loaded: Boolean = false;\n  public authenticated: Boolean;\n  public rlaSafe: boolean = false;\n  public createConfigButtonState: string = 'inactive';\n  public openConfigModal$ = this.openConfigModal.asObservable();\n  public tabLinks = [\n    {\n      path: 'app/home',\n      label: 'Home'\n    },\n    {\n      path: 'app/config',\n      label: 'Configuration'\n    },\n    {\n      path: 'app/settings',\n      label: 'Settings'\n    }\n  ];\n\n  /**\n   * Creates an instance of AppComponent.\n   * @param {GoogleService} google Declare the Google Service as google\n   * @param {Router} router Declare the Router as router\n   * @param {NgZone} zone  Declare NgZone as zon\n   * @memberof AppComponent\n   */\n  constructor(\n    private google: GoogleService,\n    private database: DatabaseService,\n    private firebaseAuth: AngularFireAuth,\n    private router: Router,\n    private zone: NgZone\n  ) {\n    const googleInitInterval = setInterval(() => {\n      if (window['gapi']) {\n        this.google.init(\n          {\n            apiKey: 'AIzaSyB-yE9IXT29Vl_eAU7bzvzv5Qe17flfpzM',\n            clientId:\n              '362606538820-om1dhhvv5d9npas7jj02mbtvi5mjksmo.apps.googleusercontent.com',\n            discoveryDocs: [\n              'https://www.googleapis.com/discovery/v1/apis/drive/v3/rest'\n            ],\n            scope: 'https://www.googleapis.com/auth/drive'\n          },\n          () => {\n            console.debug('Google initalized.');\n          }\n        );\n        this.google.authState$.subscribe(state => {\n          if (!this.loaderRemoved) {\n            this.loaded = true;\n            setTimeout(() => {\n              document.getElementById('loader').remove();\n              this.loaderRemoved = true;\n            }, 500);\n          }\n          this.authenticated = state;\n          if (state) {\n            const credential = firebase.auth.GoogleAuthProvider.credential(\n              this.google.getToken()\n            );\n            this.firebaseAuth.auth.signInWithCredential(credential).then(() => {\n              this.database.initalize();\n              console.debug('Database initalized.');\n            }, err => console.error);\n            this.zone.run(() => {\n              this.router.navigate(['/app/home']);\n            });\n          } else {\n            this.zone.run(() => {\n              this.router.navigate(['/']);\n            });\n          }\n        });\n        clearInterval(googleInitInterval);\n      }\n    }, 250);\n  }\n\n  /**\n   * Called after the view is initalized.\n   *\n   * @memberof AppComponent\n   */\n  public ngAfterViewInit() {\n    this.rlaSafe = true;\n    // Listen for route changes\n    this.router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        if (event.url === '/app/config') {\n          this.createConfigButtonState = 'active';\n        } else {\n          this.createConfigButtonState = 'inactive';\n        }\n        if (\n          event.url === '/app/config/create' ||\n          event.url === '/app/config/presets' ||\n          event.url === '/app/config/edit'\n        ) {\n          this.tabsEnabled = false;\n        } else {\n          this.tabsEnabled = true;\n        }\n      }\n    });\n  }\n\n  signOut() {\n    this.google.signOut();\n  }\n\n  signIn() {\n    this.google.signIn();\n  }\n\n  openConfigModalFunc() {\n    this.openConfigModal.next(true);\n  }\n\n  /**\n   * Gets the current route information.\n   *\n   * @param {any} outlet The route\n   * @returns\n   * @memberof AppComponent\n   */\n  getRouteState(outlet) {\n    return outlet.activatedRouteData.state;\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n    \n    \n  \n\n\n  \n    \n    \n      \n    \n    \n      \n        Sign Out\n      \n      \n        more_vert\n      \n      \n        Sign In\n      \n    \n  \n  \n    \n      \n        {{ link.label }}\n      \n    \n  \n\n\n  \n\n\n  add\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                          Sign Out                    more_vert                    Sign In                                {{ link.label }}                add'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'ConfigListComponent', 'selector': 'app-config-list'},{'name': 'ConfigModalComponent', 'selector': 'app-config-modal'},{'name': 'EditConfigModalComponent', 'selector': 'app-edit-config-modal'},{'name': 'EditConfigPageComponent', 'selector': 'app-edit-config-page'},{'name': 'FolderCreationComponent', 'selector': 'app-folder-creation'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NewConfigPageComponent', 'selector': 'app-new-rule-page'},{'name': 'NewRuleStepperComponent', 'selector': 'app-new-rule-stepper'},{'name': 'PresetConfigComponent', 'selector': 'app-preset-config'},{'name': 'PresetConfigPageComponent', 'selector': 'app-preset-config-page'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'UnauthenticatedComponent', 'selector': 'app-unauthenticated'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nUnauthenticatedComponent\n\nUnauthenticatedComponent\n\nAppModule -->\n\nUnauthenticatedComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthenticatedModule\n\nAuthenticatedModule\n\nAppModule -->\n\nAuthenticatedModule->AppModule\n\n\n\n\n\nConfigModule\n\nConfigModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nAuthGuardService\n\nAuthGuardService\n\nAppModule -->\n\nAuthGuardService->AppModule\n\n\n\n\n\nDatabaseService\n\nDatabaseService\n\nAppModule -->\n\nDatabaseService->AppModule\n\n\n\n\n\nGoogleService\n\nGoogleService\n\nAppModule -->\n\nGoogleService->AppModule\n\n\n\n\n\nPreventAuthGuardService\n\nPreventAuthGuardService\n\nAppModule -->\n\nPreventAuthGuardService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                UnauthenticatedComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthGuardService\n                            \n                            \n                                     DatabaseService\n                            \n                            \n                                     GoogleService\n                            \n                            \n                                     PreventAuthGuardService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AuthenticatedModule\n                            \n                            \n                                    ConfigModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { AngularFireAuthModule } from 'angularfire2/auth';\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\nimport { AppComponent } from './app.component';\nimport { appRoutes } from './app.routes';\nimport { AuthenticatedModule } from './modules/authenticated/authenticated.module';\nimport { AuthGuardService, PreventAuthGuardService } from './services/auth/auth-guard.service';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ConfigModule } from './modules/config/config.module';\nimport { environment } from '../environments/environment.prod';\nimport { FolderCreationComponent } from './components/shared/folder-creation/folder-creation.component';\nimport { GoogleService } from './services/google/google.service';\nimport { MatButtonModule } from '@angular/material/button';\nimport {\n  MatDialogModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatInputModule,\n  MatStepperModule,\n  MatToolbarModule\n  } from '@angular/material';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { UnauthenticatedComponent } from './components/auth/unauthenticated/unauthenticated.component';\nimport { DatabaseService } from './services/firebase/database.service';\n\n@NgModule({\n  declarations: [AppComponent, UnauthenticatedComponent],\n  imports: [\n    BrowserModule,\n    MatMenuModule,\n    MatIconModule,\n    MatTabsModule,\n    MatInputModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatToolbarModule,\n    AngularFireAuthModule,\n    AngularFirestoreModule,\n    ConfigModule.forRoot(),\n    BrowserAnimationsModule,\n    AuthenticatedModule.forRoot(),\n    RouterModule.forRoot(appRoutes),\n    AngularFireModule.initializeApp(environment.firebase)\n  ],\n  providers: [\n    DatabaseService,\n    GoogleService,\n    AuthGuardService,\n    PreventAuthGuardService,\n    AppComponent\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuardService.html":{"url":"injectables/AuthGuardService.html","title":"injectable - AuthGuardService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth/auth-guard.service.ts\n        \n\n            \n                Description\n            \n            \n                Prevent a user from accessing a route if they aren't authenticated.\n\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                google\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                zone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(google: GoogleService, router: Router, zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth/auth-guard.service.ts:13\n                            \n                        \n\n                \n                    \n                            Creates an instance of AuthGuardService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        google\n                                                  \n                                                        \n                                                                    GoogleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Declare the Google Service as google.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Declare the Router as router\n\n                                                        \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Declare NgZone as zone\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth/auth-guard.service.ts:28\n                            \n                        \n\n\n                \n                    \n                            Determines whether the user can go to the page and handle it.\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Whether or not the user can access the route\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            google\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        google:     GoogleService\n\n                    \n                \n                    \n                        \n                            Type :     GoogleService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth/auth-guard.service.ts:21\n                            \n                        \n\n                \n                    \n                        Declare the Google Service as google.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth/auth-guard.service.ts:21\n                            \n                        \n\n                \n                    \n                        Declare the Router as router\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            zone\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zone:     NgZone\n\n                    \n                \n                    \n                        \n                            Type :     NgZone\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth/auth-guard.service.ts:21\n                            \n                        \n\n                \n                    \n                        Declare NgZone as zone\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { CanActivate, Router } from '@angular/router';\nimport { GoogleService } from '../google/google.service';\nimport { Injectable, NgZone } from '@angular/core';\n\n/**\n * Prevent a user from accessing a route if they aren't authenticated.\n * \n * @export\n * @class AuthGuardService\n * @implements {CanActivate}\n */\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n/**\n * Creates an instance of AuthGuardService.\n * @param {GoogleService} google Declare the Google Service as google.\n * @param {Router} router Declare the Router as router\n * @param {NgZone} zone Declare NgZone as zone\n * @memberof AuthGuardService\n */\nconstructor(public google: GoogleService, public router: Router, public zone: NgZone) { }\n  /**\n   * Determines whether the user can go to the page and handle it.\n   * \n   * @returns {boolean} Whether or not the user can access the route\n   * @memberof AuthGuardService\n   */\n  canActivate(): boolean {\n    if (this.google.getAuthStatus()) {\n      return true;\n    }\n    this.zone.run(() => {\n      this.router.navigate(['/']);\n    });\n    return false;\n  }\n}\n\n/**\n * Prevent a user from accessing a route if they are authenticated.\n * \n * @export\n * @class PreventAuthGuardService\n * @implements {CanActivate}\n */\n@Injectable()\nexport class PreventAuthGuardService implements CanActivate {\n/**\n * Creates an instance of PreventAuthGuardService.\n * @param {GoogleService} google Declare the Google Service as google.\n * @param {Router} router Declare the Router as router\n * @param {NgZone} zone Declare NgZone as zone\n * @memberof PreventAuthGuardService\n */\nconstructor(public google: GoogleService, public router: Router, public zone: NgZone) { }\n  /**\n   * Determines whether the user can go to the page and handle it.\n   * \n   * @returns {boolean} Whether or not the user can access the route\n   * @memberof PreventAuthGuardService\n   */\n  canActivate(): boolean {\n    if (!this.google.getAuthStatus()) {\n      return true;\n    }\n    this.zone.run(() => {\n      this.router.navigate(['/app/home']);\n    });\n    return false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthenticatedModule.html":{"url":"modules/AuthenticatedModule.html","title":"module - AuthenticatedModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthenticatedModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthenticatedModule\n\n\n\ncluster_AuthenticatedModule_declarations\n\n\n\ncluster_AuthenticatedModule_imports\n\n\n\ncluster_AuthenticatedModule_exports\n\n\n\ncluster_AuthenticatedModule_providers\n\n\n\n\nConfigComponent\n\nConfigComponent\n\n\n\nAuthenticatedModule\n\nAuthenticatedModule\n\nAuthenticatedModule -->\n\nConfigComponent->AuthenticatedModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAuthenticatedModule -->\n\nHomeComponent->AuthenticatedModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nAuthenticatedModule -->\n\nSettingsComponent->AuthenticatedModule\n\n\n\n\n\nConfigComponent \n\nConfigComponent \n\nConfigComponent  -->\n\nAuthenticatedModule->ConfigComponent \n\n\n\n\n\nConfigModule\n\nConfigModule\n\nAuthenticatedModule -->\n\nConfigModule->AuthenticatedModule\n\n\n\n\n\nSorterService\n\nSorterService\n\nAuthenticatedModule -->\n\nSorterService->AuthenticatedModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/authenticated/authenticated.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Handles all authenticated components\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ConfigComponent\n                            \n                            \n                                HomeComponent\n                            \n                            \n                                SettingsComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     SorterService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ConfigModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ConfigComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ConfigComponent } from '../../components/tabs/config/config.component';\nimport { ConfigListComponent } from '../../components/tabs/config/config-list/config-list.component';\nimport { ConfigModalComponent } from '../../components/shared/config-modal/config-modal.component';\nimport { ConfigModule } from '../config/config.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HomeComponent } from '../../components/tabs/home/home.component';\nimport {\n  MatButtonModule,\n  MatCardModule,\n  MatDatepicker,\n  MatDatepickerModule,\n  MatDialogContent,\n  MatDialogModule,\n  MatExpansionModule,\n  MatFormFieldModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatSelectModule,\n  MatSnackBarModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTooltipModule\n  } from '@angular/material';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { SettingsComponent } from '../../components/tabs/settings/settings.component';\nimport { SorterService } from '../../services/sorter/sorter.service';\n\n/**\n * Handles all authenticated components\n *\n * @export\n * @class AuthenticatedModule\n */\n@NgModule({\n  declarations: [HomeComponent, ConfigComponent, SettingsComponent],\n  imports: [\n    FormsModule,\n    CommonModule,\n    MatIconModule,\n    MatListModule,\n    MatCardModule,\n    MatInputModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    ReactiveFormsModule,\n    ConfigModule.forRoot()\n  ],\n  providers: [SorterService],\n  exports: [ConfigComponent]\n})\nexport class AuthenticatedModule {\n  /**\n   * Register with the root module of the app\n   *\n   * @static\n   * @returns {ModuleWithProviders} This module\n   * @memberof AuthenticatedModule\n   */\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: AuthenticatedModule,\n      providers: []\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Config.html":{"url":"interfaces/Config.html","title":"interface - Config","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Config\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/tabs/config/config-list/config-list.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        key\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AngularFireAuth } from 'angularfire2/auth';\nimport {\n  AngularFirestore,\n  AngularFirestoreCollection\n} from 'angularfire2/firestore';\nimport { BehaviorSubject } from 'rxjs';\nimport { Component, NgZone, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ConfigComponent } from '../config.component';\nimport { createDirective } from '@angular/compiler/src/core';\nimport { DatabaseService } from '../../../../services/firebase/database.service';\nimport { DataSource } from '@angular/cdk/collections';\nimport { EditConfigModalComponent } from '../../../shared/edit-config-modal/edit-config-modal.component';\nimport {\n  MatDialog,\n  MatPaginator,\n  MatTable,\n  MatTableDataSource\n} from '@angular/material';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { PresetConfigComponent } from '../preset-config/preset-config.component';\n\nexport interface Config {\n  name: String;\n  key: String;\n}\n\n@Component({\n  selector: 'app-config-list',\n  templateUrl: './config-list.component.html',\n  styleUrls: ['./config-list.component.scss']\n})\nexport class ConfigListComponent implements OnInit, OnDestroy {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  private userID: string;\n  private configCollection;\n  private activeConfig: string;\n  private oldPageSize: number = 10;\n  private loadingSubscription: Subscription;\n  private paginatorSubscription: Subscription;\n  private configChangeSubscription: Subscription;\n  private activeConfigChangeSubscription: Subscription;\n\n  public loading: boolean = true;\n  public noConfigs: boolean = true;\n  public dataSource: ConfigDataSource;\n  public tableColumns = ['name', 'actions'];\n\n  constructor(\n    private firebaseAuth: AngularFireAuth,\n    private firebase: AngularFirestore,\n    private database: DatabaseService,\n    private dialog: MatDialog,\n    private router: Router,\n    private zone: NgZone\n  ) {}\n\n  ngOnInit() {\n    if (this.firebaseAuth.auth.currentUser) {\n      this.userID = this.firebaseAuth.auth.currentUser.uid;\n      this.configCollection = this.firebase\n        .doc(`users/${this.userID}`)\n        .collection('configs');\n      this.dataSource = new ConfigDataSource(\n        this.configCollection,\n        this.paginator\n      );\n      this.database.numberConfigs(numConfigs => {\n        if (numConfigs === 0) {\n          this.noConfigs = true;\n        } else {\n          this.noConfigs = false;\n        }\n      });\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.firebaseAuth.auth.currentUser) {\n      // Listen for page changes\n      this.paginatorSubscription = this.paginator.page.subscribe(() => {\n        if (this.oldPageSize == this.paginator.pageSize) {\n          this.dataSource.loadConfigs(\n            this.paginator.pageIndex,\n            this.paginator.pageSize\n          );\n        } else {\n          this.dataSource.loadConfigs(0, this.paginator.pageSize);\n          this.oldPageSize = this.paginator.pageSize;\n          this.paginator.pageIndex = 0;\n        }\n      });\n      // Load the configurations\n      this.dataSource.loadConfigs();\n      // Pass the number of configs to the paginator\n      this.database.numberConfigs(numConfigs => {\n        this.paginator.length = numConfigs;\n      });\n      // Listen for config changes\n      this.configChangeSubscription = this.database.configSubject.subscribe(\n        created => {\n          this.refreshConfigs();\n        }\n      );\n      // Retrive the active config\n      this.database.getActiveConfig(activeConfig => {\n        this.activeConfig = activeConfig;\n      });\n      // Listen for active config changes\n      this.activeConfigChangeSubscription = this.database.activeConfigChanged.subscribe(\n        newConfigID => {\n          this.activeConfig = newConfigID;\n        },\n        err => console.error\n      );\n      setTimeout(_ => {\n        this.loadingSubscription = this.dataSource.loading$.subscribe(\n          loading => {\n            this.loading = loading;\n          }\n        );\n      });\n    }\n  }\n\n  getDialogWidth() {\n    const width: number = document.body.clientWidth;\n    if (width >= 1280) {\n      return width / 2;\n    } else if (width >= 640) {\n      return width / 1.5;\n    } else {\n      return 0;\n    }\n  }\n\n  openPresets() {\n    let dialogWidth = this.getDialogWidth();\n    if (dialogWidth) {\n      const dialogInstance = this.dialog.open(PresetConfigComponent, {\n        width: `${dialogWidth}px`,\n        maxHeight: `${document.body.clientHeight * 0.9}px`\n      });\n      const componentInstance = dialogInstance.componentInstance;\n      let closeSubscription = componentInstance.closeCommand.subscribe(\n        close => {\n          dialogInstance.close();\n          closeSubscription.unsubscribe();\n        }\n      );\n    } else {\n      this.zone.run(() => {\n        this.router.navigate(['/app/config/presets']);\n      });\n    }\n  }\n\n  refreshConfigs() {\n    this.dataSource.loadConfigs();\n    this.database.numberConfigs(numConfigs => {\n      if (numConfigs === 0) {\n        this.noConfigs = true;\n      } else {\n        this.noConfigs = false;\n      }\n    });\n  }\n\n  editConfig(configID: string) {\n    this.database.editingConfig = configID;\n    let dialogWidth = this.getDialogWidth();\n    if (dialogWidth) {\n      const dialogInstance = this.dialog.open(EditConfigModalComponent, {\n        width: `${dialogWidth}px`,\n        maxHeight: `${document.body.clientHeight * 0.9}px`\n      });\n      const componentInstance = dialogInstance.componentInstance;\n      let closeSubscription = componentInstance.closeCommand.subscribe(\n        close => {\n          dialogInstance.close();\n          closeSubscription.unsubscribe();\n        }\n      );\n    } else {\n      this.zone.run(() => {\n        this.router.navigate(['/app/config/edit']);\n      });\n    }\n  }\n\n  deleteConfig(configKey: string) {\n    if (configKey === this.activeConfig) {\n      this.setActiveConfig('');\n    }\n    this.database.deleteConfig(configKey);\n  }\n\n  setActiveConfig(configKey: string) {\n    this.database.setActiveConfig(configKey);\n  }\n\n  getActiveConfig(configKey: string): boolean {\n    return this.activeConfig === configKey ? true : false;\n  }\n\n  ngOnDestroy() {\n    if (this.loadingSubscription) this.loadingSubscription.unsubscribe();\n    if (this.paginatorSubscription) this.paginatorSubscription.unsubscribe();\n    if (this.configChangeSubscription)\n      this.configChangeSubscription.unsubscribe();\n    if (this.activeConfigChangeSubscription)\n      this.activeConfigChangeSubscription.unsubscribe();\n  }\n}\n\nexport class ConfigDataSource implements DataSource {\n  private configSubject = new BehaviorSubject([]);\n\n  private loadingSubject = new BehaviorSubject(true);\n  public loading$ = this.loadingSubject.asObservable();\n\n  constructor(private configCollection, private paginator) {}\n\n  private calculateStart(page: number, pageSize: number): number {\n    return page ? page * pageSize : 0;\n  }\n\n  connect(): Observable {\n    return this.configSubject.asObservable();\n  }\n\n  disconnect(): void {\n    this.configSubject.complete();\n    this.loadingSubject.complete();\n  }\n\n  loadConfigs(page: number = 0, pageSize: number = 10) {\n    this.loadingSubject.next(true);\n    this.configCollection.ref\n      .orderBy('name')\n      .startAt(this.calculateStart(page, pageSize))\n      .limit(pageSize)\n      .get()\n      .then(snapshot => {\n        const configs = snapshot.docs;\n        let data = [];\n        for (const config in configs) {\n          const name = configs[config].data()['name'];\n          data.push({\n            name: name,\n            key: configs[config].id\n          });\n        }\n        this.configSubject.next(data);\n        this.loadingSubject.next(false);\n      }, err => console.error);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigBuilder.html":{"url":"classes/ConfigBuilder.html","title":"class - ConfigBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/config-builder.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                addGroup\n                            \n                            \n                                    Static\n                                configFromGroup\n                            \n                            \n                                    Static\n                                folderNameBuilder\n                            \n                            \n                                    Static\n                                generateNewConfig\n                            \n                            \n                                    Static\n                                verifyConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            addGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addGroup(config: ConfigsInterface, newGroupName: string, newGroupDestination: GroupFolderInterface, newGroupSource: GroupFolderInterface, firstGroupRule: RuleInterface)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/config-builder.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    ConfigsInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        newGroupName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        newGroupDestination\n                                                        \n                                                                    GroupFolderInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        newGroupSource\n                                                        \n                                                                    GroupFolderInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        firstGroupRule\n                                                        \n                                                                    RuleInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ConfigsInterface\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            configFromGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        configFromGroup(groups: , name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/config-builder.ts:142\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        groups\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ConfigsInterface\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            folderNameBuilder\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        folderNameBuilder(createFolderConfig: FolderCreation)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/config-builder.ts:113\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createFolderConfig\n                                                        \n                                                                    FolderCreation\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            generateNewConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        generateNewConfig(configName: string, firstGroupName: string, sourceFolder: GroupFolderInterface, destinationFolder: GroupFolderInterface, createFolder: FolderCreation, firstGroupRule: RuleInterface)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/config-builder.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        firstGroupName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        sourceFolder\n                                                        \n                                                                    GroupFolderInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        destinationFolder\n                                                        \n                                                                    GroupFolderInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        createFolder\n                                                        \n                                                                    FolderCreation\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        firstGroupRule\n                                                        \n                                                                    RuleInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ConfigsInterface\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            verifyConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        verifyConfig(config: ConfigsInterface)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/config-builder.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    ConfigsInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ConfigInterface,\n  ConfigsInterface,\n  GroupFolderInterface,\n  RuleInterface,\n  FolderCreation\n} from '../../interfaces';\nimport { v4 as uuid } from 'uuid';\n\nexport class ConfigBuilder {\n  static generateNewConfig(\n    configName: string,\n    firstGroupName: string,\n    sourceFolder: GroupFolderInterface,\n    destinationFolder: GroupFolderInterface,\n    createFolder: FolderCreation,\n    firstGroupRule: RuleInterface\n  ): ConfigsInterface {\n    const configHolder: ConfigsInterface = {\n      name: configName,\n      groups: [\n        {\n          id: uuid(),\n          name: firstGroupName,\n          source: sourceFolder,\n          rules: [firstGroupRule]\n        }\n      ],\n      id: uuid()\n    };\n    if (createFolder) {\n      configHolder.groups[0].createFolder = createFolder;\n    } else {\n      configHolder.groups[0].destination = destinationFolder;\n    }\n    return configHolder;\n  }\n\n  static addGroup(\n    config: ConfigsInterface,\n    newGroupName: string,\n    newGroupDestination: GroupFolderInterface,\n    newGroupSource: GroupFolderInterface,\n    firstGroupRule: RuleInterface\n  ): ConfigsInterface {\n    const localConfig: ConfigsInterface = config;\n    localConfig.groups.push({\n      id: uuid(),\n      name: newGroupName,\n      source: newGroupSource,\n      destination: newGroupDestination,\n      rules: [firstGroupRule]\n    });\n    return localConfig;\n  }\n\n  static verifyConfig(config: ConfigsInterface): boolean {\n    let valid = true;\n    if (\n      !config.groups ||\n      !config.id ||\n      !config.name ||\n      config.name.length  {\n        if (group.createFolder) {\n          if (\n            !group.createFolder.name ||\n            !group.createFolder.parent ||\n            !group.createFolder.prefix ||\n            !group.createFolder.suffix ||\n            group.createFolder.name.value.length  {\n            if (\n              !rule.name ||\n              !rule.id ||\n              !rule.data ||\n              !rule.constraint ||\n              !rule.classifier\n            ) {\n              valid = false;\n            }\n          });\n        }\n      });\n    }\n    return valid;\n  }\n\n  static folderNameBuilder(createFolderConfig: FolderCreation): string {\n    let outputString: string = '';\n    switch (createFolderConfig.prefix.type) {\n      case 'text':\n        outputString += createFolderConfig.prefix.value;\n        break;\n      case 'date':\n        outputString += Date();\n        break;\n    }\n    switch (createFolderConfig.name.type) {\n      case 'text':\n        outputString += ` ${createFolderConfig.name.value}`;\n        break;\n      case 'date':\n        outputString += ` ${Date()}`;\n        break;\n    }\n    switch (createFolderConfig.suffix.type) {\n      case 'text':\n        outputString += ` ${createFolderConfig.suffix.value}`;\n        break;\n      case 'date':\n        outputString += ` ${Date()}`;\n        break;\n    }\n    return outputString;\n  }\n\n  static configFromGroup(groups, name: string): ConfigsInterface {\n    return {\n      id: uuid(),\n      name: name,\n      groups: groups\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfigComponent.html":{"url":"components/ConfigComponent.html","title":"component - ConfigComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfigComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tabs/config/config.component.ts\n\n\n    \n        Description\n    \n    \n        Declare component to be shown when the config tab is selected.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-config\n            \n\n            \n                styleUrls\n                config.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./config.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                initalized\n                            \n                            \n                                    Private\n                                openConfigModalListener\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getDialogWidth\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openNewConfigDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(appComponent: AppComponent, dialog: MatDialog, router: Router, zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tabs/config/config.component.ts:24\n                            \n                        \n\n                \n                    \n                            Creates an instance of ConfigComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appComponent\n                                                  \n                                                        \n                                                                    AppComponent\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getDialogWidth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getDialogWidth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openNewConfigDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenNewConfigDialog()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config.component.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            initalized\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        initalized:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            openConfigModalListener\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        openConfigModalListener:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, NgZone, OnInit, AfterViewInit, OnDestroy } from '@angular/core';\nimport { ConfigModalComponent } from '../../shared/config-modal/config-modal.component';\nimport { MatDialog } from '@angular/material';\nimport { RepositionScrollStrategy } from '@angular/cdk/overlay';\nimport { Router } from '@angular/router';\nimport { AppComponent } from '../../../app.component';\nimport { Subscription } from 'rxjs';\n/**\n * Declare component to be shown when the config tab is selected.\n * \n * @export\n * @class ConfigComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-config',\n  templateUrl: './config.component.html',\n  styleUrls: ['./config.component.scss'],\n})\nexport class ConfigComponent implements OnInit, AfterViewInit, OnDestroy {\n\n  public initalized: boolean = false;\n\n  private openConfigModalListener: Subscription;\n  \n  /**\n   * Creates an instance of ConfigComponent.\n   * @memberof ConfigComponent\n   */\n  constructor(\n    private appComponent: AppComponent,\n    private dialog: MatDialog, \n    private router: Router, \n    private zone: NgZone\n  ) { }\n\n  ngOnInit() {\n    this.openConfigModalListener = \n      this.appComponent.openConfigModal$.subscribe(open => {\n        if (open === true) {\n          this.openNewConfigDialog();\n        }\n      });\n  }\n\n  ngAfterViewInit() {\n    this.initalized = true;\n  }\n\n  ngOnDestroy() {\n    this.openConfigModalListener.unsubscribe();\n  }\n\n  public getDialogWidth() {\n    const width: number = document.body.clientWidth;\n    if (width >= 1280) {\n      return (width / 2);\n    } else if (width >= 640) {\n      return (width / 1.5);\n    } else {\n      return 0;\n    }\n  }\n\n  openNewConfigDialog() {\n    let dialogWidth = this.getDialogWidth();\n    if (dialogWidth) {\n      const dialogInstance = this.dialog.open(ConfigModalComponent, {\n        width: `${dialogWidth}px`,\n        maxHeight: `${document.body.clientHeight * .9}px`\n      });\n      const componentInstance = dialogInstance.componentInstance;\n      let dialogSubscription = \n        componentInstance\n          .closeCommand\n          .subscribe(close => {\n            dialogInstance.close();\n            dialogSubscription.unsubscribe();\n          });\n    } else {\n      this.zone.run(() => {\n        this.router.navigate(['/app/config/create']);\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'ConfigListComponent', 'selector': 'app-config-list'},{'name': 'ConfigModalComponent', 'selector': 'app-config-modal'},{'name': 'EditConfigModalComponent', 'selector': 'app-edit-config-modal'},{'name': 'EditConfigPageComponent', 'selector': 'app-edit-config-page'},{'name': 'FolderCreationComponent', 'selector': 'app-folder-creation'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NewConfigPageComponent', 'selector': 'app-new-rule-page'},{'name': 'NewRuleStepperComponent', 'selector': 'app-new-rule-stepper'},{'name': 'PresetConfigComponent', 'selector': 'app-preset-config'},{'name': 'PresetConfigPageComponent', 'selector': 'app-preset-config-page'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'UnauthenticatedComponent', 'selector': 'app-unauthenticated'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfigComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigDataSource.html":{"url":"classes/ConfigDataSource.html","title":"class - ConfigDataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigDataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/tabs/config/config-list/config-list.component.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        DataSource\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                configSubject\n                            \n                            \n                                    Public\n                                loading$\n                            \n                            \n                                    Private\n                                loadingSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                calculateStart\n                            \n                            \n                                connect\n                            \n                            \n                                disconnect\n                            \n                            \n                                loadConfigs\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configCollection: , paginator: )\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tabs/config/config-list/config-list.component.ts:222\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configCollection\n                                                  \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        paginator\n                                                  \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            configSubject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        configSubject:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject([])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:219\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loading$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loading$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.loadingSubject.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:222\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadingSubject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadingSubject:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(true)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:221\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            calculateStart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        calculateStart(page: number, pageSize: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:226\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        pageSize\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            connect\n                            \n                            \n                        \n                    \n                \n                \n                    \nconnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:230\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disconnect\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisconnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:234\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadConfigs\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadConfigs(page: number, pageSize: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:239\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                0\n                                                        \n\n                                                \n                                                \n                                                        pageSize\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                10\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { AngularFireAuth } from 'angularfire2/auth';\nimport {\n  AngularFirestore,\n  AngularFirestoreCollection\n} from 'angularfire2/firestore';\nimport { BehaviorSubject } from 'rxjs';\nimport { Component, NgZone, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ConfigComponent } from '../config.component';\nimport { createDirective } from '@angular/compiler/src/core';\nimport { DatabaseService } from '../../../../services/firebase/database.service';\nimport { DataSource } from '@angular/cdk/collections';\nimport { EditConfigModalComponent } from '../../../shared/edit-config-modal/edit-config-modal.component';\nimport {\n  MatDialog,\n  MatPaginator,\n  MatTable,\n  MatTableDataSource\n} from '@angular/material';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { PresetConfigComponent } from '../preset-config/preset-config.component';\n\nexport interface Config {\n  name: String;\n  key: String;\n}\n\n@Component({\n  selector: 'app-config-list',\n  templateUrl: './config-list.component.html',\n  styleUrls: ['./config-list.component.scss']\n})\nexport class ConfigListComponent implements OnInit, OnDestroy {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  private userID: string;\n  private configCollection;\n  private activeConfig: string;\n  private oldPageSize: number = 10;\n  private loadingSubscription: Subscription;\n  private paginatorSubscription: Subscription;\n  private configChangeSubscription: Subscription;\n  private activeConfigChangeSubscription: Subscription;\n\n  public loading: boolean = true;\n  public noConfigs: boolean = true;\n  public dataSource: ConfigDataSource;\n  public tableColumns = ['name', 'actions'];\n\n  constructor(\n    private firebaseAuth: AngularFireAuth,\n    private firebase: AngularFirestore,\n    private database: DatabaseService,\n    private dialog: MatDialog,\n    private router: Router,\n    private zone: NgZone\n  ) {}\n\n  ngOnInit() {\n    if (this.firebaseAuth.auth.currentUser) {\n      this.userID = this.firebaseAuth.auth.currentUser.uid;\n      this.configCollection = this.firebase\n        .doc(`users/${this.userID}`)\n        .collection('configs');\n      this.dataSource = new ConfigDataSource(\n        this.configCollection,\n        this.paginator\n      );\n      this.database.numberConfigs(numConfigs => {\n        if (numConfigs === 0) {\n          this.noConfigs = true;\n        } else {\n          this.noConfigs = false;\n        }\n      });\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.firebaseAuth.auth.currentUser) {\n      // Listen for page changes\n      this.paginatorSubscription = this.paginator.page.subscribe(() => {\n        if (this.oldPageSize == this.paginator.pageSize) {\n          this.dataSource.loadConfigs(\n            this.paginator.pageIndex,\n            this.paginator.pageSize\n          );\n        } else {\n          this.dataSource.loadConfigs(0, this.paginator.pageSize);\n          this.oldPageSize = this.paginator.pageSize;\n          this.paginator.pageIndex = 0;\n        }\n      });\n      // Load the configurations\n      this.dataSource.loadConfigs();\n      // Pass the number of configs to the paginator\n      this.database.numberConfigs(numConfigs => {\n        this.paginator.length = numConfigs;\n      });\n      // Listen for config changes\n      this.configChangeSubscription = this.database.configSubject.subscribe(\n        created => {\n          this.refreshConfigs();\n        }\n      );\n      // Retrive the active config\n      this.database.getActiveConfig(activeConfig => {\n        this.activeConfig = activeConfig;\n      });\n      // Listen for active config changes\n      this.activeConfigChangeSubscription = this.database.activeConfigChanged.subscribe(\n        newConfigID => {\n          this.activeConfig = newConfigID;\n        },\n        err => console.error\n      );\n      setTimeout(_ => {\n        this.loadingSubscription = this.dataSource.loading$.subscribe(\n          loading => {\n            this.loading = loading;\n          }\n        );\n      });\n    }\n  }\n\n  getDialogWidth() {\n    const width: number = document.body.clientWidth;\n    if (width >= 1280) {\n      return width / 2;\n    } else if (width >= 640) {\n      return width / 1.5;\n    } else {\n      return 0;\n    }\n  }\n\n  openPresets() {\n    let dialogWidth = this.getDialogWidth();\n    if (dialogWidth) {\n      const dialogInstance = this.dialog.open(PresetConfigComponent, {\n        width: `${dialogWidth}px`,\n        maxHeight: `${document.body.clientHeight * 0.9}px`\n      });\n      const componentInstance = dialogInstance.componentInstance;\n      let closeSubscription = componentInstance.closeCommand.subscribe(\n        close => {\n          dialogInstance.close();\n          closeSubscription.unsubscribe();\n        }\n      );\n    } else {\n      this.zone.run(() => {\n        this.router.navigate(['/app/config/presets']);\n      });\n    }\n  }\n\n  refreshConfigs() {\n    this.dataSource.loadConfigs();\n    this.database.numberConfigs(numConfigs => {\n      if (numConfigs === 0) {\n        this.noConfigs = true;\n      } else {\n        this.noConfigs = false;\n      }\n    });\n  }\n\n  editConfig(configID: string) {\n    this.database.editingConfig = configID;\n    let dialogWidth = this.getDialogWidth();\n    if (dialogWidth) {\n      const dialogInstance = this.dialog.open(EditConfigModalComponent, {\n        width: `${dialogWidth}px`,\n        maxHeight: `${document.body.clientHeight * 0.9}px`\n      });\n      const componentInstance = dialogInstance.componentInstance;\n      let closeSubscription = componentInstance.closeCommand.subscribe(\n        close => {\n          dialogInstance.close();\n          closeSubscription.unsubscribe();\n        }\n      );\n    } else {\n      this.zone.run(() => {\n        this.router.navigate(['/app/config/edit']);\n      });\n    }\n  }\n\n  deleteConfig(configKey: string) {\n    if (configKey === this.activeConfig) {\n      this.setActiveConfig('');\n    }\n    this.database.deleteConfig(configKey);\n  }\n\n  setActiveConfig(configKey: string) {\n    this.database.setActiveConfig(configKey);\n  }\n\n  getActiveConfig(configKey: string): boolean {\n    return this.activeConfig === configKey ? true : false;\n  }\n\n  ngOnDestroy() {\n    if (this.loadingSubscription) this.loadingSubscription.unsubscribe();\n    if (this.paginatorSubscription) this.paginatorSubscription.unsubscribe();\n    if (this.configChangeSubscription)\n      this.configChangeSubscription.unsubscribe();\n    if (this.activeConfigChangeSubscription)\n      this.activeConfigChangeSubscription.unsubscribe();\n  }\n}\n\nexport class ConfigDataSource implements DataSource {\n  private configSubject = new BehaviorSubject([]);\n\n  private loadingSubject = new BehaviorSubject(true);\n  public loading$ = this.loadingSubject.asObservable();\n\n  constructor(private configCollection, private paginator) {}\n\n  private calculateStart(page: number, pageSize: number): number {\n    return page ? page * pageSize : 0;\n  }\n\n  connect(): Observable {\n    return this.configSubject.asObservable();\n  }\n\n  disconnect(): void {\n    this.configSubject.complete();\n    this.loadingSubject.complete();\n  }\n\n  loadConfigs(page: number = 0, pageSize: number = 10) {\n    this.loadingSubject.next(true);\n    this.configCollection.ref\n      .orderBy('name')\n      .startAt(this.calculateStart(page, pageSize))\n      .limit(pageSize)\n      .get()\n      .then(snapshot => {\n        const configs = snapshot.docs;\n        let data = [];\n        for (const config in configs) {\n          const name = configs[config].data()['name'];\n          data.push({\n            name: name,\n            key: configs[config].id\n          });\n        }\n        this.configSubject.next(data);\n        this.loadingSubject.next(false);\n      }, err => console.error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfigInterface.html":{"url":"interfaces/ConfigInterface.html","title":"interface - ConfigInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ConfigInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        activeConfig\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activeConfig\n                                    \n                                \n                                \n                                    \n                                        activeConfig:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AngularFirestoreCollection } from 'angularfire2/firestore';\n\nexport interface ConfigInterface {\n  activeConfig: string;\n}\n\nexport interface RuleInterface {\n  id: string;\n  name: string;\n  data?: any;\n  classifier?: string;\n  constraint?: string;\n}\n\nexport interface GroupFolderInterface {\n  name?: string;\n  renameUntitled?: boolean;\n  folderID?: string;\n}\n\nexport interface FolderCreation {\n  parent: {\n    folderID: string | undefined;\n    name: string | null;\n  };\n  prefix: {\n    type: string | null;\n    value: string;\n  };\n  name: {\n    type: string | null;\n    value: string;\n  };\n  suffix: {\n    type: string | null;\n    value: string;\n  };\n}\n\nexport interface GroupInterface {\n  id: string;\n  name: string;\n  rules: Array;\n  source: GroupFolderInterface;\n  destination?: GroupFolderInterface;\n  createFolder?: FolderCreation;\n}\n\nexport interface ConfigsInterface {\n  id: string;\n  name: string;\n  groups: Array;\n}\n\nexport interface UserDocument {\n  activeConfig: string;\n  configs: AngularFirestoreCollection;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfigListComponent.html":{"url":"components/ConfigListComponent.html","title":"component - ConfigListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfigListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tabs/config/config-list/config-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-config-list\n            \n\n            \n                styleUrls\n                config-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./config-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activeConfig\n                            \n                            \n                                    Private\n                                activeConfigChangeSubscription\n                            \n                            \n                                    Private\n                                configChangeSubscription\n                            \n                            \n                                    Private\n                                configCollection\n                            \n                            \n                                    Public\n                                dataSource\n                            \n                            \n                                    Public\n                                loading\n                            \n                            \n                                    Private\n                                loadingSubscription\n                            \n                            \n                                    Public\n                                noConfigs\n                            \n                            \n                                    Private\n                                oldPageSize\n                            \n                            \n                                paginator\n                            \n                            \n                                    Private\n                                paginatorSubscription\n                            \n                            \n                                    Public\n                                tableColumns\n                            \n                            \n                                    Private\n                                userID\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteConfig\n                            \n                            \n                                editConfig\n                            \n                            \n                                getActiveConfig\n                            \n                            \n                                getDialogWidth\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openPresets\n                            \n                            \n                                refreshConfigs\n                            \n                            \n                                setActiveConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseAuth: AngularFireAuth, firebase: AngularFirestore, database: DatabaseService, dialog: MatDialog, router: Router, zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tabs/config/config-list/config-list.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebase\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        database\n                                                  \n                                                        \n                                                                    DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteConfig(configKey: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:193\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configKey\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \neditConfig(configID: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:171\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getActiveConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetActiveConfig(configKey: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:204\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configKey\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDialogWidth\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDialogWidth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:128\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:208\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openPresets\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenPresets()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:139\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refreshConfigs\n                            \n                            \n                        \n                    \n                \n                \n                    \nrefreshConfigs()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:160\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setActiveConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetActiveConfig(configKey: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:200\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configKey\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            activeConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeConfig:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            activeConfigChangeSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeConfigChangeSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            configChangeSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        configChangeSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            configCollection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        configCollection:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dataSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dataSource:     ConfigDataSource\n\n                    \n                \n                    \n                        \n                            Type :     ConfigDataSource\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loading:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadingSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadingSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            noConfigs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        noConfigs:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            oldPageSize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        oldPageSize:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        paginator:     MatPaginator\n\n                    \n                \n                    \n                        \n                            Type :     MatPaginator\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            paginatorSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        paginatorSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tableColumns\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tableColumns:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['name', 'actions']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userID\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userID:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { AngularFireAuth } from 'angularfire2/auth';\nimport {\n  AngularFirestore,\n  AngularFirestoreCollection\n} from 'angularfire2/firestore';\nimport { BehaviorSubject } from 'rxjs';\nimport { Component, NgZone, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ConfigComponent } from '../config.component';\nimport { createDirective } from '@angular/compiler/src/core';\nimport { DatabaseService } from '../../../../services/firebase/database.service';\nimport { DataSource } from '@angular/cdk/collections';\nimport { EditConfigModalComponent } from '../../../shared/edit-config-modal/edit-config-modal.component';\nimport {\n  MatDialog,\n  MatPaginator,\n  MatTable,\n  MatTableDataSource\n} from '@angular/material';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { PresetConfigComponent } from '../preset-config/preset-config.component';\n\nexport interface Config {\n  name: String;\n  key: String;\n}\n\n@Component({\n  selector: 'app-config-list',\n  templateUrl: './config-list.component.html',\n  styleUrls: ['./config-list.component.scss']\n})\nexport class ConfigListComponent implements OnInit, OnDestroy {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  private userID: string;\n  private configCollection;\n  private activeConfig: string;\n  private oldPageSize: number = 10;\n  private loadingSubscription: Subscription;\n  private paginatorSubscription: Subscription;\n  private configChangeSubscription: Subscription;\n  private activeConfigChangeSubscription: Subscription;\n\n  public loading: boolean = true;\n  public noConfigs: boolean = true;\n  public dataSource: ConfigDataSource;\n  public tableColumns = ['name', 'actions'];\n\n  constructor(\n    private firebaseAuth: AngularFireAuth,\n    private firebase: AngularFirestore,\n    private database: DatabaseService,\n    private dialog: MatDialog,\n    private router: Router,\n    private zone: NgZone\n  ) {}\n\n  ngOnInit() {\n    if (this.firebaseAuth.auth.currentUser) {\n      this.userID = this.firebaseAuth.auth.currentUser.uid;\n      this.configCollection = this.firebase\n        .doc(`users/${this.userID}`)\n        .collection('configs');\n      this.dataSource = new ConfigDataSource(\n        this.configCollection,\n        this.paginator\n      );\n      this.database.numberConfigs(numConfigs => {\n        if (numConfigs === 0) {\n          this.noConfigs = true;\n        } else {\n          this.noConfigs = false;\n        }\n      });\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.firebaseAuth.auth.currentUser) {\n      // Listen for page changes\n      this.paginatorSubscription = this.paginator.page.subscribe(() => {\n        if (this.oldPageSize == this.paginator.pageSize) {\n          this.dataSource.loadConfigs(\n            this.paginator.pageIndex,\n            this.paginator.pageSize\n          );\n        } else {\n          this.dataSource.loadConfigs(0, this.paginator.pageSize);\n          this.oldPageSize = this.paginator.pageSize;\n          this.paginator.pageIndex = 0;\n        }\n      });\n      // Load the configurations\n      this.dataSource.loadConfigs();\n      // Pass the number of configs to the paginator\n      this.database.numberConfigs(numConfigs => {\n        this.paginator.length = numConfigs;\n      });\n      // Listen for config changes\n      this.configChangeSubscription = this.database.configSubject.subscribe(\n        created => {\n          this.refreshConfigs();\n        }\n      );\n      // Retrive the active config\n      this.database.getActiveConfig(activeConfig => {\n        this.activeConfig = activeConfig;\n      });\n      // Listen for active config changes\n      this.activeConfigChangeSubscription = this.database.activeConfigChanged.subscribe(\n        newConfigID => {\n          this.activeConfig = newConfigID;\n        },\n        err => console.error\n      );\n      setTimeout(_ => {\n        this.loadingSubscription = this.dataSource.loading$.subscribe(\n          loading => {\n            this.loading = loading;\n          }\n        );\n      });\n    }\n  }\n\n  getDialogWidth() {\n    const width: number = document.body.clientWidth;\n    if (width >= 1280) {\n      return width / 2;\n    } else if (width >= 640) {\n      return width / 1.5;\n    } else {\n      return 0;\n    }\n  }\n\n  openPresets() {\n    let dialogWidth = this.getDialogWidth();\n    if (dialogWidth) {\n      const dialogInstance = this.dialog.open(PresetConfigComponent, {\n        width: `${dialogWidth}px`,\n        maxHeight: `${document.body.clientHeight * 0.9}px`\n      });\n      const componentInstance = dialogInstance.componentInstance;\n      let closeSubscription = componentInstance.closeCommand.subscribe(\n        close => {\n          dialogInstance.close();\n          closeSubscription.unsubscribe();\n        }\n      );\n    } else {\n      this.zone.run(() => {\n        this.router.navigate(['/app/config/presets']);\n      });\n    }\n  }\n\n  refreshConfigs() {\n    this.dataSource.loadConfigs();\n    this.database.numberConfigs(numConfigs => {\n      if (numConfigs === 0) {\n        this.noConfigs = true;\n      } else {\n        this.noConfigs = false;\n      }\n    });\n  }\n\n  editConfig(configID: string) {\n    this.database.editingConfig = configID;\n    let dialogWidth = this.getDialogWidth();\n    if (dialogWidth) {\n      const dialogInstance = this.dialog.open(EditConfigModalComponent, {\n        width: `${dialogWidth}px`,\n        maxHeight: `${document.body.clientHeight * 0.9}px`\n      });\n      const componentInstance = dialogInstance.componentInstance;\n      let closeSubscription = componentInstance.closeCommand.subscribe(\n        close => {\n          dialogInstance.close();\n          closeSubscription.unsubscribe();\n        }\n      );\n    } else {\n      this.zone.run(() => {\n        this.router.navigate(['/app/config/edit']);\n      });\n    }\n  }\n\n  deleteConfig(configKey: string) {\n    if (configKey === this.activeConfig) {\n      this.setActiveConfig('');\n    }\n    this.database.deleteConfig(configKey);\n  }\n\n  setActiveConfig(configKey: string) {\n    this.database.setActiveConfig(configKey);\n  }\n\n  getActiveConfig(configKey: string): boolean {\n    return this.activeConfig === configKey ? true : false;\n  }\n\n  ngOnDestroy() {\n    if (this.loadingSubscription) this.loadingSubscription.unsubscribe();\n    if (this.paginatorSubscription) this.paginatorSubscription.unsubscribe();\n    if (this.configChangeSubscription)\n      this.configChangeSubscription.unsubscribe();\n    if (this.activeConfigChangeSubscription)\n      this.activeConfigChangeSubscription.unsubscribe();\n  }\n}\n\nexport class ConfigDataSource implements DataSource {\n  private configSubject = new BehaviorSubject([]);\n\n  private loadingSubject = new BehaviorSubject(true);\n  public loading$ = this.loadingSubject.asObservable();\n\n  constructor(private configCollection, private paginator) {}\n\n  private calculateStart(page: number, pageSize: number): number {\n    return page ? page * pageSize : 0;\n  }\n\n  connect(): Observable {\n    return this.configSubject.asObservable();\n  }\n\n  disconnect(): void {\n    this.configSubject.complete();\n    this.loadingSubject.complete();\n  }\n\n  loadConfigs(page: number = 0, pageSize: number = 10) {\n    this.loadingSubject.next(true);\n    this.configCollection.ref\n      .orderBy('name')\n      .startAt(this.calculateStart(page, pageSize))\n      .limit(pageSize)\n      .get()\n      .then(snapshot => {\n        const configs = snapshot.docs;\n        let data = [];\n        for (const config in configs) {\n          const name = configs[config].data()['name'];\n          data.push({\n            name: name,\n            key: configs[config].id\n          });\n        }\n        this.configSubject.next(data);\n        this.loadingSubject.next(false);\n      }, err => console.error);\n  }\n}\n\n    \n\n    \n        \n  Configuration's\n  \n    \n      list\n    \n    \n      refresh\n    \n  \n\n\n  \n\n\n  \n    \n    \n      Name\n      {{config.name}}\n    \n    \n      Actions\n      \n        \n          edit\n        \n        \n          settings_power\n        \n        \n          delete_forever\n        \n      \n    \n    \n    \n  \n  \n  \n  \n\nYou have no configurations try creating one!\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Configuration\\'s            list              refresh                        Name      {{config.name}}              Actions                        edit                          settings_power                          delete_forever                                  You have no configurations try creating one!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'ConfigListComponent', 'selector': 'app-config-list'},{'name': 'ConfigModalComponent', 'selector': 'app-config-modal'},{'name': 'EditConfigModalComponent', 'selector': 'app-edit-config-modal'},{'name': 'EditConfigPageComponent', 'selector': 'app-edit-config-page'},{'name': 'FolderCreationComponent', 'selector': 'app-folder-creation'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NewConfigPageComponent', 'selector': 'app-new-rule-page'},{'name': 'NewRuleStepperComponent', 'selector': 'app-new-rule-stepper'},{'name': 'PresetConfigComponent', 'selector': 'app-preset-config'},{'name': 'PresetConfigPageComponent', 'selector': 'app-preset-config-page'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'UnauthenticatedComponent', 'selector': 'app-unauthenticated'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfigListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigModule.html":{"url":"modules/ConfigModule.html","title":"module - ConfigModule","body":"\n                   \n\n\n\n\n  Modules\n  ConfigModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_declarations\n\n\n\ncluster_ConfigModule_imports\n\n\n\ncluster_ConfigModule_exports\n\n\n\n\nConfigListComponent\n\nConfigListComponent\n\n\n\nConfigModule\n\nConfigModule\n\nConfigModule -->\n\nConfigListComponent->ConfigModule\n\n\n\n\n\nConfigModalComponent\n\nConfigModalComponent\n\nConfigModule -->\n\nConfigModalComponent->ConfigModule\n\n\n\n\n\nEditConfigModalComponent\n\nEditConfigModalComponent\n\nConfigModule -->\n\nEditConfigModalComponent->ConfigModule\n\n\n\n\n\nEditConfigPageComponent\n\nEditConfigPageComponent\n\nConfigModule -->\n\nEditConfigPageComponent->ConfigModule\n\n\n\n\n\nFolderCreationComponent\n\nFolderCreationComponent\n\nConfigModule -->\n\nFolderCreationComponent->ConfigModule\n\n\n\n\n\nNewConfigPageComponent\n\nNewConfigPageComponent\n\nConfigModule -->\n\nNewConfigPageComponent->ConfigModule\n\n\n\n\n\nNewRuleStepperComponent\n\nNewRuleStepperComponent\n\nConfigModule -->\n\nNewRuleStepperComponent->ConfigModule\n\n\n\n\n\nPresetConfigComponent\n\nPresetConfigComponent\n\nConfigModule -->\n\nPresetConfigComponent->ConfigModule\n\n\n\n\n\nPresetConfigPageComponent\n\nPresetConfigPageComponent\n\nConfigModule -->\n\nPresetConfigPageComponent->ConfigModule\n\n\n\n\n\nUnNamedPipe\n\nUnNamedPipe\n\nConfigModule -->\n\nUnNamedPipe->ConfigModule\n\n\n\n\n\nConfigListComponent \n\nConfigListComponent \n\nConfigListComponent  -->\n\nConfigModule->ConfigListComponent \n\n\n\n\n\nConfigRoutingModule\n\nConfigRoutingModule\n\nConfigModule -->\n\nConfigRoutingModule->ConfigModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/config/config.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ConfigListComponent\n                            \n                            \n                                ConfigModalComponent\n                            \n                            \n                                EditConfigModalComponent\n                            \n                            \n                                EditConfigPageComponent\n                            \n                            \n                                FolderCreationComponent\n                            \n                            \n                                NewConfigPageComponent\n                            \n                            \n                                NewRuleStepperComponent\n                            \n                            \n                                PresetConfigComponent\n                            \n                            \n                                PresetConfigPageComponent\n                            \n                            \n                                UnNamedPipe\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                ConfigModalComponent\n                            \n                            \n                                EditConfigModalComponent\n                            \n                            \n                                PresetConfigComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ConfigRoutingModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ConfigListComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ConfigListComponent } from '../../components/tabs/config/config-list/config-list.component';\nimport { ConfigModalComponent } from '../../components/shared/config-modal/config-modal.component';\nimport { EditConfigModalComponent } from '../../components/shared/edit-config-modal/edit-config-modal.component';\nimport { EditConfigPageComponent } from '../../components/shared/edit-config-page/edit-config-page.component';\nimport { FolderCreationComponent } from '../../components/shared/folder-creation/folder-creation.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  MatButtonModule,\n  MatDatepickerModule,\n  MatExpansionModule,\n  MatFormFieldModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatNativeDateModule,\n  MatPaginator,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatSelectModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTooltipModule,\n  MatCardModule\n  } from '@angular/material';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { NewConfigPageComponent } from '../../components/shared/new-config-page/new-config-page.component';\nimport { NewRuleStepperComponent } from '../../components/shared/new-rule-stepper/new-rule-stepper.component';\nimport { UnNamedPipe } from '../../pipes/un-named.pipe';\nimport { PresetConfigComponent } from '../../components/tabs/config/preset-config/preset-config.component';\nimport { PresetConfigPageComponent } from '../../components/tabs/config/preset-config-page/preset-config-page.component';\nimport { ConfigRoutingModule } from './config-routing.module';\n\n@NgModule({\n  declarations: [\n    ConfigListComponent,\n    NewConfigPageComponent,\n    ConfigModalComponent,\n    NewRuleStepperComponent,\n    EditConfigModalComponent,\n    EditConfigPageComponent,\n    FolderCreationComponent,\n    PresetConfigComponent,\n    PresetConfigPageComponent,\n    UnNamedPipe\n  ],\n  imports: [\n    FormsModule,\n    CommonModule,\n    MatIconModule,\n    MatListModule,\n    MatCardModule,\n    MatInputModule,\n    MatTableModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatTooltipModule,\n    MatStepperModule,\n    MatGridListModule,\n    MatSnackBarModule,\n    MatPaginatorModule,\n    MatFormFieldModule,\n    MatExpansionModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    ReactiveFormsModule,\n    MatProgressBarModule,\n    MatSlideToggleModule,\n    ConfigRoutingModule\n  ],\n  entryComponents: [ConfigModalComponent, EditConfigModalComponent, PresetConfigComponent],\n  exports: [ConfigListComponent]\n})\nexport class ConfigModule {\n  /**\n   * Register with the root module of the app\n   *\n   * @static\n   * @returns {ModuleWithProviders} This module\n   * @memberof ConfigModule\n   */\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: ConfigModule,\n      providers: []\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigRoutingModule.html":{"url":"modules/ConfigRoutingModule.html","title":"module - ConfigRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  ConfigRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/config/config-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ConfigComponent } from '../../components/tabs/config/config.component';\nimport { NewConfigPageComponent } from '../../components/shared/new-config-page/new-config-page.component';\nimport { AuthGuardService } from '../../services/auth/auth-guard.service';\nimport { PresetConfigPageComponent } from '../../components/tabs/config/preset-config-page/preset-config-page.component';\nimport { EditConfigPageComponent } from '../../components/shared/edit-config-page/edit-config-page.component';\n\n\nconst routes: Routes = [\n  {\n    path: 'app/config',\n    component: ConfigComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      state: 'appConfig'\n    }\n  },\n  {\n    path: 'app/config/create',\n    component: NewConfigPageComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      state: 'appConfigCreate'\n    }\n  },\n  {\n    path: 'app/config/presets',\n    component: PresetConfigPageComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      state: 'appConfigPresets'\n    }\n  },\n  {\n    path: 'app/config/edit',\n    component: EditConfigPageComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      state: 'appConfigEdit'\n    }\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ConfigRoutingModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfigsInterface.html":{"url":"interfaces/ConfigsInterface.html","title":"interface - ConfigsInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ConfigsInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        groups\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        groups\n                                    \n                                \n                                \n                                    \n                                        groups:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AngularFirestoreCollection } from 'angularfire2/firestore';\n\nexport interface ConfigInterface {\n  activeConfig: string;\n}\n\nexport interface RuleInterface {\n  id: string;\n  name: string;\n  data?: any;\n  classifier?: string;\n  constraint?: string;\n}\n\nexport interface GroupFolderInterface {\n  name?: string;\n  renameUntitled?: boolean;\n  folderID?: string;\n}\n\nexport interface FolderCreation {\n  parent: {\n    folderID: string | undefined;\n    name: string | null;\n  };\n  prefix: {\n    type: string | null;\n    value: string;\n  };\n  name: {\n    type: string | null;\n    value: string;\n  };\n  suffix: {\n    type: string | null;\n    value: string;\n  };\n}\n\nexport interface GroupInterface {\n  id: string;\n  name: string;\n  rules: Array;\n  source: GroupFolderInterface;\n  destination?: GroupFolderInterface;\n  createFolder?: FolderCreation;\n}\n\nexport interface ConfigsInterface {\n  id: string;\n  name: string;\n  groups: Array;\n}\n\nexport interface UserDocument {\n  activeConfig: string;\n  configs: AngularFirestoreCollection;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseService.html":{"url":"injectables/DatabaseService.html","title":"injectable - DatabaseService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  DatabaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/firebase/database.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _activeConfigChanged\n                            \n                            \n                                    Private\n                                _configSubject\n                            \n                            \n                                    Public\n                                activeConfigChanged\n                            \n                            \n                                    Private\n                                configDocument\n                            \n                            \n                                    Private\n                                configsCollection\n                            \n                            \n                                    Public\n                                configSubject\n                            \n                            \n                                    Public\n                                editingConfig\n                            \n                            \n                                    Public\n                                initalized\n                            \n                            \n                                    Private\n                                userDoc\n                            \n                            \n                                    Public\n                                userID\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addConfig\n                            \n                            \n                                clearConfigs\n                            \n                            \n                                createConfig\n                            \n                            \n                                deleteConfig\n                            \n                            \n                                getActiveConfig\n                            \n                            \n                                getConfig\n                            \n                            \n                                initalize\n                            \n                            \n                                numberConfigs\n                            \n                            \n                                setActiveConfig\n                            \n                            \n                                updateConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebase: AngularFirestore, firebaseAuth: AngularFireAuth)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/firebase/database.service.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebase\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \naddConfig(config: ConfigsInterface)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/firebase/database.service.ts:87\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    ConfigsInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clearConfigs\n                            \n                            \n                        \n                    \n                \n                \n                    \nclearConfigs()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/firebase/database.service.ts:177\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateConfig(configName: string, firstGroupName: string, sourceLocation: GroupFolderInterface, destinationLocation: GroupFolderInterface, createFolder: FolderCreation, firstGroupRule: RuleInterface)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/firebase/database.service.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        firstGroupName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        sourceLocation\n                                                        \n                                                                    GroupFolderInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        destinationLocation\n                                                        \n                                                                    GroupFolderInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        createFolder\n                                                        \n                                                                    FolderCreation\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        firstGroupRule\n                                                        \n                                                                    RuleInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteConfig(configID: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/firebase/database.service.ts:103\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getActiveConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetActiveConfig(cb: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/firebase/database.service.ts:153\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cb\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetConfig(configID: string, cb: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/firebase/database.service.ts:144\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        cb\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initalize\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitalize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/firebase/database.service.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            numberConfigs\n                            \n                            \n                        \n                    \n                \n                \n                    \nnumberConfigs(cb: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/firebase/database.service.ts:167\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cb\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setActiveConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetActiveConfig(configID: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/firebase/database.service.ts:118\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateConfig(newConfig: ConfigsInterface)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/firebase/database.service.ts:134\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newConfig\n                                                        \n                                                                    ConfigsInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _activeConfigChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _activeConfigChanged:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/firebase/database.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _configSubject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _configSubject:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/firebase/database.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            activeConfigChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeConfigChanged:     \n\n                    \n                \n                    \n                        \n                            Default value : this._activeConfigChanged.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/firebase/database.service.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            configDocument\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        configDocument:     AngularFirestoreDocument\n\n                    \n                \n                    \n                        \n                            Type :     AngularFirestoreDocument\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/firebase/database.service.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            configsCollection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        configsCollection:     AngularFirestoreCollection\n\n                    \n                \n                    \n                        \n                            Type :     AngularFirestoreCollection\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/firebase/database.service.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            configSubject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        configSubject:     \n\n                    \n                \n                    \n                        \n                            Default value : this._configSubject.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/firebase/database.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editingConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editingConfig:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/firebase/database.service.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            initalized\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        initalized:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/firebase/database.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userDoc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userDoc:     AngularFirestoreDocument\n\n                    \n                \n                    \n                        \n                            Type :     AngularFirestoreDocument\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/firebase/database.service.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userID\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userID:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/firebase/database.service.ts:28\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { AngularFireAuth } from 'angularfire2/auth';\nimport {\n  AngularFirestore,\n  AngularFirestoreCollection,\n  AngularFirestoreDocument\n} from 'angularfire2/firestore';\nimport { ConfigBuilder } from '../../classes/config-builder';\nimport {\n  ConfigInterface,\n  ConfigsInterface,\n  GroupFolderInterface,\n  RuleInterface,\n  UserDocument,\n  FolderCreation\n} from '../../../interfaces';\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class DatabaseService {\n  public initalized = false;\n  private _configSubject = new Subject();\n  public configSubject = this._configSubject.asObservable();\n\n  private _activeConfigChanged = new Subject();\n  public activeConfigChanged = this._activeConfigChanged.asObservable();\n\n  public userID: string;\n\n  private configDocument: AngularFirestoreDocument;\n  private configsCollection: AngularFirestoreCollection;\n  private userDoc: AngularFirestoreDocument;\n\n  public editingConfig: string;\n\n  constructor(\n    private firebase: AngularFirestore,\n    private firebaseAuth: AngularFireAuth\n  ) {}\n\n  initalize(): void {\n    if (!this.initalized) {\n      this.firebase.firestore.settings({\n        timestampsInSnapshots: true\n      });\n      if (this.firebaseAuth.auth.currentUser) {\n        this.userID = this.firebaseAuth.auth.currentUser.uid;\n        this.userDoc = this.firebase.doc(`users/${this.userID}`);\n        this.configDocument = this.firebase.doc(\n          `users/${this.userID}/userData/config`\n        );\n        this.configsCollection = this.userDoc.collection(\n          'configs'\n        );\n        this.initalized = true;\n      }\n    }\n  }\n\n  createConfig(\n    configName: string,\n    firstGroupName: string,\n    sourceLocation: GroupFolderInterface,\n    destinationLocation: GroupFolderInterface,\n    createFolder: FolderCreation,\n    firstGroupRule: RuleInterface\n  ): void {\n    const newConfig = ConfigBuilder.generateNewConfig(\n      configName,\n      firstGroupName,\n      sourceLocation,\n      destinationLocation,\n      createFolder,\n      firstGroupRule\n    );\n    this.configsCollection.add(newConfig).then(\n      () => {\n        this._configSubject.next(true);\n      },\n      err => {\n        console.error(err);\n        this._configSubject.next(false);\n      }\n    );\n  }\n\n  addConfig(config: ConfigsInterface): Promise {\n    return new Promise((resolve, reject) => {\n      this.configsCollection.add(config).then(\n        () => {\n          this._configSubject.next(true);\n          resolve();\n        },\n        err => {\n          console.error(err);\n          this._configSubject.next(false);\n          reject();\n        }\n      );\n    });\n  }\n\n  deleteConfig(configID: string): void {\n    this.configsCollection\n      .doc(configID)\n      .delete()\n      .then(\n        () => {\n          this._configSubject.next(true);\n        },\n        err => {\n          console.error(err);\n          this._configSubject.next(false);\n        }\n      );\n  }\n\n  setActiveConfig(configID: string): void {\n    this.configDocument\n      .set({\n        activeConfig: configID\n      })\n      .then(\n        () => {\n          this._activeConfigChanged.next(configID);\n        },\n        err => {\n          console.error(err);\n          this._activeConfigChanged.error(err);\n        }\n      );\n  }\n\n  updateConfig(newConfig: ConfigsInterface): void {\n    this.configsCollection\n      .doc(this.editingConfig)\n      .ref.set(newConfig)\n      .then(() => {\n        this.editingConfig = '';\n        this._configSubject.next(true);\n      }, err => console.error);\n  }\n\n  getConfig(configID: string, cb: Function): void {\n    this.configsCollection\n      .doc(configID)\n      .ref.get()\n      .then(snapshot => {\n        cb(snapshot.data());\n      }, err => console.error);\n  }\n\n  getActiveConfig(cb: Function): void {\n    if (this.configDocument) {\n      this.configDocument.ref.get().then(snapshot => {\n        if (snapshot && snapshot.data()) {\n          cb(snapshot.data()['activeConfig']);\n        } else {\n          cb(null);\n        }\n      }, err => console.error);\n    } else {\n      cb(null);\n    }\n  }\n\n  numberConfigs(cb: Function): void {\n    if (this.configsCollection) {\n      this.configsCollection.ref.get().then(snapshot => {\n        cb(snapshot.docs.length);\n      });\n    } else {\n      cb(0);\n    }\n  }\n\n  clearConfigs(): Promise {\n    return new Promise((resolve, reject) => {\n      this.configsCollection.ref.get().then(snapshot => {\n        snapshot.docs.forEach(document => {\n          document.ref.delete();\n        });\n      }, err => reject);\n      this.userDoc\n        .collection('userData')\n        .ref.get()\n        .then(snapshot => {\n          snapshot.forEach(document => {\n            document.ref.delete();\n          });\n        }, err => reject);\n      resolve();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DriveQueryBuilder.html":{"url":"classes/DriveQueryBuilder.html","title":"class - DriveQueryBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DriveQueryBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/drive-query-builder.ts\n        \n\n            \n                Description\n            \n            \n                A utility class to build Google Drive query's\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                query\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createdAfter\n                            \n                            \n                                createdBefore\n                            \n                            \n                                excludesOwner\n                            \n                            \n                                excludeType\n                            \n                            \n                                fullTextContains\n                            \n                            \n                                get\n                            \n                            \n                                hasOwner\n                            \n                            \n                                modifiedAfter\n                            \n                            \n                                modifiedBefore\n                            \n                            \n                                nameContains\n                            \n                            \n                                nameExcludes\n                            \n                            \n                                openedAfter\n                            \n                            \n                                openedBefore\n                            \n                            \n                                requiresType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(parentFolderID: string, disableTrashed: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/drive-query-builder.ts:50\n                            \n                        \n\n                \n                    \n                            Creates an instance of DriveQueryBuilder.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        parentFolderID\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The ID of the folder to search in\n\n                                                        \n                                                \n                                                \n                                                        disableTrashed\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Whether or not to include file in trash\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            query\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        query:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:40\n                            \n                        \n\n                \n                    \n                        The current generated query\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAfter\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreatedAfter(date: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:139\n                            \n                        \n\n\n                \n                    \n                            Require the file to be created after the supplied date\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The date the file should be created after\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdBefore\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreatedBefore(date: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:150\n                            \n                        \n\n\n                \n                    \n                            Require the file to be created before the supplied date\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The date the file should be created before\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            excludesOwner\n                            \n                            \n                        \n                    \n                \n                \n                    \nexcludesOwner(email: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:128\n                            \n                        \n\n\n                \n                    \n                            Adds a owner exclusion to the query\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The owners email address to exclude\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            excludeType\n                            \n                            \n                        \n                    \n                \n                \n                    \nexcludeType(mimeType: DriveMimeType)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:73\n                            \n                        \n\n\n                \n                    \n                            Add a file type to ignore to the query\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        mimeType\n                                                        \n                                                                    DriveMimeType\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The file type to ignore\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fullTextContains\n                            \n                            \n                        \n                    \n                \n                \n                    \nfullTextContains(text: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:209\n                            \n                        \n\n\n                \n                    \n                            Require the document name, description, content, or indexable text to have the supplied text\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The text the document needs to have\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:48\n                            \n                        \n\n\n                \n                    \n                            Returns the current query\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The built query\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasOwner\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasOwner(email: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:117\n                            \n                        \n\n\n                \n                    \n                            Adds a owner requirement to the query\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The owners email address\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modifiedAfter\n                            \n                            \n                        \n                    \n                \n                \n                    \nmodifiedAfter(date: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:161\n                            \n                        \n\n\n                \n                    \n                            Require the file to be modified after the supplied date\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The date the file should be modified after\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modifiedBefore\n                            \n                            \n                        \n                    \n                \n                \n                    \nmodifiedBefore(date: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:172\n                            \n                        \n\n\n                \n                    \n                            Require the file to be modified before the supplied date\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The date the file should be modified before\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nameContains\n                            \n                            \n                        \n                    \n                \n                \n                    \nnameContains(string: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:95\n                            \n                        \n\n\n                \n                    \n                            Add a name content's requirement to the query\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        string\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The string the name needs\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nameExcludes\n                            \n                            \n                        \n                    \n                \n                \n                    \nnameExcludes(string: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:106\n                            \n                        \n\n\n                \n                    \n                            Add a name content's to exclude from the query\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        string\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openedAfter\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenedAfter(date: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:183\n                            \n                        \n\n\n                \n                    \n                            Require the file to be opened after the supplied date\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The date the file beeds to be opened after\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openedBefore\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenedBefore(date: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:196\n                            \n                        \n\n\n                \n                    \n                            Require the file to be opened before the supplied date\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The date the file beeds to be opened before\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requiresType\n                            \n                            \n                        \n                    \n                \n                \n                    \nrequiresType(mimeType: DriveMimeType)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:84\n                            \n                        \n\n\n                \n                    \n                            Add a file type to require to the query\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        mimeType\n                                                        \n                                                                    DriveMimeType\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The file type to require\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export enum DriveMimeType {\n  audio = 'application/vnd.google-apps.audio',\n  document = 'application/vnd.google-apps.document',\n  drawing = 'application/vnd.google-apps.drawing',\n  file = 'application/vnd.google-apps.file',\n  folder = 'application/vnd.google-apps.folder',\n  form = 'application/vnd.google-apps.form',\n  fustiontable = 'application/vnd.google-apps.fusiontable',\n  map = 'application/vnd.google-apps.map',\n  photo = 'application/vnd.google-apps.photo',\n  presentation = 'application/vnd.google-apps.presentation',\n  script = 'application/vnd.google-apps.script',\n  site = 'application/vnd.google-apps.site',\n  spreadsheet = 'application/vnd.google-apps.spreadsheet',\n  unknown = 'application/vnd.google-apps.unknown',\n  video = 'application/vnd.google-apps.video',\n  thirdParty = 'application/vnd.google-apps.drive-sdk'\n}\n\n/**\n * A utility class to build Google Drive query's\n *\n * @export\n * @class DriveQueryBuilder\n */\nexport class DriveQueryBuilder {\n  /**\n   * The current generated query\n   *\n   * @private\n   * @type {string}\n   * @memberof DriveQueryBuilder\n   */\n  private query: string = '';\n\n  /**\n   * Returns the current query\n   *\n   * @returns {string} The built query\n   * @memberof DriveQueryBuilder\n   */\n  get(): string {\n    return this.query;\n  }\n\n  /**\n   * Creates an instance of DriveQueryBuilder.\n   * @param {string} parentFolderID The ID of the folder to search in\n   * @param {boolean} disableTrashed Whether or not to include file in trash\n   * @memberof DriveQueryBuilder\n   */\n  constructor(parentFolderID: string, disableTrashed: boolean) {\n    if (parentFolderID) {\n      this.query += `'${parentFolderID}' in parents`;\n    }\n    if (disableTrashed) {\n      this.query += ' and trashed=false';\n    }\n  }\n\n  /**\n   * Add a file type to ignore to the query\n   *\n   * @param {DriveMimeType} mimeType The file type to ignore\n   * @memberof DriveQueryBuilder\n   */\n  excludeType(mimeType: DriveMimeType): DriveQueryBuilder {\n    this.query += ` and mimeType != '${mimeType}'`;\n    return this;\n  }\n\n  /**\n   * Add a file type to require to the query\n   *\n   * @param {DriveMimeType} mimeType The file type to require\n   * @memberof DriveQueryBuilder\n   */\n  requiresType(mimeType: DriveMimeType): DriveQueryBuilder {\n    this.query += ` and mimeType = '${mimeType}'`;\n    return this;\n  }\n\n  /**\n   * Add a name content's requirement to the query\n   *\n   * @param {string} string The string the name needs\n   * @memberof DriveQueryBuilder\n   */\n  nameContains(string: string): DriveQueryBuilder {\n    this.query += ` and name contains '${string}'`;\n    return this;\n  }\n\n  /**\n   * Add a name content's to exclude from the query\n   *\n   * @param {string} string\n   * @memberof DriveQueryBuilder\n   */\n  nameExcludes(string: string): DriveQueryBuilder {\n    this.query += ` and not name contains '${string}'`;\n    return this;\n  }\n\n  /**\n   * Adds a owner requirement to the query\n   *\n   * @param {string} email The owners email address\n   * @memberof DriveQueryBuilder\n   */\n  hasOwner(email: string): DriveQueryBuilder {\n    this.query += ` and ${email} in owners`;\n    return this;\n  }\n\n  /**\n   * Adds a owner exclusion to the query\n   *\n   * @param {string} email The owners email address to exclude\n   * @memberof DriveQueryBuilder\n   */\n  excludesOwner(email: string): DriveQueryBuilder {\n    this.query += ` and not ${email} in  owners`;\n    return this;\n  }\n\n  /**\n   * Require the file to be created after the supplied date\n   *\n   * @param {Date} date The date the file should be created after\n   * @memberof DriveQueryBuilder\n   */\n  createdAfter(date: Date): DriveQueryBuilder {\n    this.query += ` and createdTime >= '${date.toISOString().split('.')[0]}'`;\n    return this;\n  }\n\n  /**\n   * Require the file to be created before the supplied date\n   *\n   * @param {Date} date The date the file should be created before\n   * @memberof DriveQueryBuilder\n   */\n  createdBefore(date: Date): DriveQueryBuilder {\n    this.query += ` and createdTime = '${date.toISOString().split('.')[0]}'`;\n    return this;\n  }\n\n  /**\n   * Require the file to be modified before the supplied date\n   *\n   * @param {Date} date The date the file should be modified before\n   * @memberof DriveQueryBuilder\n   */\n  modifiedBefore(date: Date): DriveQueryBuilder {\n    this.query += ` and modifiedTime = '${\n      date.toISOString().split('.')[0]\n    }'`;\n    return this;\n  }\n\n  /**\n   * Require the file to be opened before the supplied date\n   *\n   * @param {Date} date The date the file beeds to be opened before\n   * @memberof DriveQueryBuilder\n   */\n  openedBefore(date: Date): DriveQueryBuilder {\n    this.query += ` and viewedByMeTime \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FolderCreation.html":{"url":"interfaces/FolderCreation.html","title":"interface - FolderCreation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FolderCreation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        parent\n                                \n                                \n                                        prefix\n                                \n                                \n                                        suffix\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                    \n                                \n                                \n                                    \n                                        parent:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prefix\n                                    \n                                \n                                \n                                    \n                                        prefix:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        suffix\n                                    \n                                \n                                \n                                    \n                                        suffix:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AngularFirestoreCollection } from 'angularfire2/firestore';\n\nexport interface ConfigInterface {\n  activeConfig: string;\n}\n\nexport interface RuleInterface {\n  id: string;\n  name: string;\n  data?: any;\n  classifier?: string;\n  constraint?: string;\n}\n\nexport interface GroupFolderInterface {\n  name?: string;\n  renameUntitled?: boolean;\n  folderID?: string;\n}\n\nexport interface FolderCreation {\n  parent: {\n    folderID: string | undefined;\n    name: string | null;\n  };\n  prefix: {\n    type: string | null;\n    value: string;\n  };\n  name: {\n    type: string | null;\n    value: string;\n  };\n  suffix: {\n    type: string | null;\n    value: string;\n  };\n}\n\nexport interface GroupInterface {\n  id: string;\n  name: string;\n  rules: Array;\n  source: GroupFolderInterface;\n  destination?: GroupFolderInterface;\n  createFolder?: FolderCreation;\n}\n\nexport interface ConfigsInterface {\n  id: string;\n  name: string;\n  groups: Array;\n}\n\nexport interface UserDocument {\n  activeConfig: string;\n  configs: AngularFirestoreCollection;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FolderCreationComponent.html":{"url":"components/FolderCreationComponent.html","title":"component - FolderCreationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FolderCreationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/folder-creation/folder-creation.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-folder-creation\n            \n\n            \n                styleUrls\n                folder-creation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./folder-creation.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createFolder\n                            \n                            \n                                    Public\n                                finished\n                            \n                            \n                                    Public\n                                namingOptions\n                            \n                            \n                                    Public\n                                parentFolderIsRoot\n                            \n                            \n                                    Private\n                                valueAttributes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                done\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                opened\n                            \n                            \n                                openFolderPicker\n                            \n                            \n                                reset\n                            \n                            \n                                rootToggleChange\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                inputFolder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(google: GoogleService, snackbar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:67\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        google\n                                                  \n                                                        \n                                                                    GoogleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        inputFolder\n                    \n                    \n                            \n                            Type:    FolderCreation\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:19\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:21\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            done\n                            \n                            \n                        \n                    \n                \n                \n                    \ndone()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:146\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            opened\n                            \n                            \n                        \n                    \n                \n                \n                    \nopened()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:79\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openFolderPicker\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenFolderPicker()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:85\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:153\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rootToggleChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nrootToggleChange(event: MatSlideToggleChange)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:102\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    MatSlideToggleChange\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validate\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalidate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:118\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            createFolder\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        createFolder:     FolderCreation\n\n                    \n                \n                    \n                        \n                            Type :     FolderCreation\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    parent: {\n      folderID: undefined,\n      name: null\n    },\n    prefix: {\n      type: null,\n      value: ''\n    },\n    name: {\n      type: null,\n      value: ''\n    },\n    suffix: {\n      type: null,\n      value: ''\n    }\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            finished\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        finished:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            namingOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        namingOptions:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      name: 'Text',\n      value: 'text'\n    },\n    {\n      name: 'Sorting Date',\n      value: 'date'\n    },\n    {\n      name: 'None',\n      value: 'none'\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            parentFolderIsRoot\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parentFolderIsRoot:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            valueAttributes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        valueAttributes:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['prefix', 'name', 'suffix']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:61\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  AfterViewInit,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output\n} from '@angular/core';\nimport { FolderCreation } from '../../../../interfaces';\nimport { GoogleService } from '../../../services/google/google.service';\nimport { MatSlideToggleChange, MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-folder-creation',\n  templateUrl: './folder-creation.component.html',\n  styleUrls: ['./folder-creation.component.scss']\n})\nexport class FolderCreationComponent implements AfterViewInit {\n  @Input() inputFolder: FolderCreation;\n\n  @Output() valueChange = new EventEmitter();\n\n  private valueAttributes = ['prefix', 'name', 'suffix'];\n\n  public namingOptions = [\n    {\n      name: 'Text',\n      value: 'text'\n    },\n    {\n      name: 'Sorting Date',\n      value: 'date'\n    },\n    {\n      name: 'None',\n      value: 'none'\n    }\n  ];\n  public createFolder: FolderCreation = {\n    parent: {\n      folderID: undefined,\n      name: null\n    },\n    prefix: {\n      type: null,\n      value: ''\n    },\n    name: {\n      type: null,\n      value: ''\n    },\n    suffix: {\n      type: null,\n      value: ''\n    }\n  };\n  public parentFolderIsRoot: boolean = false;\n\n  public finished: boolean = false;\n\n  public get value(): FolderCreation {\n    if (this.validate()) {\n      return this.createFolder;\n    } else {\n      return null;\n    }\n  }\n\n  constructor(private google: GoogleService, private snackbar: MatSnackBar) {}\n\n  ngAfterViewInit() {\n    if (this.inputFolder) {\n      setTimeout(_ => {\n        this.createFolder = this.inputFolder;\n      });\n    }\n  }\n\n  opened() {\n    setTimeout(_ => {\n      this.finished = false;\n    });\n  }\n\n  openFolderPicker() {\n    let folderPickedListener = this.google.folderPicked$.subscribe(\n      pickedFolder => {\n        this.createFolder.parent = {\n          folderID: pickedFolder.id,\n          name: pickedFolder.name\n        };\n        folderPickedListener.unsubscribe();\n      },\n      err => {\n        console.error(err);\n        folderPickedListener.unsubscribe();\n      }\n    );\n    this.google.openFilePicker();\n  }\n\n  rootToggleChange(event: MatSlideToggleChange) {\n    if (event.checked) {\n      this.parentFolderIsRoot = true;\n      this.createFolder.parent = {\n        folderID: 'root',\n        name: 'My Drive'\n      };\n    } else {\n      this.parentFolderIsRoot = false;\n      this.createFolder.parent = {\n        folderID: undefined,\n        name: null\n      };\n    }\n  }\n\n  validate(): boolean {\n    const folder = this.createFolder;\n    if (folder) {\n      if (folder.parent.folderID !== undefined) {\n        let anyInvalid = false;\n        let numNone = 0;\n        this.valueAttributes.forEach(attribute => {\n          if (folder[attribute].type === 'none') {\n            numNone += 1;\n          }\n          if (folder[attribute].type === 'text') {\n            if (folder[attribute].value.length \n    \n\n    \n        \n  \n    \n      \n        Folder Creation\n      \n    \n    \n      \n        \n          \n          \n            folder\n          \n        \n        My Drive\n      \n      \n        \n          \n            {{ option.name }}\n          \n        \n        \n          \n            {{ option.name }}\n          \n        \n        \n          \n            {{ option.name }}\n          \n        \n      \n      \n        \n          \n        \n        \n          \n        \n        \n          \n        \n      \n    \n    \n      Done\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Folder Creation                                                            folder                          My Drive                                          {{ option.name }}                                                {{ option.name }}                                                {{ option.name }}                                                                                                                                Done      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'ConfigListComponent', 'selector': 'app-config-list'},{'name': 'ConfigModalComponent', 'selector': 'app-config-modal'},{'name': 'EditConfigModalComponent', 'selector': 'app-edit-config-modal'},{'name': 'EditConfigPageComponent', 'selector': 'app-edit-config-page'},{'name': 'FolderCreationComponent', 'selector': 'app-folder-creation'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NewConfigPageComponent', 'selector': 'app-new-rule-page'},{'name': 'NewRuleStepperComponent', 'selector': 'app-new-rule-stepper'},{'name': 'PresetConfigComponent', 'selector': 'app-preset-config'},{'name': 'PresetConfigPageComponent', 'selector': 'app-preset-config-page'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'UnauthenticatedComponent', 'selector': 'app-unauthenticated'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FolderCreationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleService.html":{"url":"injectables/GoogleService.html","title":"injectable - GoogleService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  GoogleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/google/google.service.ts\n        \n\n            \n                Description\n            \n            \n                Utility class to handle all interacting with the Google API\n\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _authState\n                            \n                            \n                                    Public\n                                authState$\n                            \n                            \n                                    Public\n                                folderPicked$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createFolder\n                            \n                            \n                                getAuthStatus\n                            \n                            \n                                getFileInfo\n                            \n                            \n                                getToken\n                            \n                            \n                                init\n                            \n                            \n                                listFiles\n                            \n                            \n                                moveFile\n                            \n                            \n                                openFilePicker\n                            \n                            \n                                renameFile\n                            \n                            \n                                signIn\n                            \n                            \n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(database: DatabaseService, firebaseAuth: AngularFireAuth)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/google/google.service.ts:56\n                            \n                        \n\n                \n                    \n                            Creates an instance of GoogleService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        database\n                                                  \n                                                        \n                                                                    DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createFolder\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateFolder(name: string, parent?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:183\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        parent\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAuthStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAuthStatus()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:120\n                            \n                        \n\n\n                \n                    \n                            Returns the users current authentication status.\n\n\n                            \n                            \n                            \n                                Returns :     Boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFileInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFileInfo(fileID: string, fields: string, cb: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:168\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        fields\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        cb\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getToken\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:154\n                            \n                        \n\n\n                \n                    \n                            Gets the users id token\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit(config: Object, callback?: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:73\n                            \n                        \n\n\n                \n                    \n                            Initialize the Google API\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        callback\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listFiles\n                            \n                            \n                        \n                    \n                \n                \n                    \nlistFiles(query: string, cb: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:158\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        cb\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moveFile\n                            \n                            \n                        \n                    \n                \n                \n                    \nmoveFile(fileID: string, folder: string, cb: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:216\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        folder\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        cb\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openFilePicker\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenFilePicker()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:110\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            renameFile\n                            \n                            \n                        \n                    \n                \n                \n                    \nrenameFile(fileID: string, name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:202\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signIn\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignIn()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:133\n                            \n                        \n\n\n                \n                    \n                            Opens a popup allowing the user to sign in.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:142\n                            \n                        \n\n\n                \n                    \n                            Signs a user out\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _authState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _authState:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:47\n                            \n                        \n\n                \n                    \n                        Holds a subject that is used to update subscribers with the authentication status.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authState$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authState$:     \n\n                    \n                \n                    \n                        \n                            Default value : this._authState.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:54\n                            \n                        \n\n                \n                    \n                        Allows other modules / services to subscribe to the authentication status.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            folderPicked$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        folderPicked$:     \n\n                    \n                \n                    \n                        \n                            Default value : _folderPicked.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:56\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import * as firebase from 'firebase/app';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport 'firebase/auth';\nimport { DriveMimeType } from '../../classes/drive-query-builder';\nimport { DatabaseService } from '../firebase/database.service';\n\n/**\n * Workaround for testing\n */\ndeclare var gapi: any;\ndeclare var google: any;\n\n/**\n * Variable for easy reference to the authenitcation instance.\n */\nlet authInstance;\n\nlet folderPicker;\n\nlet _folderPicked = new Subject();\n\nfunction folderPicked(data: any): void {\n  if (data.action === 'picked') {\n    _folderPicked.next(data.docs[0]);\n  } else if (data.action === 'cancel') {\n    _folderPicked.error(true);\n  }\n}\n\n/**\n * Utility class to handle all interacting with the Google API\n *\n * @export\n * @class GoogleService\n */\n@Injectable()\nexport class GoogleService {\n  /**\n   * Holds a subject that is used to update subscribers with the authentication status.\n   *\n   * @private\n   * @memberof GoogleService\n   */\n  private _authState = new Subject();\n\n  /**\n   * Allows other modules / services to subscribe to the authentication status.\n   *\n   * @memberof GoogleService\n   */\n  public authState$ = this._authState.asObservable();\n\n  public folderPicked$ = _folderPicked.asObservable();\n\n  /**\n   * Creates an instance of GoogleService.\n   * @memberof GoogleService\n   */\n  constructor(\n    private database: DatabaseService,\n    private firebaseAuth: AngularFireAuth\n  ) {}\n\n  /**\n   * Initialize the Google API\n   *\n   * @param {Object} config\n   * @memberof GoogleService\n   */\n  init(config: Object, callback?: Function) {\n    gapi.load('client:auth2', () => {\n      console.debug('GAPI: Client & Auth Loaded');\n      gapi.client.init(config).then(() => {\n        authInstance = gapi.auth2.getAuthInstance();\n        authInstance.isSignedIn.listen(() => {\n          this._authState.next(authInstance.isSignedIn.get());\n        });\n        const authStatus = authInstance.isSignedIn.get();\n        this._authState.next(authStatus);\n        gapi.load('picker', () => {\n          console.debug('GAPI: Picker Loaded');\n          const view = new google.picker.DocsView(google.picker.ViewId.FOLDERS)\n            .setIncludeFolders(true)\n            .setSelectFolderEnabled(true)\n            .setParent('root')\n            .setOwnedByMe(true);\n\n          folderPicker = new google.picker.PickerBuilder()\n            .disableFeature(google.picker.Feature.SUPPORT_TEAM_DRIVES)\n            .setAppId(362606538820)\n            .setOAuthToken(\n              authInstance.currentUser.get().getAuthResponse().access_token\n            )\n            .setDeveloperKey('AIzaSyB-yE9IXT29Vl_eAU7bzvzv5Qe17flfpzM')\n            .setSelectableMimeTypes('application/vnd.google-apps.folder')\n            .addView(view)\n            .setCallback(folderPicked)\n            .build();\n          if (callback) {\n            callback();\n          }\n        });\n      }, console.error);\n    });\n  }\n\n  openFilePicker() {\n    folderPicker.setVisible(true);\n  }\n\n  /**\n   * Returns the users current authentication status.\n   *\n   * @returns {Boolean}\n   * @memberof GoogleService\n   */\n  getAuthStatus(): Boolean {\n    if (authInstance) {\n      return authInstance.isSignedIn.get();\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Opens a popup allowing the user to sign in.\n   *\n   * @memberof GoogleService\n   */\n  signIn(): void {\n    authInstance.signIn();\n  }\n\n  /**\n   * Signs a user out\n   *\n   * @memberof GoogleService\n   */\n  signOut(): void {\n    authInstance.signOut();\n    this.database.initalized = false;\n    this.firebaseAuth.auth.signOut();\n  }\n\n  /**\n   * Gets the users id token\n   *\n   * @returns {string}\n   * @memberof GoogleService\n   */\n  getToken(): string {\n    return authInstance.currentUser.get().getAuthResponse().id_token;\n  }\n\n  listFiles(query: string, cb: Function): void {\n    gapi.client.drive.files\n      .list({\n        q: query\n      })\n      .execute(resp => {\n        cb(resp);\n      });\n  }\n\n  getFileInfo(fileID: string, fields: string, cb: Function): void {\n    gapi.client.drive.files\n      .get({\n        fileId: fileID,\n        fields: fields\n      })\n      .execute(resp => {\n        if (resp.err) {\n          console.error(resp.err);\n        } else {\n          cb(resp);\n        }\n      });\n  }\n\n  createFolder(name: string, parent?: string): Promise {\n    const fileResource = {\n      name: name,\n      mimeType: DriveMimeType.folder\n    }\n    if (parent) fileResource['parents'] = [parent];\n    return new Promise((resolve, reject) => {\n      gapi.client.drive.files\n        .create({\n          resource: fileResource,\n          fields: 'id'\n        })\n        .execute(resp => {\n          if (resp.err) reject(resp.err);\n          else resolve(resp.id);\n        });\n    });\n  }\n\n  renameFile(fileID: string, name: string) {\n    return new Promise((resolve, reject) => {\n      gapi.client.drive.files.update({\n        'fileId': fileID,\n        'resource': {\n          'name': name\n        }\n      }).execute(resp => {\n        if (resp.err) reject(resp.err);\n        else resolve();\n      })\n    });\n  }\n\n  moveFile(fileID: string, folder: string, cb: Function): void {\n    this.getFileInfo(fileID, 'parents', file => {\n      const prevParents = file.parents.join(',');\n      gapi.client.drive.files\n        .update({\n          fileId: fileID,\n          addParents: folder,\n          removeParents: prevParents\n        })\n        .execute(resp => {\n          if (resp.err) {\n            console.error(resp.err);\n          } else {\n            cb(true);\n          }\n        });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GroupFolderInterface.html":{"url":"interfaces/GroupFolderInterface.html","title":"interface - GroupFolderInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GroupFolderInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        folderID\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        renameUntitled\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        folderID\n                                    \n                                \n                                \n                                    \n                                        folderID:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        renameUntitled\n                                    \n                                \n                                \n                                    \n                                        renameUntitled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AngularFirestoreCollection } from 'angularfire2/firestore';\n\nexport interface ConfigInterface {\n  activeConfig: string;\n}\n\nexport interface RuleInterface {\n  id: string;\n  name: string;\n  data?: any;\n  classifier?: string;\n  constraint?: string;\n}\n\nexport interface GroupFolderInterface {\n  name?: string;\n  renameUntitled?: boolean;\n  folderID?: string;\n}\n\nexport interface FolderCreation {\n  parent: {\n    folderID: string | undefined;\n    name: string | null;\n  };\n  prefix: {\n    type: string | null;\n    value: string;\n  };\n  name: {\n    type: string | null;\n    value: string;\n  };\n  suffix: {\n    type: string | null;\n    value: string;\n  };\n}\n\nexport interface GroupInterface {\n  id: string;\n  name: string;\n  rules: Array;\n  source: GroupFolderInterface;\n  destination?: GroupFolderInterface;\n  createFolder?: FolderCreation;\n}\n\nexport interface ConfigsInterface {\n  id: string;\n  name: string;\n  groups: Array;\n}\n\nexport interface UserDocument {\n  activeConfig: string;\n  configs: AngularFirestoreCollection;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GroupInterface.html":{"url":"interfaces/GroupInterface.html","title":"interface - GroupInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GroupInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        createFolder\n                                \n                                \n                                            Optional\n                                        destination\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        rules\n                                \n                                \n                                        source\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createFolder\n                                    \n                                \n                                \n                                    \n                                        createFolder:     FolderCreation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FolderCreation\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                    \n                                \n                                \n                                    \n                                        destination:     GroupFolderInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     GroupFolderInterface\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rules\n                                    \n                                \n                                \n                                    \n                                        rules:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:     GroupFolderInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     GroupFolderInterface\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AngularFirestoreCollection } from 'angularfire2/firestore';\n\nexport interface ConfigInterface {\n  activeConfig: string;\n}\n\nexport interface RuleInterface {\n  id: string;\n  name: string;\n  data?: any;\n  classifier?: string;\n  constraint?: string;\n}\n\nexport interface GroupFolderInterface {\n  name?: string;\n  renameUntitled?: boolean;\n  folderID?: string;\n}\n\nexport interface FolderCreation {\n  parent: {\n    folderID: string | undefined;\n    name: string | null;\n  };\n  prefix: {\n    type: string | null;\n    value: string;\n  };\n  name: {\n    type: string | null;\n    value: string;\n  };\n  suffix: {\n    type: string | null;\n    value: string;\n  };\n}\n\nexport interface GroupInterface {\n  id: string;\n  name: string;\n  rules: Array;\n  source: GroupFolderInterface;\n  destination?: GroupFolderInterface;\n  createFolder?: FolderCreation;\n}\n\nexport interface ConfigsInterface {\n  id: string;\n  name: string;\n  groups: Array;\n}\n\nexport interface UserDocument {\n  activeConfig: string;\n  configs: AngularFirestoreCollection;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tabs/home/home.component.ts\n\n\n    \n        Description\n    \n    \n        Declare a component to be shown when the home tab is selected.\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeConfigName\n                            \n                            \n                                    Public\n                                isActiveConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToConfigPage\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                sortUsersDrive\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(zone: NgZone, router: Router, snackBar: MatSnackBar, database: DatabaseService, sorterService: SorterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tabs/home/home.component.ts:21\n                            \n                        \n\n                \n                    \n                            Creates an instance of HomeComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        database\n                                                  \n                                                        \n                                                                    DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        sorterService\n                                                  \n                                                        \n                                                                    SorterService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToConfigPage\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToConfigPage()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/home/home.component.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/home/home.component.ts:40\n                            \n                        \n\n\n                \n                    \n                            Handle component initalization\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortUsersDrive\n                            \n                            \n                        \n                    \n                \n                \n                    \nsortUsersDrive()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/home/home.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            activeConfigName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeConfigName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Loading...'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/home/home.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isActiveConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isActiveConfig:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/home/home.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, NgZone, AfterViewInit } from '@angular/core';\nimport { DatabaseService } from '../../../services/firebase/database.service';\nimport { MatSnackBar } from '@angular/material';\nimport { SorterService } from '../../../services/sorter/sorter.service';\nimport { Router } from '@angular/router';\n\n/**\n * Declare a component to be shown when the home tab is selected.\n *\n * @export\n * @class HomeComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements AfterViewInit {\n  public isActiveConfig: boolean = false;\n  public activeConfigName: string = 'Loading...';\n\n  /**\n   * Creates an instance of HomeComponent.\n   * @memberof HomeComponent\n   */\n  constructor(\n    private zone: NgZone,\n    private router: Router,\n    private snackBar: MatSnackBar,\n    private database: DatabaseService,\n    private sorterService: SorterService\n  ) {}\n\n  /**\n   * Handle component initalization\n   *\n   * @memberof HomeComponent\n   */\n  ngAfterViewInit() {\n    let databaseInitalizedCheck = setInterval(() => {\n      if (this.database.initalized) {\n        this.database.getActiveConfig(activeConfig => {\n          if (activeConfig) {\n            this.database.getConfig(activeConfig, config => {\n              this.activeConfigName = config.name;\n            });\n            this.isActiveConfig = true;\n          } else {\n            this.activeConfigName = 'No active configuration!';\n            this.isActiveConfig = false;\n          }\n        });\n        clearInterval(databaseInitalizedCheck);\n      }\n    }, 750);\n  }\n\n  sortUsersDrive() {\n    this.sorterService.sort().then(() => {\n      this.snackBar.open('Google Drive sorted!', 'OK', {\n        duration: 5000\n      });\n    }, err => console.error);\n  }\n\n  goToConfigPage() {\n    this.zone.run(() => {\n      this.router.navigateByUrl('/app/config');\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      settings_power\n      Active Config\n    \n    \n      {{ activeConfigName }}\n    \n  \n  \n    \n      sort\n      Sorting\n    \n    \n      Sort Now\n    \n  \n\n\n  \n    \n      settings\n      Configuration's\n    \n    \n      Configuration's control how your Google Drive is sorted!\n    \n    \n      Go to Configuration's\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            settings_power      Active Config              {{ activeConfigName }}                  sort      Sorting              Sort Now                  settings      Configuration\\'s              Configuration\\'s control how your Google Drive is sorted!              Go to Configuration\\'s      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'ConfigListComponent', 'selector': 'app-config-list'},{'name': 'ConfigModalComponent', 'selector': 'app-config-modal'},{'name': 'EditConfigModalComponent', 'selector': 'app-edit-config-modal'},{'name': 'EditConfigPageComponent', 'selector': 'app-edit-config-page'},{'name': 'FolderCreationComponent', 'selector': 'app-folder-creation'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NewConfigPageComponent', 'selector': 'app-new-rule-page'},{'name': 'NewRuleStepperComponent', 'selector': 'app-new-rule-stepper'},{'name': 'PresetConfigComponent', 'selector': 'app-preset-config'},{'name': 'PresetConfigPageComponent', 'selector': 'app-preset-config-page'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'UnauthenticatedComponent', 'selector': 'app-unauthenticated'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PresetConfigComponent.html":{"url":"components/PresetConfigComponent.html","title":"component - PresetConfigComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PresetConfigComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tabs/config/preset-config/preset-config.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-preset-config\n            \n\n            \n                styleUrls\n                preset-config.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./preset-config.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _closeCommand\n                            \n                            \n                                    Public\n                                closeCommand\n                            \n                            \n                                    Public\n                                creationEnabled\n                            \n                            \n                                    Public\n                                isPage\n                            \n                            \n                                    Public\n                                presets\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                zone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addPreset\n                            \n                            \n                                close\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(zone: NgZone, router: Router, snackbar: MatSnackBar, google: GoogleService, database: DatabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        google\n                                                  \n                                                        \n                                                                    GoogleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        database\n                                                  \n                                                        \n                                                                    DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addPreset\n                            \n                            \n                        \n                    \n                \n                \n                    \naddPreset(presetID: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        presetID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \nclose()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _closeCommand\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _closeCommand:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            closeCommand\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        closeCommand:     \n\n                    \n                \n                    \n                        \n                            Default value : this._closeCommand.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            creationEnabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        creationEnabled:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isPage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isPage:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            presets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        presets:     \n\n                    \n                \n                    \n                        \n                            Default value : presets\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            zone\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zone:     NgZone\n\n                    \n                \n                    \n                        \n                            Type :     NgZone\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, NgZone } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { presets } from '../presets';\nimport { GoogleService } from '../../../../services/google/google.service';\nimport { v4 as uuid } from 'uuid';\nimport { ConfigBuilder } from '../../../../classes/config-builder';\nimport { DatabaseService } from '../../../../services/firebase/database.service';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-preset-config',\n  templateUrl: './preset-config.component.html',\n  styleUrls: ['./preset-config.component.scss']\n})\nexport class PresetConfigComponent implements OnInit {\n  private _closeCommand = new Subject();\n\n  public closeCommand = this._closeCommand.asObservable();\n\n  public isPage = false;\n  public presets = presets;\n  public creationEnabled = true;\n\n  constructor(\n    public zone: NgZone,\n    public router: Router,\n    private snackbar: MatSnackBar,\n    private google: GoogleService,\n    private database: DatabaseService\n  ) {}\n\n  ngOnInit() {}\n\n  close() {\n    this._closeCommand.next(true);\n  }\n\n  addPreset(presetID: string) {\n    const config = presets.find(element => {\n      return element.id === presetID;\n    });\n    const createFolders = config.data.createFolders;\n    const groups = config.data.groups;\n    const createdFolders = [];\n    let requestsSent = 0;\n    let requestsRecived = 0;\n    this.creationEnabled = false;\n    createFolders.forEach(folder => {\n      requestsSent += 1;\n      this.google\n        .createFolder(folder)\n        .then(id => {\n          requestsRecived += 1;\n          let group = groups.find(group => {\n            return group.destination.presetID === folder;\n          });\n          group.destination = {\n            folderID: id,\n            name: folder\n          };\n        })\n        .catch(err => console.error);\n    });\n    let checkInterval = setInterval(() => {\n      if (requestsSent === requestsRecived) {\n        clearInterval(checkInterval);\n        groups.forEach(group => {\n          group['id'] = uuid();\n          group.rules.forEach(rule => {\n            rule['id'] = uuid();\n          });\n        });\n        this.database\n          .addConfig(ConfigBuilder.configFromGroup(groups, 'I-STEM'))\n          .then(\n            () => {\n              this.close();\n              this.creationEnabled = true;\n            },\n            err => {\n              this.snackbar.open('There was a problem adding your preset!');\n              this.creationEnabled = true;\n            }\n          );\n      }\n    }, 100);\n  }\n}\n\n    \n\n    \n        \n  Preset Configs\n  Preset Configs\n  \n    \n      \n          \n        {{ preset.name }}\n        {{ preset.category }}\n      \n      \n        {{ preset.description }}\n      \n      \n        Add Preset\n      \n    \n    \n      Cancel\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Preset Configs  Preset Configs                              {{ preset.name }}        {{ preset.category }}                    {{ preset.description }}                    Add Preset                    Cancel      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'ConfigListComponent', 'selector': 'app-config-list'},{'name': 'ConfigModalComponent', 'selector': 'app-config-modal'},{'name': 'EditConfigModalComponent', 'selector': 'app-edit-config-modal'},{'name': 'EditConfigPageComponent', 'selector': 'app-edit-config-page'},{'name': 'FolderCreationComponent', 'selector': 'app-folder-creation'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NewConfigPageComponent', 'selector': 'app-new-rule-page'},{'name': 'NewRuleStepperComponent', 'selector': 'app-new-rule-stepper'},{'name': 'PresetConfigComponent', 'selector': 'app-preset-config'},{'name': 'PresetConfigPageComponent', 'selector': 'app-preset-config-page'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'UnauthenticatedComponent', 'selector': 'app-unauthenticated'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PresetConfigComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PresetConfigPageComponent.html":{"url":"components/PresetConfigPageComponent.html","title":"component - PresetConfigPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PresetConfigPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tabs/config/preset-config-page/preset-config-page.component.ts\n\n\n\n    \n        Extends\n    \n    \n            PresetConfigComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-preset-config-page\n            \n\n            \n                styleUrls\n                .preset-config/preset-config.component.scss\n            \n\n\n\n            \n                templateUrl\n                ../preset-config/preset-config.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isPage\n                            \n                            \n                                    Private\n                                _closeCommand\n                            \n                            \n                                    Public\n                                closeCommand\n                            \n                            \n                                    Public\n                                creationEnabled\n                            \n                            \n                                    Public\n                                isPage\n                            \n                            \n                                    Public\n                                presets\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                zone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                addPreset\n                            \n                            \n                                close\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \nclose()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config-page/preset-config-page.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addPreset\n                            \n                            \n                        \n                    \n                \n                \n                    \naddPreset(presetID: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PresetConfigComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PresetConfigComponent:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        presetID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \nclose()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PresetConfigComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PresetConfigComponent:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PresetConfigComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PresetConfigComponent:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isPage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isPage:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config-page/preset-config-page.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _closeCommand\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _closeCommand:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from     PresetConfigComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PresetConfigComponent:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            closeCommand\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        closeCommand:     \n\n                    \n                \n                    \n                        \n                            Default value : this._closeCommand.asObservable()\n                        \n                    \n                            \n                                \n                                    Inherited from     PresetConfigComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PresetConfigComponent:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            creationEnabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        creationEnabled:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                            \n                                \n                                    Inherited from     PresetConfigComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PresetConfigComponent:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isPage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isPage:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     PresetConfigComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PresetConfigComponent:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            presets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        presets:     \n\n                    \n                \n                    \n                        \n                            Default value : presets\n                        \n                    \n                            \n                                \n                                    Inherited from     PresetConfigComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PresetConfigComponent:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                            \n                                \n                                    Inherited from     PresetConfigComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PresetConfigComponent:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            zone\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zone:     NgZone\n\n                    \n                \n                    \n                        \n                            Type :     NgZone\n\n                        \n                    \n                            \n                                \n                                    Inherited from     PresetConfigComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PresetConfigComponent:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { PresetConfigComponent } from '../preset-config/preset-config.component';\n\n@Component({\n  selector: 'app-preset-config-page',\n  templateUrl: '../preset-config/preset-config.component.html',\n  styleUrls: ['../preset-config/preset-config.component.scss']\n})\nexport class PresetConfigPageComponent extends PresetConfigComponent {\n  public isPage = true;\n\n  close() {\n    this.zone.run(() => {\n      this.router.navigateByUrl('/app/config');\n    });\n  }\n}\n\n    \n\n    \n        \n  Preset Configs\n  Preset Configs\n  \n    \n      \n          \n        {{ preset.name }}\n        {{ preset.category }}\n      \n      \n        {{ preset.description }}\n      \n      \n        Add Preset\n      \n    \n    \n      Cancel\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Preset Configs  Preset Configs                              {{ preset.name }}        {{ preset.category }}                    {{ preset.description }}                    Add Preset                    Cancel      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'ConfigListComponent', 'selector': 'app-config-list'},{'name': 'ConfigModalComponent', 'selector': 'app-config-modal'},{'name': 'EditConfigModalComponent', 'selector': 'app-edit-config-modal'},{'name': 'EditConfigPageComponent', 'selector': 'app-edit-config-page'},{'name': 'FolderCreationComponent', 'selector': 'app-folder-creation'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NewConfigPageComponent', 'selector': 'app-new-rule-page'},{'name': 'NewRuleStepperComponent', 'selector': 'app-new-rule-stepper'},{'name': 'PresetConfigComponent', 'selector': 'app-preset-config'},{'name': 'PresetConfigPageComponent', 'selector': 'app-preset-config-page'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'UnauthenticatedComponent', 'selector': 'app-unauthenticated'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PresetConfigPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PreventAuthGuardService.html":{"url":"injectables/PreventAuthGuardService.html","title":"injectable - PreventAuthGuardService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  PreventAuthGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth/auth-guard.service.ts\n        \n\n            \n                Description\n            \n            \n                Prevent a user from accessing a route if they are authenticated.\n\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                google\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                zone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(google: GoogleService, router: Router, zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth/auth-guard.service.ts:47\n                            \n                        \n\n                \n                    \n                            Creates an instance of PreventAuthGuardService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        google\n                                                  \n                                                        \n                                                                    GoogleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Declare the Google Service as google.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Declare the Router as router\n\n                                                        \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Declare NgZone as zone\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth/auth-guard.service.ts:62\n                            \n                        \n\n\n                \n                    \n                            Determines whether the user can go to the page and handle it.\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Whether or not the user can access the route\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            google\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        google:     GoogleService\n\n                    \n                \n                    \n                        \n                            Type :     GoogleService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth/auth-guard.service.ts:55\n                            \n                        \n\n                \n                    \n                        Declare the Google Service as google.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth/auth-guard.service.ts:55\n                            \n                        \n\n                \n                    \n                        Declare the Router as router\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            zone\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zone:     NgZone\n\n                    \n                \n                    \n                        \n                            Type :     NgZone\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth/auth-guard.service.ts:55\n                            \n                        \n\n                \n                    \n                        Declare NgZone as zone\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { CanActivate, Router } from '@angular/router';\nimport { GoogleService } from '../google/google.service';\nimport { Injectable, NgZone } from '@angular/core';\n\n/**\n * Prevent a user from accessing a route if they aren't authenticated.\n * \n * @export\n * @class AuthGuardService\n * @implements {CanActivate}\n */\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n/**\n * Creates an instance of AuthGuardService.\n * @param {GoogleService} google Declare the Google Service as google.\n * @param {Router} router Declare the Router as router\n * @param {NgZone} zone Declare NgZone as zone\n * @memberof AuthGuardService\n */\nconstructor(public google: GoogleService, public router: Router, public zone: NgZone) { }\n  /**\n   * Determines whether the user can go to the page and handle it.\n   * \n   * @returns {boolean} Whether or not the user can access the route\n   * @memberof AuthGuardService\n   */\n  canActivate(): boolean {\n    if (this.google.getAuthStatus()) {\n      return true;\n    }\n    this.zone.run(() => {\n      this.router.navigate(['/']);\n    });\n    return false;\n  }\n}\n\n/**\n * Prevent a user from accessing a route if they are authenticated.\n * \n * @export\n * @class PreventAuthGuardService\n * @implements {CanActivate}\n */\n@Injectable()\nexport class PreventAuthGuardService implements CanActivate {\n/**\n * Creates an instance of PreventAuthGuardService.\n * @param {GoogleService} google Declare the Google Service as google.\n * @param {Router} router Declare the Router as router\n * @param {NgZone} zone Declare NgZone as zone\n * @memberof PreventAuthGuardService\n */\nconstructor(public google: GoogleService, public router: Router, public zone: NgZone) { }\n  /**\n   * Determines whether the user can go to the page and handle it.\n   * \n   * @returns {boolean} Whether or not the user can access the route\n   * @memberof PreventAuthGuardService\n   */\n  canActivate(): boolean {\n    if (!this.google.getAuthStatus()) {\n      return true;\n    }\n    this.zone.run(() => {\n      this.router.navigate(['/app/home']);\n    });\n    return false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RuleInterface.html":{"url":"interfaces/RuleInterface.html","title":"interface - RuleInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RuleInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        classifier\n                                \n                                \n                                            Optional\n                                        constraint\n                                \n                                \n                                            Optional\n                                        data\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        classifier\n                                    \n                                \n                                \n                                    \n                                        classifier:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        constraint\n                                    \n                                \n                                \n                                    \n                                        constraint:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AngularFirestoreCollection } from 'angularfire2/firestore';\n\nexport interface ConfigInterface {\n  activeConfig: string;\n}\n\nexport interface RuleInterface {\n  id: string;\n  name: string;\n  data?: any;\n  classifier?: string;\n  constraint?: string;\n}\n\nexport interface GroupFolderInterface {\n  name?: string;\n  renameUntitled?: boolean;\n  folderID?: string;\n}\n\nexport interface FolderCreation {\n  parent: {\n    folderID: string | undefined;\n    name: string | null;\n  };\n  prefix: {\n    type: string | null;\n    value: string;\n  };\n  name: {\n    type: string | null;\n    value: string;\n  };\n  suffix: {\n    type: string | null;\n    value: string;\n  };\n}\n\nexport interface GroupInterface {\n  id: string;\n  name: string;\n  rules: Array;\n  source: GroupFolderInterface;\n  destination?: GroupFolderInterface;\n  createFolder?: FolderCreation;\n}\n\nexport interface ConfigsInterface {\n  id: string;\n  name: string;\n  groups: Array;\n}\n\nexport interface UserDocument {\n  activeConfig: string;\n  configs: AngularFirestoreCollection;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tabs/settings/settings.component.ts\n\n\n    \n        Description\n    \n    \n        Declare the component to be shown when the settings tab is selected.\n\n    \n\n\n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n            \n                styleUrls\n                settings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearConfigs\n                            \n                            \n                                deleteAccount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(google: GoogleService, database: DatabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tabs/settings/settings.component.ts:23\n                            \n                        \n\n                \n                    \n                            Creates an instance of SettingsComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        google\n                                                  \n                                                        \n                                                                    GoogleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        database\n                                                  \n                                                        \n                                                                    DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clearConfigs\n                            \n                            \n                        \n                    \n                \n                \n                    \nclearConfigs()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/settings/settings.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteAccount()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/settings/settings.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { AngularFireAuth } from 'angularfire2/auth';\nimport { AngularFirestore } from 'angularfire2/firestore';\nimport { Component, OnInit } from '@angular/core';\nimport { DatabaseService } from '../../../services/firebase/database.service';\nimport { GoogleService } from '../../../services/google/google.service';\n\n/**\n * Workaround for testing\n */\ndeclare var gapi: any;\n\n/**\n * Declare the component to be shown when the settings tab is selected.\n *\n * @export\n * @class SettingsComponent\n */\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent {\n  /**\n   * Creates an instance of SettingsComponent.\n   * @memberof SettingsComponent\n   */\n  constructor(\n    private google: GoogleService,\n    private database: DatabaseService\n  ) {}\n\n  clearConfigs() {\n    this.database.clearConfigs().catch(err => console.error);\n  }\n\n  deleteAccount() {\n    this.database.clearConfigs().then(() => {\n      this.google.signOut();\n    }, err => console.error);\n  }\n}\n\n    \n\n    \n        \n    \n        Clear Configurations\n    \n\n\n    \n        Delete Account\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Clear Configurations                Delete Account    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'ConfigListComponent', 'selector': 'app-config-list'},{'name': 'ConfigModalComponent', 'selector': 'app-config-modal'},{'name': 'EditConfigModalComponent', 'selector': 'app-edit-config-modal'},{'name': 'EditConfigPageComponent', 'selector': 'app-edit-config-page'},{'name': 'FolderCreationComponent', 'selector': 'app-folder-creation'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NewConfigPageComponent', 'selector': 'app-new-rule-page'},{'name': 'NewRuleStepperComponent', 'selector': 'app-new-rule-stepper'},{'name': 'PresetConfigComponent', 'selector': 'app-preset-config'},{'name': 'PresetConfigPageComponent', 'selector': 'app-preset-config-page'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'UnauthenticatedComponent', 'selector': 'app-unauthenticated'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SorterService.html":{"url":"injectables/SorterService.html","title":"injectable - SorterService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SorterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/sorter/sorter.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getDriveQuery\n                            \n                            \n                                    Private\n                                getUntitledFiles\n                            \n                            \n                                loadConfig\n                            \n                            \n                                sort\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(google: GoogleService, database: DatabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/sorter/sorter.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        google\n                                                  \n                                                        \n                                                                    GoogleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        database\n                                                  \n                                                        \n                                                                    DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getDriveQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getDriveQuery(group: GroupInterface)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/sorter/sorter.service.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        group\n                                                        \n                                                                    GroupInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getUntitledFiles\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getUntitledFiles(destination: GroupFolderInterface)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/sorter/sorter.service.ts:125\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        destination\n                                                        \n                                                                    GroupFolderInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadConfig(cb?: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/sorter/sorter.service.ts:131\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cb\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                            \n                        \n                    \n                \n                \n                    \nsort()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/sorter/sorter.service.ts:142\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     ConfigsInterface\n\n                    \n                \n                    \n                        \n                            Type :     ConfigsInterface\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/sorter/sorter.service.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n  ConfigsInterface,\n  GroupInterface,\n  GroupFolderInterface\n} from '../../../interfaces';\nimport { DatabaseService } from '../firebase/database.service';\nimport {\n  DriveMimeType,\n  DriveQueryBuilder\n} from '../../classes/drive-query-builder';\nimport { GoogleService } from '../google/google.service';\nimport { Injectable } from '@angular/core';\nimport { ConfigBuilder } from '../../classes/config-builder';\n\n/**\n * Workaround for testing\n */\ndeclare var gapi: any;\n\n@Injectable()\nexport class SorterService {\n  config: ConfigsInterface;\n\n  constructor(\n    private google: GoogleService,\n    private database: DatabaseService\n  ) {\n    this.loadConfig();\n    this.database.activeConfigChanged.subscribe(() => {\n      this.loadConfig();\n    });\n  }\n\n  private getDriveQuery(group: GroupInterface): string {\n    1;\n    let driveQuery = new DriveQueryBuilder(group.source.folderID, true);\n    group.rules.forEach(rule => {\n      switch (rule.classifier) {\n        case 'fullText':\n          driveQuery = driveQuery.fullTextContains(rule.data.fullText);\n          break;\n        case 'title':\n          let title = rule.data.title;\n          switch (rule.constraint) {\n            case 'include':\n              driveQuery = driveQuery.nameContains(title);\n              break;\n            case 'exclude':\n              driveQuery = driveQuery.nameExcludes(title);\n              break;\n          }\n          break;\n        case 'type':\n          let type = rule.data.fileType;\n          switch (rule.constraint) {\n            case 'include':\n              driveQuery = driveQuery.requiresType(type);\n              break;\n            case 'exclude':\n              driveQuery = driveQuery.excludeType(type);\n              break;\n          }\n          break;\n        case 'owner':\n          let owner = rule.data.owner;\n          switch (rule.constraint) {\n            case 'include':\n              driveQuery = driveQuery.hasOwner(owner);\n              break;\n            case 'exclude':\n              driveQuery = driveQuery.excludesOwner(owner);\n              break;\n          }\n          break;\n        case 'creationDate':\n          switch (rule.constraint) {\n            case 'include':\n              driveQuery = driveQuery.createdAfter(rule.data.date);\n              break;\n            case 'exclude':\n              driveQuery = driveQuery.createdBefore(rule.data.date);\n              break;\n            case 'between':\n              driveQuery = driveQuery\n                .createdAfter(rule.data.firstDate)\n                .createdBefore(rule.data.secondDate);\n              break;\n          }\n          break;\n        case 'lastOpened':\n          switch (rule.constraint) {\n            case 'include':\n              driveQuery = driveQuery.openedAfter(rule.data.date);\n              break;\n            case 'exclude':\n              driveQuery = driveQuery.openedBefore(rule.data.date);\n              break;\n            case 'between':\n              driveQuery = driveQuery\n                .openedAfter(rule.data.firstDate)\n                .openedBefore(rule.data.secondDate);\n              break;\n          }\n          break;\n        case 'lastModified':\n          switch (rule.constraint) {\n            case 'include':\n              driveQuery = driveQuery.modifiedAfter(rule.data.date);\n              break;\n            case 'exclude':\n              driveQuery = driveQuery.modifiedBefore(rule.data.date);\n              break;\n            case 'between':\n              driveQuery = driveQuery\n                .modifiedAfter(rule.data.firstDate)\n                .modifiedBefore(rule.data.secondDate);\n              break;\n          }\n          break;\n      }\n    });\n    return driveQuery.get();\n  }\n\n  private getUntitledFiles(destination: GroupFolderInterface) {\n    return new DriveQueryBuilder(destination.folderID, true)\n      .nameContains('Untitled')\n      .get();\n  }\n\n  loadConfig(cb?: Function): void {\n    this.database.getActiveConfig(activeConfig => {\n      if (activeConfig) {\n        this.database.getConfig(activeConfig, config => {\n          this.config = config;\n          if (cb) cb();\n        });\n      }\n    });\n  }\n\n  sort() {\n    return new Promise((resolve, reject) => {\n      const drive = gapi.client.drive;\n      let success = true;\n      this.config.groups.forEach(group => {\n        if (group.destination) {\n          this.google.listFiles(this.getDriveQuery(group), resp => {\n            if (resp.error) {\n              reject(resp.error);\n            } else {\n              resp.files.forEach(file => {\n                this.google.moveFile(\n                  file.id,\n                  group.destination.folderID,\n                  success => {\n                    if (!success) {\n                      success = false;\n                    }\n                  }\n                );\n              }, this);\n            }\n          });\n          if (group.source.renameUntitled) {\n            this.google.listFiles(this.getUntitledFiles(group.source), resp => {\n              if (resp.error) {\n                reject(resp.error);\n              } else {\n                resp.files.forEach(file => {\n                  this.google.renameFile(file.id, Date());\n                });\n              }\n            });\n          }\n        } else {\n          let newFolderName = ConfigBuilder.folderNameBuilder(\n            group.createFolder\n          );\n          this.google\n            .createFolder(newFolderName, group.createFolder.parent.folderID)\n            .then(newFolderID => {\n              this.google.listFiles(this.getDriveQuery(group), resp => {\n                if (resp.error) {\n                  reject(resp.error);\n                } else {\n                  resp.files.forEach(file => {\n                    this.google.moveFile(file.id, newFolderID, success => {\n                      if (!success) {\n                        success = false;\n                      }\n                    });\n                  }, this);\n                }\n              });\n            }, err => console.error);\n        }\n      });\n      if (success) resolve();\n      else reject();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/UnNamedPipe.html":{"url":"pipes/UnNamedPipe.html","title":"pipe - UnNamedPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  UnNamedPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/un-named.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        unNamed\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: any, args?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/un-named.pipe.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        args\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'unNamed'\n})\nexport class UnNamedPipe implements PipeTransform {\n  transform(value: any, args?: any): any {\n    return (value.length > 0) ? value : 'No Name'\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UnauthenticatedComponent.html":{"url":"components/UnauthenticatedComponent.html","title":"component - UnauthenticatedComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UnauthenticatedComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/auth/unauthenticated/unauthenticated.component.ts\n\n\n    \n        Description\n    \n    \n        Declare the component to be shown when the user isn't authenticated.\n\n    \n\n\n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-unauthenticated\n            \n\n            \n                styleUrls\n                unauthenticated.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./unauthenticated.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                google\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(google: GoogleService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/auth/unauthenticated/unauthenticated.component.ts:15\n                            \n                        \n\n                \n                    \n                            Creates an instance of UnauthenticatedComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        google\n                                                  \n                                                        \n                                                                    GoogleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Declare the Google Service as google.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/auth/unauthenticated/unauthenticated.component.ts:28\n                            \n                        \n\n\n                \n                    \n                            Method to log the user in.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            google\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        google:     GoogleService\n\n                    \n                \n                    \n                        \n                            Type :     GoogleService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/auth/unauthenticated/unauthenticated.component.ts:21\n                            \n                        \n\n                \n                    \n                        Declare the Google Service as google.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { GoogleService } from '../../../services/google/google.service';\n\n/**\n * Declare the component to be shown when the user isn't authenticated.\n *\n * @export\n * @class UnauthenticatedComponent\n */\n@Component({\n  selector: 'app-unauthenticated',\n  templateUrl: './unauthenticated.component.html',\n  styleUrls: ['./unauthenticated.component.scss']\n})\nexport class UnauthenticatedComponent {\n  /**\n   * Creates an instance of UnauthenticatedComponent.\n   * @param {GoogleService} google Declare the Google Service as google.\n   * @memberof UnauthenticatedComponent\n   */\n  constructor(public google: GoogleService) {}\n\n  /**\n   * Method to log the user in.\n   *\n   * @memberof UnauthenticatedComponent\n   */\n  login() {\n    this.google.signIn();\n  }\n}\n\n    \n\n    \n        \n  \n    G-Drive Sorter\n    An organized Google Drive™ has never been easier\n    Get Organized\n  \n\n\n  \n    \n      view_list\n      Effectively Sort Files\n      Sorting your drive only requires a quick visit to this website. And we do the rest of the work for you!\n    \n    \n      accessibility\n      Simplistic Use\n      Preset configurations and a simplistic user interface makes the G-Drive sorter suitable for all Google Drive users.\n    \n    \n      art_track\n      Fully Customizable\n      Fully customizable configurations that sorts all Google Drive files based on type, creation date, name, current owner, and much more.\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      G-Drive Sorter    An organized Google Drive™ has never been easier    Get Organized              view_list      Effectively Sort Files      Sorting your drive only requires a quick visit to this website. And we do the rest of the work for you!              accessibility      Simplistic Use      Preset configurations and a simplistic user interface makes the G-Drive sorter suitable for all Google Drive users.              art_track      Fully Customizable      Fully customizable configurations that sorts all Google Drive files based on type, creation date, name, current owner, and much more.      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'ConfigListComponent', 'selector': 'app-config-list'},{'name': 'ConfigModalComponent', 'selector': 'app-config-modal'},{'name': 'EditConfigModalComponent', 'selector': 'app-edit-config-modal'},{'name': 'EditConfigPageComponent', 'selector': 'app-edit-config-page'},{'name': 'FolderCreationComponent', 'selector': 'app-folder-creation'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NewConfigPageComponent', 'selector': 'app-new-rule-page'},{'name': 'NewRuleStepperComponent', 'selector': 'app-new-rule-stepper'},{'name': 'PresetConfigComponent', 'selector': 'app-preset-config'},{'name': 'PresetConfigPageComponent', 'selector': 'app-preset-config-page'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'UnauthenticatedComponent', 'selector': 'app-unauthenticated'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UnauthenticatedComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserDocument.html":{"url":"interfaces/UserDocument.html","title":"interface - UserDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        activeConfig\n                                \n                                \n                                        configs\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activeConfig\n                                    \n                                \n                                \n                                    \n                                        activeConfig:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        configs\n                                    \n                                \n                                \n                                    \n                                        configs:     AngularFirestoreCollection\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AngularFirestoreCollection\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AngularFirestoreCollection } from 'angularfire2/firestore';\n\nexport interface ConfigInterface {\n  activeConfig: string;\n}\n\nexport interface RuleInterface {\n  id: string;\n  name: string;\n  data?: any;\n  classifier?: string;\n  constraint?: string;\n}\n\nexport interface GroupFolderInterface {\n  name?: string;\n  renameUntitled?: boolean;\n  folderID?: string;\n}\n\nexport interface FolderCreation {\n  parent: {\n    folderID: string | undefined;\n    name: string | null;\n  };\n  prefix: {\n    type: string | null;\n    value: string;\n  };\n  name: {\n    type: string | null;\n    value: string;\n  };\n  suffix: {\n    type: string | null;\n    value: string;\n  };\n}\n\nexport interface GroupInterface {\n  id: string;\n  name: string;\n  rules: Array;\n  source: GroupFolderInterface;\n  destination?: GroupFolderInterface;\n  createFolder?: FolderCreation;\n}\n\nexport interface ConfigsInterface {\n  id: string;\n  name: string;\n  groups: Array;\n}\n\nexport interface UserDocument {\n  activeConfig: string;\n  configs: AngularFirestoreCollection;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/animations.ts\n            \n            \n                variable\n            \n            \n                fabAnimation\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/animations.ts\n            \n            \n                variable\n            \n            \n                fadeOutIn\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/animations.ts\n            \n            \n                variable\n            \n            \n                routerAnimation\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/animations.ts\n            \n            \n                variable\n            \n            \n                slideDown\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/animations.ts\n            \n            \n                variable\n            \n            \n                slideLeft\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/animations.ts\n            \n            \n                variable\n            \n            \n                slideRight\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                25 %\n                (4/16)\n            \n        \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                variable\n            \n            \n                gapi\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/classes/config-builder.ts\n            \n            \n                class\n            \n            \n                ConfigBuilder\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/app/classes/drive-query-builder.ts\n            \n            \n                class\n            \n            \n                DriveQueryBuilder\n            \n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                    src/app/components/auth/unauthenticated/unauthenticated.component.ts\n            \n            \n                component\n            \n            \n                UnauthenticatedComponent\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/components/shared/config-modal/config-modal.component.ts\n            \n            \n                component\n            \n            \n                ConfigModalComponent\n            \n            \n                0 %\n                (0/32)\n            \n        \n        \n            \n                \n                    src/app/components/shared/edit-config-modal/edit-config-modal.component.ts\n            \n            \n                component\n            \n            \n                EditConfigModalComponent\n            \n            \n                0 %\n                (0/31)\n            \n        \n        \n            \n                \n                    src/app/components/shared/edit-config-page/edit-config-page.component.ts\n            \n            \n                component\n            \n            \n                EditConfigPageComponent\n            \n            \n                0 %\n                (0/32)\n            \n        \n        \n            \n                \n                    src/app/components/shared/folder-creation/folder-creation.component.ts\n            \n            \n                component\n            \n            \n                FolderCreationComponent\n            \n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                    src/app/components/shared/new-config-page/new-config-page.component.ts\n            \n            \n                component\n            \n            \n                NewConfigPageComponent\n            \n            \n                0 %\n                (0/33)\n            \n        \n        \n            \n                \n                    src/app/components/shared/new-rule-stepper/new-rule-stepper.component.ts\n            \n            \n                component\n            \n            \n                NewRuleStepperComponent\n            \n            \n                0 %\n                (0/31)\n            \n        \n        \n            \n                \n                    src/app/components/shared/new-rule-stepper/new-rule-stepper.component.ts\n            \n            \n                variable\n            \n            \n                DEFAULT_VALUE_ACCESSOR\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/components/tabs/config/config-list/config-list.component.ts\n            \n            \n                component\n            \n            \n                ConfigListComponent\n            \n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                    src/app/components/tabs/config/config-list/config-list.component.ts\n            \n            \n                class\n            \n            \n                ConfigDataSource\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                    src/app/components/tabs/config/config-list/config-list.component.ts\n            \n            \n                interface\n            \n            \n                Config\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/components/tabs/config/config.component.ts\n            \n            \n                component\n            \n            \n                ConfigComponent\n            \n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                    src/app/components/tabs/config/preset-config-page/preset-config-page.component.ts\n            \n            \n                component\n            \n            \n                PresetConfigPageComponent\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                    src/app/components/tabs/config/preset-config/preset-config.component.ts\n            \n            \n                component\n            \n            \n                PresetConfigComponent\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                    src/app/components/tabs/config/presets.ts\n            \n            \n                variable\n            \n            \n                presets\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/components/tabs/config/presets.ts\n            \n            \n                variable\n            \n            \n                quartersArray\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/components/tabs/home/home.component.ts\n            \n            \n                component\n            \n            \n                HomeComponent\n            \n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                    src/app/components/tabs/settings/settings.component.ts\n            \n            \n                component\n            \n            \n                SettingsComponent\n            \n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                    src/app/components/tabs/settings/settings.component.ts\n            \n            \n                variable\n            \n            \n                gapi\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/pipes/un-named.pipe.ts\n            \n            \n                pipe\n            \n            \n                UnNamedPipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/services/auth/auth-guard.service.ts\n            \n            \n                injectable\n            \n            \n                AuthGuardService\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    src/app/services/auth/auth-guard.service.ts\n            \n            \n                injectable\n            \n            \n                PreventAuthGuardService\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    src/app/services/firebase/database.service.ts\n            \n            \n                injectable\n            \n            \n                DatabaseService\n            \n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                    src/app/services/google/google.service.ts\n            \n            \n                injectable\n            \n            \n                GoogleService\n            \n            \n                56 %\n                (9/16)\n            \n        \n        \n            \n                \n                    src/app/services/google/google.service.ts\n            \n            \n                function\n            \n            \n                folderPicked\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/services/google/google.service.ts\n            \n            \n                variable\n            \n            \n                _folderPicked\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/services/google/google.service.ts\n            \n            \n                variable\n            \n            \n                authInstance\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/services/google/google.service.ts\n            \n            \n                variable\n            \n            \n                folderPicker\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/services/google/google.service.ts\n            \n            \n                variable\n            \n            \n                gapi\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/services/google/google.service.ts\n            \n            \n                variable\n            \n            \n                google\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/services/sorter/sorter.service.ts\n            \n            \n                injectable\n            \n            \n                SorterService\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/app/services/sorter/sorter.service.ts\n            \n            \n                variable\n            \n            \n                gapi\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/interfaces.ts\n            \n            \n                interface\n            \n            \n                ConfigInterface\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/interfaces.ts\n            \n            \n                interface\n            \n            \n                ConfigsInterface\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/interfaces.ts\n            \n            \n                interface\n            \n            \n                FolderCreation\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/interfaces.ts\n            \n            \n                interface\n            \n            \n                GroupFolderInterface\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/interfaces.ts\n            \n            \n                interface\n            \n            \n                GroupInterface\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/interfaces.ts\n            \n            \n                interface\n            \n            \n                RuleInterface\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/interfaces.ts\n            \n            \n                interface\n            \n            \n                UserDocument\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/jestGlobalMocks.ts\n            \n            \n                variable\n            \n            \n                mock\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.0\n        \n            @angular/cdk : 6.1.0\n        \n            @angular/common : ^6.0.0\n        \n            @angular/compiler : ^6.0.0\n        \n            @angular/core : ^6.0.0\n        \n            @angular/forms : ^6.0.0\n        \n            @angular/http : ^6.0.0\n        \n            @angular/material : 6.1.0\n        \n            @angular/platform-browser : ^6.0.0\n        \n            @angular/platform-browser-dynamic : ^6.0.0\n        \n            @angular/router : ^6.0.0\n        \n            @types/uuid : ^3.4.3\n        \n            angularfire2 : 5.0.0-rc.5-next\n        \n            core-js : ^2.5.4\n        \n            firebase : ^4.13.1\n        \n            hammerjs : ^2.0.8\n        \n            jasmine : ^3.1.0\n        \n            rxjs : ^6.0.0\n        \n            rxjs-compat : 6\n        \n            uuid : ^3.2.1\n        \n            web-animations-js : ^2.3.1\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DriveMimeType   (src/.../drive-query-builder.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/classes/drive-query-builder.ts\n    \n        \n            \n                \n                    \n                        \n                        DriveMimeType\n                    \n                \n                    \n                        \n                            A enumerable of Google Drive file types\n\n                        \n                    \n                        \n                            \n                                 audio\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.audio\n                            \n                        \n                        \n                            \n                                 document\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.document\n                            \n                        \n                        \n                            \n                                 drawing\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.drawing\n                            \n                        \n                        \n                            \n                                 file\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.file\n                            \n                        \n                        \n                            \n                                 folder\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.folder\n                            \n                        \n                        \n                            \n                                 form\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.form\n                            \n                        \n                        \n                            \n                                 fustiontable\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.fusiontable\n                            \n                        \n                        \n                            \n                                 map\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.map\n                            \n                        \n                        \n                            \n                                 photo\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.photo\n                            \n                        \n                        \n                            \n                                 presentation\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.presentation\n                            \n                        \n                        \n                            \n                                 script\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.script\n                            \n                        \n                        \n                            \n                                 site\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.site\n                            \n                        \n                        \n                            \n                                 spreadsheet\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.spreadsheet\n                            \n                        \n                        \n                            \n                                 unknown\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.unknown\n                            \n                        \n                        \n                            \n                                 video\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.video\n                            \n                        \n                        \n                            \n                                 thirdParty\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.drive-sdk\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            folderPicked   (src/.../google.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/google/google.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            folderPicked\n                            \n                            \n                        \n                    \n                \n                \n                    \nfolderPicked(data: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nG-Drive-Sorter\n\n   \n\nMain Countributors\n\nBrandon Cravener (Project Manager/Developer)\nFernando Arredondo (Developer)\nLane Faccoldi (Software Tester)\nIvan Abreu-Cespedes (Public Relations)\n\n\nOther Contributors\n\nAshhad Hanafi, made the logo for the app\n\n\nDescription\nThis project solves the problem of constantly needing to organize Google Drive files, by organizing it your way whenever necessary.\n\nFeatures\n\nUser friendly interface.\nCustomizable configuration.\nCompatible with Google Drive and associated accounts.\nFree to use.\n\n\nInstallation\nInstall this project by running:\n\n$ git clone https://github.com/BrandonCravener/G-Drive-Sorter\n$ cd G-Drive-Sorter\n$ git checkout angularjs\n$ yarn global add @angular/cli\n$ yarn\n\nRun with $ ng serve\n\nDocumentation\nAfter installing you can open the documentation with $ yarn run doc:buildandserve. The documentation is auto generated by compdoc.\n\nContribution\n\nProject Management\nIssue Tracker\nRepository\nGitter\n\n\nSupport\nIf there are any major issues with this project, please report them at: contact@brandoncravener.com\n\nLicense\n  This project is licensed under the MIT license.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Brandon Cravener\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthenticatedModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthenticatedModule\n\n\n\ncluster_AuthenticatedModule_declarations\n\n\n\ncluster_AuthenticatedModule_exports\n\n\n\ncluster_AuthenticatedModule_providers\n\n\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_declarations\n\n\n\ncluster_ConfigModule_imports\n\n\n\ncluster_ConfigModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nUnauthenticatedComponent\n\nUnauthenticatedComponent\n\nAppModule -->\n\nUnauthenticatedComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthenticatedModule\n\nAuthenticatedModule\n\nAppModule -->\n\nAuthenticatedModule->AppModule\n\n\n\n\n\nConfigComponent \n\nConfigComponent \n\nConfigComponent  -->\n\nAuthenticatedModule->ConfigComponent \n\n\n\n\n\nConfigModule\n\nConfigModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\nAuthenticatedModule -->\n\nConfigModule->AuthenticatedModule\n\n\n\n\n\nConfigListComponent \n\nConfigListComponent \n\nConfigListComponent  -->\n\nConfigModule->ConfigListComponent \n\n\n\n\n\nAuthGuardService\n\nAuthGuardService\n\nAppModule -->\n\nAuthGuardService->AppModule\n\n\n\n\n\nDatabaseService\n\nDatabaseService\n\nAppModule -->\n\nDatabaseService->AppModule\n\n\n\n\n\nGoogleService\n\nGoogleService\n\nAppModule -->\n\nGoogleService->AppModule\n\n\n\n\n\nPreventAuthGuardService\n\nPreventAuthGuardService\n\nAppModule -->\n\nPreventAuthGuardService->AppModule\n\n\n\n\n\nConfigComponent\n\nConfigComponent\n\nAuthenticatedModule -->\n\nConfigComponent->AuthenticatedModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAuthenticatedModule -->\n\nHomeComponent->AuthenticatedModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nAuthenticatedModule -->\n\nSettingsComponent->AuthenticatedModule\n\n\n\n\n\nSorterService\n\nSorterService\n\nAuthenticatedModule -->\n\nSorterService->AuthenticatedModule\n\n\n\n\n\nConfigListComponent\n\nConfigListComponent\n\nConfigModule -->\n\nConfigListComponent->ConfigModule\n\n\n\n\n\nConfigModalComponent\n\nConfigModalComponent\n\nConfigModule -->\n\nConfigModalComponent->ConfigModule\n\n\n\n\n\nEditConfigModalComponent\n\nEditConfigModalComponent\n\nConfigModule -->\n\nEditConfigModalComponent->ConfigModule\n\n\n\n\n\nEditConfigPageComponent\n\nEditConfigPageComponent\n\nConfigModule -->\n\nEditConfigPageComponent->ConfigModule\n\n\n\n\n\nFolderCreationComponent\n\nFolderCreationComponent\n\nConfigModule -->\n\nFolderCreationComponent->ConfigModule\n\n\n\n\n\nNewConfigPageComponent\n\nNewConfigPageComponent\n\nConfigModule -->\n\nNewConfigPageComponent->ConfigModule\n\n\n\n\n\nNewRuleStepperComponent\n\nNewRuleStepperComponent\n\nConfigModule -->\n\nNewRuleStepperComponent->ConfigModule\n\n\n\n\n\nPresetConfigComponent\n\nPresetConfigComponent\n\nConfigModule -->\n\nPresetConfigComponent->ConfigModule\n\n\n\n\n\nPresetConfigPageComponent\n\nPresetConfigPageComponent\n\nConfigModule -->\n\nPresetConfigPageComponent->ConfigModule\n\n\n\n\n\nUnNamedPipe\n\nUnNamedPipe\n\nConfigModule -->\n\nUnNamedPipe->ConfigModule\n\n\n\n\n\nConfigRoutingModule\n\nConfigRoutingModule\n\nConfigModule -->\n\nConfigRoutingModule->ConfigModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            4 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        14 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        5 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 pipe\n                    \n                \n            \n            \n                \n                    \n                        \n                        3 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        8 interfaces\n                    \n                \n            \n            \n                \n                    \n                        \n                        \n                            4 routes\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTodo\n\nAdd untitled name renamer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            _folderPicked   (src/.../google.service.ts)\n                        \n                        \n                            authInstance   (src/.../google.service.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            DEFAULT_VALUE_ACCESSOR   (src/.../new-rule-stepper.component.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            fabAnimation   (src/.../animations.ts)\n                        \n                        \n                            fadeOutIn   (src/.../animations.ts)\n                        \n                        \n                            folderPicker   (src/.../google.service.ts)\n                        \n                        \n                            gapi   (src/.../settings.component.ts)\n                        \n                        \n                            gapi   (src/.../sorter.service.ts)\n                        \n                        \n                            gapi   (src/.../app.component.ts)\n                        \n                        \n                            gapi   (src/.../google.service.ts)\n                        \n                        \n                            google   (src/.../google.service.ts)\n                        \n                        \n                            mock   (src/.../jestGlobalMocks.ts)\n                        \n                        \n                            presets   (src/.../presets.ts)\n                        \n                        \n                            quartersArray   (src/.../presets.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            routerAnimation   (src/.../animations.ts)\n                        \n                        \n                            slideDown   (src/.../animations.ts)\n                        \n                        \n                            slideLeft   (src/.../animations.ts)\n                        \n                        \n                            slideRight   (src/.../animations.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/google/google.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            _folderPicked\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _folderPicked:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authInstance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authInstance:     \n\n                    \n                \n\n                \n                    \n                        Variable for easy reference to the authenitcation instance.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            folderPicker\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        folderPicker:     \n\n                    \n                \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gapi\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gapi:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n                \n                    \n                        Workaround for testing\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            google\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        google:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/app/components/shared/new-rule-stepper/new-rule-stepper.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_VALUE_ACCESSOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DEFAULT_VALUE_ACCESSOR:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NewRuleStepperComponent),\n  multi: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyB-yE9IXT29Vl_eAU7bzvzv5Qe17flfpzM\",\n    authDomain: \"g-drive-sorter-2.firebaseapp.com\",\n    databaseURL: \"https://g-drive-sorter-2.firebaseio.com\",\n    projectId: \"g-drive-sorter-2\",\n    storageBucket: \"g-drive-sorter-2.appspot.com\",\n    messagingSenderId: \"362606538820\"\n  }\n}\n                        \n                    \n\n                \n                    \n                        Environment for development builds\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  firebase: {\n    apiKey: \"AIzaSyB-yE9IXT29Vl_eAU7bzvzv5Qe17flfpzM\",\n    authDomain: \"g-drive-sorter-2.firebaseapp.com\",\n    databaseURL: \"https://g-drive-sorter-2.firebaseio.com\",\n    projectId: \"g-drive-sorter-2\",\n    storageBucket: \"g-drive-sorter-2.appspot.com\",\n    messagingSenderId: \"362606538820\"\n  }\n}\n                        \n                    \n\n                \n                    \n                        Environment for production builds\n\n                    \n                \n\n            \n        \n\n    src/animations.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            fabAnimation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fabAnimation:     \n\n                    \n                \n                    \n                        \n                            Default value : trigger('createConfigFABState', [\n  state(\n    'inactive',\n    style({\n      transform: 'scale(0)'\n    })\n  ),\n  state(\n    'active',\n    style({\n      transform: 'scale(1)'\n    })\n  ),\n  transition('inactive => active', animate('0.1s')),\n  transition('active => inactive', animate('0.1s'))\n])\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fadeOutIn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fadeOutIn:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  query(\n    ':enter, :leave',\n    style({\n      position: 'fixed',\n      width: '100%'\n    }),\n    {\n      optional: true\n    }\n  ),\n  query(\n    ':enter',\n    style({\n      opacity: 0\n    })\n  ),\n  query(\n    ':leave',\n    [\n      style({\n        opacity: 1\n      }),\n      animate(\n        '0.5s ease-out',\n        style({\n          opacity: 0\n        })\n      )\n    ],\n    {\n      optional: true\n    }\n  ),\n  query(\n    ':enter',\n    animate(\n      '0.5s 0.5s ease-in',\n      style({\n        opacity: 1\n      })\n    ),\n    {\n      optional: true\n    }\n  )\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            routerAnimation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        routerAnimation:     \n\n                    \n                \n                    \n                        \n                            Default value : trigger('routerTransition', [\n  // Landing transitions\n  transition('* => landing', fadeOutIn),\n  transition('landing => appHome', fadeOutIn),\n  // Tabs transitions\n  transition('appHome => appConfig', slideLeft),\n  transition('appConfig => appHome', slideRight),\n  transition('appHome => appSettings', slideLeft),\n  transition('appSettings => appHome', slideRight),\n  transition('appConfig => appSettings', slideLeft),\n  transition('appSettings => appConfig', slideRight),\n  // Small screen pages\n  transition('appConfig => appConfigEdit', slideDown),\n  transition('appConfigEdit => appConfig', slideDown),\n  transition('appConfig => appConfigCreate', slideDown),\n  transition('appConfigCreate => appConfig', slideDown),\n  transition('appConfig => appConfigPresets', slideDown),\n  transition('appConfigPresets => appConfig', slideDown),\n  transition('appSettings => appConfigEdit', slideDown),\n  transition('appConfigEdit => appSettings', slideDown),\n  transition('appSettings => appConfigCreate', slideDown),\n  transition('appConfigCreate => appSettings', slideDown),\n  transition('appSettings => appConfigPresets', slideDown),\n  transition('appConfigPresets => appSettings', slideDown),\n  transition('appHome => appConfigEdit', slideDown),\n  transition('appConfigEdit => appHome', slideDown),\n  transition('appHome => appConfigCreate', slideDown),\n  transition('appConfigCreate => appHome', slideDown),\n  transition('appHome => appConfigPresets', slideDown),\n  transition('appConfigPresets => appHome', slideDown)\n])\n                        \n                    \n\n                \n                    \n                        Animation for switching between routes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slideDown\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        slideDown:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  query(\n    ':enter, :leave',\n    style({\n      position: 'fixed',\n      width: '100%',\n      height: '100%'\n    }),\n    {\n      optional: false\n    }\n  ),\n  group([\n    query(\n      ':enter',\n      [\n        style({\n          transform: 'translateY(100%)',\n          opacity: 0\n        }),\n        animate(\n          '0.5s',\n          style({\n            transform: 'translateY(0%)',\n            opacity: 1\n          })\n        )\n      ],\n      {\n        optional: false\n      }\n    ),\n    query(\n      ':leave',\n      [\n        style({\n          transform: 'translateY(0%)',\n          opacity: 1\n        }),\n        animate(\n          '0.5s',\n          style({\n            transform: 'translateY(100%)',\n            opacity: 0\n          })\n        )\n      ],\n      {\n        optional: false\n      }\n    )\n  ])\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slideLeft\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        slideLeft:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  query(\n    ':enter, :leave',\n    style({\n      position: 'fixed',\n      width: '100%'\n    }),\n    {\n      optional: false\n    }\n  ),\n  group([\n    query(\n      ':enter',\n      [\n        style({\n          transform: 'translateX(100%)'\n        }),\n        animate(\n          '0.5s',\n          style({\n            transform: 'translateX(0%)'\n          })\n        )\n      ],\n      {\n        optional: false\n      }\n    ),\n    query(\n      ':leave',\n      [\n        style({\n          transform: 'translateX(0%)'\n        }),\n        animate(\n          '0.5s',\n          style({\n            transform: 'translateX(-100%)'\n          })\n        )\n      ],\n      {\n        optional: false\n      }\n    )\n  ])\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slideRight\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        slideRight:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  query(\n    ':enter, :leave',\n    style({\n      position: 'fixed',\n      width: '100%'\n    }),\n    {\n      optional: false\n    }\n  ),\n  group([\n    query(\n      ':enter',\n      [\n        style({\n          transform: 'translateX(-100%)'\n        }),\n        animate(\n          '0.5s',\n          style({\n            transform: 'translateX(0%)'\n          })\n        )\n      ],\n      {\n        optional: false\n      }\n    ),\n    query(\n      ':leave',\n      [\n        style({\n          transform: 'translateX(0%)'\n        }),\n        animate(\n          '0.5s',\n          style({\n            transform: 'translateX(100%)'\n          })\n        )\n      ],\n      {\n        optional: false\n      }\n    )\n  ])\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/components/tabs/settings/settings.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            gapi\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gapi:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n                \n                    \n                        Workaround for testing\n\n                    \n                \n\n            \n        \n\n    src/app/services/sorter/sorter.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            gapi\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gapi:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n                \n                    \n                        Workaround for testing\n\n                    \n                \n\n            \n        \n\n    src/app/app.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            gapi\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gapi:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n                \n                    \n                        Workaround for testing\n\n                    \n                \n\n            \n        \n\n    src/jestGlobalMocks.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mock\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mock:     \n\n                    \n                \n                    \n                        \n                            Default value : () => {\n  let storage = {};\n  return {\n    getItem: key => key in storage ? storage[key] : null,\n    setItem: (key, value) => storage[key] = value || '',\n    removeItem: key => delete storage[key],\n    clear: () => storage = {},\n  };\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/components/tabs/config/presets.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            presets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        presets:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    id: 'istem',\n    name: 'I-STEM Geometry Preset',\n    category: 'School',\n    description:\n      'A preset configuration for the Wilson High School 9th Grade Geometry I-STEM classes(Periods 3-5).',\n    imageURL: 'assets/images/istem-logo.png',\n    data: {\n      createFolders: [\n        'Geometry',\n        'Physics',\n        'Integrated Engineering and Design'\n      ],\n      groups: [\n        {\n          destination: {\n            presetID: 'Geometry'\n          },\n          name: 'Geometry',\n          rules: [\n            {\n              classifier: 'title',\n              constraint: 'include',\n              data: {\n                title: 'Geo'\n              },\n              name: 'Name'\n            }\n          ],\n          source: {\n            folderID: 'root',\n            name: 'My Drive'\n          }\n        },\n        {\n          destination: {\n            presetID: 'Physics'\n          },\n          name: 'Physics',\n          rules: [\n            {\n              classifier: 'title',\n              constraint: 'include',\n              data: {\n                title: 'Phys'\n              },\n              name: 'Name'\n            }\n          ],\n          source: {\n            folderID: 'root',\n            name: 'My Drive'\n          }\n        },\n        {\n          destination: {\n            presetID: 'Integrated Engineering and Design'\n          },\n          name: 'Integrated Engineering and Design',\n          rules: [\n            {\n              classifier: 'title',\n              constraint: 'include',\n              data: {\n                title: 'IED'\n              },\n              name: 'Name'\n            }\n          ],\n          source: {\n            folderID: 'root',\n            name: 'My Drive'\n          }\n        }\n      ]\n    }\n  }\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            quartersArray\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        quartersArray:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['Quarter 1', 'Quarter 2', 'Quarter 3', 'Quarter 4']\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
