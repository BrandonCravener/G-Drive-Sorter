var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.645,1,1.173]],["body/components/AppComponent.html",[0,1.033,1,2.029,2,0.213,3,0.191,4,0.989,5,0.989,6,0.989,7,0.131,8,1.653,9,1.507,10,2.882,11,3.404,12,1.724,13,2.836,14,0.989,15,0.922,16,1.906,17,1.76,18,2.858,19,2.33,20,2.077,21,1.518,22,3.404,23,1.518,24,3.404,25,0.235,26,0.593,27,2.135,28,2.603,29,4.649,30,3.116,31,2.029,32,4.649,33,5.69,34,4.649,35,4.649,36,4.649,37,0.838,38,3.404,39,2.836,40,4.649,41,3.936,42,3.936,43,1.018,44,1.146,45,1.987,46,1.584,47,2.985,48,2.229,49,2.643,50,1.563,51,2.217,52,1.323,53,1.416,54,0.784,55,0.026,56,0.493,57,0.508,58,0.593,59,1.449,60,1.76,61,2.077,62,3.404,63,3.404,64,2.217,65,2.077,66,2.282,67,2.237,68,3.404,69,3.404,70,1.108,71,2.217,72,3.404,73,2.882,74,2.077,75,1.584,76,2.217,77,2.217,78,2.217,79,1.485,80,2.217,81,0.838,82,2.069,83,1.066,84,3.509,85,2.217,86,1.76,87,2.217,88,2.217,89,2.737,90,1.391,91,2.217,92,3.404,93,2.217,94,2.217,95,3.948,96,3.404,97,5.295,98,2.882,99,3.509,100,1.76,101,3.404,102,2.538,103,2.217,104,1.803,105,2.217,106,1.064,107,0.477,108,1.653,109,1.063,110,2.538,111,2.538,112,2.538,113,1.146,114,3.404,115,2.217,116,0.922,117,1.146,118,1.241,119,1.241,120,1.824,121,1.146,122,0.294,123,0.433,124,2.404,125,1.611,126,0.806,127,2.217,128,1.653,129,2.217,130,2.217,131,2.217,132,2.217,133,1.877,134,2.217,135,2.217,136,2.217,137,2.217,138,2.217,139,2.217,140,2.217,141,2.217,142,2.217,143,3.404,144,1.877,145,2.217,146,2.217,147,2.217,148,2.217,149,2.538,150,1.653,151,1.76,152,1.653,153,1.653,154,2.217,155,2.217,156,2.217,157,1.877,158,1.877,159,2.217,160,1.653,161,2.217,162,4.649,163,3.404,164,1.352,165,1.877,166,1.877,167,1.877,168,3.404,169,1.877,170,1.877,171,2.217,172,2.217,173,3.936,174,1.632,175,3.404,176,3.404,177,1.906,178,0.755,179,1.518,180,1.518,181,1.518,182,0.989,183,0.989,184,0.707,185,1.518,186,0.707,187,0.693,188,0.989,189,0.755,190,1.518,191,0.806,192,1.518,193,0.755,194,1.848,195,0.707,196,0.806,197,0.989,198,0.755,199,0.989,200,0.755,201,0.684,202,0.806,203,0.989,204,0.755,205,1.323,206,0.707,207,0.755,208,0.989,209,0.755,210,0.989,211,0.989,212,0.012,213,0.012]],["title/modules/AppModule.html",[214,1.252,215,2.308]],["body/modules/AppModule.html",[1,2.347,2,0.359,3,0.323,7,0.221,16,3.111,17,2.058,46,2.153,55,0.026,60,1.773,67,1.669,106,1.406,107,0.805,113,1.935,116,1.557,117,1.935,122,0.428,123,0.476,174,1.794,178,1.275,195,1.194,209,2.153,212,0.018,213,0.018,214,1.802,215,4.699,216,2.095,217,3.724,218,3.169,219,3.169,220,3.169,221,3.169,222,3.169,223,3.169,224,3.753,225,3.444,226,3.268,227,3.539,228,3.321,229,2.283,230,3.742,231,3.169,232,3.742,233,3.742,234,3.742,235,3.169,236,3.169,237,4.955,238,4.195,239,3.742,240,4.955,241,2.791,242,3.742,243,2.791,244,3.742,245,3.169,246,2.508,247,3.169,248,3.695,249,3.742,250,4.195,251,2.791,252,3.695,253,3.695,254,2.791,255,4.955,256,1.669,257,4.955,258,3.742,259,4.955,260,3.742,261,3.321,262,3.169,263,3.742,264,3.169,265,3.742,266,3.742]],["title/injectables/AuthGuardService.html",[226,1.78,267,1.252]],["body/injectables/AuthGuardService.html",[2,0.31,3,0.279,7,0.191,9,1.631,12,2.315,14,1.441,17,2.051,25,0.343,26,0.782,27,2.076,28,2.885,37,1.104,43,0.966,44,1.67,47,3.351,48,3.202,49,3.202,50,1.439,52,2.003,53,2.143,54,0.744,55,0.026,56,0.343,57,0.534,58,0.563,59,1.784,60,2.116,61,3.395,67,2.699,70,1.247,79,1.639,86,1.431,104,1.528,106,1.035,107,0.695,116,1.344,122,0.48,123,0.707,124,3.128,125,2.163,151,2.319,152,2.409,153,2.409,212,0.016,213,0.016,226,3.208,227,3.274,267,2.024,268,4.512,269,2.409,270,4.362,271,3.92,272,4.512,273,3.797,274,4.851,275,3.231,276,3.231,277,4.362,278,4.056,279,3.842,280,2.885,281,3.143,282,5.152,283,2.409,284,3.345,285,3.345]],["title/modules/AuthenticatedModule.html",[214,1.252,224,2.101]],["body/modules/AuthenticatedModule.html",[0,0.935,2,0.363,3,0.327,7,0.223,9,1.377,16,3.326,19,1.377,20,2.309,28,2.795,55,0.026,60,1.783,70,1.003,106,1.374,107,0.815,122,0.533,123,0.634,125,1.471,174,1.815,178,1.289,184,2.17,186,1.208,189,1.289,198,2.16,207,2.16,212,0.018,213,0.018,214,2.16,216,2.119,217,2.537,224,4.251,225,3.457,228,3.346,229,2.309,248,3.723,250,4.227,251,2.823,252,3.723,253,3.723,254,2.823,256,1.688,261,3.745,264,3.205,281,3.046,286,3.205,287,3.205,288,3.785,289,3.205,290,3.205,291,3.551,292,3.785,293,4.227,294,2.823,295,3.205,296,3.205,297,2.537,298,3.205,299,3.205,300,2.537,301,2.537,302,3.785,303,4.227,304,4.227,305,2.823,306,3.785,307,4.227,308,3.785,309,3.205,310,3.785,311,3.205,312,3.205,313,4.227,314,3.205,315,3.205,316,3.205,317,4.227,318,3.205,319,4.227,320,4.73,321,3.785,322,3.205,323,3.205,324,3.723,325,3.205]],["title/interfaces/Config.html",[187,0.476,326,0.516]],["body/interfaces/Config.html",[2,0.41,3,0.466,7,0.252,25,0.453,26,0.941,55,0.026,56,0.725,57,0.616,79,1.198,81,1.755,83,1.109,122,0.581,187,0.818,201,0.859,212,0.019,213,0.019,326,1.017,327,1.906,328,2.587,329,1.554,330,1.964,331,1.554,332,1.889,333,1.364,334,1.906,335,1.906,336,2.016,337,2.049,338,2.099,339,1.839,340,1.554,341,1.778,342,2.587,343,1.906,344,1.906,345,1.661,346,2.463,347,1.661,348,1.364,349,1.278,350,1.554,351,1.661]],["title/classes/ConfigBuilder.html",[123,0.438,352,1.928]],["body/classes/ConfigBuilder.html",[2,0.295,3,0.433,7,0.182,25,0.326,37,1.067,50,1.413,54,1.322,55,0.026,56,0.703,57,0.551,58,1.001,70,1.294,79,1.215,81,1.642,86,0.982,104,1.048,106,0.871,122,0.266,123,0.551,126,1.576,187,0.753,201,0.871,212,0.016,213,0.016,324,5.005,326,0.461,329,1.119,331,2.227,332,1.739,336,2.257,339,2.085,347,1.196,348,1.833,349,2.008,350,1.981,352,2.427,353,4.443,354,2.062,355,5.018,356,4.334,357,4.334,358,5.018,359,4.334,360,3.077,361,5.448,362,5.448,363,5.448,364,5.292,365,3.077,366,4.334,367,3.077,368,4.334,369,3.077,370,3.077,371,3.077,372,4.613,373,5.448,374,5.448,375,3.077,376,4.249,377,4.334,378,3.077,379,2.605,380,4.443,381,4.334,382,3.077,383,3.077,384,4.334,385,3.077,386,4.249,387,3.077,388,2.605,389,2.294,390,3.077,391,2.605,392,3.077,393,3.077,394,3.077,395,3.077,396,3.077,397,3.077,398,3.077,399,3.077,400,2.605,401,2.605,402,6.251,403,3.742,404,3.077,405,5.045,406,3.742,407,3.077,408,5.045,409,3.635,410,3.077,411,3.077,412,3.077,413,3.077]],["title/components/ConfigComponent.html",[0,0.645,184,1.099]],["body/components/ConfigComponent.html",[0,1.131,1,2.056,2,0.281,3,0.253,4,1.307,5,1.307,6,1.307,7,0.173,9,1.066,12,2.032,13,2.981,14,1.307,15,1.219,18,2.989,19,2.438,21,1.868,23,1.868,25,0.311,26,0.73,27,1.871,31,2.056,37,1.03,39,3.252,43,1.253,47,2.894,48,2.342,49,2.555,50,1.519,52,1.628,53,1.742,54,0.675,55,0.026,56,0.518,57,0.402,58,0.511,60,1.336,70,1.24,74,3.252,75,1.815,82,1.066,83,0.549,86,1.336,90,1.253,104,1.426,106,1.213,107,0.631,109,1.405,116,1.219,120,1.939,122,0.361,123,0.532,125,1.139,126,2.05,151,1.515,178,0.998,179,1.868,180,1.868,181,1.868,182,1.307,183,1.307,184,1.97,185,1.868,186,0.935,187,0.868,188,1.307,189,1.426,190,1.868,191,1.066,192,1.868,193,0.998,194,2.179,195,0.935,196,1.066,197,1.307,198,0.998,199,1.307,200,0.998,201,0.841,202,1.066,203,1.307,204,0.998,205,1.628,206,0.935,207,0.998,208,1.307,209,0.998,210,1.307,211,1.307,212,0.015,213,0.015,231,2.481,256,1.307,300,1.964,301,1.964,414,2.481,415,2.807,416,2.807,417,3.122,418,2.555,419,4.136,420,3.122,421,3.122,422,5.33,423,4.513,424,4.513,425,3.573,426,5.33,427,2.93,428,4.136,429,4.513,430,4.187,431,2.93,432,3.122,433,2.93,434,2.93,435,2.93,436,2.93,437,2.93,438,4.513,439,2.93,440,2.93,441,2.93,442,2.93,443,2.93,444,1.788,445,2.93,446,2.481,447,2.93,448,4.372,449,2.481,450,2.481,451,2.185,452,2.481,453,2.481,454,1.307,455,3.545,456,2.481,457,2.481,458,2.93,459,2.481,460,2.481,461,2.481,462,2.93,463,3.545,464,2.481,465,2.93,466,2.185,467,2.93,468,2.481,469,2.93,470,2.93]],["title/classes/ConfigDataSource.html",[123,0.438,471,2.308]],["body/classes/ConfigDataSource.html",[2,0.333,3,0.299,7,0.205,12,1.959,25,0.368,26,0.82,27,1.706,30,3.843,31,2.3,37,1.158,43,1.037,45,2.563,46,1.953,50,1.605,54,1.231,55,0.026,56,0.656,57,0.551,58,0.932,70,1.242,75,1.821,82,2.085,83,1.074,90,1.715,106,1.152,108,3.986,109,1.663,117,1.793,122,0.299,123,0.598,126,2.18,187,0.889,212,0.017,213,0.017,280,3.211,328,1.443,333,2.125,346,2.224,349,1.037,353,4.919,432,5.064,454,2.385,471,3.156,472,2.936,473,4.526,474,4.855,475,5.734,476,4.708,477,4.855,478,5.734,479,3.986,480,3.468,481,4.708,482,3.986,483,3.468,484,3.468,485,4.708,486,4.708,487,3.468,488,4.708,489,6.523,490,3.468,491,3.468,492,3.986,493,3.468,494,4.708,495,3.468,496,3.986,497,2.936,498,3.468,499,2.936,500,3.468,501,3.468,502,3.468,503,3.468,504,2.936,505,3.468,506,3.156,507,3.468,508,3.468,509,4.708,510,3.468,511,3.468,512,3.468,513,3.468,514,3.468]],["title/interfaces/ConfigInterface.html",[326,0.516,329,1.252]],["body/interfaces/ConfigInterface.html",[2,0.415,3,0.47,7,0.255,25,0.458,26,0.948,55,0.026,56,0.707,57,0.6,79,1.212,81,1.753,83,1.115,122,0.582,187,0.752,201,0.869,212,0.02,213,0.02,326,1.019,327,1.928,328,1.798,329,1.978,330,2.341,331,1.572,332,1.899,333,1.38,334,1.928,335,1.928,336,2.027,337,2.072,338,2.114,339,1.852,340,1.572,341,1.798,342,2.598,343,1.928,344,1.928,345,1.68,346,2.476,347,1.68,348,1.38,349,1.293,350,1.572,351,1.68]],["title/components/ConfigListComponent.html",[0,0.645,186,1.099]],["body/components/ConfigListComponent.html",[0,0.851,1,0.613,2,0.173,3,0.25,4,0.803,5,0.803,6,0.803,7,0.106,12,1.203,13,2.21,15,0.749,17,1.323,18,2.743,19,2.237,21,1.29,23,1.29,25,0.191,26,0.504,27,1.863,30,3.415,31,2.214,37,0.711,39,2.53,43,0.865,45,1.737,46,1.412,47,2.443,48,1.737,49,1.988,50,1.583,52,1.408,54,1.046,55,0.026,56,0.608,57,0.577,58,0.791,59,0.952,70,1.208,75,1.804,79,0.811,81,1.497,82,1.508,83,0.777,86,1.323,90,1.084,100,1.873,104,1.862,106,1.223,107,0.388,108,1.343,109,1.737,113,0.931,116,0.749,117,0.931,120,1.508,122,0.155,123,0.229,126,1.988,144,3.511,151,1.495,157,3.067,158,3.067,164,1.764,178,0.613,179,1.29,180,1.29,181,1.29,182,0.803,183,0.803,184,0.923,185,1.29,186,1.323,187,0.858,188,0.803,189,0.613,190,1.29,191,1.051,192,1.85,193,0.613,194,1.616,195,0.575,196,0.655,197,0.803,198,0.613,199,0.803,200,0.613,201,0.581,202,0.655,203,0.803,204,0.985,205,1.408,206,0.575,207,0.613,208,0.803,209,0.613,210,0.803,211,0.803,212,0.01,213,0.01,256,0.803,280,1.008,285,2.156,297,4.335,301,1.207,326,0.27,330,1.763,333,0.575,341,0.749,349,0.539,389,2.156,418,1.737,419,3.067,423,3.511,424,3.511,425,2.78,428,3.067,429,3.511,432,3.386,438,5.021,448,3.8,449,1.524,450,1.524,451,1.343,452,1.524,453,1.524,454,1.85,455,3.511,456,2.448,457,2.448,459,2.448,460,2.448,461,2.448,463,2.448,464,2.448,468,2.448,471,2.78,473,3.845,482,3.845,492,1.343,496,2.448,497,1.524,515,5.476,516,1.524,517,3.092,518,2.891,519,2.891,520,4.147,521,4.147,522,4.147,523,4.147,524,4.147,525,4.147,526,4.147,527,2.448,528,2.891,529,2.448,530,4.147,531,4.147,532,2.448,533,1.8,534,4.147,535,2.891,536,2.891,537,2.891,538,1.8,539,4.541,540,2.891,541,1.8,542,2.448,543,2.891,544,1.8,545,1.8,546,1.8,547,1.8,548,1.8,549,1.8,550,1.8,551,2.891,552,1.8,553,1.8,554,1.8,555,1.8,556,1.8,557,1.8,558,1.8,559,1.8,560,1.8,561,3.511,562,1.8,563,2.448,564,1.8,565,1.8,566,3.511,567,2.156,568,1.8,569,1.8,570,1.8,571,1.343,572,1.8,573,1.8,574,1.098,575,1.207,576,1.8,577,1.8,578,1.8,579,1.524,580,3.622,581,4.147,582,4.147,583,2.891,584,1.8,585,2.891,586,4.147,587,3.622,588,2.891,589,4.147,590,1.8,591,1.8,592,2.891,593,2.891,594,1.8,595,1.8,596,1.8,597,1.343,598,4.541,599,2.891,600,1.524,601,2.891,602,0.931,603,0.931,604,1.524,605,2.891,606,1.8,607,1.8,608,2.891,609,2.891,610,2.891,611,2.156,612,2.891,613,1.8,614,1.8,615,1.8,616,1.8,617,1.8,618,1.8,619,1.8,620,1.8,621,1.8,622,1.8,623,1.8,624,1.524,625,2.891,626,2.448,627,2.891,628,2.891,629,2.891,630,1.524]],["title/modules/ConfigModule.html",[214,1.252,225,1.928]],["body/modules/ConfigModule.html",[2,0.32,3,0.287,7,0.196,16,2.563,19,1.21,20,2.03,55,0.026,60,1.67,70,0.92,106,1.376,107,0.716,122,0.487,123,0.423,125,1.294,174,1.596,178,1.134,186,2.127,187,0.894,189,2.171,191,2.318,193,2.08,195,1.949,200,2.08,201,0.92,202,2.221,204,2.171,206,1.949,212,0.016,213,0.016,214,2.05,216,1.864,217,2.231,225,3.941,228,3.069,229,2.03,245,2.818,246,2.231,247,2.818,248,3.414,251,3.414,252,3.414,253,3.414,254,3.414,256,1.485,261,3.508,293,3.876,294,2.482,296,2.818,297,2.231,298,2.818,299,2.818,300,2.231,301,3.069,303,3.876,304,3.876,305,2.482,307,3.876,309,3.876,311,3.876,312,3.876,313,3.876,314,3.876,315,3.876,316,3.876,317,3.876,318,3.876,319,3.876,320,4.431,323,2.818,324,3.414,325,2.818,561,2.818,567,2.482,571,2.482,574,2.03,631,2.818,632,2.818,633,2.818,634,2.818,635,3.726,636,3.726,637,3.328,638,4.578,639,3.876,640,2.482,641,4.431,642,4.578,643,3.328,644,4.578,645,3.876,646,2.482,647,2.818,648,3.328,649,3.328,650,3.328,651,3.876,652,2.231,653,3.328]],["title/modules/ConfigRoutingModule.html",[214,1.252,636,2.101]],["body/modules/ConfigRoutingModule.html",[0,1.178,2,0.423,3,0.381,7,0.26,55,0.026,67,2.678,95,4.69,99,3.733,106,1.36,107,0.949,116,1.834,122,0.475,123,0.56,126,1.604,149,4.69,165,3.733,166,3.733,167,3.733,184,1.757,187,0.912,193,1.875,200,1.875,206,1.757,212,0.02,213,0.02,214,1.604,226,3.347,235,3.733,236,3.733,261,3.691,262,4.662,274,4.69,295,3.733,333,2.007,636,3.359,639,3.733,640,3.288,641,5.084,645,3.733,646,3.288,651,3.733,652,2.955,654,4.409,655,4.409,656,3.733,657,3.733,658,3.733,659,3.733,660,4.409]],["title/interfaces/ConfigsInterface.html",[326,0.516,349,1.03]],["body/interfaces/ConfigsInterface.html",[2,0.406,3,0.463,7,0.249,25,0.448,26,0.934,55,0.026,56,0.724,57,0.627,79,1.185,81,1.754,83,1.103,122,0.58,187,0.741,201,0.849,212,0.019,213,0.019,326,1.015,327,1.885,328,1.758,329,1.537,330,1.95,331,1.537,332,2.084,333,1.349,334,1.885,335,1.885,336,2.006,337,2.026,338,2.084,339,1.826,340,1.537,341,1.758,342,2.577,343,1.885,344,1.885,345,1.643,346,2.659,347,1.643,348,1.349,349,1.604,350,2.253,351,1.643]],["title/injectables/DatabaseService.html",[46,1.173,267,1.252]],["body/injectables/DatabaseService.html",[2,0.199,3,0.179,7,0.123,25,0.22,26,0.564,27,2.051,31,2.228,37,0.978,43,1.189,46,1.102,50,1.638,52,0.807,54,1.24,55,0.026,56,0.607,57,0.581,58,0.938,59,0.545,60,1.033,70,1.327,74,3.397,75,2.09,81,1.649,82,1.875,83,0.966,86,1.033,89,2.516,90,1.75,95,1.548,100,2.516,104,0.707,106,0.902,107,0.447,109,0.995,118,1.162,119,1.162,120,1.177,121,1.073,122,0.179,123,0.264,124,1.073,126,1.446,164,1.266,187,0.824,212,0.012,213,0.012,267,1.446,326,0.311,329,0.755,330,1.177,331,1.633,332,0.663,336,1.834,339,1.529,340,0.755,346,2.025,348,1.433,349,1.611,351,1.745,352,1.162,364,3.801,372,3.801,376,3.366,388,3.366,446,1.758,454,1.443,474,3.801,517,1.548,527,2.739,529,3.801,532,2.739,542,4.953,575,1.391,602,2.958,603,2.665,661,1.548,662,4.489,663,4.489,664,4.489,665,4.489,666,4.489,667,3.235,668,3.801,669,3.976,670,5.156,671,4.489,672,3.235,673,3.235,674,4.489,675,4.489,676,3.235,677,3.235,678,2.076,679,5.126,680,2.076,681,2.076,682,4.489,683,4.489,684,2.076,685,3.235,686,2.076,687,2.076,688,3.235,689,3.348,690,2.725,691,2.076,692,2.076,693,2.076,694,2.076,695,3.235,696,2.076,697,3.366,698,3.235,699,2.076,700,3.235,701,2.076,702,3.976,703,2.076,704,2.076,705,2.076,706,2.076,707,3.235,708,2.076,709,2.076,710,2.076,711,3.235,712,2.076,713,2.076,714,2.076,715,2.076,716,1.391,717,3.366,718,1.758,719,3.235,720,2.076,721,3.235,722,2.739,723,2.076,724,2.076,725,2.076,726,3.976,727,2.076,728,3.235,729,1.758,730,2.076,731,2.076,732,3.235,733,3.845,734,4.362,735,2.076,736,3.235,737,3.235,738,2.076,739,2.076,740,2.076,741,2.076,742,2.076,743,2.076,744,2.076,745,2.076,746,2.076,747,2.076,748,2.076,749,3.348,750,2.076,751,2.076,752,3.976,753,3.235,754,2.076,755,3.235,756,2.076,757,3.235,758,4.867,759,2.076,760,2.076,761,2.076,762,2.076,763,1.266,764,2.076,765,1.758,766,2.076,767,1.758,768,4.489,769,2.076,770,2.076,771,2.076,772,2.076,773,2.076,774,2.076,775,2.076]],["title/classes/DriveQueryBuilder.html",[123,0.438,776,2.308]],["body/classes/DriveQueryBuilder.html",[2,0.182,3,0.164,7,0.397,9,2.238,14,0.846,25,0.319,26,0.525,31,1.455,37,0.741,43,0.567,50,1.53,52,2.215,53,1.253,54,1.401,55,0.026,56,0.691,57,0.629,58,1.06,59,0.792,66,2.862,70,1.332,79,1.197,81,1.671,82,0.69,83,0.355,122,0.324,123,0.592,124,3.059,125,2.335,177,3.313,196,1.363,212,0.011,213,0.011,278,2.019,332,0.962,340,0.69,354,1.271,406,3.185,409,4.23,444,3.026,776,4.593,777,4.678,778,3.824,779,2.551,780,2.247,781,1.444,782,3.013,783,3.013,784,3.013,785,3.013,786,3.013,787,3.013,788,3.013,789,3.013,790,3.013,791,3.013,792,3.013,793,3.013,794,3.013,795,3.013,796,3.013,797,4.659,798,1.896,799,4.27,800,3.013,801,2.019,802,3.013,803,1.896,804,2.551,805,3.013,806,1.896,807,4.27,808,5.815,809,3.013,810,1.896,811,5.917,812,3.013,813,1.896,814,4.249,815,3.013,816,5.698,817,4.27,818,3.616,819,3.013,820,3.727,821,1.896,822,4.27,823,4.57,824,1.896,825,1.896,826,2.287,827,1.896,828,3.174,829,1.896,830,3.013,831,3.013,832,1.896,833,1.896,834,1.896,835,4.2,836,3.013,837,1.896,838,3.013,839,1.896,840,4.27,841,3.013,842,1.896,843,1.896,844,1.896,845,3.749,846,3.013,847,1.896,848,3.013,849,1.896,850,1.896,851,1.605,852,5.264,853,1.605,854,1.605,855,1.605,856,1.605,857,1.605,858,1.414,859,1.605,860,1.605,861,1.605,862,1.605,863,1.605,864,1.605,865,1.605,866,1.605,867,1.605,868,1.605,869,1.605,870,1.605,871,1.605,872,1.605,873,1.605,874,1.605,875,1.605,876,1.605,877,1.605,878,1.605,879,1.605,880,1.605,881,1.605,882,6.006,883,1.896,884,3.013,885,3.013,886,3.749,887,1.896,888,1.896]],["title/interfaces/FolderCreation.html",[326,0.516,339,1.173]],["body/interfaces/FolderCreation.html",[2,0.396,3,0.456,7,0.244,25,0.438,26,0.92,55,0.026,56,0.721,57,0.669,79,1.157,81,1.742,83,1.091,122,0.577,187,0.73,201,0.829,212,0.019,213,0.019,326,1.011,327,1.841,328,1.717,329,1.501,330,1.921,331,1.501,332,1.859,333,1.317,334,1.841,335,1.841,336,1.984,337,1.979,338,2.053,339,1.984,340,2.233,341,1.717,342,2.554,343,2.739,344,2.739,345,1.604,346,2.423,347,1.604,348,1.317,349,1.235,350,1.501,351,1.604,889,6.682]],["title/components/FolderCreationComponent.html",[0,0.645,195,1.099]],["body/components/FolderCreationComponent.html",[0,0.959,1,0.79,2,0.223,3,0.2,4,1.035,5,1.035,6,1.035,7,0.137,12,1.466,13,2.6,15,0.965,17,1.519,18,2.881,19,2.349,20,1.415,21,1.572,23,1.572,25,0.246,26,0.614,27,2.006,31,1.621,37,0.867,39,2.904,43,0.694,44,1.199,50,1.589,54,0.811,55,0.026,56,0.698,57,0.604,58,0.614,59,0.926,70,1.188,75,1.836,79,0.988,82,1.862,83,1.233,86,1.788,90,1.275,104,0.79,106,0.956,107,0.499,113,1.199,120,1.731,122,0.2,123,0.295,126,1.282,160,2.628,178,0.79,179,1.572,180,1.572,181,1.572,182,1.035,183,1.035,184,0.74,185,1.572,186,0.74,187,0.707,188,1.035,189,0.79,190,1.572,191,0.844,192,1.572,193,0.79,194,1.901,195,1.519,196,2.286,197,1.035,198,0.79,199,1.035,200,0.79,201,0.708,202,0.844,203,1.035,204,0.79,205,1.37,206,0.74,207,0.79,208,1.035,209,0.79,210,1.035,211,1.035,212,0.013,213,0.013,229,2.6,246,4.36,256,1.035,326,0.347,338,1.99,339,1.908,340,1.282,341,1.98,342,2.508,343,2.123,344,2.123,348,1.519,386,4.03,406,3.817,409,2.904,418,1.112,444,2.904,454,1.035,499,1.964,602,1.199,604,2.984,763,1.415,767,1.964,781,2.043,890,5.507,891,1.964,892,4.03,893,3.524,894,3.524,895,4.76,896,4.76,897,4.76,898,4.76,899,5.119,900,4.76,901,3.524,902,4.76,903,4.262,904,4.76,905,4.262,906,3.178,907,3.549,908,2.319,909,2.319,910,4.262,911,2.319,912,2.319,913,2.319,914,2.319,915,2.319,916,2.319,917,3.524,918,4.76,919,2.319,920,2.319,921,2.319,922,2.319,923,2.362,924,5.119,925,2.319,926,2.319,927,2.319,928,2.319,929,2.319,930,2.319,931,2.319,932,4.262,933,3.524,934,2.319,935,2.319,936,2.319,937,2.319,938,4.262,939,2.319,940,2.319,941,3.524,942,2.319,943,2.319,944,3.524,945,2.319,946,2.319,947,3.524,948,2.319,949,3.524,950,2.319,951,5.39]],["title/injectables/GoogleService.html",[17,1.099,267,1.252]],["body/injectables/GoogleService.html",[2,0.208,3,0.187,7,0.198,9,0.789,14,0.968,17,1.978,25,0.23,26,0.583,27,1.675,28,2.939,31,1.692,37,0.824,41,3.892,42,3.892,43,1.002,45,1.605,46,1.566,50,1.557,52,1.589,53,1.701,54,1.26,55,0.026,56,0.671,57,0.525,58,0.953,59,1.305,60,1.069,61,2.042,65,2.042,66,2.244,70,1.317,73,1.837,74,2.042,75,2.111,79,1.146,81,1.671,82,1.487,83,0.766,86,1.069,89,2.714,90,1.637,106,0.998,107,0.467,109,1.605,118,1.215,119,1.215,120,1.218,121,1.122,122,0.289,123,0.584,124,1.122,125,2.196,126,1.807,133,1.837,150,1.618,173,3.892,174,1.605,187,0.463,196,1.672,212,0.012,213,0.012,214,1.218,267,1.487,271,3.447,281,2.042,332,1.305,340,1.909,348,1.069,444,2.042,492,1.618,517,1.618,603,1.122,679,2.835,689,4.324,690,3.47,697,4.909,716,1.454,717,3.892,718,1.837,722,4.445,729,2.835,733,2.497,734,2.497,749,1.618,778,2.289,779,2.835,780,1.618,820,1.454,823,1.837,858,1.618,952,1.454,953,3.348,954,4.597,955,4.597,956,4.597,957,3.519,958,4.597,959,3.348,960,4.597,961,3.348,962,3.348,963,4.597,964,3.348,965,2.169,966,3.348,967,3.348,968,2.169,969,2.497,970,2.169,971,5.249,972,3.348,973,2.169,974,2.169,975,3.348,976,3.348,977,3.892,978,4.967,979,2.169,980,3.348,981,3.348,982,2.169,983,3.348,984,2.169,985,2.169,986,3.348,987,2.169,988,2.169,989,3.348,990,4.597,991,2.169,992,2.169,993,3.348,994,2.244,995,4.088,996,4.597,997,3.348,998,2.169,999,3.348,1000,1.837,1001,1.837,1002,1.454,1003,1.837,1004,1.837,1005,1.837,1006,3.049,1007,1.618,1008,1.837,1009,3.348,1010,2.169,1011,2.169,1012,1.618,1013,2.169,1014,2.169,1015,2.169,1016,2.169,1017,2.169,1018,2.169,1019,2.169,1020,3.348,1021,2.169,1022,2.169,1023,2.169,1024,2.169,1025,2.169,1026,2.169,1027,2.169,1028,2.169,1029,2.169,1030,2.169,1031,2.169,1032,2.169,1033,2.169,1034,2.169,1035,2.169,1036,2.169,1037,2.169,1038,2.169,1039,2.169,1040,2.169,1041,4.967,1042,3.348,1043,4.597,1044,3.348,1045,3.348,1046,2.169,1047,2.169,1048,3.348,1049,2.169,1050,2.169,1051,2.169,1052,3.348,1053,2.169,1054,2.169,1055,2.169,1056,2.169]],["title/interfaces/GroupFolderInterface.html",[326,0.516,336,1.173]],["body/interfaces/GroupFolderInterface.html",[2,0.402,3,0.46,7,0.247,25,0.444,26,0.929,55,0.026,56,0.723,57,0.626,58,1.135,79,1.644,81,1.753,83,1.098,122,0.579,187,0.736,201,0.841,212,0.019,213,0.019,326,1.013,327,1.867,328,1.741,329,1.522,330,1.938,331,1.522,332,1.871,333,1.336,334,1.867,335,1.867,336,2.102,337,2.959,338,2.477,339,1.815,340,1.522,341,1.741,342,2.568,343,1.867,344,1.867,345,1.627,346,2.439,347,1.627,348,1.336,349,1.252,350,1.522,351,1.627]],["title/interfaces/GroupInterface.html",[326,0.516,345,1.338]],["body/interfaces/GroupInterface.html",[2,0.39,3,0.545,7,0.24,25,0.431,26,0.911,55,0.026,56,0.719,57,0.646,58,1.064,79,1.139,81,1.75,83,1.083,122,0.575,187,0.723,201,1.227,212,0.019,213,0.019,326,1.008,327,1.813,328,1.691,329,1.478,330,1.902,331,1.478,332,2.063,333,1.297,334,1.813,335,1.813,336,2.24,337,1.948,338,2.033,339,2.079,340,1.478,341,1.691,342,2.539,343,1.813,344,1.813,345,2.033,346,2.627,347,2.373,348,1.948,349,1.216,350,1.478,351,1.58]],["title/components/HomeComponent.html",[0,0.645,198,1.173]],["body/components/HomeComponent.html",[0,1.178,1,1.004,2,0.283,3,0.254,4,1.314,5,1.314,6,1.314,7,0.174,9,1.072,12,2.039,13,2.99,14,1.314,15,1.226,18,2.992,19,2.439,21,1.875,23,1.875,25,0.312,26,0.733,27,1.875,30,2.818,31,1.924,37,1.034,39,3.26,43,1.258,45,2.35,46,1.82,47,2.899,48,2.015,49,2.562,50,1.445,52,1.634,53,1.749,54,0.678,55,0.026,56,0.52,57,0.404,58,0.513,59,1.104,60,1.342,70,0.985,74,2.565,75,1.669,81,1.034,82,1.529,83,0.787,86,1.564,90,1.258,98,4.524,102,3.135,104,1.004,106,1.135,107,0.634,116,1.226,117,1.523,120,1.943,122,0.363,123,0.534,125,1.634,126,1.072,128,2.197,150,2.197,151,1.523,164,2.565,178,1.004,179,1.875,180,1.875,181,1.875,182,1.314,183,1.314,184,0.94,185,1.875,186,0.94,187,0.854,188,1.314,189,1.004,190,1.875,191,1.072,192,1.875,193,1.004,194,2.186,195,0.94,196,1.072,197,1.314,198,2.143,199,1.314,200,1.004,201,0.845,202,1.072,203,1.314,204,1.004,205,1.634,206,0.94,207,1.004,208,1.314,209,1.004,210,1.314,211,1.314,212,0.015,213,0.015,256,1.314,279,3.135,281,2.565,291,3.385,322,2.495,330,1.072,389,2.197,415,2.818,416,2.818,417,3.135,418,1.413,597,2.197,602,2.534,603,1.523,624,4.149,626,3.559,630,4.149,781,2.35,906,3.654,907,3.985,923,4.217,1057,2.495,1058,4.204,1059,4.204,1060,5.874,1061,5.343,1062,5.343,1063,5.343,1064,2.495,1065,4.204,1066,2.947,1067,2.947,1068,2.947,1069,2.947,1070,2.947,1071,2.495,1072,4.204,1073,4.204,1074,2.947,1075,2.947,1076,2.947,1077,2.947,1078,2.947,1079,2.947,1080,2.947,1081,2.495,1082,4.204,1083,4.204]],["title/interfaces/JSONConfiguration.html",[326,0.516,351,1.338]],["body/interfaces/JSONConfiguration.html",[2,0.41,3,0.466,7,0.252,25,0.453,26,0.941,55,0.026,56,0.705,57,0.616,79,1.198,81,1.752,83,1.109,122,0.581,187,0.886,201,0.859,212,0.019,213,0.019,326,1.017,327,1.906,328,1.778,329,1.554,330,2.333,331,1.554,332,1.889,333,1.364,334,1.906,335,1.906,336,2.016,337,2.049,338,2.099,339,1.839,340,1.554,341,1.778,342,2.587,343,1.906,344,1.906,345,1.661,346,2.668,347,1.661,348,1.364,349,1.278,350,1.554,351,2.099]],["title/components/PresetConfigComponent.html",[0,0.645,204,1.173]],["body/components/PresetConfigComponent.html",[0,1.002,1,0.876,2,0.247,3,0.222,4,1.147,5,1.147,6,1.147,7,0.152,12,1.584,15,1.07,17,1.6,18,2.931,19,2.39,21,1.698,23,1.698,25,0.273,26,0.664,27,2.122,31,1.908,37,0.937,43,1.139,45,2.174,46,1.707,47,3.045,48,2.565,49,2.686,50,1.544,54,0.877,55,0.026,56,0.567,57,0.481,58,0.664,59,1.191,70,1.075,75,1.544,81,1.116,82,1.946,83,1.002,86,1.447,89,2.344,90,1.499,104,1.707,106,1.222,107,0.554,109,1.233,113,1.33,116,1.07,117,1.33,120,1.823,122,0.222,123,0.327,126,2.038,128,1.918,177,2.132,178,0.876,179,1.698,180,1.698,181,1.698,182,1.147,183,1.147,184,0.821,185,1.698,186,0.821,187,0.878,188,1.147,189,0.876,190,1.698,191,0.935,192,1.698,193,0.876,194,2.022,195,0.821,196,1.649,197,1.147,198,0.876,199,1.147,200,0.876,201,0.765,202,0.935,203,1.147,204,1.707,205,2.638,206,0.821,207,0.876,208,1.147,209,0.876,210,1.147,211,1.147,212,0.014,213,0.014,256,1.147,332,0.821,338,1,348,0.821,350,0.935,352,1.44,379,2.177,380,3.738,418,2.174,420,2.839,421,2.839,425,3.36,454,1.698,466,3.738,574,3.875,575,1.724,579,2.177,602,1.33,603,1.33,611,3.738,716,1.724,763,2.323,765,2.177,906,3.381,907,3.738,1012,2.839,1064,2.177,1084,4.736,1085,2.177,1086,4.244,1087,4.244,1088,4.244,1089,3.224,1090,3.808,1091,3.224,1092,2.572,1093,2.839,1094,2.572,1095,2.572,1096,2.572,1097,3.224,1098,2.572,1099,2.572,1100,2.572,1101,2.572,1102,2.572,1103,2.572,1104,2.572,1105,2.572,1106,2.572,1107,2.572,1108,2.572,1109,4.534,1110,4.534,1111,4.534,1112,2.572,1113,2.177,1114,2.572,1115,2.572,1116,2.572,1117,2.572,1118,2.572,1119,2.572,1120,2.572,1121,2.572,1122,2.572,1123,2.572,1124,2.177,1125,2.572,1126,2.572,1127,2.177,1128,2.572,1129,2.572,1130,2.177,1131,2.572,1132,1.918,1133,3.224,1134,3.224,1135,3.224]],["title/components/PresetConfigPageComponent.html",[0,0.645,206,1.099]],["body/components/PresetConfigPageComponent.html",[0,1.085,1,1.073,2,0.302,3,0.272,4,1.405,5,1.405,6,1.405,7,0.186,15,1.311,18,3.02,19,2.462,21,1.966,23,1.966,25,0.334,26,0.768,27,2.15,31,1.501,37,1.084,47,2.777,48,2.437,49,2.113,50,1.624,54,0.725,55,0.026,56,0.539,57,0.488,58,0.549,70,1.106,75,1.875,81,1.084,82,2.183,83,1.124,86,1.005,89,1.629,90,1.52,104,1.731,106,0.886,107,0.678,120,2.002,122,0.272,123,0.4,151,1.629,177,2.467,178,1.073,179,1.966,180,1.966,181,1.966,182,1.405,183,1.405,184,1.005,185,1.966,186,1.005,187,0.94,188,1.405,189,1.073,190,1.966,191,1.146,192,1.966,193,1.073,194,2.267,195,1.005,196,1.146,197,1.405,198,1.073,199,1.405,200,1.073,201,0.886,202,1.146,203,1.405,204,2.281,205,2.664,206,1.757,207,1.073,208,1.405,209,1.073,210,1.405,211,1.405,212,0.016,213,0.016,280,2.467,418,1.51,420,3.286,421,3.286,425,3.407,466,3.79,567,2.349,574,3.534,611,4.595,652,3.407,1012,3.286,1081,2.667,1084,3.79,1086,4.303,1087,4.303,1088,5.218,1089,3.731,1091,2.667,1093,2.349,1097,2.667,1133,3.731,1134,3.731,1135,3.731,1136,2.667,1137,4.407,1138,3.15,1139,6.472,1140,3.15,1141,3.15,1142,3.15,1143,3.15,1144,3.15,1145,3.15,1146,3.15,1147,3.15,1148,3.15,1149,3.15,1150,3.15]],["title/injectables/PreventAuthGuardService.html",[227,1.928,267,1.252]],["body/injectables/PreventAuthGuardService.html",[2,0.311,3,0.279,7,0.191,9,1.633,12,2.316,14,1.443,17,2.051,25,0.343,26,0.782,27,2.077,28,2.887,37,1.104,43,0.968,44,1.672,47,3.351,48,3.203,49,3.203,50,1.439,52,2.004,53,2.145,54,0.745,55,0.026,56,0.343,57,0.535,58,0.564,59,1.785,60,2.116,61,3.397,67,2.7,70,1.247,79,1.64,86,1.433,104,1.529,106,1.036,107,0.696,116,1.346,122,0.481,123,0.708,124,3.13,125,2.164,151,2.321,152,2.412,153,2.412,212,0.016,213,0.016,226,3.024,227,3.476,267,2.025,268,4.514,269,2.412,270,4.365,271,3.921,272,4.514,273,2.739,274,4.852,277,4.365,278,4.058,279,3.844,280,2.887,281,3.145,283,2.412,284,3.347,285,3.347,1151,3.235,1152,3.235,1153,5.155]],["title/interfaces/RuleInterface.html",[326,0.516,331,1.252]],["body/interfaces/RuleInterface.html",[2,0.394,3,0.455,7,0.243,25,0.436,26,0.918,55,0.026,56,0.721,57,0.641,58,1.13,79,1.152,81,1.758,83,1.088,122,0.576,187,0.728,201,0.826,212,0.019,213,0.019,326,1.01,327,1.832,328,1.709,329,1.494,330,1.915,331,1.915,332,2.069,333,1.956,334,2.734,335,2.734,336,1.979,337,1.97,338,2.047,339,1.793,340,1.494,341,1.709,342,2.55,343,1.832,344,1.832,345,1.597,346,2.418,347,1.597,348,1.311,349,1.229,350,1.494,351,1.597]],["title/components/SettingsComponent.html",[0,0.645,207,1.173]],["body/components/SettingsComponent.html",[0,1.199,1,1.236,2,0.348,3,0.313,4,1.619,5,1.619,6,1.619,7,0.214,9,1.32,14,1.619,15,1.51,17,1.864,18,3.074,19,2.506,21,2.166,23,2.166,25,0.385,31,1.654,37,1.195,43,1.452,44,1.876,45,2.623,46,1.99,50,1.346,52,1.887,53,2.02,54,0.836,55,0.026,56,0.58,57,0.348,58,0.632,59,1.276,60,1.746,70,0.976,75,1.654,90,1.452,100,2.51,102,4.356,106,1.099,107,0.781,113,1.876,117,1.876,118,2.032,119,2.032,120,2.215,121,1.876,122,0.419,123,0.617,125,1.411,169,3.073,178,1.236,179,2.166,180,2.166,181,2.166,182,1.619,183,1.619,184,1.158,185,2.166,186,1.158,187,0.842,188,1.619,189,1.236,190,2.166,191,1.32,192,2.166,193,1.236,194,2.44,195,1.158,196,1.32,197,1.619,198,1.236,199,1.619,200,1.236,201,0.976,202,1.32,203,1.619,204,1.236,205,1.887,206,1.158,207,2.215,208,1.619,209,1.236,210,1.619,211,1.619,212,0.017,213,0.017,415,3.254,416,3.254,417,3.621,418,1.74,602,1.876,603,2.51,668,4.946,1154,2.706,1155,4.855,1156,4.855,1157,5.841,1158,3.629,1159,3.629,1160,3.629,1161,3.629,1162,3.629,1163,4.111,1164,4.111,1165,4.111]],["title/injectables/SorterService.html",[267,1.252,291,1.928]],["body/injectables/SorterService.html",[2,0.259,3,0.233,7,0.159,17,1.638,25,0.286,26,0.688,31,2.056,37,0.971,43,1.181,44,1.396,45,2.236,46,1.748,50,1.403,54,1.181,55,0.026,56,0.544,57,0.565,58,0.894,59,1.037,60,0.862,70,1.183,75,1.344,81,0.971,86,1.26,90,1.395,104,1.589,106,1.146,107,0.581,118,1.512,119,1.512,120,0.982,121,1.396,122,0.233,123,0.343,126,2.074,187,0.788,212,0.014,213,0.014,267,1.697,283,2.014,291,2.21,326,0.404,330,1.435,336,1.748,345,1.995,347,1.05,349,1.535,350,0.982,352,1.512,391,2.286,400,4.827,401,2.286,403,4.391,405,5.758,408,5.758,409,1.647,479,3.342,504,2.286,575,1.81,597,2.014,600,2.286,602,2.04,603,1.396,689,3.478,690,2.612,716,2.646,733,2.014,734,2.943,749,2.014,776,1.81,778,1.512,781,1.295,801,3.822,814,2.943,818,4.827,820,1.81,923,3.439,969,2.014,1000,2.286,1001,2.286,1071,2.286,1113,2.286,1124,2.286,1166,2.014,1167,3.947,1168,3.947,1169,3.947,1170,3.947,1171,2.7,1172,3.947,1173,2.7,1174,3.947,1175,2.7,1176,2.7,1177,3.947,1178,6.752,1179,2.7,1180,2.7,1181,2.7,1182,3.342,1183,2.7,1184,2.7,1185,2.7,1186,2.7,1187,2.7,1188,2.7,1189,2.7,1190,2.7,1191,2.7,1192,2.7,1193,2.7,1194,2.7,1195,3.949,1196,2.7,1197,2.7,1198,2.7,1199,2.7,1200,2.7,1201,2.7,1202,2.7,1203,2.7,1204,2.7,1205,2.7,1206,2.7,1207,2.7,1208,2.7,1209,2.7,1210,2.7,1211,2.7,1212,3.947,1213,2.7,1214,2.7,1215,3.947,1216,4.665,1217,4.665,1218,4.665,1219,4.665,1220,2.7,1221,2.7,1222,2.7,1223,5.701,1224,2.7,1225,2.7,1226,2.7,1227,2.7,1228,2.7,1229,2.7,1230,2.7,1231,2.7,1232,2.7,1233,2.7]],["title/pipes/UnNamedPipe.html",[635,2.101,1234,2.308]],["body/pipes/UnNamedPipe.html",[2,0.478,3,0.43,7,0.294,12,2.072,15,2.072,37,1.226,50,1.226,54,1.147,55,0.025,56,0.695,57,0.478,58,0.868,70,1.192,83,1.111,106,1.001,107,1.072,122,0.43,123,0.633,212,0.021,213,0.021,454,2.222,635,3.619,969,3.715,1234,4.246,1235,5.023,1236,4.218,1237,5.932,1238,4.218,1239,5.932,1240,6.335,1241,4.981,1242,5.932,1243,4.981]],["title/components/UnauthenticatedComponent.html",[0,0.645,209,1.173]],["body/components/UnauthenticatedComponent.html",[0,1.157,1,1.081,2,0.305,3,0.274,4,1.415,5,1.415,6,1.415,7,0.343,9,1.611,10,3.75,14,1.415,15,1.32,17,1.971,18,3.022,19,2.464,21,1.975,23,1.975,25,0.336,26,0.772,27,1.413,28,2.48,37,1.359,43,0.949,44,1.64,50,1.255,52,1.722,53,1.842,54,0.731,55,0.025,56,0.616,57,0.53,58,0.553,59,1.795,60,1.854,61,3.113,66,2.969,70,0.638,75,1.081,90,1.325,100,2.855,106,0.89,107,0.683,113,1.64,120,2.008,122,0.382,123,0.563,124,1.64,125,1.722,170,2.686,178,1.081,179,1.975,180,1.975,181,1.975,182,1.415,183,1.415,184,1.013,185,1.975,186,1.013,187,0.803,188,1.415,189,1.081,190,1.975,191,1.154,192,1.975,193,1.081,194,2.276,195,1.013,196,1.154,197,1.415,198,1.081,199,1.415,200,1.081,201,0.89,202,1.154,203,1.415,204,1.081,205,2.146,206,1.013,207,1.081,208,1.415,209,2.18,210,2.276,211,1.415,212,0.016,213,0.016,271,3.843,272,3.303,284,2.366,326,0.663,409,2.702,415,2.969,418,1.521,563,2.686,781,3.169,807,2.969,814,3.303,892,3.75,923,4.033,994,2.969,1244,2.686,1245,4.429,1246,4.429,1247,4.429,1248,5.522,1249,3.173,1250,3.173,1251,4.429,1252,3.173,1253,4.675,1254,4.675,1255,4.675,1256,4.429,1257,4.429,1258,4.429,1259,4.429,1260,4.429,1261,4.429,1262,4.429,1263,4.429,1264,4.429,1265,5.522,1266,4.429,1267,4.429,1268,4.429,1269,5.522,1270,4.675,1271,4.429,1272,4.429]],["title/coverage.html",[1273,3.967]],["body/coverage.html",[0,1.252,1,1.06,7,0.184,8,3.259,17,0.994,46,1.06,55,0.026,57,0.299,59,1.148,90,0.931,110,2.321,111,2.321,121,2.982,123,0.642,184,0.994,186,0.994,187,0.881,189,1.06,191,1.132,193,1.06,195,0.994,198,1.06,200,1.06,201,0.878,202,1.132,204,1.06,205,1.21,206,0.994,207,1.06,209,1.06,212,0.016,213,0.016,226,1.609,227,1.743,243,3.259,246,2.087,267,2.098,268,3.259,269,3.259,291,1.743,297,2.087,300,2.087,326,0.939,327,2.796,329,1.132,331,1.132,333,0.994,336,1.06,339,1.06,345,1.21,349,0.931,351,1.21,352,1.743,353,3.259,354,2.929,414,2.636,454,3.155,471,2.087,472,2.636,515,2.636,516,2.636,571,2.321,574,1.899,635,1.899,640,2.321,646,2.321,647,2.636,652,2.087,661,3.766,690,1.743,776,2.087,777,2.321,778,1.743,807,2.087,826,1.899,890,2.636,891,2.636,952,4.117,957,2.929,1002,4.641,1006,2.321,1007,2.321,1057,2.636,1084,3.259,1085,2.636,1132,4.951,1136,4.276,1154,3.259,1166,3.259,1234,2.087,1235,2.636,1236,2.636,1244,2.636,1273,2.636,1274,3.113,1275,3.113,1276,5.064,1277,6.759,1278,2.636,1279,6.372,1280,2.636,1281,2.636,1282,2.636,1283,3.113,1284,3.113,1285,4.37,1286,3.113,1287,3.113,1288,3.113,1289,3.113,1290,4.37,1291,4.37,1292,4.37,1293,4.37,1294,3.113,1295,4.37,1296,3.113,1297,3.113,1298,3.113,1299,3.113,1300,3.113,1301,3.113,1302,3.113,1303,3.7,1304,2.636,1305,3.113,1306,3.113,1307,3.113,1308,3.113,1309,4.37,1310,3.113,1311,3.113,1312,3.113,1313,4.37,1314,2.636,1315,2.636,1316,4.37,1317,3.113,1318,4.37,1319,3.113,1320,2.636,1321,2.636,1322,3.7,1323,2.636,1324,3.113,1325,3.113]],["title/dependencies.html",[216,2.317,1326,2.882]],["body/dependencies.html",[55,0.026,107,1.049,109,2.806,112,3.633,116,2.027,212,0.021,213,0.021,216,2.728,238,4.956,241,4.365,256,2.173,294,3.633,305,3.633,380,3.633,1327,4.871,1328,6.979,1329,4.871,1330,5.853,1331,4.871,1332,4.871,1333,4.871,1334,4.871,1335,4.871,1336,4.871,1337,5.853,1338,4.871,1339,4.871,1340,4.871,1341,4.871,1342,4.871,1343,4.125,1344,4.871,1345,4.871,1346,4.871,1347,4.871,1348,4.871,1349,4.871]],["title/miscellaneous/enumerations.html",[1350,1.614,1351,3.503]],["body/miscellaneous/enumerations.html",[7,0.341,25,0.504,55,0.021,57,0.457,59,1.25,83,1.328,196,1.73,212,0.021,213,0.021,354,3.868,777,3.548,778,3.231,781,2.281,820,3.868,826,2.903,851,4.028,852,6.004,853,4.028,854,4.028,855,4.028,856,4.028,857,4.028,858,3.548,859,4.028,860,4.028,861,4.028,862,4.028,863,4.028,864,4.028,865,4.028,866,4.028,867,4.028,868,4.028,869,4.028,870,4.028,871,4.028,872,4.028,873,4.028,874,4.028,875,4.028,876,4.028,877,4.028,878,4.028,879,4.028,880,4.028,881,4.028,1350,2.664,1351,4.886,1352,4.758]],["title/miscellaneous/functions.html",[690,2.317,1350,1.614]],["body/miscellaneous/functions.html",[25,0.573,54,1.245,55,0.024,56,0.573,57,0.519,58,0.943,212,0.022,213,0.022,333,1.726,690,3.029,952,3.625,957,4.172,1008,4.58,1350,3.029,1353,4.58]],["title/index.html",[25,0.306,65,1.758,506,1.932]],["body/index.html",[7,0.264,9,1.628,19,1.628,27,1.429,55,0.025,59,1.46,100,2.314,177,2.506,212,0.02,213,0.02,271,2.731,326,0.67,444,2.731,781,3.117,804,3.79,826,3.688,828,3.79,994,3,1130,3.79,1165,3.79,1253,4.706,1254,5.119,1255,4.706,1270,3.79,1343,3.79,1354,4.476,1355,4.476,1356,3.79,1357,3.79,1358,6.626,1359,4.476,1360,4.476,1361,4.476,1362,3.79,1363,4.476,1364,4.476,1365,3.79,1366,4.476,1367,4.476,1368,4.476,1369,4.476,1370,4.476,1371,4.476,1372,4.476,1373,4.476,1374,4.476,1375,4.476,1376,4.476,1377,4.476,1378,4.476,1379,4.476,1380,4.476,1381,4.476,1382,4.476,1383,3.79,1384,3.79,1385,6.046,1386,6.046,1387,5.558,1388,4.476,1389,4.476,1390,4.476,1391,4.476,1392,4.476,1393,6.046,1394,4.476,1395,4.476,1396,4.476,1397,4.476,1398,4.476,1399,4.476,1400,4.476,1401,4.476,1402,4.476,1403,5.558,1404,4.476,1405,4.476,1406,4.476,1407,3.79,1408,4.476,1409,4.476,1410,4.476,1411,4.476,1412,4.508,1413,4.476,1414,3.79]],["title/license.html",[65,1.758,506,1.932,1412,2.149]],["body/license.html",[7,0.275,16,2.608,55,0.02,89,2.408,160,3.473,174,2.233,212,0.02,213,0.02,278,3.122,477,3.943,566,3.943,801,4.125,826,2.841,835,3.943,994,3.818,1356,3.943,1357,3.943,1365,5.835,1383,3.943,1384,3.943,1412,3.473,1414,3.943,1415,6.153,1416,4.657,1417,4.657,1418,5.696,1419,4.657,1420,4.657,1421,4.657,1422,5.696,1423,4.657,1424,6.411,1425,5.696,1426,6.153,1427,4.657,1428,5.696,1429,4.657,1430,4.657,1431,4.657,1432,4.657,1433,4.657,1434,4.657,1435,4.657,1436,4.657,1437,4.657,1438,4.657,1439,4.657,1440,4.657,1441,5.696,1442,5.696,1443,4.657,1444,4.657,1445,5.696,1446,4.657,1447,4.657,1448,4.657,1449,4.657,1450,4.657,1451,4.657,1452,4.657,1453,4.657,1454,4.657,1455,4.657,1456,4.657,1457,4.657,1458,4.657,1459,4.657,1460,4.657,1461,4.657,1462,4.657,1463,4.657]],["title/modules.html",[214,1.704]],["body/modules.html",[55,0.022,212,0.022,213,0.022,214,1.943,215,3.582,224,3.26,225,2.992,241,4.864,636,3.26,1407,5.522,1464,6.522,1465,6.707,1466,5.343,1467,5.343]],["title/overview.html",[1468,3.967]],["body/overview.html",[0,0.728,1,2.273,16,2.175,17,1.915,46,1.927,55,0.026,60,1.24,67,1.733,122,0.335,123,0.494,174,1.863,178,1.323,184,2.077,186,2.077,189,1.927,191,2.058,193,1.927,195,1.806,198,1.927,200,1.927,202,2.058,204,1.927,206,1.806,207,1.927,209,1.927,212,0.018,213,0.018,214,1.847,215,4.695,216,2.175,217,2.604,218,3.289,219,3.289,220,3.289,221,3.289,222,3.289,223,3.289,224,4.206,225,3.974,226,2.925,227,3.168,228,3.404,229,2.37,267,1.413,286,3.289,287,3.289,289,3.289,290,3.289,291,3.168,326,0.582,631,3.289,632,3.289,633,3.289,634,3.289,635,3.452,636,3.452,763,2.37,1234,2.604,1468,3.289,1469,4.3,1470,3.885,1471,3.289,1472,3.289,1473,3.885]],["title/routes.html",[67,2.09]],["body/routes.html",[55,0.023,67,2.478,212,0.023,213,0.023]],["title/todo.html",[65,1.758,506,1.932,1474,2.44]],["body/todo.html",[55,0.023,56,0.584,177,3.085,212,0.023,213,0.023,1474,4.665,1475,5.51,1476,5.51]],["title/miscellaneous/variables.html",[1002,2.773,1350,1.614]],["body/miscellaneous/variables.html",[3,0.342,8,1.539,9,0.751,20,2.417,25,0.219,53,0.859,55,0.026,56,0.65,57,0.607,58,1.054,59,1.351,67,0.921,70,0.415,82,2.229,83,1.174,84,2.728,86,1.864,89,1.067,90,0.618,100,1.067,104,1.653,110,2.954,111,2.954,112,4.259,118,2.718,119,2.718,121,3.239,149,2.402,164,1.965,174,0.99,201,0.796,205,1.887,212,0.012,213,0.012,243,4.145,280,1.156,328,1.862,332,0.659,333,1.429,334,1.767,335,1.767,338,1.54,342,0.859,347,1.54,348,0.659,350,1.628,403,1.539,416,1.384,448,3.338,451,1.539,454,1.997,656,4.11,657,3.355,658,3.355,659,3.355,661,1.539,763,2.961,778,3.432,780,2.402,781,1.899,801,2.656,807,2.656,952,1.384,957,2.656,977,3.79,1002,2.159,1003,1.748,1004,1.748,1005,1.748,1006,2.954,1007,2.954,1093,2.954,1127,2.728,1132,4.007,1154,1.539,1163,1.748,1164,1.748,1166,1.539,1182,4.355,1195,1.748,1238,5.25,1276,1.748,1278,4.11,1280,5.535,1281,4.355,1282,4.355,1303,1.748,1304,3.355,1314,1.748,1315,1.748,1320,1.748,1321,3.355,1322,1.748,1323,3.355,1350,1.156,1353,4.11,1362,1.748,1469,1.748,1471,1.748,1472,2.728,1477,3.222,1478,2.064,1479,2.064,1480,5.144,1481,2.064,1482,2.064,1483,2.064,1484,3.222,1485,2.064,1486,3.222,1487,2.064,1488,2.064,1489,3.962,1490,2.064,1491,6.569,1492,2.064,1493,2.064,1494,2.064,1495,3.222,1496,2.064,1497,5.712,1498,5.558,1499,4.476,1500,4.476,1501,5.558,1502,5.712,1503,3.222,1504,2.064,1505,3.222,1506,3.962,1507,2.064,1508,5.144,1509,4.854,1510,4.854,1511,4.854,1512,4.854,1513,2.064,1514,2.064,1515,3.962,1516,3.962,1517,3.962,1518,2.064,1519,3.222,1520,3.222,1521,3.222,1522,4.476,1523,3.222,1524,3.962,1525,2.064,1526,3.962,1527,2.064,1528,2.064,1529,2.064,1530,4.854,1531,2.064,1532,3.222,1533,2.064,1534,2.064,1535,2.064,1536,2.064,1537,2.064,1538,2.064,1539,2.064,1540,2.064,1541,3.962,1542,3.962,1543,3.962,1544,3.962,1545,2.064,1546,2.064,1547,2.064,1548,4.476]]],"invertedIndex":[["",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":454,"title":{},"body":{"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{},"components/PresetConfigComponent.html":{},"pipes/UnNamedPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.5",{"_index":1502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.8.26",{"_index":1349,"title":{},"body":{"dependencies.html":{}}}],["0.9}px",{"_index":608,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["0/1",{"_index":1277,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1286,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1302,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1301,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1294,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1317,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":1298,"title":{},"body":{"coverage.html":{}}}],["0/26",{"_index":1310,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1316,"title":{},"body":{"coverage.html":{}}}],["0/31",{"_index":1293,"title":{},"body":{"coverage.html":{}}}],["0/32",{"_index":1291,"title":{},"body":{"coverage.html":{}}}],["0/33",{"_index":1296,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1318,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1319,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1285,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1313,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":763,"title":{},"body":{"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{},"components/PresetConfigComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.5",{"_index":453,"title":{},"body":{"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{}}}],["1/1",{"_index":1279,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":496,"title":{},"body":{"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["100",{"_index":1132,"title":{},"body":{"components/PresetConfigComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["1280",{"_index":450,"title":{},"body":{"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{}}}],["14",{"_index":1470,"title":{},"body":{"overview.html":{}}}],["17/17",{"_index":1287,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":451,"title":{},"body":{"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"miscellaneous/variables.html":{}}}],["2.0.8",{"_index":1340,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":1347,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1338,"title":{},"body":{"dependencies.html":{}}}],["2/4",{"_index":1308,"title":{},"body":{"coverage.html":{}}}],["2/9",{"_index":1300,"title":{},"body":{"coverage.html":{}}}],["2018",{"_index":1417,"title":{},"body":{"license.html":{}}}],["22",{"_index":1299,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":1283,"title":{},"body":{"coverage.html":{}}}],["250",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["3",{"_index":1472,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["3.1.0",{"_index":1342,"title":{},"body":{"dependencies.html":{}}}],["3.2.1",{"_index":1345,"title":{},"body":{"dependencies.html":{}}}],["3.4.3",{"_index":1335,"title":{},"body":{"dependencies.html":{}}}],["3/7",{"_index":1306,"title":{},"body":{"coverage.html":{}}}],["362606538820",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["4",{"_index":1469,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["4/16",{"_index":1284,"title":{},"body":{"coverage.html":{}}}],["4/4",{"_index":1288,"title":{},"body":{"coverage.html":{}}}],["42",{"_index":1305,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":1471,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["50",{"_index":1307,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["5000",{"_index":1080,"title":{},"body":{"components/HomeComponent.html":{}}}],["56",{"_index":1311,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1344,"title":{},"body":{"dependencies.html":{}}}],["6.0.0",{"_index":1328,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":1330,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1309,"title":{},"body":{"coverage.html":{}}}],["640",{"_index":452,"title":{},"body":{"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{}}}],["750",{"_index":1075,"title":{},"body":{"components/HomeComponent.html":{}}}],["8",{"_index":1473,"title":{},"body":{"overview.html":{}}}],["9/16",{"_index":1312,"title":{},"body":{"coverage.html":{}}}],["9th",{"_index":1535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9}px",{"_index":462,"title":{},"body":{"components/ConfigComponent.html":{}}}],["_activeconfigchang",{"_index":662,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["_authstat",{"_index":955,"title":{},"body":{"injectables/GoogleService.html":{}}}],["_closecommand",{"_index":1086,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["_configsubject",{"_index":663,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["_folderpick",{"_index":1007,"title":{},"body":{"injectables/GoogleService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["_folderpicked.asobserv",{"_index":999,"title":{},"body":{"injectables/GoogleService.html":{}}}],["_folderpicked.error(tru",{"_index":1013,"title":{},"body":{"injectables/GoogleService.html":{}}}],["_folderpicked.next(data.docs[0",{"_index":1011,"title":{},"body":{"injectables/GoogleService.html":{}}}],["abov",{"_index":1440,"title":{},"body":{"license.html":{}}}],["abreu",{"_index":1368,"title":{},"body":{"index.html":{}}}],["access",{"_index":272,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{},"components/UnauthenticatedComponent.html":{}}}],["accessor",{"_index":928,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["account",{"_index":1165,"title":{},"body":{"components/SettingsComponent.html":{},"index.html":{}}}],["action",{"_index":566,"title":{},"body":{"components/ConfigListComponent.html":{},"license.html":{}}}],["activ",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["activeconfig",{"_index":330,"title":{},"body":{"interfaces/Config.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"injectables/SorterService.html":{}}}],["activeconfigchang",{"_index":664,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["activeconfigchangesubscript",{"_index":520,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["activeconfignam",{"_index":1060,"title":{},"body":{"components/HomeComponent.html":{}}}],["actual_compon",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["ad",{"_index":1131,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["add",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"classes/DriveQueryBuilder.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"index.html":{},"todo.html":{}}}],["addconfig",{"_index":667,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["addconfig(config",{"_index":677,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["addconfig(configbuilder.configfromgroup(group",{"_index":1126,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["addgroup",{"_index":355,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["addgroup(config",{"_index":360,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["addpar",{"_index":1054,"title":{},"body":{"injectables/GoogleService.html":{}}}],["addpreset",{"_index":1089,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["addpreset(presetid",{"_index":1091,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["address",{"_index":817,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["addview(view",{"_index":1035,"title":{},"body":{"injectables/GoogleService.html":{}}}],["afterviewinit",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{}}}],["aizasyb",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["allow",{"_index":990,"title":{},"body":{"injectables/GoogleService.html":{}}}],["alt",{"_index":735,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["and/or",{"_index":1434,"title":{},"body":{"license.html":{}}}],["angular/anim",{"_index":1327,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1329,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/collect",{"_index":497,"title":{},"body":{"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["angular/cdk/overlay",{"_index":441,"title":{},"body":{"components/ConfigComponent.html":{}}}],["angular/cli",{"_index":1395,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":294,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"dependencies.html":{}}}],["angular/compil",{"_index":1331,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler/src/cor",{"_index":569,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["angular/cor",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":305,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1332,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"dependencies.html":{}}}],["angular/material/button",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/menu",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/tab",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigRoutingModule.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"injectables/PreventAuthGuardService.html":{},"dependencies.html":{}}}],["angularj",{"_index":1392,"title":{},"body":{"index.html":{}}}],["anim",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["animate('0.1",{"_index":1495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["anyinvalid",{"_index":946,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["api",{"_index":954,"title":{},"body":{"injectables/GoogleService.html":{}}}],["apikey",{"_index":131,"title":{},"body":{"components/AppComponent.html":{}}}],["app",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"modules/AuthenticatedModule.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"index.html":{}}}],["app.compon",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"components/ConfigComponent.html":{}}}],["app.component.html",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["app.rout",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["app/config",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"modules/ConfigRoutingModule.html":{}}}],["app/config/cr",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"modules/ConfigRoutingModule.html":{}}}],["app/config/edit",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"modules/ConfigRoutingModule.html":{}}}],["app/config/preset",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"modules/ConfigRoutingModule.html":{}}}],["app/hom",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["app/set",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appconfig",{"_index":656,"title":{},"body":{"modules/ConfigRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["appconfigcr",{"_index":657,"title":{},"body":{"modules/ConfigRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["appconfigedit",{"_index":659,"title":{},"body":{"modules/ConfigRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["appconfigpreset",{"_index":658,"title":{},"body":{"modules/ConfigRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["appdatafold",{"_index":721,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["apphom",{"_index":1508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applic",{"_index":11,"title":{},"body":{"components/AppComponent.html":{}}}],["application/vnd.googl",{"_index":852,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["appmodul",{"_index":215,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approut",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["apps.audio",{"_index":853,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.docu",{"_index":854,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.draw",{"_index":856,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.driv",{"_index":880,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.fil",{"_index":857,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.fold",{"_index":858,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"miscellaneous/enumerations.html":{}}}],["apps.form",{"_index":860,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.fusiont",{"_index":862,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.map",{"_index":864,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.photo",{"_index":866,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.present",{"_index":868,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.script",{"_index":870,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.sit",{"_index":872,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.spreadsheet",{"_index":874,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.unknown",{"_index":876,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.video",{"_index":878,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["appset",{"_index":1511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aren't",{"_index":273,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{}}}],["arg",{"_index":1240,"title":{},"body":{"pipes/UnNamedPipe.html":{}}}],["aris",{"_index":1463,"title":{},"body":{"license.html":{}}}],["array",{"_index":346,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{}}}],["arredondo",{"_index":1361,"title":{},"body":{"index.html":{}}}],["art_track",{"_index":1268,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["ashhad",{"_index":1372,"title":{},"body":{"index.html":{}}}],["assets/images/istem",{"_index":1539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["associ",{"_index":1383,"title":{},"body":{"index.html":{},"license.html":{}}}],["audio",{"_index":851,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["authenitc",{"_index":1005,"title":{},"body":{"injectables/GoogleService.html":{},"miscellaneous/variables.html":{}}}],["authent",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"injectables/GoogleService.html":{},"injectables/PreventAuthGuardService.html":{},"components/UnauthenticatedComponent.html":{}}}],["authenticatedmodul",{"_index":224,"title":{"modules/AuthenticatedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules.html":{},"overview.html":{}}}],["authenticatedmodule.forroot",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["authguardservic",{"_index":226,"title":{"injectables/AuthGuardService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/ConfigRoutingModule.html":{},"injectables/PreventAuthGuardService.html":{},"coverage.html":{},"overview.html":{}}}],["authinst",{"_index":1006,"title":{},"body":{"injectables/GoogleService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authinstance.currentuser.get().getauthresponse().access_token",{"_index":1032,"title":{},"body":{"injectables/GoogleService.html":{}}}],["authinstance.currentuser.get().getauthresponse().id_token",{"_index":1040,"title":{},"body":{"injectables/GoogleService.html":{}}}],["authinstance.issignedin.get",{"_index":1020,"title":{},"body":{"injectables/GoogleService.html":{}}}],["authinstance.issignedin.listen",{"_index":1017,"title":{},"body":{"injectables/GoogleService.html":{}}}],["authinstance.signin",{"_index":1038,"title":{},"body":{"injectables/GoogleService.html":{}}}],["authinstance.signout",{"_index":1039,"title":{},"body":{"injectables/GoogleService.html":{}}}],["author",{"_index":1454,"title":{},"body":{"license.html":{}}}],["authstat",{"_index":956,"title":{},"body":{"injectables/GoogleService.html":{}}}],["authstatu",{"_index":1019,"title":{},"body":{"injectables/GoogleService.html":{}}}],["auto",{"_index":1399,"title":{},"body":{"index.html":{}}}],["avail",{"_index":1467,"title":{},"body":{"modules.html":{}}}],["base",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["beed",{"_index":845,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["befor",{"_index":811,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["behaviorsubject",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["behaviorsubject(tru",{"_index":486,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["between",{"_index":1195,"title":{},"body":{"injectables/SorterService.html":{},"miscellaneous/variables.html":{}}}],["bodi",{"_index":747,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["boolean",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{}}}],["bootstrap",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"overview.html":{}}}],["brandon",{"_index":1356,"title":{},"body":{"index.html":{},"license.html":{}}}],["break",{"_index":408,"title":{},"body":{"classes/ConfigBuilder.html":{},"injectables/SorterService.html":{}}}],["brows",{"_index":1465,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":780,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"miscellaneous/variables.html":{}}}],["builder",{"_index":716,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"components/PresetConfigComponent.html":{},"injectables/SorterService.html":{}}}],["builder.t",{"_index":354,"title":{},"body":{"classes/ConfigBuilder.html":{},"classes/DriveQueryBuilder.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["builder.ts:106",{"_index":842,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:11",{"_index":375,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["builder.ts:114",{"_index":369,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["builder.ts:117",{"_index":832,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:128",{"_index":813,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:139",{"_index":806,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:143",{"_index":367,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["builder.ts:150",{"_index":810,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:161",{"_index":834,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:172",{"_index":837,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:183",{"_index":844,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:196",{"_index":847,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:209",{"_index":825,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:39",{"_index":365,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["builder.ts:40",{"_index":803,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:48",{"_index":829,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:50",{"_index":798,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:57",{"_index":378,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["builder.ts:73",{"_index":821,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:84",{"_index":849,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:95",{"_index":839,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["built",{"_index":830,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["c",{"_index":1416,"title":{},"body":{"license.html":{}}}],["calculatestart",{"_index":476,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["calculatestart(pag",{"_index":488,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["call",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["callback",{"_index":978,"title":{},"body":{"injectables/GoogleService.html":{}}}],["canactiv",{"_index":274,"title":{},"body":{"injectables/AuthGuardService.html":{},"modules/ConfigRoutingModule.html":{},"injectables/PreventAuthGuardService.html":{}}}],["cancel",{"_index":1012,"title":{},"body":{"injectables/GoogleService.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["case",{"_index":405,"title":{},"body":{"classes/ConfigBuilder.html":{},"injectables/SorterService.html":{}}}],["catch(err",{"_index":765,"title":{},"body":{"injectables/DatabaseService.html":{},"components/PresetConfigComponent.html":{}}}],["categori",{"_index":1531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cb",{"_index":689,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"injectables/SorterService.html":{}}}],["cb(resp",{"_index":1042,"title":{},"body":{"injectables/GoogleService.html":{}}}],["cb(true",{"_index":1056,"title":{},"body":{"injectables/GoogleService.html":{}}}],["cd",{"_index":1390,"title":{},"body":{"index.html":{}}}],["cesped",{"_index":1369,"title":{},"body":{"index.html":{}}}],["chang",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigListComponent.html":{}}}],["changedetector",{"_index":536,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["changedetectorref",{"_index":534,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["charg",{"_index":1421,"title":{},"body":{"license.html":{}}}],["checkinterv",{"_index":1120,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["checkout",{"_index":1391,"title":{},"body":{"index.html":{}}}],["claim",{"_index":1457,"title":{},"body":{"license.html":{}}}],["class",{"_index":123,"title":{"classes/ConfigBuilder.html":{},"classes/ConfigDataSource.html":{},"classes/DriveQueryBuilder.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["classes(period",{"_index":1537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["classes/config",{"_index":575,"title":{},"body":{"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"components/PresetConfigComponent.html":{},"injectables/SorterService.html":{}}}],["classes/dr",{"_index":1000,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/SorterService.html":{}}}],["classifi",{"_index":334,"title":{},"body":{"interfaces/Config.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"miscellaneous/variables.html":{}}}],["clear",{"_index":1163,"title":{},"body":{"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["clearconfig",{"_index":668,"title":{},"body":{"injectables/DatabaseService.html":{},"components/SettingsComponent.html":{}}}],["clearinterval(checkinterv",{"_index":1121,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["clearinterval(databaseinitalizedcheck",{"_index":1074,"title":{},"body":{"components/HomeComponent.html":{}}}],["clearinterval(googleinitinterv",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["clientid",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["clone",{"_index":1388,"title":{},"body":{"index.html":{}}}],["close",{"_index":611,"title":{},"body":{"components/ConfigListComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["closecommand",{"_index":466,"title":{},"body":{"components/ConfigComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["closesubscript",{"_index":609,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["closesubscription.unsubscrib",{"_index":612,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["cluster_appmodul",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_appcomponent_provid",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authenticatedmodul",{"_index":286,"title":{},"body":{"modules/AuthenticatedModule.html":{},"overview.html":{}}}],["cluster_authenticatedmodule_declar",{"_index":287,"title":{},"body":{"modules/AuthenticatedModule.html":{},"overview.html":{}}}],["cluster_authenticatedmodule_export",{"_index":289,"title":{},"body":{"modules/AuthenticatedModule.html":{},"overview.html":{}}}],["cluster_authenticatedmodule_import",{"_index":288,"title":{},"body":{"modules/AuthenticatedModule.html":{}}}],["cluster_authenticatedmodule_provid",{"_index":290,"title":{},"body":{"modules/AuthenticatedModule.html":{},"overview.html":{}}}],["cluster_configmodul",{"_index":631,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_declar",{"_index":632,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_export",{"_index":634,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_import",{"_index":633,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["commonmodul",{"_index":293,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["compat",{"_index":1343,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["compdoc",{"_index":1400,"title":{},"body":{"index.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthenticatedModule.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigRoutingModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component_templ",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["componentinst",{"_index":463,"title":{},"body":{"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{}}}],["componentinstance.closecommand.subscrib",{"_index":610,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["components/auth/unauthenticated/unauthenticated.compon",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["components/shared/config",{"_index":299,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["components/shared/edit",{"_index":639,"title":{},"body":{"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{}}}],["components/shared/fold",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{}}}],["components/shared/new",{"_index":645,"title":{},"body":{"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{}}}],["components/tabs/config/config",{"_index":296,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["components/tabs/config/config.compon",{"_index":295,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigRoutingModule.html":{}}}],["components/tabs/config/preset",{"_index":651,"title":{},"body":{"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{}}}],["components/tabs/home/home.compon",{"_index":306,"title":{},"body":{"modules/AuthenticatedModule.html":{}}}],["components/tabs/settings/settings.compon",{"_index":321,"title":{},"body":{"modules/AuthenticatedModule.html":{}}}],["condit",{"_index":1439,"title":{},"body":{"license.html":{}}}],["config",{"_index":187,"title":{"interfaces/Config.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{}}}],["config'},{'nam",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["config.compon",{"_index":567,"title":{},"body":{"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/PresetConfigPageComponent.html":{}}}],["config.component.html",{"_index":421,"title":{},"body":{"components/ConfigComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["config.component.scss",{"_index":420,"title":{},"body":{"components/ConfigComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["config.component.t",{"_index":1085,"title":{},"body":{"components/PresetConfigComponent.html":{},"coverage.html":{}}}],["config.component.ts:17",{"_index":1096,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.component.ts:19",{"_index":1098,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.component.ts:21",{"_index":1099,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.component.ts:22",{"_index":1100,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.component.ts:23",{"_index":1090,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.component.ts:26",{"_index":1102,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.component.ts:27",{"_index":1101,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.component.ts:33",{"_index":1095,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.component.ts:35",{"_index":1094,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.component.ts:39",{"_index":1092,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.data.createfold",{"_index":1106,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.data.group",{"_index":1107,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.group",{"_index":387,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["config.id",{"_index":388,"title":{},"body":{"classes/ConfigBuilder.html":{},"injectables/DatabaseService.html":{}}}],["config.nam",{"_index":389,"title":{},"body":{"classes/ConfigBuilder.html":{},"components/ConfigListComponent.html":{},"components/HomeComponent.html":{}}}],["config.name.length",{"_index":390,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["config/config.modul",{"_index":302,"title":{},"body":{"modules/AuthenticatedModule.html":{}}}],["config/preset",{"_index":574,"title":{},"body":{"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"coverage.html":{}}}],["configbuild",{"_index":352,"title":{"classes/ConfigBuilder.html":{}},"body":{"classes/ConfigBuilder.html":{},"injectables/DatabaseService.html":{},"components/PresetConfigComponent.html":{},"injectables/SorterService.html":{},"coverage.html":{}}}],["configbuilder.foldernamebuild",{"_index":1228,"title":{},"body":{"injectables/SorterService.html":{}}}],["configbuilder.generatenewconfig",{"_index":750,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["configchangesubscript",{"_index":521,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["configcompon",{"_index":184,"title":{"components/ConfigComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthenticatedModule.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigRoutingModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["configdatasourc",{"_index":471,"title":{"classes/ConfigDataSource.html":{}},"body":{"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"coverage.html":{}}}],["configdatasource(this.pagin",{"_index":578,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["configfromgroup",{"_index":356,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["configfromgroup(group",{"_index":366,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["confighold",{"_index":381,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["configholder.groups[0].createfold",{"_index":382,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["configholder.groups[0].destin",{"_index":383,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["configid",{"_index":542,"title":{},"body":{"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{}}}],["configindex",{"_index":760,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["configinterfac",{"_index":329,"title":{"interfaces/ConfigInterface.html":{}},"body":{"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"coverage.html":{}}}],["configkey",{"_index":539,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["configlistcompon",{"_index":186,"title":{"components/ConfigListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthenticatedModule.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["configmodalcompon",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"modules/AuthenticatedModule.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["configmodul",{"_index":225,"title":{"modules/ConfigModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"modules.html":{},"overview.html":{}}}],["configmodule.forroot",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{}}}],["confignam",{"_index":376,"title":{},"body":{"classes/ConfigBuilder.html":{},"injectables/DatabaseService.html":{}}}],["configroutingmodul",{"_index":636,"title":{"modules/ConfigRoutingModule.html":{}},"body":{"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["configs.find(config",{"_index":759,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["configs[config].id",{"_index":509,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["configs[config].nam",{"_index":510,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["configs[config]['nam",{"_index":511,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["configsinterfac",{"_index":349,"title":{"interfaces/ConfigsInterface.html":{}},"body":{"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"injectables/SorterService.html":{},"coverage.html":{}}}],["configsubject",{"_index":474,"title":{},"body":{"classes/ConfigDataSource.html":{},"injectables/DatabaseService.html":{}}}],["configur",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["configuration'",{"_index":624,"title":{},"body":{"components/ConfigListComponent.html":{},"components/HomeComponent.html":{}}}],["configuration.json",{"_index":719,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["configuration\\'",{"_index":630,"title":{},"body":{"components/ConfigListComponent.html":{},"components/HomeComponent.html":{}}}],["connect",{"_index":477,"title":{},"body":{"classes/ConfigDataSource.html":{},"license.html":{}}}],["console.error",{"_index":603,"title":{},"body":{"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{}}}],["console.error(err",{"_index":767,"title":{},"body":{"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{}}}],["console.error(resp.err",{"_index":1044,"title":{},"body":{"injectables/GoogleService.html":{}}}],["const",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigRoutingModule.html":{},"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"injectables/SorterService.html":{}}}],["constantli",{"_index":1377,"title":{},"body":{"index.html":{}}}],["constraint",{"_index":335,"title":{},"body":{"interfaces/Config.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{}}}],["constructor(appcompon",{"_index":427,"title":{},"body":{"components/ConfigComponent.html":{}}}],["constructor(changedetector",{"_index":533,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["constructor(databas",{"_index":965,"title":{},"body":{"injectables/GoogleService.html":{}}}],["constructor(googl",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/FolderCreationComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{}}}],["constructor(pagin",{"_index":480,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["constructor(parentfolderid",{"_index":796,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["constructor(priv",{"_index":499,"title":{},"body":{"classes/ConfigDataSource.html":{},"components/FolderCreationComponent.html":{}}}],["constructor(publ",{"_index":284,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{},"components/UnauthenticatedComponent.html":{}}}],["constructor(zon",{"_index":1064,"title":{},"body":{"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{}}}],["contact@brandoncravener.com",{"_index":1411,"title":{},"body":{"index.html":{}}}],["contain",{"_index":884,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["content",{"_index":827,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["content'",{"_index":840,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["context",{"_index":1323,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contract",{"_index":1460,"title":{},"body":{"license.html":{}}}],["contribut",{"_index":1401,"title":{},"body":{"index.html":{}}}],["contributor",{"_index":1371,"title":{},"body":{"index.html":{}}}],["control",{"_index":1083,"title":{},"body":{"components/HomeComponent.html":{}}}],["copi",{"_index":1424,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1415,"title":{},"body":{"license.html":{}}}],["core",{"_index":1336,"title":{},"body":{"dependencies.html":{}}}],["countributor",{"_index":1355,"title":{},"body":{"index.html":{}}}],["coverag",{"_index":1273,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["craven",{"_index":1357,"title":{},"body":{"index.html":{},"license.html":{}}}],["creat",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["createconfig",{"_index":669,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["createconfig(confignam",{"_index":681,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["createconfigbuttonst",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["createdaft",{"_index":783,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["createdafter(d",{"_index":805,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["createdafter(rule.data.firstd",{"_index":1196,"title":{},"body":{"injectables/SorterService.html":{}}}],["createdbefor",{"_index":784,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["createdbefore(d",{"_index":809,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["createdbefore(rule.data.secondd",{"_index":1197,"title":{},"body":{"injectables/SorterService.html":{}}}],["createdfold",{"_index":1108,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["createdirect",{"_index":568,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["createdtim",{"_index":885,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["createfold",{"_index":348,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"interfaces/RuleInterface.html":{},"miscellaneous/variables.html":{}}}],["createfolder(fold",{"_index":1114,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["createfolder(nam",{"_index":967,"title":{},"body":{"injectables/GoogleService.html":{}}}],["createfolder(newfoldernam",{"_index":1229,"title":{},"body":{"injectables/SorterService.html":{}}}],["createfolderconfig",{"_index":370,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["createfolderconfig.name.typ",{"_index":410,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["createfolderconfig.name.valu",{"_index":411,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["createfolderconfig.prefix.typ",{"_index":404,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["createfolderconfig.prefix.valu",{"_index":407,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["createfolderconfig.suffix.typ",{"_index":412,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["createfolderconfig.suffix.valu",{"_index":413,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["createfolders.foreach(fold",{"_index":1112,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["createresponse.result.id",{"_index":731,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["creation",{"_index":892,"title":{},"body":{"components/FolderCreationComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["creation'},{'nam",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["creation.compon",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{}}}],["creation.component.html",{"_index":894,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.scss",{"_index":893,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.t",{"_index":891,"title":{},"body":{"components/FolderCreationComponent.html":{},"coverage.html":{}}}],["creation.component.ts:102",{"_index":919,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:118",{"_index":920,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:146",{"_index":912,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:153",{"_index":916,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:19",{"_index":909,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:21",{"_index":911,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:23",{"_index":927,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:25",{"_index":925,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:39",{"_index":921,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:57",{"_index":926,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:59",{"_index":922,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:61",{"_index":930,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:67",{"_index":908,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:71",{"_index":913,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:79",{"_index":914,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:85",{"_index":915,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation/fold",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"coverage.html":{}}}],["creationd",{"_index":1192,"title":{},"body":{"injectables/SorterService.html":{}}}],["creationen",{"_index":1087,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["current",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"components/UnauthenticatedComponent.html":{}}}],["customiz",{"_index":1270,"title":{},"body":{"components/UnauthenticatedComponent.html":{},"index.html":{}}}],["damag",{"_index":1458,"title":{},"body":{"license.html":{}}}],["data",{"_index":333,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigRoutingModule.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["data.act",{"_index":1009,"title":{},"body":{"injectables/GoogleService.html":{}}}],["data.push",{"_index":512,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["databas",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{}}}],["database/database.servic",{"_index":1001,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/SorterService.html":{}}}],["databaseinitalizedcheck",{"_index":1070,"title":{},"body":{"components/HomeComponent.html":{}}}],["databaseservic",{"_index":46,"title":{"injectables/DatabaseService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"coverage.html":{},"overview.html":{}}}],["datasourc",{"_index":473,"title":{},"body":{"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["date",{"_index":409,"title":{},"body":{"classes/ConfigBuilder.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{}}}],["date.toisostring().split('.')[0",{"_index":886,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["deal",{"_index":1425,"title":{},"body":{"license.html":{}}}],["declar",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"components/ConfigComponent.html":{},"modules/ConfigModule.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{},"overview.html":{}}}],["decor",{"_index":562,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["default",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{}}}],["delet",{"_index":1164,"title":{},"body":{"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["delete_forev",{"_index":627,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["deleteaccount",{"_index":1157,"title":{},"body":{"components/SettingsComponent.html":{}}}],["deleteconfig",{"_index":527,"title":{},"body":{"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{}}}],["deleteconfig(configid",{"_index":685,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["deleteconfig(configkey",{"_index":537,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["depend",{"_index":216,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"components/ConfigComponent.html":{},"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["design",{"_index":1544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["destin",{"_index":347,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"injectables/SorterService.html":{},"miscellaneous/variables.html":{}}}],["destinationfold",{"_index":374,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["destinationloc",{"_index":683,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["determin",{"_index":277,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{}}}],["develop",{"_index":1362,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["dialog",{"_index":428,"title":{},"body":{"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{}}}],["dialoginst",{"_index":457,"title":{},"body":{"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{}}}],["dialoginstance.clos",{"_index":468,"title":{},"body":{"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{}}}],["dialoginstance.componentinst",{"_index":464,"title":{},"body":{"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{}}}],["dialogsubscript",{"_index":465,"title":{},"body":{"components/ConfigComponent.html":{}}}],["dialogsubscription.unsubscrib",{"_index":469,"title":{},"body":{"components/ConfigComponent.html":{}}}],["dialogwidth",{"_index":455,"title":{},"body":{"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{}}}],["dialogwidth}px",{"_index":459,"title":{},"body":{"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{}}}],["direct",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["disablefeature(google.picker.feature.support_team_dr",{"_index":1029,"title":{},"body":{"injectables/GoogleService.html":{}}}],["disabletrash",{"_index":797,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["disconnect",{"_index":478,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["discoverydoc",{"_index":137,"title":{},"body":{"components/AppComponent.html":{}}}],["distribut",{"_index":1432,"title":{},"body":{"license.html":{}}}],["doc:buildandserv",{"_index":1398,"title":{},"body":{"index.html":{}}}],["document",{"_index":826,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{}}}],["document.body.clientheight",{"_index":461,"title":{},"body":{"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{}}}],["document.body.clientwidth",{"_index":449,"title":{},"body":{"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{}}}],["document.getelementbyid('loader').remov",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["done",{"_index":899,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["draw",{"_index":855,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["drive",{"_index":781,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["drivemimetyp",{"_index":820,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"injectables/SorterService.html":{},"miscellaneous/enumerations.html":{}}}],["drivemimetype.fold",{"_index":1046,"title":{},"body":{"injectables/GoogleService.html":{}}}],["drivequeri",{"_index":1178,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.createdafter(rule.data.d",{"_index":1193,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.createdbefore(rule.data.d",{"_index":1194,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.excludesowner(own",{"_index":1191,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.excludetype(typ",{"_index":1188,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.fulltextcontains(rule.data.fulltext",{"_index":1181,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.get",{"_index":1208,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.hasowner(own",{"_index":1190,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.modifiedafter(rule.data.d",{"_index":1204,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.modifiedbefore(rule.data.d",{"_index":1205,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.namecontains(titl",{"_index":1184,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.nameexcludes(titl",{"_index":1185,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.openedafter(rule.data.d",{"_index":1199,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.openedbefore(rule.data.d",{"_index":1200,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.requirestype(typ",{"_index":1187,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequerybuild",{"_index":776,"title":{"classes/DriveQueryBuilder.html":{}},"body":{"classes/DriveQueryBuilder.html":{},"injectables/SorterService.html":{},"coverage.html":{}}}],["drivequerybuilder(destination.folderid",{"_index":1209,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequerybuilder(group.source.folderid",{"_index":1179,"title":{},"body":{"injectables/SorterService.html":{}}}],["durat",{"_index":1079,"title":{},"body":{"components/HomeComponent.html":{}}}],["dynam",{"_index":1333,"title":{},"body":{"dependencies.html":{}}}],["eas",{"_index":1503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["easi",{"_index":1003,"title":{},"body":{"injectables/GoogleService.html":{},"miscellaneous/variables.html":{}}}],["easier",{"_index":1257,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["edit",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["editconfig",{"_index":528,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["editconfig(configid",{"_index":540,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["editconfigmodalcompon",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editconfigpagecompon",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editingconfig",{"_index":665,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["effect",{"_index":1259,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["element",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["element.id",{"_index":1105,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["email",{"_index":816,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["engin",{"_index":1543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enter",{"_index":1497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entrycompon",{"_index":638,"title":{},"body":{"modules/ConfigModule.html":{}}}],["enum",{"_index":850,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["enumer",{"_index":1351,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environments/environment.prod",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":602,"title":{},"body":{"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{}}}],["event",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/FolderCreationComponent.html":{},"license.html":{}}}],["event.check",{"_index":943,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["event.url",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["eventemitt",{"_index":910,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["exampl",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/ConfigComponent.html":{},"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["exclud",{"_index":818,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"injectables/SorterService.html":{}}}],["excludesown",{"_index":785,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["excludesowner(email",{"_index":812,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["excludetyp",{"_index":786,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["excludetype(mimetyp",{"_index":819,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["exclus",{"_index":815,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["execute(resp",{"_index":1041,"title":{},"body":{"injectables/GoogleService.html":{}}}],["export",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"overview.html":{}}}],["express",{"_index":1447,"title":{},"body":{"license.html":{}}}],["extend",{"_index":1137,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["fabanim",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["faccoldi",{"_index":1364,"title":{},"body":{"index.html":{}}}],["fadeoutin",{"_index":1278,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["fals",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"injectables/SorterService.html":{},"miscellaneous/variables.html":{}}}],["featur",{"_index":1381,"title":{},"body":{"index.html":{}}}],["fernando",{"_index":1360,"title":{},"body":{"index.html":{}}}],["field",{"_index":722,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{}}}],["file.id",{"_index":1221,"title":{},"body":{"injectables/SorterService.html":{}}}],["file.parents.join",{"_index":1053,"title":{},"body":{"injectables/GoogleService.html":{}}}],["fileid",{"_index":697,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{}}}],["fileresourc",{"_index":1045,"title":{},"body":{"injectables/GoogleService.html":{}}}],["fileresource['par",{"_index":1047,"title":{},"body":{"injectables/GoogleService.html":{}}}],["files(id",{"_index":723,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["finish",{"_index":895,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["firstgroupnam",{"_index":372,"title":{},"body":{"classes/ConfigBuilder.html":{},"injectables/DatabaseService.html":{}}}],["firstgrouprul",{"_index":364,"title":{},"body":{"classes/ConfigBuilder.html":{},"injectables/DatabaseService.html":{}}}],["fit",{"_index":1450,"title":{},"body":{"license.html":{}}}],["fix",{"_index":1500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["folder",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"miscellaneous/enumerations.html":{}}}],["folder.parent.folderid",{"_index":945,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["folder[attribute].typ",{"_index":949,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["folder[attribute].value.length",{"_index":950,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["foldercr",{"_index":339,"title":{"interfaces/FolderCreation.html":{}},"body":{"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"coverage.html":{}}}],["foldercreationcompon",{"_index":195,"title":{"components/FolderCreationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["folderid",{"_index":338,"title":{},"body":{"interfaces/Config.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"interfaces/RuleInterface.html":{},"miscellaneous/variables.html":{}}}],["foldernamebuild",{"_index":357,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["foldernamebuilder(createfolderconfig",{"_index":368,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["folderpick",{"_index":957,"title":{},"body":{"injectables/GoogleService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["folderpicked(data",{"_index":1008,"title":{},"body":{"injectables/GoogleService.html":{},"miscellaneous/functions.html":{}}}],["folderpickedlisten",{"_index":935,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["folderpickedlistener.unsubscrib",{"_index":941,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["folderpicker.setvisible(tru",{"_index":1037,"title":{},"body":{"injectables/GoogleService.html":{}}}],["follow",{"_index":1438,"title":{},"body":{"license.html":{}}}],["form",{"_index":859,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["formsmodul",{"_index":303,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["forroot",{"_index":325,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["foundgroup",{"_index":1116,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["foundgroup.destin",{"_index":1119,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["free",{"_index":1384,"title":{},"body":{"index.html":{},"license.html":{}}}],["friendli",{"_index":1382,"title":{},"body":{"index.html":{}}}],["fulli",{"_index":1269,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["fulltext",{"_index":1180,"title":{},"body":{"injectables/SorterService.html":{}}}],["fulltextcontain",{"_index":787,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["fulltextcontains(text",{"_index":824,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["function",{"_index":690,"title":{"miscellaneous/functions.html":{}},"body":{"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"injectables/SorterService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["furnish",{"_index":1437,"title":{},"body":{"license.html":{}}}],["fustiont",{"_index":861,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["g",{"_index":1253,"title":{},"body":{"components/UnauthenticatedComponent.html":{},"index.html":{}}}],["gapi",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gapi.auth2.getauthinst",{"_index":1016,"title":{},"body":{"injectables/GoogleService.html":{}}}],["gapi.cli",{"_index":742,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["gapi.client.dr",{"_index":1211,"title":{},"body":{"injectables/SorterService.html":{}}}],["gapi.client.drive.fil",{"_index":717,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{}}}],["gapi.client.drive.files.upd",{"_index":1050,"title":{},"body":{"injectables/GoogleService.html":{}}}],["gapi.client.init(config).then",{"_index":1015,"title":{},"body":{"injectables/GoogleService.html":{}}}],["gapi.load('client:auth2",{"_index":1014,"title":{},"body":{"injectables/GoogleService.html":{}}}],["gapi.load('pick",{"_index":1022,"title":{},"body":{"injectables/GoogleService.html":{}}}],["gener",{"_index":804,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"index.html":{}}}],["generatenewconfig",{"_index":358,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["generatenewconfig(confignam",{"_index":371,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["geo",{"_index":1545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["geometri",{"_index":1530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get",{"_index":65,"title":{"index.html":{},"license.html":{},"todo.html":{}},"body":{"components/AppComponent.html":{},"injectables/GoogleService.html":{}}}],["getactiveconfig",{"_index":529,"title":{},"body":{"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{}}}],["getactiveconfig(configkey",{"_index":543,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["getauthstatu",{"_index":958,"title":{},"body":{"injectables/GoogleService.html":{}}}],["getconfig",{"_index":670,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["getconfig(configid",{"_index":688,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["getdialogwidth",{"_index":423,"title":{},"body":{"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{}}}],["getdrivequeri",{"_index":1167,"title":{},"body":{"injectables/SorterService.html":{}}}],["getdrivequery(group",{"_index":1170,"title":{},"body":{"injectables/SorterService.html":{}}}],["getfileinfo",{"_index":959,"title":{},"body":{"injectables/GoogleService.html":{}}}],["getfileinfo(fileid",{"_index":972,"title":{},"body":{"injectables/GoogleService.html":{}}}],["getitem",{"_index":1525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getroutest",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["getroutestate(outlet",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["gettoken",{"_index":960,"title":{},"body":{"injectables/GoogleService.html":{}}}],["getuntitledfil",{"_index":1168,"title":{},"body":{"injectables/SorterService.html":{}}}],["getuntitledfiles(destin",{"_index":1172,"title":{},"body":{"injectables/SorterService.html":{}}}],["getvalu",{"_index":929,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["git",{"_index":1387,"title":{},"body":{"index.html":{}}}],["gitter",{"_index":1406,"title":{},"body":{"index.html":{}}}],["global",{"_index":1394,"title":{},"body":{"index.html":{}}}],["go",{"_index":279,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/HomeComponent.html":{},"injectables/PreventAuthGuardService.html":{}}}],["googl",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["google.picker.docsview(google.picker.viewid.fold",{"_index":1023,"title":{},"body":{"injectables/GoogleService.html":{}}}],["google.picker.pickerbuild",{"_index":1028,"title":{},"body":{"injectables/GoogleService.html":{}}}],["google/google.servic",{"_index":283,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{},"injectables/SorterService.html":{}}}],["googleinitinterv",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["googleservic",{"_index":17,"title":{"injectables/GoogleService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/PresetConfigComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gotoconfigpag",{"_index":1062,"title":{},"body":{"components/HomeComponent.html":{}}}],["grade",{"_index":1536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grant",{"_index":1420,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1466,"title":{},"body":{"modules.html":{}}}],["group",{"_index":350,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"interfaces/RuleInterface.html":{},"injectables/SorterService.html":{},"miscellaneous/variables.html":{}}}],["group.createfold",{"_index":391,"title":{},"body":{"classes/ConfigBuilder.html":{},"injectables/SorterService.html":{}}}],["group.createfolder.nam",{"_index":392,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["group.createfolder.name.value.length",{"_index":396,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["group.createfolder.par",{"_index":393,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["group.createfolder.parent.folderid",{"_index":1230,"title":{},"body":{"injectables/SorterService.html":{}}}],["group.createfolder.prefix",{"_index":394,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["group.createfolder.suffix",{"_index":395,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["group.destin",{"_index":1214,"title":{},"body":{"injectables/SorterService.html":{}}}],["group.destination.folderid",{"_index":1222,"title":{},"body":{"injectables/SorterService.html":{}}}],["group.destination.presetid",{"_index":1118,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["group.rules.foreach(rul",{"_index":1124,"title":{},"body":{"components/PresetConfigComponent.html":{},"injectables/SorterService.html":{}}}],["group.source.renameuntitl",{"_index":1224,"title":{},"body":{"injectables/SorterService.html":{}}}],["group['id",{"_index":1123,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["groupfolderinterfac",{"_index":336,"title":{"interfaces/GroupFolderInterface.html":{}},"body":{"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"injectables/SorterService.html":{},"coverage.html":{}}}],["groupinterfac",{"_index":345,"title":{"interfaces/GroupInterface.html":{}},"body":{"interfaces/Config.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"injectables/SorterService.html":{},"coverage.html":{}}}],["groups.find(group",{"_index":1117,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["groups.foreach(group",{"_index":1122,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["guard.servic",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigRoutingModule.html":{}}}],["guard.service.t",{"_index":269,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{},"coverage.html":{}}}],["guard.service.ts:13",{"_index":275,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["guard.service.ts:21",{"_index":282,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["guard.service.ts:28",{"_index":276,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["guard.service.ts:47",{"_index":1151,"title":{},"body":{"injectables/PreventAuthGuardService.html":{}}}],["guard.service.ts:55",{"_index":1153,"title":{},"body":{"injectables/PreventAuthGuardService.html":{}}}],["guard.service.ts:62",{"_index":1152,"title":{},"body":{"injectables/PreventAuthGuardService.html":{}}}],["hammerj",{"_index":1339,"title":{},"body":{"dependencies.html":{}}}],["hanafi",{"_index":1373,"title":{},"body":{"index.html":{}}}],["handl",{"_index":281,"title":{},"body":{"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"injectables/PreventAuthGuardService.html":{}}}],["hasown",{"_index":788,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["hasowner(email",{"_index":831,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["height",{"_index":1518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["herebi",{"_index":1419,"title":{},"body":{"license.html":{}}}],["high",{"_index":1534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hold",{"_index":993,"title":{},"body":{"injectables/GoogleService.html":{}}}],["holder",{"_index":1455,"title":{},"body":{"license.html":{}}}],["home",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["home'},{'nam",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["home.component.html",{"_index":1059,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":1058,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecompon",{"_index":198,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthenticatedModule.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["html",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["https://github.com/brandoncravener/g",{"_index":1389,"title":{},"body":{"index.html":{}}}],["https://www.googleapis.com/auth/dr",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["https://www.googleapis.com/auth/drive.appdata",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["https://www.googleapis.com/discovery/v1/apis/drive/v3/rest",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["https://www.googleapis.com/upload/drive/v3/fil",{"_index":744,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["i",{"_index":1547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":332,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"interfaces/RuleInterface.html":{},"miscellaneous/variables.html":{}}}],["identifi",{"_index":1274,"title":{},"body":{"coverage.html":{}}}],["ignor",{"_index":822,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["imageurl",{"_index":1538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implement",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"injectables/PreventAuthGuardService.html":{},"pipes/UnNamedPipe.html":{}}}],["impli",{"_index":1448,"title":{},"body":{"license.html":{}}}],["import",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{}}}],["inact",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["includ",{"_index":801,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"injectables/SorterService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["index",{"_index":25,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{}}}],["inform",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["inherit",{"_index":1139,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["init",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{}}}],["init(config",{"_index":976,"title":{},"body":{"injectables/GoogleService.html":{}}}],["initi",{"_index":980,"title":{},"body":{"injectables/GoogleService.html":{}}}],["inject",{"_index":267,"title":{"injectables/AuthGuardService.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"injectables/PreventAuthGuardService.html":{},"injectables/SorterService.html":{}},"body":{"injectables/AuthGuardService.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"injectables/PreventAuthGuardService.html":{},"injectables/SorterService.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":902,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["inputfold",{"_index":903,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["instal",{"_index":1385,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/ConfigComponent.html":{},"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"miscellaneous/variables.html":{}}}],["instanceof",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["integr",{"_index":1542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["interact",{"_index":953,"title":{},"body":{"injectables/GoogleService.html":{}}}],["interfac",{"_index":326,"title":{"interfaces/Config.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{}},"body":{"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["isactiveconfig",{"_index":1061,"title":{},"body":{"components/HomeComponent.html":{}}}],["isn't",{"_index":1245,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["ispag",{"_index":1088,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["issu",{"_index":1403,"title":{},"body":{"index.html":{}}}],["istem",{"_index":1529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ivan",{"_index":1367,"title":{},"body":{"index.html":{}}}],["jasmin",{"_index":1341,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":1337,"title":{},"body":{"dependencies.html":{}}}],["json.parse(response.bodi",{"_index":741,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["json.stringify(this.configur",{"_index":748,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["jsonconfigur",{"_index":351,"title":{"interfaces/JSONConfiguration.html":{}},"body":{"interfaces/Config.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"coverage.html":{}}}],["key",{"_index":328,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":1446,"title":{},"body":{"license.html":{}}}],["label",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["land",{"_index":1505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lane",{"_index":1363,"title":{},"body":{"index.html":{}}}],["lastmodifi",{"_index":1203,"title":{},"body":{"injectables/SorterService.html":{}}}],["lastopen",{"_index":1198,"title":{},"body":{"injectables/SorterService.html":{}}}],["leav",{"_index":1498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legend",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"overview.html":{}}}],["liabil",{"_index":1459,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":1456,"title":{},"body":{"license.html":{}}}],["licens",{"_index":1412,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["limit",{"_index":1428,"title":{},"body":{"license.html":{}}}],["link.label",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["list",{"_index":517,"title":{},"body":{"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{}}}],["list'},{'nam",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["list.compon",{"_index":298,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["list.component.html",{"_index":519,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.scss",{"_index":518,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.t",{"_index":516,"title":{},"body":{"components/ConfigListComponent.html":{},"coverage.html":{}}}],["list.component.ts:129",{"_index":545,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:140",{"_index":549,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:161",{"_index":550,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:175",{"_index":541,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:197",{"_index":538,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:205",{"_index":552,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:209",{"_index":544,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:213",{"_index":547,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:36",{"_index":564,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:38",{"_index":553,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:39",{"_index":560,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:40",{"_index":558,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:41",{"_index":565,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:42",{"_index":555,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:43",{"_index":554,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:45",{"_index":557,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:46",{"_index":559,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:47",{"_index":556,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:48",{"_index":535,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:59",{"_index":548,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:72",{"_index":546,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list/config",{"_index":297,"title":{},"body":{"modules/AuthenticatedModule.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"coverage.html":{}}}],["listen",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigListComponent.html":{}}}],["listfil",{"_index":961,"title":{},"body":{"injectables/GoogleService.html":{}}}],["listfiles(queri",{"_index":981,"title":{},"body":{"injectables/GoogleService.html":{}}}],["listresponse.result.files.length",{"_index":725,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["listresponse.result.files[0].id",{"_index":727,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["liter",{"_index":889,"title":{},"body":{"interfaces/FolderCreation.html":{}}}],["load",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/HomeComponent.html":{}}}],["loadconfig",{"_index":479,"title":{},"body":{"classes/ConfigDataSource.html":{},"injectables/SorterService.html":{}}}],["loadconfig(cb",{"_index":1174,"title":{},"body":{"injectables/SorterService.html":{}}}],["loadconfigs(pag",{"_index":494,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["loaderremov",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["loadingsubject",{"_index":475,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["loadingsubscript",{"_index":522,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["localconfig",{"_index":384,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["localconfig.groups.push",{"_index":385,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["log",{"_index":1251,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["login",{"_index":1248,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["logo",{"_index":1375,"title":{},"body":{"index.html":{}}}],["logo.png",{"_index":1540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["made",{"_index":1374,"title":{},"body":{"index.html":{}}}],["main",{"_index":1354,"title":{},"body":{"index.html":{}}}],["major",{"_index":1408,"title":{},"body":{"index.html":{}}}],["make",{"_index":1266,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["manag",{"_index":1402,"title":{},"body":{"index.html":{}}}],["manager/develop",{"_index":1359,"title":{},"body":{"index.html":{}}}],["map",{"_index":863,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["matbuttonmodul",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["matcardmodul",{"_index":307,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["match",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["matdatepick",{"_index":308,"title":{},"body":{"modules/AuthenticatedModule.html":{}}}],["matdatepickermodul",{"_index":309,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["matdialog",{"_index":429,"title":{},"body":{"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{}}}],["matdialogcont",{"_index":310,"title":{},"body":{"modules/AuthenticatedModule.html":{}}}],["matdialogmodul",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{}}}],["matexpansionmodul",{"_index":311,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["matformfieldmodul",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["matgridlistmodul",{"_index":312,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["maticonmodul",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["matinputmodul",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["matlistmodul",{"_index":313,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["matmenumodul",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["matnativedatemodul",{"_index":314,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["matpagin",{"_index":561,"title":{},"body":{"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{}}}],["matpaginatormodul",{"_index":315,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["matprogressbarmodul",{"_index":642,"title":{},"body":{"modules/ConfigModule.html":{}}}],["matprogressspinnermodul",{"_index":643,"title":{},"body":{"modules/ConfigModule.html":{}}}],["matselectmodul",{"_index":316,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["matslidetogglechang",{"_index":918,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["matslidetogglemodul",{"_index":644,"title":{},"body":{"modules/ConfigModule.html":{}}}],["matsnackbar",{"_index":907,"title":{},"body":{"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{}}}],["matsnackbarmodul",{"_index":317,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["matsteppermodul",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["mattabl",{"_index":572,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["mattabledatasourc",{"_index":573,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["mattablemodul",{"_index":318,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["mattabsmodul",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodul",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["mattooltipmodul",{"_index":319,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["maxheight",{"_index":460,"title":{},"body":{"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{}}}],["media",{"_index":736,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["memberof",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"components/ConfigComponent.html":{},"modules/ConfigModule.html":{},"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["merchant",{"_index":1449,"title":{},"body":{"license.html":{}}}],["merg",{"_index":1430,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{}}}],["method",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{}}}],["mimetyp",{"_index":823,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{}}}],["miscellan",{"_index":1350,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1414,"title":{},"body":{"index.html":{},"license.html":{}}}],["mock",{"_index":1321,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["modal'},{'nam",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["modal.compon",{"_index":301,"title":{},"body":{"modules/AuthenticatedModule.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{}}}],["modal.component.t",{"_index":1290,"title":{},"body":{"coverage.html":{}}}],["modal/config",{"_index":300,"title":{},"body":{"modules/AuthenticatedModule.html":{},"components/ConfigComponent.html":{},"modules/ConfigModule.html":{},"coverage.html":{}}}],["modal/edit",{"_index":571,"title":{},"body":{"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"coverage.html":{}}}],["modifi",{"_index":835,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"license.html":{}}}],["modifiedaft",{"_index":789,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["modifiedafter(d",{"_index":833,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["modifiedafter(rule.data.firstd",{"_index":1206,"title":{},"body":{"injectables/SorterService.html":{}}}],["modifiedbefor",{"_index":790,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["modifiedbefore(d",{"_index":836,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["modifiedbefore(rule.data.secondd",{"_index":1207,"title":{},"body":{"injectables/SorterService.html":{}}}],["modifiedtim",{"_index":887,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["modul",{"_index":214,"title":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"injectables/GoogleService.html":{},"modules.html":{},"overview.html":{}}}],["modules/authenticated/authenticated.modul",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/config/config.modul",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["modulewithprovid",{"_index":320,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["more",{"_index":1272,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["more_vert",{"_index":175,"title":{},"body":{"components/AppComponent.html":{}}}],["move",{"_index":1223,"title":{},"body":{"injectables/SorterService.html":{}}}],["movefil",{"_index":962,"title":{},"body":{"injectables/GoogleService.html":{}}}],["movefile(fileid",{"_index":983,"title":{},"body":{"injectables/GoogleService.html":{}}}],["much",{"_index":1271,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["name",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["namecontain",{"_index":791,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["namecontains('untitl",{"_index":1210,"title":{},"body":{"injectables/SorterService.html":{}}}],["namecontains(str",{"_index":838,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["named.pip",{"_index":650,"title":{},"body":{"modules/ConfigModule.html":{}}}],["named.pipe.t",{"_index":1236,"title":{},"body":{"pipes/UnNamedPipe.html":{},"coverage.html":{}}}],["named.pipe.ts:7",{"_index":1241,"title":{},"body":{"pipes/UnNamedPipe.html":{}}}],["nameexclud",{"_index":792,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["nameexcludes(str",{"_index":841,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["namingopt",{"_index":896,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["navigationend",{"_index":114,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationstart",{"_index":115,"title":{},"body":{"components/AppComponent.html":{}}}],["necessari",{"_index":1380,"title":{},"body":{"index.html":{}}}],["need",{"_index":828,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"index.html":{}}}],["never",{"_index":1256,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["new",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newconfig",{"_index":702,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["newconfigid",{"_index":601,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["newconfigpagecompon",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["newfolderid",{"_index":1233,"title":{},"body":{"injectables/SorterService.html":{}}}],["newfoldernam",{"_index":1227,"title":{},"body":{"injectables/SorterService.html":{}}}],["newgroupdestin",{"_index":362,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["newgroupnam",{"_index":361,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["newgroupsourc",{"_index":363,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["newrulesteppercompon",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ng",{"_index":1396,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{}}}],["ngmodul",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{}}}],["ngondestroy",{"_index":424,"title":{},"body":{"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{}}}],["ngoninit",{"_index":425,"title":{},"body":{"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["ngzone",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{}}}],["noconfig",{"_index":523,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["none",{"_index":924,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["noninfring",{"_index":1453,"title":{},"body":{"license.html":{}}}],["notic",{"_index":1441,"title":{},"body":{"license.html":{}}}],["now",{"_index":1082,"title":{},"body":{"components/HomeComponent.html":{}}}],["null",{"_index":342,"title":{},"body":{"interfaces/Config.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":432,"title":{},"body":{"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["numberconfig",{"_index":671,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["numconfig",{"_index":581,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["numnon",{"_index":947,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["object",{"_index":977,"title":{},"body":{"injectables/GoogleService.html":{},"miscellaneous/variables.html":{}}}],["observ",{"_index":492,"title":{},"body":{"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/GoogleService.html":{}}}],["obtain",{"_index":1423,"title":{},"body":{"license.html":{}}}],["ok",{"_index":1078,"title":{},"body":{"components/HomeComponent.html":{}}}],["oldpages",{"_index":524,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["om1dhhvv5d9npas7jj02mbtvi5mjksmo.apps.googleusercontent.com",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["on",{"_index":629,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["ondestroy",{"_index":419,"title":{},"body":{"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{}}}],["oninit",{"_index":418,"title":{},"body":{"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["opac",{"_index":1501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["open",{"_index":444,"title":{},"body":{"components/ConfigComponent.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"index.html":{}}}],["openconfigmod",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["openconfigmodalfunc",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["openconfigmodallisten",{"_index":422,"title":{},"body":{"components/ConfigComponent.html":{}}}],["openedaft",{"_index":793,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["openedafter(d",{"_index":843,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["openedafter(rule.data.firstd",{"_index":1201,"title":{},"body":{"injectables/SorterService.html":{}}}],["openedbefor",{"_index":794,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["openedbefore(d",{"_index":846,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["openedbefore(rule.data.secondd",{"_index":1202,"title":{},"body":{"injectables/SorterService.html":{}}}],["openfilepick",{"_index":963,"title":{},"body":{"injectables/GoogleService.html":{}}}],["openfolderpick",{"_index":900,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["opennewconfigdialog",{"_index":426,"title":{},"body":{"components/ConfigComponent.html":{}}}],["openpreset",{"_index":530,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["option",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["option.nam",{"_index":951,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["organ",{"_index":1255,"title":{},"body":{"components/UnauthenticatedComponent.html":{},"index.html":{}}}],["otherwis",{"_index":1462,"title":{},"body":{"license.html":{}}}],["out",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"injectables/GoogleService.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["outlet",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["outlet.activatedroutedata.st",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["output",{"_index":904,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["outputstr",{"_index":402,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["overview",{"_index":1468,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":814,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{}}}],["packag",{"_index":1326,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":280,"title":{},"body":{"injectables/AuthGuardService.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"miscellaneous/variables.html":{}}}],["page'},{'nam",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["page.compon",{"_index":641,"title":{},"body":{"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{}}}],["page.component.t",{"_index":1136,"title":{},"body":{"components/PresetConfigPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:10",{"_index":1143,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["page.component.ts:12",{"_index":1138,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["page/edit",{"_index":640,"title":{},"body":{"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"coverage.html":{}}}],["page/new",{"_index":646,"title":{},"body":{"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"coverage.html":{}}}],["page/preset",{"_index":652,"title":{},"body":{"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"components/PresetConfigPageComponent.html":{},"coverage.html":{}}}],["pages",{"_index":489,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["pagin",{"_index":482,"title":{},"body":{"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["paginatorsubscript",{"_index":525,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["param",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"injectables/PreventAuthGuardService.html":{},"components/UnauthenticatedComponent.html":{}}}],["paramet",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":340,"title":{},"body":{"interfaces/Config.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{}}}],["parentfolderid",{"_index":799,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["parentfolderisroot",{"_index":897,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["particular",{"_index":1451,"title":{},"body":{"license.html":{}}}],["pass",{"_index":591,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["patch",{"_index":745,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["path",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"modules/ConfigRoutingModule.html":{},"injectables/DatabaseService.html":{}}}],["permiss",{"_index":1418,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1436,"title":{},"body":{"license.html":{}}}],["person",{"_index":1422,"title":{},"body":{"license.html":{}}}],["phi",{"_index":1546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["photo",{"_index":865,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["physic",{"_index":1541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pick",{"_index":1010,"title":{},"body":{"injectables/GoogleService.html":{}}}],["pickedfold",{"_index":937,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["pickedfolder.id",{"_index":939,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["pickedfolder.nam",{"_index":940,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["pipe",{"_index":1234,"title":{"pipes/UnNamedPipe.html":{}},"body":{"pipes/UnNamedPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipes/un",{"_index":649,"title":{},"body":{"modules/ConfigModule.html":{}}}],["pipetransform",{"_index":1242,"title":{},"body":{"pipes/UnNamedPipe.html":{}}}],["pleas",{"_index":1409,"title":{},"body":{"index.html":{}}}],["popup",{"_index":989,"title":{},"body":{"injectables/GoogleService.html":{}}}],["portion",{"_index":1444,"title":{},"body":{"license.html":{}}}],["posit",{"_index":1499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix",{"_index":343,"title":{},"body":{"interfaces/Config.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{}}}],["present",{"_index":867,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["preset",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["preset.categori",{"_index":1134,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["preset.descript",{"_index":1135,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["preset.nam",{"_index":1133,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["presetconfigcompon",{"_index":204,"title":{"components/PresetConfigComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["presetconfigcomponent:17",{"_index":1144,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["presetconfigcomponent:19",{"_index":1145,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["presetconfigcomponent:21",{"_index":1147,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["presetconfigcomponent:22",{"_index":1148,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["presetconfigcomponent:23",{"_index":1146,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["presetconfigcomponent:26",{"_index":1150,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["presetconfigcomponent:27",{"_index":1149,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["presetconfigcomponent:33",{"_index":1142,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["presetconfigcomponent:35",{"_index":1141,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["presetconfigcomponent:39",{"_index":1140,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["presetconfigpagecompon",{"_index":206,"title":{"components/PresetConfigPageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["presetid",{"_index":1093,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"miscellaneous/variables.html":{}}}],["presets.find(el",{"_index":1104,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["prevent",{"_index":270,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{}}}],["preventauthguardservic",{"_index":227,"title":{"injectables/PreventAuthGuardService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{},"coverage.html":{},"overview.html":{}}}],["prevpar",{"_index":1052,"title":{},"body":{"injectables/GoogleService.html":{}}}],["privat",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{}}}],["problem",{"_index":1130,"title":{},"body":{"components/PresetConfigComponent.html":{},"index.html":{}}}],["product",{"_index":1489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":1358,"title":{},"body":{"index.html":{}}}],["promis",{"_index":679,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{}}}],["promise((resolv",{"_index":733,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"injectables/SorterService.html":{}}}],["properti",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{}}}],["provid",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"license.html":{},"overview.html":{}}}],["public",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/UnauthenticatedComponent.html":{},"index.html":{}}}],["publish",{"_index":1431,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":1452,"title":{},"body":{"license.html":{}}}],["q",{"_index":718,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{}}}],["quarter",{"_index":1548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["quartersarray",{"_index":1304,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["queri",{"_index":778,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"injectables/SorterService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["query'",{"_index":782,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["quick",{"_index":1260,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["reactiveformsmodul",{"_index":304,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["readconfigur",{"_index":672,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["readconfiguration(fileid",{"_index":695,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["refer",{"_index":1004,"title":{},"body":{"injectables/GoogleService.html":{},"miscellaneous/variables.html":{}}}],["refresh",{"_index":625,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["refreshconfig",{"_index":531,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["regist",{"_index":323,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["reject",{"_index":734,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"injectables/SorterService.html":{}}}],["reject('no",{"_index":773,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["reject(resp.err",{"_index":1048,"title":{},"body":{"injectables/GoogleService.html":{}}}],["reject(resp.error",{"_index":1218,"title":{},"body":{"injectables/SorterService.html":{}}}],["relat",{"_index":1370,"title":{},"body":{"index.html":{}}}],["removeitem",{"_index":1528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["removepar",{"_index":1055,"title":{},"body":{"injectables/GoogleService.html":{}}}],["renam",{"_index":1476,"title":{},"body":{"todo.html":{}}}],["renamefil",{"_index":964,"title":{},"body":{"injectables/GoogleService.html":{}}}],["renamefile(fileid",{"_index":986,"title":{},"body":{"injectables/GoogleService.html":{}}}],["renameuntitl",{"_index":337,"title":{},"body":{"interfaces/Config.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{}}}],["report",{"_index":1410,"title":{},"body":{"index.html":{}}}],["repositionscrollstrategi",{"_index":440,"title":{},"body":{"components/ConfigComponent.html":{}}}],["repositori",{"_index":1405,"title":{},"body":{"index.html":{}}}],["request",{"_index":743,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["requestsreciv",{"_index":1110,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["requestss",{"_index":1109,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["requir",{"_index":807,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requirestyp",{"_index":795,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["requirestype(mimetyp",{"_index":848,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["reset",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"overview.html":{}}}],["resolv",{"_index":749,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"injectables/SorterService.html":{}}}],["resolve(0",{"_index":775,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["resolve(resp.id",{"_index":1049,"title":{},"body":{"injectables/GoogleService.html":{}}}],["resolve(respons",{"_index":738,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["resolve(this.configuration.activeconfig",{"_index":772,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["resolve(this.configuration.configs.length",{"_index":774,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["resourc",{"_index":729,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{}}}],["resp",{"_index":1216,"title":{},"body":{"injectables/SorterService.html":{}}}],["resp.err",{"_index":1043,"title":{},"body":{"injectables/GoogleService.html":{}}}],["resp.error",{"_index":1217,"title":{},"body":{"injectables/SorterService.html":{}}}],["resp.files.foreach(fil",{"_index":1219,"title":{},"body":{"injectables/SorterService.html":{}}}],["rest",{"_index":1263,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["restrict",{"_index":1427,"title":{},"body":{"license.html":{}}}],["result",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["retriv",{"_index":596,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["return",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"miscellaneous/variables.html":{}}}],["right",{"_index":1429,"title":{},"body":{"license.html":{}}}],["rlasaf",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["root",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"miscellaneous/variables.html":{}}}],["root'},{'nam",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["roottogglechang",{"_index":901,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["roottogglechange(ev",{"_index":917,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["rout",{"_index":67,"title":{"routes.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/ConfigRoutingModule.html":{},"injectables/PreventAuthGuardService.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{}}}],["routeranim",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routermodul",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigRoutingModule.html":{}}}],["routermodule.forchild(rout",{"_index":660,"title":{},"body":{"modules/ConfigRoutingModule.html":{}}}],["routermodule.forroot(approut",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.modul",{"_index":653,"title":{},"body":{"modules/ConfigModule.html":{}}}],["routing.module.t",{"_index":655,"title":{},"body":{"modules/ConfigRoutingModule.html":{}}}],["rule",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rule.classifi",{"_index":401,"title":{},"body":{"classes/ConfigBuilder.html":{},"injectables/SorterService.html":{}}}],["rule.constraint",{"_index":400,"title":{},"body":{"classes/ConfigBuilder.html":{},"injectables/SorterService.html":{}}}],["rule.data",{"_index":399,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["rule.data.filetyp",{"_index":1186,"title":{},"body":{"injectables/SorterService.html":{}}}],["rule.data.own",{"_index":1189,"title":{},"body":{"injectables/SorterService.html":{}}}],["rule.data.titl",{"_index":1183,"title":{},"body":{"injectables/SorterService.html":{}}}],["rule.id",{"_index":398,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["rule.nam",{"_index":397,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["rule['id",{"_index":1125,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["ruleinterfac",{"_index":331,"title":{"interfaces/RuleInterface.html":{}},"body":{"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"coverage.html":{}}}],["run",{"_index":1386,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"components/PresetConfigComponent.html":{},"dependencies.html":{}}}],["scale(0",{"_index":1492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scale(1",{"_index":1493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["school",{"_index":1532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scope",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["screen",{"_index":1514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["script",{"_index":869,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["sdk",{"_index":881,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["search",{"_index":800,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["select",{"_index":417,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"components/SettingsComponent.html":{}}}],["selector",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["sell",{"_index":1435,"title":{},"body":{"license.html":{}}}],["serv",{"_index":1397,"title":{},"body":{"index.html":{}}}],["servic",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/GoogleService.html":{},"injectables/PreventAuthGuardService.html":{},"components/UnauthenticatedComponent.html":{}}}],["services/auth/auth",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigRoutingModule.html":{}}}],["services/database/database.servic",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/SettingsComponent.html":{}}}],["services/google/google.servic",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/PresetConfigComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["services/sorter/sorter.servic",{"_index":322,"title":{},"body":{"modules/AuthenticatedModule.html":{},"components/HomeComponent.html":{}}}],["set",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/SettingsComponent.html":{}}}],["setactiveconfig",{"_index":532,"title":{},"body":{"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{}}}],["setactiveconfig(configid",{"_index":698,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["setactiveconfig(configkey",{"_index":551,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["setappid(362606538820",{"_index":1030,"title":{},"body":{"injectables/GoogleService.html":{}}}],["setcallback(folderpick",{"_index":1036,"title":{},"body":{"injectables/GoogleService.html":{}}}],["setdeveloperkey('aizasyb",{"_index":1033,"title":{},"body":{"injectables/GoogleService.html":{}}}],["setincludefolders(tru",{"_index":1024,"title":{},"body":{"injectables/GoogleService.html":{}}}],["setinterv",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{}}}],["setitem",{"_index":1527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setoauthtoken",{"_index":1031,"title":{},"body":{"injectables/GoogleService.html":{}}}],["setownedbyme(tru",{"_index":1027,"title":{},"body":{"injectables/GoogleService.html":{}}}],["setparent('root",{"_index":1026,"title":{},"body":{"injectables/GoogleService.html":{}}}],["setselectablemimetypes('application/vnd.googl",{"_index":1034,"title":{},"body":{"injectables/GoogleService.html":{}}}],["setselectfolderenabled(tru",{"_index":1025,"title":{},"body":{"injectables/GoogleService.html":{}}}],["settimeout",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["settimeout(_",{"_index":604,"title":{},"body":{"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{}}}],["settings'},{'nam",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["settings.component.html",{"_index":1156,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.scss",{"_index":1155,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings_pow",{"_index":626,"title":{},"body":{"components/ConfigListComponent.html":{},"components/HomeComponent.html":{}}}],["settingscompon",{"_index":207,"title":{"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthenticatedModule.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["shall",{"_index":1442,"title":{},"body":{"license.html":{}}}],["shared/config",{"_index":439,"title":{},"body":{"components/ConfigComponent.html":{}}}],["shared/edit",{"_index":570,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["shown",{"_index":415,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["sign",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleService.html":{}}}],["signin",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleService.html":{}}}],["signout",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleService.html":{}}}],["simplist",{"_index":1265,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["site",{"_index":871,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["slidedown",{"_index":1280,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["slideleft",{"_index":1281,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["slideright",{"_index":1282,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["small",{"_index":1513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["snackbar",{"_index":906,"title":{},"body":{"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{}}}],["softwar",{"_index":1365,"title":{},"body":{"index.html":{},"license.html":{}}}],["solv",{"_index":1376,"title":{},"body":{"index.html":{}}}],["sort",{"_index":923,"title":{},"body":{"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{}}}],["sorter",{"_index":1254,"title":{},"body":{"components/UnauthenticatedComponent.html":{},"index.html":{}}}],["sorterservic",{"_index":291,"title":{"injectables/SorterService.html":{}},"body":{"modules/AuthenticatedModule.html":{},"components/HomeComponent.html":{},"injectables/SorterService.html":{},"coverage.html":{},"overview.html":{}}}],["sortusersdr",{"_index":1063,"title":{},"body":{"components/HomeComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"miscellaneous/variables.html":{}}}],["source.t",{"_index":472,"title":{},"body":{"classes/ConfigDataSource.html":{},"coverage.html":{}}}],["source.ts:11",{"_index":481,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["source.ts:15",{"_index":490,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["source.ts:19",{"_index":491,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["source.ts:23",{"_index":493,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["source.ts:28",{"_index":495,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["source.ts:7",{"_index":487,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["source.ts:8",{"_index":484,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["source.ts:9",{"_index":483,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["sourcefold",{"_index":373,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["sourceloc",{"_index":682,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["space",{"_index":720,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["spec\\.t",{"_index":1488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spreadsheet",{"_index":873,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["src/.../animations.t",{"_index":1480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.component.t",{"_index":1482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../database.service.t",{"_index":1484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../drive",{"_index":1352,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.prod.t",{"_index":1479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":1478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../google.service.t",{"_index":1353,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../jestglobalmocks.t",{"_index":1485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../presets.t",{"_index":1486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../settings.component.t",{"_index":1481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../sorter.service.t",{"_index":1483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.t",{"_index":1477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/animations.t",{"_index":1276,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.ts:107",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:130",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:134",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:138",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:149",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:31",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:32",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:33",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:34",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:35",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:36",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:37",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:50",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/classes/config",{"_index":353,"title":{},"body":{"classes/ConfigBuilder.html":{},"classes/ConfigDataSource.html":{},"coverage.html":{}}}],["src/app/classes/dr",{"_index":777,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/components/auth/unauthenticated/unauthenticated.component.t",{"_index":1244,"title":{},"body":{"components/UnauthenticatedComponent.html":{},"coverage.html":{}}}],["src/app/components/auth/unauthenticated/unauthenticated.component.ts:15",{"_index":1249,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["src/app/components/auth/unauthenticated/unauthenticated.component.ts:21",{"_index":1252,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["src/app/components/auth/unauthenticated/unauthenticated.component.ts:28",{"_index":1250,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["src/app/components/shared/config",{"_index":1289,"title":{},"body":{"coverage.html":{}}}],["src/app/components/shared/edit",{"_index":1292,"title":{},"body":{"coverage.html":{}}}],["src/app/components/shared/fold",{"_index":890,"title":{},"body":{"components/FolderCreationComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/new",{"_index":1295,"title":{},"body":{"coverage.html":{}}}],["src/app/components/tabs/config/config",{"_index":515,"title":{},"body":{"components/ConfigListComponent.html":{},"coverage.html":{}}}],["src/app/components/tabs/config/config.component.t",{"_index":414,"title":{},"body":{"components/ConfigComponent.html":{},"coverage.html":{}}}],["src/app/components/tabs/config/config.component.ts:22",{"_index":437,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/components/tabs/config/config.component.ts:24",{"_index":430,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/components/tabs/config/config.component.ts:37",{"_index":435,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/components/tabs/config/config.component.ts:46",{"_index":433,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/components/tabs/config/config.component.ts:50",{"_index":434,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/components/tabs/config/config.component.ts:54",{"_index":431,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/components/tabs/config/config.component.ts:65",{"_index":436,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/components/tabs/config/preset",{"_index":1084,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"coverage.html":{}}}],["src/app/components/tabs/config/presets.t",{"_index":1303,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/tabs/home/home.component.t",{"_index":1057,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/components/tabs/home/home.component.ts:20",{"_index":1069,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/tabs/home/home.component.ts:21",{"_index":1065,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/tabs/home/home.component.ts:40",{"_index":1067,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/tabs/home/home.component.ts:60",{"_index":1068,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/tabs/home/home.component.ts:68",{"_index":1066,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/tabs/settings/settings.component.t",{"_index":1154,"title":{},"body":{"components/SettingsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/tabs/settings/settings.component.ts:21",{"_index":1158,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/components/tabs/settings/settings.component.ts:31",{"_index":1159,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/components/tabs/settings/settings.component.ts:35",{"_index":1160,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/authenticated/authenticated.module.t",{"_index":292,"title":{},"body":{"modules/AuthenticatedModule.html":{}}}],["src/app/modules/config/config",{"_index":654,"title":{},"body":{"modules/ConfigRoutingModule.html":{}}}],["src/app/modules/config/config.module.t",{"_index":637,"title":{},"body":{"modules/ConfigModule.html":{}}}],["src/app/pipes/un",{"_index":1235,"title":{},"body":{"pipes/UnNamedPipe.html":{},"coverage.html":{}}}],["src/app/services/auth/auth",{"_index":268,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{},"coverage.html":{}}}],["src/app/services/database/database.service.t",{"_index":661,"title":{},"body":{"injectables/DatabaseService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/database/database.service.ts:110",{"_index":684,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:131",{"_index":678,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:139",{"_index":701,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:150",{"_index":691,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:159",{"_index":686,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:174",{"_index":680,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:186",{"_index":699,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:198",{"_index":687,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:21",{"_index":705,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:211",{"_index":692,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:215",{"_index":694,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:22",{"_index":706,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:23",{"_index":713,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:27",{"_index":709,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:29",{"_index":708,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:30",{"_index":712,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:31",{"_index":710,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:32",{"_index":714,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:33",{"_index":715,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:34",{"_index":676,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:38",{"_index":693,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:71",{"_index":696,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:83",{"_index":703,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:89",{"_index":704,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/google/google.service.t",{"_index":952,"title":{},"body":{"injectables/GoogleService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/google/google.service.ts:104",{"_index":985,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:114",{"_index":970,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:127",{"_index":988,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:136",{"_index":991,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:147",{"_index":974,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:151",{"_index":982,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:161",{"_index":973,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:176",{"_index":968,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:194",{"_index":987,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:207",{"_index":984,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:44",{"_index":992,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:51",{"_index":998,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:53",{"_index":966,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:69",{"_index":979,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/sorter/sorter.service.t",{"_index":1166,"title":{},"body":{"injectables/SorterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/sorter/sorter.service.ts:124",{"_index":1173,"title":{},"body":{"injectables/SorterService.html":{}}}],["src/app/services/sorter/sorter.service.ts:130",{"_index":1175,"title":{},"body":{"injectables/SorterService.html":{}}}],["src/app/services/sorter/sorter.service.ts:146",{"_index":1176,"title":{},"body":{"injectables/SorterService.html":{}}}],["src/app/services/sorter/sorter.service.ts:22",{"_index":1169,"title":{},"body":{"injectables/SorterService.html":{}}}],["src/app/services/sorter/sorter.service.ts:34",{"_index":1171,"title":{},"body":{"injectables/SorterService.html":{}}}],["src/environments/environment.prod.t",{"_index":1314,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":1315,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/interfac",{"_index":498,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["src/interfaces.t",{"_index":327,"title":{},"body":{"interfaces/Config.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"coverage.html":{}}}],["src/jestglobalmocks.t",{"_index":1320,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.t",{"_index":1322,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":506,"title":{"index.html":{},"license.html":{},"todo.html":{}},"body":{"classes/ConfigDataSource.html":{}}}],["state",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"modules/ConfigRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["statement",{"_index":1275,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":324,"title":{},"body":{"modules/AuthenticatedModule.html":{},"classes/ConfigBuilder.html":{},"modules/ConfigModule.html":{}}}],["statu",{"_index":971,"title":{},"body":{"injectables/GoogleService.html":{}}}],["stem",{"_index":1127,"title":{},"body":{"components/PresetConfigComponent.html":{},"miscellaneous/variables.html":{}}}],["stepper'},{'nam",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["stepper.compon",{"_index":648,"title":{},"body":{"modules/ConfigModule.html":{}}}],["stepper.component.t",{"_index":1297,"title":{},"body":{"coverage.html":{}}}],["stepper/new",{"_index":647,"title":{},"body":{"modules/ConfigModule.html":{},"coverage.html":{}}}],["storag",{"_index":1524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storage[key",{"_index":1526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"interfaces/RuleInterface.html":{},"injectables/SorterService.html":{}}}],["style",{"_index":1491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["styleurl",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["subject",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["sublicens",{"_index":1433,"title":{},"body":{"license.html":{}}}],["subscrib",{"_index":996,"title":{},"body":{"injectables/GoogleService.html":{}}}],["subscribe(clos",{"_index":467,"title":{},"body":{"components/ConfigComponent.html":{}}}],["subscript",{"_index":438,"title":{},"body":{"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{}}}],["substanti",{"_index":1443,"title":{},"body":{"license.html":{}}}],["success",{"_index":1212,"title":{},"body":{"injectables/SorterService.html":{}}}],["suffix",{"_index":344,"title":{},"body":{"interfaces/Config.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{}}}],["suitabl",{"_index":1267,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["suppli",{"_index":808,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["support",{"_index":1407,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1464,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":403,"title":{},"body":{"classes/ConfigBuilder.html":{},"injectables/SorterService.html":{},"miscellaneous/variables.html":{}}}],["tab",{"_index":416,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["tabl",{"_index":1325,"title":{},"body":{"coverage.html":{}}}],["tablecolumn",{"_index":526,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1324,"title":{},"body":{"coverage.html":{}}}],["tablink",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["tabsen",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["templateurl",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["test",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"miscellaneous/variables.html":{}}}],["tester",{"_index":1366,"title":{},"body":{"index.html":{}}}],["text",{"_index":406,"title":{},"body":{"classes/ConfigBuilder.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{}}}],["then(createrespons",{"_index":730,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["then(id",{"_index":1115,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["then(listrespons",{"_index":724,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["then(newfolderid",{"_index":1231,"title":{},"body":{"injectables/SorterService.html":{}}}],["then(respons",{"_index":737,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["thirdparti",{"_index":879,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["this._activeconfigchanged.asobserv",{"_index":707,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this._activeconfigchanged.error(err",{"_index":770,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this._activeconfigchanged.next(configid",{"_index":769,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this._authstate.asobserv",{"_index":997,"title":{},"body":{"injectables/GoogleService.html":{}}}],["this._authstate.next(authinstance.issignedin.get",{"_index":1018,"title":{},"body":{"injectables/GoogleService.html":{}}}],["this._authstate.next(authstatu",{"_index":1021,"title":{},"body":{"injectables/GoogleService.html":{}}}],["this._closecommand.asobserv",{"_index":1097,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["this._closecommand.next(tru",{"_index":1103,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["this._configsubject.asobserv",{"_index":711,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this._configsubject.next(fals",{"_index":766,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this._configsubject.next(tru",{"_index":752,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.activeconfig",{"_index":598,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.activeconfigchangesubscript",{"_index":599,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.activeconfigchangesubscription.unsubscrib",{"_index":623,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.activeconfignam",{"_index":1072,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.appcomponent.openconfigmodal$.subscribe(open",{"_index":443,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.authent",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["this.calculatestart(pag",{"_index":507,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["this.changedetector.detectchang",{"_index":589,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.clos",{"_index":1128,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["this.config",{"_index":504,"title":{},"body":{"classes/ConfigDataSource.html":{},"injectables/SorterService.html":{}}}],["this.config.groups.foreach(group",{"_index":1213,"title":{},"body":{"injectables/SorterService.html":{}}}],["this.configchangesubscript",{"_index":593,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.configchangesubscription.unsubscrib",{"_index":622,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.configid",{"_index":726,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.configs.slice(start",{"_index":508,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["this.configsubject.asobserv",{"_index":500,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["this.configsubject.complet",{"_index":501,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["this.configsubject.next(data",{"_index":513,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["this.configur",{"_index":740,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.configuration.activeconfig",{"_index":768,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.configuration.activeconfig.length",{"_index":771,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.configuration.config",{"_index":758,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.configuration.configs.findindex(config",{"_index":761,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.configuration.configs.foreach(config",{"_index":756,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.configuration.configs.push(config",{"_index":754,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.configuration.configs.push(newconfig",{"_index":751,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.configuration.configs.splice(configindex",{"_index":762,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.createconfigbuttonst",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["this.createfold",{"_index":932,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["this.createfolder.par",{"_index":938,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["this.creationen",{"_index":1111,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["this.databas",{"_index":579,"title":{},"body":{"components/ConfigListComponent.html":{},"components/PresetConfigComponent.html":{}}}],["this.database.activeconfigchanged.subscrib",{"_index":600,"title":{},"body":{"components/ConfigListComponent.html":{},"injectables/SorterService.html":{}}}],["this.database.clearconfigs().catch(err",{"_index":1161,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.database.clearconfigs().then",{"_index":1162,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.database.configsubject.subscrib",{"_index":594,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.database.deleteconfig(configkey",{"_index":618,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.database.editingconfig",{"_index":614,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.database.getactiveconfig().then",{"_index":597,"title":{},"body":{"components/ConfigListComponent.html":{},"components/HomeComponent.html":{},"injectables/SorterService.html":{}}}],["this.database.getconfig",{"_index":505,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["this.database.getconfig(activeconfig",{"_index":1071,"title":{},"body":{"components/HomeComponent.html":{},"injectables/SorterService.html":{}}}],["this.database.init",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{}}}],["this.database.numberconfigs().then(numconfig",{"_index":580,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.database.setactiveconfig(configkey",{"_index":619,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.datasourc",{"_index":577,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.datasource.loadconfig",{"_index":587,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.datasource.loadconfigs(0",{"_index":590,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.datasource.loading$.subscrib",{"_index":606,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.dialog.open(configmodalcompon",{"_index":458,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.dialog.open(editconfigmodalcompon",{"_index":615,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.dialog.open(presetconfigcompon",{"_index":607,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.editingconfig",{"_index":757,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.finish",{"_index":934,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["this.getdialogwidth",{"_index":456,"title":{},"body":{"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{}}}],["this.getfileinfo(fileid",{"_index":1051,"title":{},"body":{"injectables/GoogleService.html":{}}}],["this.googl",{"_index":1113,"title":{},"body":{"components/PresetConfigComponent.html":{},"injectables/SorterService.html":{}}}],["this.google.authstate$.subscribe(st",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["this.google.folderpicked$.subscrib",{"_index":936,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["this.google.getauthstatu",{"_index":285,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/ConfigListComponent.html":{},"injectables/PreventAuthGuardService.html":{}}}],["this.google.init",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["this.google.listfiles(this.getdrivequery(group",{"_index":1215,"title":{},"body":{"injectables/SorterService.html":{}}}],["this.google.listfiles(this.getuntitledfiles(group.sourc",{"_index":1225,"title":{},"body":{"injectables/SorterService.html":{}}}],["this.google.movefil",{"_index":1220,"title":{},"body":{"injectables/SorterService.html":{}}}],["this.google.movefile(file.id",{"_index":1232,"title":{},"body":{"injectables/SorterService.html":{}}}],["this.google.openfilepick",{"_index":942,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["this.google.renamefile(file.id",{"_index":1226,"title":{},"body":{"injectables/SorterService.html":{}}}],["this.google.signin",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["this.google.signout",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"components/SettingsComponent.html":{}}}],["this.init",{"_index":446,"title":{},"body":{"components/ConfigComponent.html":{},"injectables/DatabaseService.html":{}}}],["this.inputfold",{"_index":933,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["this.isactiveconfig",{"_index":1073,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.load",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigListComponent.html":{}}}],["this.loadconfig",{"_index":1177,"title":{},"body":{"injectables/SorterService.html":{}}}],["this.loaderremov",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadingsubject.asobserv",{"_index":485,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["this.loadingsubject.complet",{"_index":502,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["this.loadingsubject.next(fals",{"_index":514,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["this.loadingsubject.next(tru",{"_index":503,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["this.loadingsubscript",{"_index":605,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.loadingsubscription.unsubscrib",{"_index":620,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.noconfig",{"_index":582,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.oldpages",{"_index":585,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.openconfigmodal.asobserv",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["this.openconfigmodal.next(tru",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["this.openconfigmodallisten",{"_index":442,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.openconfigmodallistener.unsubscrib",{"_index":447,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.opennewconfigdialog",{"_index":445,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.paginator.length",{"_index":592,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.paginator.page.subscrib",{"_index":584,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.paginator.pageindex",{"_index":588,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.paginator.pages",{"_index":586,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.paginatorsubscript",{"_index":583,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.paginatorsubscription.unsubscrib",{"_index":621,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.parentfolderisroot",{"_index":944,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["this.queri",{"_index":882,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["this.readconfiguration(this.configid).then(respons",{"_index":739,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.refreshconfig",{"_index":595,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.rlasaf",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.events.subscribe(ev",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navig",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{}}}],["this.router.navigate(['/app/config/cr",{"_index":470,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.router.navigate(['/app/config/edit",{"_index":616,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.router.navigate(['/app/config/preset",{"_index":613,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.router.navigate(['/app/hom",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{}}}],["this.router.navigatebyurl('/app/config",{"_index":1081,"title":{},"body":{"components/HomeComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["this.setactiveconfig",{"_index":617,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.snackbar.open('googl",{"_index":1077,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.snackbar.open('ther",{"_index":1129,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["this.sorterservice.sort().then",{"_index":1076,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.tabsen",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["this.updatelocalconfigur",{"_index":728,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.updateremoteconfigur",{"_index":764,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.updateremoteconfiguration().catch(err",{"_index":753,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.updateremoteconfiguration().then",{"_index":732,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.updateremoteconfiguration().then(r",{"_index":755,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.valid",{"_index":931,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["this.valueattributes.foreach(attribut",{"_index":948,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["this.zone.run",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{}}}],["titl",{"_index":1182,"title":{},"body":{"injectables/SorterService.html":{},"miscellaneous/variables.html":{}}}],["todo",{"_index":1474,"title":{"todo.html":{}},"body":{"todo.html":{}}}],["token",{"_index":975,"title":{},"body":{"injectables/GoogleService.html":{}}}],["tort",{"_index":1461,"title":{},"body":{"license.html":{}}}],["tracker",{"_index":1404,"title":{},"body":{"index.html":{}}}],["transform",{"_index":1238,"title":{},"body":{"pipes/UnNamedPipe.html":{},"miscellaneous/variables.html":{}}}],["transform(valu",{"_index":1239,"title":{},"body":{"pipes/UnNamedPipe.html":{}}}],["transit",{"_index":1506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('act",{"_index":1496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('appconfig",{"_index":1510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('appconfigcr",{"_index":1516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('appconfigedit",{"_index":1515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('appconfigpreset",{"_index":1517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('apphom",{"_index":1509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('appset",{"_index":1512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('inact",{"_index":1494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('land",{"_index":1507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatex",{"_index":1523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatex(0",{"_index":1522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatex(100",{"_index":1521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatey(0",{"_index":1520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatey(100",{"_index":1519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trash",{"_index":802,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["trashed=fals",{"_index":883,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["tri",{"_index":628,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["trigger('createconfigfabst",{"_index":1490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigger('routertransit",{"_index":1504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"injectables/SorterService.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["types/uuid",{"_index":1334,"title":{},"body":{"dependencies.html":{}}}],["unauthent",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["unauthenticated.component.html",{"_index":1247,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["unauthenticated.component.scss",{"_index":1246,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["unauthenticatedcompon",{"_index":209,"title":{"components/UnauthenticatedComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["undefin",{"_index":341,"title":{},"body":{"interfaces/Config.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{}}}],["under",{"_index":1413,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":875,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["unnam",{"_index":1237,"title":{},"body":{"pipes/UnNamedPipe.html":{}}}],["unnamedpip",{"_index":635,"title":{"pipes/UnNamedPipe.html":{}},"body":{"modules/ConfigModule.html":{},"pipes/UnNamedPipe.html":{},"coverage.html":{},"overview.html":{}}}],["untitl",{"_index":1475,"title":{},"body":{"todo.html":{}}}],["updat",{"_index":995,"title":{},"body":{"injectables/GoogleService.html":{}}}],["updateconfig",{"_index":673,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["updateconfig(newconfig",{"_index":700,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["updatelocalconfigur",{"_index":674,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["updateremoteconfigur",{"_index":675,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["uploadtyp",{"_index":746,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["us",{"_index":994,"title":{},"body":{"injectables/GoogleService.html":{},"components/UnauthenticatedComponent.html":{},"index.html":{},"license.html":{}}}],["user",{"_index":271,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/GoogleService.html":{},"injectables/PreventAuthGuardService.html":{},"components/UnauthenticatedComponent.html":{},"index.html":{}}}],["userid",{"_index":666,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["util",{"_index":779,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{}}}],["uuid",{"_index":380,"title":{},"body":{"classes/ConfigBuilder.html":{},"components/PresetConfigComponent.html":{},"dependencies.html":{}}}],["v4",{"_index":379,"title":{},"body":{"classes/ConfigBuilder.html":{},"components/PresetConfigComponent.html":{}}}],["valid",{"_index":386,"title":{},"body":{"classes/ConfigBuilder.html":{},"components/FolderCreationComponent.html":{}}}],["valu",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"interfaces/RuleInterface.html":{},"pipes/UnNamedPipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":1243,"title":{},"body":{"pipes/UnNamedPipe.html":{}}}],["valueattribut",{"_index":898,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["valuechang",{"_index":905,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["var",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{}}}],["variabl",{"_index":1002,"title":{"miscellaneous/variables.html":{}},"body":{"injectables/GoogleService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["verifyconfig",{"_index":359,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["verifyconfig(config",{"_index":377,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["video",{"_index":877,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["view",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleService.html":{}}}],["view_list",{"_index":1258,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["viewchild",{"_index":563,"title":{},"body":{"components/ConfigListComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["viewchild(matpagin",{"_index":576,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["viewedbymetim",{"_index":888,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["visit",{"_index":1261,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["void",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{}}}],["warranti",{"_index":1445,"title":{},"body":{"license.html":{}}}],["way",{"_index":1378,"title":{},"body":{"index.html":{}}}],["web",{"_index":1346,"title":{},"body":{"dependencies.html":{}}}],["websit",{"_index":1262,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["whenev",{"_index":1379,"title":{},"body":{"index.html":{}}}],["whether",{"_index":278,"title":{},"body":{"injectables/AuthGuardService.html":{},"classes/DriveQueryBuilder.html":{},"injectables/PreventAuthGuardService.html":{},"license.html":{}}}],["width",{"_index":448,"title":{},"body":{"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"miscellaneous/variables.html":{}}}],["wilson",{"_index":1533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["window['gapi",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["without",{"_index":1426,"title":{},"body":{"license.html":{}}}],["work",{"_index":1264,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["workaround",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"miscellaneous/variables.html":{}}}],["yarn",{"_index":1393,"title":{},"body":{"index.html":{}}}],["ye",{"_index":969,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{}}}],["ye9ixt29vl_eau7bzvzv5qe17flfpzm",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleService.html":{}}}],["zon",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["zone",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{}}}],["zone.j",{"_index":1348,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Base application component.\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            GoogleService\n                \n            \n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authenticated\n                            \n                            \n                                    Public\n                                createConfigButtonState\n                            \n                            \n                                    Public\n                                loaded\n                            \n                            \n                                    Private\n                                loaderRemoved\n                            \n                            \n                                    Private\n                                openConfigModal\n                            \n                            \n                                    Public\n                                openConfigModal$\n                            \n                            \n                                    Public\n                                rlaSafe\n                            \n                            \n                                    Public\n                                tabLinks\n                            \n                            \n                                    Public\n                                tabsEnabled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRouteState\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                openConfigModalFunc\n                            \n                            \n                                signIn\n                            \n                            \n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(google: GoogleService, database: DatabaseService, router: Router, zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:50\n                            \n                        \n\n                \n                    \n                            Creates an instance of AppComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        google\n                                                  \n                                                        \n                                                                    GoogleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Declare the Google Service as google\n\n                                                        \n                                                \n                                                \n                                                        database\n                                                  \n                                                        \n                                                                    DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Declare the Router as router\n\n                                                        \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Declare NgZone as zon\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRouteState\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRouteState(outlet: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:149\n                            \n                        \n\n\n                \n                    \n                            Gets the current route information.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        outlet\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The route\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:107\n                            \n                        \n\n\n                \n                    \n                            Called after the view is initalized.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openConfigModalFunc\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenConfigModalFunc()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:138\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signIn\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignIn()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:134\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:130\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authenticated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authenticated:     Boolean\n\n                    \n                \n                    \n                        \n                            Type :     Boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            createConfigButtonState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        createConfigButtonState:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'inactive'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loaded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loaded:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loaderRemoved\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loaderRemoved:     Boolean\n\n                    \n                \n                    \n                        \n                            Type :     Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            openConfigModal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        openConfigModal:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            openConfigModal$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        openConfigModal$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.openConfigModal.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rlaSafe\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rlaSafe:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tabLinks\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tabLinks:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      path: 'app/home',\n      label: 'Home'\n    },\n    {\n      path: 'app/config',\n      label: 'Configuration'\n    },\n    {\n      path: 'app/settings',\n      label: 'Settings'\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tabsEnabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tabsEnabled:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { AfterViewInit, Component, NgZone } from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { fabAnimation, routerAnimation } from '../animations';\nimport { GoogleService } from './services/google/google.service';\nimport { NavigationEnd, NavigationStart, Router } from '@angular/router';\nimport { DatabaseService } from './services/database/database.service';\n\n/**\n * Workaround for testing\n */\ndeclare var gapi: any;\n\n/**\n * Base application component.\n *\n * @export\n * @class AppComponent\n * @implements {AfterViewInit}\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  providers: [GoogleService],\n  animations: [routerAnimation, fabAnimation]\n})\nexport class AppComponent implements AfterViewInit {\n  private openConfigModal: Subject = new Subject();\n  private loaderRemoved: Boolean = false;\n\n  public tabsEnabled = true;\n  public loaded = false;\n  public authenticated: Boolean;\n  public rlaSafe = false;\n  public createConfigButtonState = 'inactive';\n  public openConfigModal$ = this.openConfigModal.asObservable();\n  public tabLinks = [\n    {\n      path: 'app/home',\n      label: 'Home'\n    },\n    {\n      path: 'app/config',\n      label: 'Configuration'\n    },\n    {\n      path: 'app/settings',\n      label: 'Settings'\n    }\n  ];\n\n  /**\n   * Creates an instance of AppComponent.\n   * @param {GoogleService} google Declare the Google Service as google\n   * @param {Router} router Declare the Router as router\n   * @param {NgZone} zone  Declare NgZone as zon\n   * @memberof AppComponent\n   */\n  constructor(\n    private google: GoogleService,\n    private database: DatabaseService,\n    private router: Router,\n    private zone: NgZone\n  ) {\n    const googleInitInterval = setInterval(() => {\n      if (window['gapi']) {\n        this.google.init({\n          apiKey: 'AIzaSyB-yE9IXT29Vl_eAU7bzvzv5Qe17flfpzM',\n          clientId:\n            '362606538820-om1dhhvv5d9npas7jj02mbtvi5mjksmo.apps.googleusercontent.com',\n          discoveryDocs: [\n            'https://www.googleapis.com/discovery/v1/apis/drive/v3/rest'\n          ],\n          scope:\n            'https://www.googleapis.com/auth/drive https://www.googleapis.com/auth/drive.appdata'\n        });\n        this.google.authState$.subscribe(state => {\n          if (!this.loaderRemoved) {\n            this.loaded = true;\n            setTimeout(() => {\n              document.getElementById('loader').remove();\n              this.loaderRemoved = true;\n            }, 500);\n          }\n          this.authenticated = state;\n          if (state) {\n            this.database.initalize();\n            this.zone.run(() => {\n              this.router.navigate(['/app/home']);\n            });\n          } else {\n            this.zone.run(() => {\n              this.router.navigate(['/']);\n            });\n          }\n        });\n        clearInterval(googleInitInterval);\n      }\n    }, 250);\n  }\n\n  /**\n   * Called after the view is initalized.\n   *\n   * @memberof AppComponent\n   */\n  public ngAfterViewInit() {\n    this.rlaSafe = true;\n    // Listen for route changes\n    this.router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        if (event.url === '/app/config') {\n          this.createConfigButtonState = 'active';\n        } else {\n          this.createConfigButtonState = 'inactive';\n        }\n        if (\n          event.url === '/app/config/create' ||\n          event.url === '/app/config/presets' ||\n          event.url === '/app/config/edit'\n        ) {\n          this.tabsEnabled = false;\n        } else {\n          this.tabsEnabled = true;\n        }\n      }\n    });\n  }\n\n  signOut() {\n    this.google.signOut();\n  }\n\n  signIn() {\n    this.google.signIn();\n  }\n\n  openConfigModalFunc() {\n    this.openConfigModal.next(true);\n  }\n\n  /**\n   * Gets the current route information.\n   *\n   * @param {any} outlet The route\n   * @returns\n   * @memberof AppComponent\n   */\n  getRouteState(outlet) {\n    return outlet.activatedRouteData.state;\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n    \n    \n  \n\n\n  \n    \n    \n      \n    \n    \n      \n        Sign Out\n      \n      \n        more_vert\n      \n      \n        Sign In\n      \n    \n  \n  \n    \n      \n        {{ link.label }}\n      \n    \n  \n\n\n  \n\n\n  add\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                          Sign Out                    more_vert                    Sign In                                {{ link.label }}                add'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'ConfigListComponent', 'selector': 'app-config-list'},{'name': 'ConfigModalComponent', 'selector': 'app-config-modal'},{'name': 'EditConfigModalComponent', 'selector': 'app-edit-config-modal'},{'name': 'EditConfigPageComponent', 'selector': 'app-edit-config-page'},{'name': 'FolderCreationComponent', 'selector': 'app-folder-creation'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NewConfigPageComponent', 'selector': 'app-new-rule-page'},{'name': 'NewRuleStepperComponent', 'selector': 'app-new-rule-stepper'},{'name': 'PresetConfigComponent', 'selector': 'app-preset-config'},{'name': 'PresetConfigPageComponent', 'selector': 'app-preset-config-page'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'UnauthenticatedComponent', 'selector': 'app-unauthenticated'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_AppComponent_providers\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nUnauthenticatedComponent\n\nUnauthenticatedComponent\n\nAppModule -->\n\nUnauthenticatedComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nGoogleService\n\nGoogleService\n\nAppComponent -->\n\nGoogleService->AppComponent\n\n\n\nAppModule -->\n\nGoogleService->AppModule\n\n\n\n\n\nAuthenticatedModule\n\nAuthenticatedModule\n\nAppModule -->\n\nAuthenticatedModule->AppModule\n\n\n\n\n\nConfigModule\n\nConfigModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nAuthGuardService\n\nAuthGuardService\n\nAppModule -->\n\nAuthGuardService->AppModule\n\n\n\n\n\nDatabaseService\n\nDatabaseService\n\nAppModule -->\n\nDatabaseService->AppModule\n\n\n\n\n\nPreventAuthGuardService\n\nPreventAuthGuardService\n\nAppModule -->\n\nPreventAuthGuardService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                UnauthenticatedComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthGuardService\n                            \n                            \n                                     DatabaseService\n                            \n                            \n                                     GoogleService\n                            \n                            \n                                     PreventAuthGuardService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AuthenticatedModule\n                            \n                            \n                                    ConfigModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { AppComponent } from './app.component';\nimport { appRoutes } from './app.routes';\nimport { AuthenticatedModule } from './modules/authenticated/authenticated.module';\nimport { AuthGuardService, PreventAuthGuardService } from './services/auth/auth-guard.service';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ConfigModule } from './modules/config/config.module';\nimport { environment } from '../environments/environment.prod';\nimport { FolderCreationComponent } from './components/shared/folder-creation/folder-creation.component';\nimport { GoogleService } from './services/google/google.service';\nimport { MatButtonModule } from '@angular/material/button';\nimport {\n  MatDialogModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatInputModule,\n  MatStepperModule,\n  MatToolbarModule\n  } from '@angular/material';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { UnauthenticatedComponent } from './components/auth/unauthenticated/unauthenticated.component';\nimport { DatabaseService } from './services/database/database.service';\n\n@NgModule({\n  declarations: [AppComponent, UnauthenticatedComponent],\n  imports: [\n    BrowserModule,\n    MatMenuModule,\n    MatIconModule,\n    MatTabsModule,\n    MatInputModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatToolbarModule,\n    ConfigModule.forRoot(),\n    BrowserAnimationsModule,\n    AuthenticatedModule.forRoot(),\n    RouterModule.forRoot(appRoutes),\n  ],\n  providers: [\n    DatabaseService,\n    GoogleService,\n    AuthGuardService,\n    PreventAuthGuardService,\n    AppComponent\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuardService.html":{"url":"injectables/AuthGuardService.html","title":"injectable - AuthGuardService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth/auth-guard.service.ts\n        \n\n            \n                Description\n            \n            \n                Prevent a user from accessing a route if they aren't authenticated.\n\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                google\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                zone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(google: GoogleService, router: Router, zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth/auth-guard.service.ts:13\n                            \n                        \n\n                \n                    \n                            Creates an instance of AuthGuardService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        google\n                                                  \n                                                        \n                                                                    GoogleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Declare the Google Service as google.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Declare the Router as router\n\n                                                        \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Declare NgZone as zone\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth/auth-guard.service.ts:28\n                            \n                        \n\n\n                \n                    \n                            Determines whether the user can go to the page and handle it.\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Whether or not the user can access the route\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            google\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        google:     GoogleService\n\n                    \n                \n                    \n                        \n                            Type :     GoogleService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth/auth-guard.service.ts:21\n                            \n                        \n\n                \n                    \n                        Declare the Google Service as google.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth/auth-guard.service.ts:21\n                            \n                        \n\n                \n                    \n                        Declare the Router as router\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            zone\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zone:     NgZone\n\n                    \n                \n                    \n                        \n                            Type :     NgZone\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth/auth-guard.service.ts:21\n                            \n                        \n\n                \n                    \n                        Declare NgZone as zone\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { CanActivate, Router } from '@angular/router';\nimport { GoogleService } from '../google/google.service';\nimport { Injectable, NgZone } from '@angular/core';\n\n/**\n * Prevent a user from accessing a route if they aren't authenticated.\n *\n * @export\n * @class AuthGuardService\n * @implements {CanActivate}\n */\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n/**\n * Creates an instance of AuthGuardService.\n * @param {GoogleService} google Declare the Google Service as google.\n * @param {Router} router Declare the Router as router\n * @param {NgZone} zone Declare NgZone as zone\n * @memberof AuthGuardService\n */\nconstructor(public google: GoogleService, public router: Router, public zone: NgZone) { }\n  /**\n   * Determines whether the user can go to the page and handle it.\n   *\n   * @returns {boolean} Whether or not the user can access the route\n   * @memberof AuthGuardService\n   */\n  canActivate(): boolean {\n    if (this.google.getAuthStatus()) {\n      return true;\n    }\n    this.zone.run(() => {\n      this.router.navigate(['/']);\n    });\n    return false;\n  }\n}\n\n/**\n * Prevent a user from accessing a route if they are authenticated.\n *\n * @export\n * @class PreventAuthGuardService\n * @implements {CanActivate}\n */\n@Injectable()\nexport class PreventAuthGuardService implements CanActivate {\n/**\n * Creates an instance of PreventAuthGuardService.\n * @param {GoogleService} google Declare the Google Service as google.\n * @param {Router} router Declare the Router as router\n * @param {NgZone} zone Declare NgZone as zone\n * @memberof PreventAuthGuardService\n */\nconstructor(public google: GoogleService, public router: Router, public zone: NgZone) { }\n  /**\n   * Determines whether the user can go to the page and handle it.\n   *\n   * @returns {boolean} Whether or not the user can access the route\n   * @memberof PreventAuthGuardService\n   */\n  canActivate(): boolean {\n    if (!this.google.getAuthStatus()) {\n      return true;\n    }\n    this.zone.run(() => {\n      this.router.navigate(['/app/home']);\n    });\n    return false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthenticatedModule.html":{"url":"modules/AuthenticatedModule.html","title":"module - AuthenticatedModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthenticatedModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthenticatedModule\n\n\n\ncluster_AuthenticatedModule_declarations\n\n\n\ncluster_AuthenticatedModule_imports\n\n\n\ncluster_AuthenticatedModule_exports\n\n\n\ncluster_AuthenticatedModule_providers\n\n\n\n\nConfigComponent\n\nConfigComponent\n\n\n\nAuthenticatedModule\n\nAuthenticatedModule\n\nAuthenticatedModule -->\n\nConfigComponent->AuthenticatedModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAuthenticatedModule -->\n\nHomeComponent->AuthenticatedModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nAuthenticatedModule -->\n\nSettingsComponent->AuthenticatedModule\n\n\n\n\n\nConfigComponent \n\nConfigComponent \n\nConfigComponent  -->\n\nAuthenticatedModule->ConfigComponent \n\n\n\n\n\nConfigModule\n\nConfigModule\n\nAuthenticatedModule -->\n\nConfigModule->AuthenticatedModule\n\n\n\n\n\nSorterService\n\nSorterService\n\nAuthenticatedModule -->\n\nSorterService->AuthenticatedModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/authenticated/authenticated.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Handles all authenticated components\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ConfigComponent\n                            \n                            \n                                HomeComponent\n                            \n                            \n                                SettingsComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     SorterService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ConfigModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ConfigComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ConfigComponent } from '../../components/tabs/config/config.component';\nimport { ConfigListComponent } from '../../components/tabs/config/config-list/config-list.component';\nimport { ConfigModalComponent } from '../../components/shared/config-modal/config-modal.component';\nimport { ConfigModule } from '../config/config.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HomeComponent } from '../../components/tabs/home/home.component';\nimport {\n  MatButtonModule,\n  MatCardModule,\n  MatDatepicker,\n  MatDatepickerModule,\n  MatDialogContent,\n  MatDialogModule,\n  MatExpansionModule,\n  MatFormFieldModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatSelectModule,\n  MatSnackBarModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTooltipModule\n  } from '@angular/material';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { SettingsComponent } from '../../components/tabs/settings/settings.component';\nimport { SorterService } from '../../services/sorter/sorter.service';\n\n/**\n * Handles all authenticated components\n *\n * @export\n * @class AuthenticatedModule\n */\n@NgModule({\n  declarations: [HomeComponent, ConfigComponent, SettingsComponent],\n  imports: [\n    FormsModule,\n    CommonModule,\n    MatIconModule,\n    MatListModule,\n    MatCardModule,\n    MatInputModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    ReactiveFormsModule,\n    ConfigModule.forRoot()\n  ],\n  providers: [SorterService],\n  exports: [ConfigComponent]\n})\nexport class AuthenticatedModule {\n  /**\n   * Register with the root module of the app\n   *\n   * @static\n   * @returns {ModuleWithProviders} This module\n   * @memberof AuthenticatedModule\n   */\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: AuthenticatedModule,\n      providers: []\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Config.html":{"url":"interfaces/Config.html","title":"interface - Config","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Config\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        key\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Config {\n  name: String;\n  key: String;\n}\n\nexport interface ConfigInterface {\n  activeConfig: string;\n}\n\nexport interface RuleInterface {\n  id: string;\n  name: string;\n  data?: any;\n  classifier?: string;\n  constraint?: string;\n}\n\nexport interface GroupFolderInterface {\n  name?: string;\n  renameUntitled?: boolean;\n  folderID?: string;\n}\n\nexport interface FolderCreation {\n  parent: {\n    folderID: string | undefined;\n    name: string | null;\n  };\n  prefix: {\n    type: string | null;\n    value: string;\n  };\n  name: {\n    type: string | null;\n    value: string;\n  };\n  suffix: {\n    type: string | null;\n    value: string;\n  };\n}\n\nexport interface GroupInterface {\n  id: string;\n  name: string;\n  rules: Array;\n  source: GroupFolderInterface;\n  destination?: GroupFolderInterface;\n  createFolder?: FolderCreation;\n}\n\nexport interface ConfigsInterface {\n  id: string;\n  name: string;\n  groups: Array;\n}\n\nexport interface JSONConfiguration {\n  configs: Array;\n  activeConfig: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigBuilder.html":{"url":"classes/ConfigBuilder.html","title":"class - ConfigBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/config-builder.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                addGroup\n                            \n                            \n                                    Static\n                                configFromGroup\n                            \n                            \n                                    Static\n                                folderNameBuilder\n                            \n                            \n                                    Static\n                                generateNewConfig\n                            \n                            \n                                    Static\n                                verifyConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            addGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addGroup(config: ConfigsInterface, newGroupName: string, newGroupDestination: GroupFolderInterface, newGroupSource: GroupFolderInterface, firstGroupRule: RuleInterface)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/config-builder.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    ConfigsInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        newGroupName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        newGroupDestination\n                                                        \n                                                                    GroupFolderInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        newGroupSource\n                                                        \n                                                                    GroupFolderInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        firstGroupRule\n                                                        \n                                                                    RuleInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ConfigsInterface\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            configFromGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        configFromGroup(groups: , name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/config-builder.ts:143\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        groups\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ConfigsInterface\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            folderNameBuilder\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        folderNameBuilder(createFolderConfig: FolderCreation)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/config-builder.ts:114\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createFolderConfig\n                                                        \n                                                                    FolderCreation\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            generateNewConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        generateNewConfig(configName: string, firstGroupName: string, sourceFolder: GroupFolderInterface, destinationFolder: GroupFolderInterface, createFolder: FolderCreation, firstGroupRule: RuleInterface)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/config-builder.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        firstGroupName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        sourceFolder\n                                                        \n                                                                    GroupFolderInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        destinationFolder\n                                                        \n                                                                    GroupFolderInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        createFolder\n                                                        \n                                                                    FolderCreation\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        firstGroupRule\n                                                        \n                                                                    RuleInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ConfigsInterface\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            verifyConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        verifyConfig(config: ConfigsInterface)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/config-builder.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    ConfigsInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ConfigInterface,\n  ConfigsInterface,\n  GroupFolderInterface,\n  RuleInterface,\n  FolderCreation\n} from '../../interfaces';\nimport { v4 as uuid } from 'uuid';\n\nexport class ConfigBuilder {\n  static generateNewConfig(\n    configName: string,\n    firstGroupName: string,\n    sourceFolder: GroupFolderInterface,\n    destinationFolder: GroupFolderInterface,\n    createFolder: FolderCreation,\n    firstGroupRule: RuleInterface\n  ): ConfigsInterface {\n    const configHolder: ConfigsInterface = {\n      name: configName,\n      groups: [\n        {\n          id: uuid(),\n          name: firstGroupName,\n          source: sourceFolder,\n          rules: [firstGroupRule]\n        }\n      ],\n      id: uuid()\n    };\n    if (createFolder) {\n      configHolder.groups[0].createFolder = createFolder;\n    } else {\n      configHolder.groups[0].destination = destinationFolder;\n    }\n    return configHolder;\n  }\n\n  static addGroup(\n    config: ConfigsInterface,\n    newGroupName: string,\n    newGroupDestination: GroupFolderInterface,\n    newGroupSource: GroupFolderInterface,\n    firstGroupRule: RuleInterface\n  ): ConfigsInterface {\n    const localConfig: ConfigsInterface = config;\n    localConfig.groups.push({\n      id: uuid(),\n      name: newGroupName,\n      source: newGroupSource,\n      destination: newGroupDestination,\n      rules: [firstGroupRule]\n    });\n    return localConfig;\n  }\n\n  static verifyConfig(config: ConfigsInterface): boolean {\n    let valid = true;\n    if (\n      !config.groups ||\n      !config.id ||\n      !config.name ||\n      config.name.length  {\n        if (group.createFolder) {\n          if (\n            !group.createFolder.name ||\n            !group.createFolder.parent ||\n            !group.createFolder.prefix ||\n            !group.createFolder.suffix ||\n            group.createFolder.name.value.length  {\n            if (\n              !rule.name ||\n              !rule.id ||\n              !rule.data ||\n              !rule.constraint ||\n              !rule.classifier\n            ) {\n              valid = false;\n            }\n          });\n        }\n      });\n    }\n    return valid;\n  }\n\n  static folderNameBuilder(createFolderConfig: FolderCreation): string {\n    let outputString = '';\n    switch (createFolderConfig.prefix.type) {\n      case 'text':\n        outputString += createFolderConfig.prefix.value;\n        break;\n      case 'date':\n        outputString += Date();\n        break;\n    }\n    switch (createFolderConfig.name.type) {\n      case 'text':\n        outputString += ` ${createFolderConfig.name.value}`;\n        break;\n      case 'date':\n        outputString += ` ${Date()}`;\n        break;\n    }\n    switch (createFolderConfig.suffix.type) {\n      case 'text':\n        outputString += ` ${createFolderConfig.suffix.value}`;\n        break;\n      case 'date':\n        outputString += ` ${Date()}`;\n        break;\n    }\n    return outputString;\n  }\n\n  static configFromGroup(groups, name: string): ConfigsInterface {\n    return {\n      id: uuid(),\n      name: name,\n      groups: groups\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfigComponent.html":{"url":"components/ConfigComponent.html","title":"component - ConfigComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfigComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tabs/config/config.component.ts\n\n\n    \n        Description\n    \n    \n        Declare component to be shown when the config tab is selected.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-config\n            \n\n            \n                styleUrls\n                config.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./config.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                initalized\n                            \n                            \n                                    Private\n                                openConfigModalListener\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getDialogWidth\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openNewConfigDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(appComponent: AppComponent, dialog: MatDialog, router: Router, zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tabs/config/config.component.ts:24\n                            \n                        \n\n                \n                    \n                            Creates an instance of ConfigComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appComponent\n                                                  \n                                                        \n                                                                    AppComponent\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getDialogWidth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getDialogWidth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openNewConfigDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenNewConfigDialog()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config.component.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            initalized\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        initalized:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            openConfigModalListener\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        openConfigModalListener:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, NgZone, OnInit, AfterViewInit, OnDestroy } from '@angular/core';\nimport { ConfigModalComponent } from '../../shared/config-modal/config-modal.component';\nimport { MatDialog } from '@angular/material';\nimport { RepositionScrollStrategy } from '@angular/cdk/overlay';\nimport { Router } from '@angular/router';\nimport { AppComponent } from '../../../app.component';\nimport { Subscription } from 'rxjs';\n/**\n * Declare component to be shown when the config tab is selected.\n *\n * @export\n * @class ConfigComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-config',\n  templateUrl: './config.component.html',\n  styleUrls: ['./config.component.scss'],\n})\nexport class ConfigComponent implements OnInit, AfterViewInit, OnDestroy {\n\n  public initalized = false;\n\n  private openConfigModalListener: Subscription;\n\n  /**\n   * Creates an instance of ConfigComponent.\n   * @memberof ConfigComponent\n   */\n  constructor(\n    private appComponent: AppComponent,\n    private dialog: MatDialog,\n    private router: Router,\n    private zone: NgZone\n  ) { }\n\n  ngOnInit() {\n    this.openConfigModalListener =\n      this.appComponent.openConfigModal$.subscribe(open => {\n        if (open === true) {\n          this.openNewConfigDialog();\n        }\n      });\n  }\n\n  ngAfterViewInit() {\n    this.initalized = true;\n  }\n\n  ngOnDestroy() {\n    this.openConfigModalListener.unsubscribe();\n  }\n\n  public getDialogWidth() {\n    const width: number = document.body.clientWidth;\n    if (width >= 1280) {\n      return (width / 2);\n    } else if (width >= 640) {\n      return (width / 1.5);\n    } else {\n      return 0;\n    }\n  }\n\n  openNewConfigDialog() {\n    const dialogWidth = this.getDialogWidth();\n    if (dialogWidth) {\n      const dialogInstance = this.dialog.open(ConfigModalComponent, {\n        width: `${dialogWidth}px`,\n        maxHeight: `${document.body.clientHeight * .9}px`\n      });\n      const componentInstance = dialogInstance.componentInstance;\n      const dialogSubscription =\n        componentInstance\n          .closeCommand\n          .subscribe(close => {\n            dialogInstance.close();\n            dialogSubscription.unsubscribe();\n          });\n    } else {\n      this.zone.run(() => {\n        this.router.navigate(['/app/config/create']);\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'ConfigListComponent', 'selector': 'app-config-list'},{'name': 'ConfigModalComponent', 'selector': 'app-config-modal'},{'name': 'EditConfigModalComponent', 'selector': 'app-edit-config-modal'},{'name': 'EditConfigPageComponent', 'selector': 'app-edit-config-page'},{'name': 'FolderCreationComponent', 'selector': 'app-folder-creation'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NewConfigPageComponent', 'selector': 'app-new-rule-page'},{'name': 'NewRuleStepperComponent', 'selector': 'app-new-rule-stepper'},{'name': 'PresetConfigComponent', 'selector': 'app-preset-config'},{'name': 'PresetConfigPageComponent', 'selector': 'app-preset-config-page'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'UnauthenticatedComponent', 'selector': 'app-unauthenticated'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfigComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigDataSource.html":{"url":"classes/ConfigDataSource.html","title":"class - ConfigDataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigDataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/config-data-source.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        DataSource\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                configs\n                            \n                            \n                                    Private\n                                configSubject\n                            \n                            \n                                    Public\n                                loading$\n                            \n                            \n                                    Private\n                                loadingSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                calculateStart\n                            \n                            \n                                connect\n                            \n                            \n                                disconnect\n                            \n                            \n                                loadConfigs\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(paginator: , database: DatabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/config-data-source.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        paginator\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        database\n                                                  \n                                                        \n                                                                    DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            configs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        configs:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/config-data-source.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            configSubject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        configSubject:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject([])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/config-data-source.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loading$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loading$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.loadingSubject.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/config-data-source.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadingSubject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadingSubject:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(true)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/config-data-source.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            calculateStart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        calculateStart(page: number, pageSize: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/config-data-source.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        pageSize\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            connect\n                            \n                            \n                        \n                    \n                \n                \n                    \nconnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/config-data-source.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disconnect\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisconnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/config-data-source.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadConfigs\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadConfigs(page: number, pageSize: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/config-data-source.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                0\n                                                        \n\n                                                \n                                                \n                                                        pageSize\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                10\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { DataSource } from '@angular/cdk/collections';\nimport { Config, ConfigsInterface } from 'src/interfaces';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { DatabaseService } from '../services/database/database.service';\n\nexport class ConfigDataSource implements DataSource {\n  private loadingSubject = new BehaviorSubject(true);\n  private configSubject = new BehaviorSubject([]);\n  private configs: Array;\n\n  public loading$ = this.loadingSubject.asObservable();\n\n  constructor(private paginator, private database: DatabaseService) {}\n\n  private calculateStart(page: number, pageSize: number): number {\n    return page ? page * pageSize : 0;\n  }\n\n  connect(): Observable {\n    return this.configSubject.asObservable();\n  }\n\n  disconnect(): void {\n    this.configSubject.complete();\n    this.loadingSubject.complete();\n  }\n\n  loadConfigs(page: number = 0, pageSize: number = 10) {\n    this.loadingSubject.next(true);\n    this.configs = this.database.getConfigs();\n    const start = this.calculateStart(page, pageSize);\n    const configs = this.configs.slice(start, start + pageSize);\n    const data = [];\n    for (const config in configs) {\n      if (configs[config].id && configs[config].name) {\n        const name = configs[config]['name'];\n        data.push({\n          name: name,\n          key: configs[config].id\n        });\n      }\n    }\n    this.configSubject.next(data);\n    this.loadingSubject.next(false);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfigInterface.html":{"url":"interfaces/ConfigInterface.html","title":"interface - ConfigInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ConfigInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        activeConfig\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activeConfig\n                                    \n                                \n                                \n                                    \n                                        activeConfig:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Config {\n  name: String;\n  key: String;\n}\n\nexport interface ConfigInterface {\n  activeConfig: string;\n}\n\nexport interface RuleInterface {\n  id: string;\n  name: string;\n  data?: any;\n  classifier?: string;\n  constraint?: string;\n}\n\nexport interface GroupFolderInterface {\n  name?: string;\n  renameUntitled?: boolean;\n  folderID?: string;\n}\n\nexport interface FolderCreation {\n  parent: {\n    folderID: string | undefined;\n    name: string | null;\n  };\n  prefix: {\n    type: string | null;\n    value: string;\n  };\n  name: {\n    type: string | null;\n    value: string;\n  };\n  suffix: {\n    type: string | null;\n    value: string;\n  };\n}\n\nexport interface GroupInterface {\n  id: string;\n  name: string;\n  rules: Array;\n  source: GroupFolderInterface;\n  destination?: GroupFolderInterface;\n  createFolder?: FolderCreation;\n}\n\nexport interface ConfigsInterface {\n  id: string;\n  name: string;\n  groups: Array;\n}\n\nexport interface JSONConfiguration {\n  configs: Array;\n  activeConfig: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfigListComponent.html":{"url":"components/ConfigListComponent.html","title":"component - ConfigListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfigListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tabs/config/config-list/config-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-config-list\n            \n\n            \n                styleUrls\n                config-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./config-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activeConfig\n                            \n                            \n                                    Private\n                                activeConfigChangeSubscription\n                            \n                            \n                                    Private\n                                configChangeSubscription\n                            \n                            \n                                    Public\n                                dataSource\n                            \n                            \n                                    Public\n                                loading\n                            \n                            \n                                    Private\n                                loadingSubscription\n                            \n                            \n                                    Public\n                                noConfigs\n                            \n                            \n                                    Private\n                                oldPageSize\n                            \n                            \n                                paginator\n                            \n                            \n                                    Private\n                                paginatorSubscription\n                            \n                            \n                                    Public\n                                tableColumns\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteConfig\n                            \n                            \n                                editConfig\n                            \n                            \n                                getActiveConfig\n                            \n                            \n                                getDialogWidth\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openPresets\n                            \n                            \n                                refreshConfigs\n                            \n                            \n                                setActiveConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(changeDetector: ChangeDetectorRef, database: DatabaseService, google: GoogleService, dialog: MatDialog, router: Router, zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tabs/config/config-list/config-list.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changeDetector\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        database\n                                                  \n                                                        \n                                                                    DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        google\n                                                  \n                                                        \n                                                                    GoogleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteConfig(configKey: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:197\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configKey\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \neditConfig(configID: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:175\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getActiveConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetActiveConfig(configKey: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:209\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configKey\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDialogWidth\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDialogWidth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:129\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:213\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openPresets\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenPresets()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:140\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refreshConfigs\n                            \n                            \n                        \n                    \n                \n                \n                    \nrefreshConfigs()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:161\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setActiveConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetActiveConfig(configKey: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:205\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configKey\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            activeConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeConfig:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            activeConfigChangeSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeConfigChangeSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            configChangeSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        configChangeSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dataSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dataSource:     ConfigDataSource\n\n                    \n                \n                    \n                        \n                            Type :     ConfigDataSource\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loading:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadingSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadingSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            noConfigs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        noConfigs:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            oldPageSize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        oldPageSize:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        paginator:     MatPaginator\n\n                    \n                \n                    \n                        \n                            Type :     MatPaginator\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            paginatorSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        paginatorSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tableColumns\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tableColumns:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['name', 'actions']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { BehaviorSubject } from 'rxjs';\nimport {\n  Component,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ChangeDetectorRef,\n  AfterViewInit\n} from '@angular/core';\nimport { ConfigComponent } from '../config.component';\nimport { createDirective } from '@angular/compiler/src/core';\nimport { DatabaseService } from '../../../../services/database/database.service';\nimport { DataSource } from '@angular/cdk/collections';\nimport { EditConfigModalComponent } from '../../../shared/edit-config-modal/edit-config-modal.component';\nimport {\n  MatDialog,\n  MatPaginator,\n  MatTable,\n  MatTableDataSource\n} from '@angular/material';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { PresetConfigComponent } from '../preset-config/preset-config.component';\nimport { GoogleService } from '../../../../services/google/google.service';\nimport { ConfigsInterface } from '../../../../../interfaces';\nimport { ConfigDataSource } from '../../../../classes/config-data-source';\n\n@Component({\n  selector: 'app-config-list',\n  templateUrl: './config-list.component.html',\n  styleUrls: ['./config-list.component.scss']\n})\nexport class ConfigListComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  private activeConfig: string;\n  private oldPageSize = 10;\n  private loadingSubscription: Subscription;\n  private paginatorSubscription: Subscription;\n  private configChangeSubscription: Subscription;\n  private activeConfigChangeSubscription: Subscription;\n\n  public loading = true;\n  public noConfigs = true;\n  public dataSource: ConfigDataSource;\n  public tableColumns = ['name', 'actions'];\n\n  constructor(\n    private changeDetector: ChangeDetectorRef,\n    private database: DatabaseService,\n    private google: GoogleService,\n    private dialog: MatDialog,\n    private router: Router,\n    private zone: NgZone\n  ) {}\n\n  ngOnInit() {\n    if (this.google.getAuthStatus()) {\n      this.dataSource = new ConfigDataSource(this.paginator, this.database);\n      this.database.numberConfigs().then(numConfigs => {\n        if (numConfigs === 0) {\n          this.noConfigs = true;\n        } else {\n          this.noConfigs = false;\n        }\n      });\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.google.getAuthStatus()) {\n      // Listen for page changes\n      this.paginatorSubscription = this.paginator.page.subscribe(() => {\n        if (this.oldPageSize === this.paginator.pageSize) {\n          this.dataSource.loadConfigs(\n            this.paginator.pageIndex,\n            this.paginator.pageSize\n          );\n          this.changeDetector.detectChanges();\n        } else {\n          this.dataSource.loadConfigs(0, this.paginator.pageSize);\n          this.changeDetector.detectChanges();\n          this.oldPageSize = this.paginator.pageSize;\n          this.paginator.pageIndex = 0;\n        }\n      });\n      // Load the configurations\n      this.dataSource.loadConfigs();\n      this.changeDetector.detectChanges();\n      // Pass the number of configs to the paginator\n      this.database.numberConfigs().then(numConfigs => {\n        this.paginator.length = numConfigs;\n      });\n      // Listen for config changes\n      this.configChangeSubscription = this.database.configSubject.subscribe(\n        created => {\n          this.refreshConfigs();\n          this.loading = false;\n        }\n      );\n      // Retrive the active config\n      this.database.getActiveConfig().then(\n        activeConfig => {\n          this.activeConfig = activeConfig;\n        },\n        () => {\n          this.activeConfig = undefined;\n        }\n      );\n      // Listen for active config changes\n      this.activeConfigChangeSubscription = this.database.activeConfigChanged.subscribe(\n        newConfigID => {\n          this.activeConfig = newConfigID;\n        },\n        err => console.error\n      );\n      setTimeout(_ => {\n        this.loadingSubscription = this.dataSource.loading$.subscribe(\n          loading => {\n            this.loading = loading;\n          }\n        );\n      });\n    }\n  }\n\n  getDialogWidth() {\n    const width: number = document.body.clientWidth;\n    if (width >= 1280) {\n      return width / 2;\n    } else if (width >= 640) {\n      return width / 1.5;\n    } else {\n      return 0;\n    }\n  }\n\n  openPresets() {\n    const dialogWidth = this.getDialogWidth();\n    if (dialogWidth) {\n      const dialogInstance = this.dialog.open(PresetConfigComponent, {\n        width: `${dialogWidth}px`,\n        maxHeight: `${document.body.clientHeight * 0.9}px`\n      });\n      const componentInstance = dialogInstance.componentInstance;\n      const closeSubscription = componentInstance.closeCommand.subscribe(\n        close => {\n          dialogInstance.close();\n          closeSubscription.unsubscribe();\n        }\n      );\n    } else {\n      this.zone.run(() => {\n        this.router.navigate(['/app/config/presets']);\n      });\n    }\n  }\n\n  refreshConfigs() {\n    this.loading = true;\n    this.dataSource.loadConfigs();\n    this.changeDetector.detectChanges();\n    this.database.numberConfigs().then(numConfigs => {\n      if (numConfigs === 0) {\n        this.noConfigs = true;\n      } else {\n        this.noConfigs = false;\n      }\n      this.paginator.length = numConfigs;\n    });\n  }\n\n  editConfig(configID: string) {\n    this.database.editingConfig = configID;\n    const dialogWidth = this.getDialogWidth();\n    if (dialogWidth) {\n      const dialogInstance = this.dialog.open(EditConfigModalComponent, {\n        width: `${dialogWidth}px`,\n        maxHeight: `${document.body.clientHeight * 0.9}px`\n      });\n      const componentInstance = dialogInstance.componentInstance;\n      const closeSubscription = componentInstance.closeCommand.subscribe(\n        close => {\n          dialogInstance.close();\n          closeSubscription.unsubscribe();\n        }\n      );\n    } else {\n      this.zone.run(() => {\n        this.router.navigate(['/app/config/edit']);\n      });\n    }\n  }\n\n  deleteConfig(configKey: string) {\n    this.loading = true;\n    if (configKey === this.activeConfig) {\n      this.setActiveConfig('');\n    }\n    this.database.deleteConfig(configKey);\n  }\n\n  setActiveConfig(configKey: string) {\n    this.database.setActiveConfig(configKey);\n  }\n\n  getActiveConfig(configKey: string): boolean {\n    return this.activeConfig === configKey ? true : false;\n  }\n\n  ngOnDestroy() {\n    if (this.loadingSubscription) {\n      this.loadingSubscription.unsubscribe();\n    }\n    if (this.paginatorSubscription) {\n      this.paginatorSubscription.unsubscribe();\n    }\n    if (this.configChangeSubscription) {\n      this.configChangeSubscription.unsubscribe();\n    }\n    if (this.activeConfigChangeSubscription) {\n      this.activeConfigChangeSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n  Configuration's\n  \n    \n      list\n    \n    \n      refresh\n    \n  \n\n\n  \n\n\n  \n    \n    \n      Name\n      {{config.name}}\n    \n    \n      Actions\n      \n        \n          edit\n        \n        \n          settings_power\n        \n        \n          delete_forever\n        \n      \n    \n    \n    \n  \n  \n  \n  \n\nYou have no configurations try creating one!\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Configuration\\'s            list              refresh                        Name      {{config.name}}              Actions                        edit                          settings_power                          delete_forever                                  You have no configurations try creating one!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'ConfigListComponent', 'selector': 'app-config-list'},{'name': 'ConfigModalComponent', 'selector': 'app-config-modal'},{'name': 'EditConfigModalComponent', 'selector': 'app-edit-config-modal'},{'name': 'EditConfigPageComponent', 'selector': 'app-edit-config-page'},{'name': 'FolderCreationComponent', 'selector': 'app-folder-creation'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NewConfigPageComponent', 'selector': 'app-new-rule-page'},{'name': 'NewRuleStepperComponent', 'selector': 'app-new-rule-stepper'},{'name': 'PresetConfigComponent', 'selector': 'app-preset-config'},{'name': 'PresetConfigPageComponent', 'selector': 'app-preset-config-page'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'UnauthenticatedComponent', 'selector': 'app-unauthenticated'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfigListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigModule.html":{"url":"modules/ConfigModule.html","title":"module - ConfigModule","body":"\n                   \n\n\n\n\n  Modules\n  ConfigModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_declarations\n\n\n\ncluster_ConfigModule_imports\n\n\n\ncluster_ConfigModule_exports\n\n\n\n\nConfigListComponent\n\nConfigListComponent\n\n\n\nConfigModule\n\nConfigModule\n\nConfigModule -->\n\nConfigListComponent->ConfigModule\n\n\n\n\n\nConfigModalComponent\n\nConfigModalComponent\n\nConfigModule -->\n\nConfigModalComponent->ConfigModule\n\n\n\n\n\nEditConfigModalComponent\n\nEditConfigModalComponent\n\nConfigModule -->\n\nEditConfigModalComponent->ConfigModule\n\n\n\n\n\nEditConfigPageComponent\n\nEditConfigPageComponent\n\nConfigModule -->\n\nEditConfigPageComponent->ConfigModule\n\n\n\n\n\nFolderCreationComponent\n\nFolderCreationComponent\n\nConfigModule -->\n\nFolderCreationComponent->ConfigModule\n\n\n\n\n\nNewConfigPageComponent\n\nNewConfigPageComponent\n\nConfigModule -->\n\nNewConfigPageComponent->ConfigModule\n\n\n\n\n\nNewRuleStepperComponent\n\nNewRuleStepperComponent\n\nConfigModule -->\n\nNewRuleStepperComponent->ConfigModule\n\n\n\n\n\nPresetConfigComponent\n\nPresetConfigComponent\n\nConfigModule -->\n\nPresetConfigComponent->ConfigModule\n\n\n\n\n\nPresetConfigPageComponent\n\nPresetConfigPageComponent\n\nConfigModule -->\n\nPresetConfigPageComponent->ConfigModule\n\n\n\n\n\nUnNamedPipe\n\nUnNamedPipe\n\nConfigModule -->\n\nUnNamedPipe->ConfigModule\n\n\n\n\n\nConfigListComponent \n\nConfigListComponent \n\nConfigListComponent  -->\n\nConfigModule->ConfigListComponent \n\n\n\n\n\nConfigRoutingModule\n\nConfigRoutingModule\n\nConfigModule -->\n\nConfigRoutingModule->ConfigModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/config/config.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ConfigListComponent\n                            \n                            \n                                ConfigModalComponent\n                            \n                            \n                                EditConfigModalComponent\n                            \n                            \n                                EditConfigPageComponent\n                            \n                            \n                                FolderCreationComponent\n                            \n                            \n                                NewConfigPageComponent\n                            \n                            \n                                NewRuleStepperComponent\n                            \n                            \n                                PresetConfigComponent\n                            \n                            \n                                PresetConfigPageComponent\n                            \n                            \n                                UnNamedPipe\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                ConfigModalComponent\n                            \n                            \n                                EditConfigModalComponent\n                            \n                            \n                                PresetConfigComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ConfigRoutingModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ConfigListComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ConfigListComponent } from '../../components/tabs/config/config-list/config-list.component';\nimport { ConfigModalComponent } from '../../components/shared/config-modal/config-modal.component';\nimport { EditConfigModalComponent } from '../../components/shared/edit-config-modal/edit-config-modal.component';\nimport { EditConfigPageComponent } from '../../components/shared/edit-config-page/edit-config-page.component';\nimport { FolderCreationComponent } from '../../components/shared/folder-creation/folder-creation.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  MatButtonModule,\n  MatDatepickerModule,\n  MatExpansionModule,\n  MatFormFieldModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatNativeDateModule,\n  MatPaginator,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatSelectModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTooltipModule,\n  MatCardModule\n  } from '@angular/material';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { NewConfigPageComponent } from '../../components/shared/new-config-page/new-config-page.component';\nimport { NewRuleStepperComponent } from '../../components/shared/new-rule-stepper/new-rule-stepper.component';\nimport { UnNamedPipe } from '../../pipes/un-named.pipe';\nimport { PresetConfigComponent } from '../../components/tabs/config/preset-config/preset-config.component';\nimport { PresetConfigPageComponent } from '../../components/tabs/config/preset-config-page/preset-config-page.component';\nimport { ConfigRoutingModule } from './config-routing.module';\n\n@NgModule({\n  declarations: [\n    ConfigListComponent,\n    NewConfigPageComponent,\n    ConfigModalComponent,\n    NewRuleStepperComponent,\n    EditConfigModalComponent,\n    EditConfigPageComponent,\n    FolderCreationComponent,\n    PresetConfigComponent,\n    PresetConfigPageComponent,\n    UnNamedPipe\n  ],\n  imports: [\n    FormsModule,\n    CommonModule,\n    MatIconModule,\n    MatListModule,\n    MatCardModule,\n    MatInputModule,\n    MatTableModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatTooltipModule,\n    MatStepperModule,\n    MatGridListModule,\n    MatSnackBarModule,\n    MatPaginatorModule,\n    MatFormFieldModule,\n    MatExpansionModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    ReactiveFormsModule,\n    MatProgressBarModule,\n    MatSlideToggleModule,\n    ConfigRoutingModule\n  ],\n  entryComponents: [ConfigModalComponent, EditConfigModalComponent, PresetConfigComponent],\n  exports: [ConfigListComponent]\n})\nexport class ConfigModule {\n  /**\n   * Register with the root module of the app\n   *\n   * @static\n   * @returns {ModuleWithProviders} This module\n   * @memberof ConfigModule\n   */\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: ConfigModule,\n      providers: []\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigRoutingModule.html":{"url":"modules/ConfigRoutingModule.html","title":"module - ConfigRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  ConfigRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/config/config-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ConfigComponent } from '../../components/tabs/config/config.component';\nimport { NewConfigPageComponent } from '../../components/shared/new-config-page/new-config-page.component';\nimport { AuthGuardService } from '../../services/auth/auth-guard.service';\nimport { PresetConfigPageComponent } from '../../components/tabs/config/preset-config-page/preset-config-page.component';\nimport { EditConfigPageComponent } from '../../components/shared/edit-config-page/edit-config-page.component';\n\n\nconst routes: Routes = [\n  {\n    path: 'app/config',\n    component: ConfigComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      state: 'appConfig'\n    }\n  },\n  {\n    path: 'app/config/create',\n    component: NewConfigPageComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      state: 'appConfigCreate'\n    }\n  },\n  {\n    path: 'app/config/presets',\n    component: PresetConfigPageComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      state: 'appConfigPresets'\n    }\n  },\n  {\n    path: 'app/config/edit',\n    component: EditConfigPageComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      state: 'appConfigEdit'\n    }\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ConfigRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfigsInterface.html":{"url":"interfaces/ConfigsInterface.html","title":"interface - ConfigsInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ConfigsInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        groups\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        groups\n                                    \n                                \n                                \n                                    \n                                        groups:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Config {\n  name: String;\n  key: String;\n}\n\nexport interface ConfigInterface {\n  activeConfig: string;\n}\n\nexport interface RuleInterface {\n  id: string;\n  name: string;\n  data?: any;\n  classifier?: string;\n  constraint?: string;\n}\n\nexport interface GroupFolderInterface {\n  name?: string;\n  renameUntitled?: boolean;\n  folderID?: string;\n}\n\nexport interface FolderCreation {\n  parent: {\n    folderID: string | undefined;\n    name: string | null;\n  };\n  prefix: {\n    type: string | null;\n    value: string;\n  };\n  name: {\n    type: string | null;\n    value: string;\n  };\n  suffix: {\n    type: string | null;\n    value: string;\n  };\n}\n\nexport interface GroupInterface {\n  id: string;\n  name: string;\n  rules: Array;\n  source: GroupFolderInterface;\n  destination?: GroupFolderInterface;\n  createFolder?: FolderCreation;\n}\n\nexport interface ConfigsInterface {\n  id: string;\n  name: string;\n  groups: Array;\n}\n\nexport interface JSONConfiguration {\n  configs: Array;\n  activeConfig: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseService.html":{"url":"injectables/DatabaseService.html","title":"injectable - DatabaseService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  DatabaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/database/database.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _activeConfigChanged\n                            \n                            \n                                    Private\n                                _configSubject\n                            \n                            \n                                    Public\n                                activeConfigChanged\n                            \n                            \n                                    Private\n                                configID\n                            \n                            \n                                    Public\n                                configs\n                            \n                            \n                                    Public\n                                configSubject\n                            \n                            \n                                    Private\n                                configuration\n                            \n                            \n                                    Public\n                                editingConfig\n                            \n                            \n                                    Public\n                                initalized\n                            \n                            \n                                    Public\n                                userID\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addConfig\n                            \n                            \n                                clearConfigs\n                            \n                            \n                                createConfig\n                            \n                            \n                                deleteConfig\n                            \n                            \n                                getActiveConfig\n                            \n                            \n                                getConfig\n                            \n                            \n                                getConfigs\n                            \n                            \n                                initalize\n                            \n                            \n                                numberConfigs\n                            \n                            \n                                    Private\n                                readConfiguration\n                            \n                            \n                                setActiveConfig\n                            \n                            \n                                updateConfig\n                            \n                            \n                                    Private\n                                updateLocalConfiguration\n                            \n                            \n                                    Private\n                                updateRemoteConfiguration\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/database/database.service.ts:34\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \naddConfig(config: ConfigsInterface)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:131\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    ConfigsInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clearConfigs\n                            \n                            \n                        \n                    \n                \n                \n                    \nclearConfigs()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:174\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateConfig(configName: string, firstGroupName: string, sourceLocation: GroupFolderInterface, destinationLocation: GroupFolderInterface, createFolder: FolderCreation, firstGroupRule: RuleInterface)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:110\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        firstGroupName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        sourceLocation\n                                                        \n                                                                    GroupFolderInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        destinationLocation\n                                                        \n                                                                    GroupFolderInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        createFolder\n                                                        \n                                                                    FolderCreation\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        firstGroupRule\n                                                        \n                                                                    RuleInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteConfig(configID: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:159\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getActiveConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetActiveConfig()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:198\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetConfig(configID: string, cb: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:150\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        cb\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getConfigs\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetConfigs()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:211\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Array\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initalize\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitalize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            numberConfigs\n                            \n                            \n                        \n                    \n                \n                \n                    \nnumberConfigs()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:215\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            readConfiguration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        readConfiguration(fileID: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setActiveConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetActiveConfig(configID: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:186\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateConfig(newConfig: ConfigsInterface)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:139\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newConfig\n                                                        \n                                                                    ConfigsInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateLocalConfiguration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateLocalConfiguration()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:83\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateRemoteConfiguration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateRemoteConfiguration()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:89\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _activeConfigChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _activeConfigChanged:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _configSubject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _configSubject:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            activeConfigChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeConfigChanged:     \n\n                    \n                \n                    \n                        \n                            Default value : this._activeConfigChanged.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            configID\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        configID:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            configs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        configs:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            configSubject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        configSubject:     \n\n                    \n                \n                    \n                        \n                            Default value : this._configSubject.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            configuration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        configuration:     JSONConfiguration\n\n                    \n                \n                    \n                        \n                            Type :     JSONConfiguration\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    configs: [],\n    activeConfig: ''\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editingConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editingConfig:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            initalized\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        initalized:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userID\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userID:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:34\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { ConfigBuilder } from '../../classes/config-builder';\nimport {\n  ConfigInterface,\n  ConfigsInterface,\n  FolderCreation,\n  GroupFolderInterface,\n  JSONConfiguration,\n  RuleInterface\n} from '../../../interfaces';\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n/**\n * Workaround for testing\n */\ndeclare var gapi: any;\ndeclare var google: any;\n\n@Injectable()\nexport class DatabaseService {\n  private _activeConfigChanged = new Subject();\n  private _configSubject = new Subject();\n  private configuration: JSONConfiguration = {\n    configs: [],\n    activeConfig: ''\n  };\n  private configID: string;\n\n  public activeConfigChanged = this._activeConfigChanged.asObservable();\n  public configSubject = this._configSubject.asObservable();\n  public configs: Array;\n  public editingConfig: string;\n  public initalized = false;\n  public userID: string;\n\n  constructor() {}\n\n  initalize(): void {\n    gapi.client.drive.files\n      .list({\n        q: `name = 'configuration.json'`,\n        spaces: 'appDataFolder',\n        fields: 'files(id)'\n      })\n      .then(listResponse => {\n        if (listResponse.result.files.length > 0) {\n          this.configID = listResponse.result.files[0].id;\n          this.updateLocalConfiguration();\n        } else {\n          gapi.client.drive.files\n            .create({\n              resource: {\n                name: 'configuration.json',\n                parents: ['appDataFolder']\n              },\n              fields: 'id'\n            })\n            .then(createResponse => {\n              this.configID = createResponse.result.id;\n              this.updateRemoteConfiguration().then(() => {\n                this.updateLocalConfiguration();\n              }, err => console.error);\n            }, err => console.error);\n        }\n      }, err => console.error);\n  }\n\n  /*\n  Configuration functions\n  */\n  private readConfiguration(fileID: string): Promise {\n    return new Promise((resolve, reject) => {\n      gapi.client.drive.files\n        .get({\n          fileId: fileID,\n          alt: 'media'\n        })\n        .then(response => {\n          resolve(response);\n        }, err => reject);\n    });\n  }\n  private updateLocalConfiguration() {\n    this.readConfiguration(this.configID).then(response => {\n      this.configuration = JSON.parse(response.body);\n      this.initalized = true;\n    }, err => console.error);\n  }\n  private updateRemoteConfiguration(): Promise {\n    return new Promise((resolve, reject) => {\n      gapi.client\n        .request({\n          path: `https://www.googleapis.com/upload/drive/v3/files/${\n            this.configID\n          }`,\n          method: 'PATCH',\n          params: {\n            uploadType: 'media'\n          },\n          body: JSON.stringify(this.configuration)\n        })\n        .then(response => {\n          resolve();\n        }, err => reject);\n    });\n  }\n  /*\n  Config functions\n  */\n  createConfig(\n    configName: string,\n    firstGroupName: string,\n    sourceLocation: GroupFolderInterface,\n    destinationLocation: GroupFolderInterface,\n    createFolder: FolderCreation,\n    firstGroupRule: RuleInterface\n  ): void {\n    const newConfig = ConfigBuilder.generateNewConfig(\n      configName,\n      firstGroupName,\n      sourceLocation,\n      destinationLocation,\n      createFolder,\n      firstGroupRule\n    );\n    this.configuration.configs.push(newConfig);\n    this._configSubject.next(true);\n    this.updateRemoteConfiguration().catch(err => console.error);\n  }\n\n  addConfig(config: ConfigsInterface): Promise {\n    return new Promise((resolve, reject) => {\n      this.configuration.configs.push(config);\n      this.updateRemoteConfiguration().then(res => resolve, err => reject);\n      resolve();\n    });\n  }\n\n  updateConfig(newConfig: ConfigsInterface): void {\n    this.configuration.configs.forEach(config => {\n      if (config.id === this.editingConfig) {\n        config = newConfig;\n        this.editingConfig = '';\n        this._configSubject.next(true);\n        this.updateRemoteConfiguration().catch(err => console.error);\n      }\n    });\n  }\n\n  getConfig(configID: string, cb: Function): void {\n    const configs = this.configuration.configs;\n    cb(\n      configs.find(config => {\n        return config.id === configID;\n      })\n    );\n  }\n\n  deleteConfig(configID: string): void {\n    const configIndex = this.configuration.configs.findIndex(config => {\n      return config.id === configID;\n    });\n    this.configuration.configs.splice(configIndex, 1);\n    this.updateRemoteConfiguration()\n      .then(() => {\n        this._configSubject.next(true);\n      })\n      .catch(err => {\n        this._configSubject.next(false);\n        console.error(err);\n      });\n  }\n\n  clearConfigs(): Promise {\n    return new Promise((resolve, reject) => {\n      if (this.configuration.configs) {\n        this.configuration.configs = [];\n      }\n      if (this.configuration.activeConfig) {\n        this.configuration.activeConfig = '';\n      }\n      this.updateRemoteConfiguration().then(res => resolve, err => reject);\n    });\n  }\n\n  setActiveConfig(configID: string): void {\n    this.configuration.activeConfig = configID;\n    this.updateRemoteConfiguration().then(\n      () => {\n        this._activeConfigChanged.next(configID);\n      },\n      err => {\n        this._activeConfigChanged.error(err);\n      }\n    );\n  }\n\n  getActiveConfig(): Promise {\n    return new Promise((resolve, reject) => {\n      if (\n        this.configuration.activeConfig &&\n        this.configuration.activeConfig.length > 0\n      ) {\n        resolve(this.configuration.activeConfig);\n      } else {\n        reject('No active config');\n      }\n    });\n  }\n\n  getConfigs(): Array {\n    return this.configuration.configs;\n  }\n\n  numberConfigs(): Promise {\n    return new Promise((resolve, reject) => {\n      if (this.configuration.configs) {\n        resolve(this.configuration.configs.length);\n      } else {\n        resolve(0);\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DriveQueryBuilder.html":{"url":"classes/DriveQueryBuilder.html","title":"class - DriveQueryBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DriveQueryBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/drive-query-builder.ts\n        \n\n            \n                Description\n            \n            \n                A utility class to build Google Drive query's\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                query\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createdAfter\n                            \n                            \n                                createdBefore\n                            \n                            \n                                excludesOwner\n                            \n                            \n                                excludeType\n                            \n                            \n                                fullTextContains\n                            \n                            \n                                get\n                            \n                            \n                                hasOwner\n                            \n                            \n                                modifiedAfter\n                            \n                            \n                                modifiedBefore\n                            \n                            \n                                nameContains\n                            \n                            \n                                nameExcludes\n                            \n                            \n                                openedAfter\n                            \n                            \n                                openedBefore\n                            \n                            \n                                requiresType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(parentFolderID: string, disableTrashed: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/drive-query-builder.ts:50\n                            \n                        \n\n                \n                    \n                            Creates an instance of DriveQueryBuilder.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        parentFolderID\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The ID of the folder to search in\n\n                                                        \n                                                \n                                                \n                                                        disableTrashed\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Whether or not to include file in trash\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            query\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        query:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:40\n                            \n                        \n\n                \n                    \n                        The current generated query\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAfter\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreatedAfter(date: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:139\n                            \n                        \n\n\n                \n                    \n                            Require the file to be created after the supplied date\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The date the file should be created after\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdBefore\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreatedBefore(date: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:150\n                            \n                        \n\n\n                \n                    \n                            Require the file to be created before the supplied date\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The date the file should be created before\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            excludesOwner\n                            \n                            \n                        \n                    \n                \n                \n                    \nexcludesOwner(email: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:128\n                            \n                        \n\n\n                \n                    \n                            Adds a owner exclusion to the query\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The owners email address to exclude\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            excludeType\n                            \n                            \n                        \n                    \n                \n                \n                    \nexcludeType(mimeType: DriveMimeType)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:73\n                            \n                        \n\n\n                \n                    \n                            Add a file type to ignore to the query\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        mimeType\n                                                        \n                                                                    DriveMimeType\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The file type to ignore\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fullTextContains\n                            \n                            \n                        \n                    \n                \n                \n                    \nfullTextContains(text: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:209\n                            \n                        \n\n\n                \n                    \n                            Require the document name, description, content, or indexable text to have the supplied text\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The text the document needs to have\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:48\n                            \n                        \n\n\n                \n                    \n                            Returns the current query\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The built query\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasOwner\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasOwner(email: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:117\n                            \n                        \n\n\n                \n                    \n                            Adds a owner requirement to the query\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The owners email address\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modifiedAfter\n                            \n                            \n                        \n                    \n                \n                \n                    \nmodifiedAfter(date: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:161\n                            \n                        \n\n\n                \n                    \n                            Require the file to be modified after the supplied date\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The date the file should be modified after\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modifiedBefore\n                            \n                            \n                        \n                    \n                \n                \n                    \nmodifiedBefore(date: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:172\n                            \n                        \n\n\n                \n                    \n                            Require the file to be modified before the supplied date\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The date the file should be modified before\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nameContains\n                            \n                            \n                        \n                    \n                \n                \n                    \nnameContains(string: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:95\n                            \n                        \n\n\n                \n                    \n                            Add a name content's requirement to the query\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        string\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The string the name needs\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nameExcludes\n                            \n                            \n                        \n                    \n                \n                \n                    \nnameExcludes(string: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:106\n                            \n                        \n\n\n                \n                    \n                            Add a name content's to exclude from the query\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        string\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openedAfter\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenedAfter(date: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:183\n                            \n                        \n\n\n                \n                    \n                            Require the file to be opened after the supplied date\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The date the file beeds to be opened after\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openedBefore\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenedBefore(date: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:196\n                            \n                        \n\n\n                \n                    \n                            Require the file to be opened before the supplied date\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The date the file beeds to be opened before\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requiresType\n                            \n                            \n                        \n                    \n                \n                \n                    \nrequiresType(mimeType: DriveMimeType)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:84\n                            \n                        \n\n\n                \n                    \n                            Add a file type to require to the query\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        mimeType\n                                                        \n                                                                    DriveMimeType\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The file type to require\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export enum DriveMimeType {\n  audio = 'application/vnd.google-apps.audio',\n  document = 'application/vnd.google-apps.document',\n  drawing = 'application/vnd.google-apps.drawing',\n  file = 'application/vnd.google-apps.file',\n  folder = 'application/vnd.google-apps.folder',\n  form = 'application/vnd.google-apps.form',\n  fustiontable = 'application/vnd.google-apps.fusiontable',\n  map = 'application/vnd.google-apps.map',\n  photo = 'application/vnd.google-apps.photo',\n  presentation = 'application/vnd.google-apps.presentation',\n  script = 'application/vnd.google-apps.script',\n  site = 'application/vnd.google-apps.site',\n  spreadsheet = 'application/vnd.google-apps.spreadsheet',\n  unknown = 'application/vnd.google-apps.unknown',\n  video = 'application/vnd.google-apps.video',\n  thirdParty = 'application/vnd.google-apps.drive-sdk'\n}\n\n/**\n * A utility class to build Google Drive query's\n *\n * @export\n * @class DriveQueryBuilder\n */\nexport class DriveQueryBuilder {\n  /**\n   * The current generated query\n   *\n   * @private\n   * @type {string}\n   * @memberof DriveQueryBuilder\n   */\n  private query = '';\n\n  /**\n   * Returns the current query\n   *\n   * @returns {string} The built query\n   * @memberof DriveQueryBuilder\n   */\n  get(): string {\n    return this.query;\n  }\n\n  /**\n   * Creates an instance of DriveQueryBuilder.\n   * @param {string} parentFolderID The ID of the folder to search in\n   * @param {boolean} disableTrashed Whether or not to include file in trash\n   * @memberof DriveQueryBuilder\n   */\n  constructor(parentFolderID: string, disableTrashed: boolean) {\n    if (parentFolderID) {\n      this.query += `'${parentFolderID}' in parents`;\n    }\n    if (disableTrashed) {\n      this.query += ' and trashed=false';\n    }\n  }\n\n  /**\n   * Add a file type to ignore to the query\n   *\n   * @param {DriveMimeType} mimeType The file type to ignore\n   * @memberof DriveQueryBuilder\n   */\n  excludeType(mimeType: DriveMimeType): DriveQueryBuilder {\n    this.query += ` and mimeType != '${mimeType}'`;\n    return this;\n  }\n\n  /**\n   * Add a file type to require to the query\n   *\n   * @param {DriveMimeType} mimeType The file type to require\n   * @memberof DriveQueryBuilder\n   */\n  requiresType(mimeType: DriveMimeType): DriveQueryBuilder {\n    this.query += ` and mimeType = '${mimeType}'`;\n    return this;\n  }\n\n  /**\n   * Add a name content's requirement to the query\n   *\n   * @param {string} string The string the name needs\n   * @memberof DriveQueryBuilder\n   */\n  nameContains(string: string): DriveQueryBuilder {\n    this.query += ` and name contains '${string}'`;\n    return this;\n  }\n\n  /**\n   * Add a name content's to exclude from the query\n   *\n   * @param {string} string\n   * @memberof DriveQueryBuilder\n   */\n  nameExcludes(string: string): DriveQueryBuilder {\n    this.query += ` and not name contains '${string}'`;\n    return this;\n  }\n\n  /**\n   * Adds a owner requirement to the query\n   *\n   * @param {string} email The owners email address\n   * @memberof DriveQueryBuilder\n   */\n  hasOwner(email: string): DriveQueryBuilder {\n    this.query += ` and ${email} in owners`;\n    return this;\n  }\n\n  /**\n   * Adds a owner exclusion to the query\n   *\n   * @param {string} email The owners email address to exclude\n   * @memberof DriveQueryBuilder\n   */\n  excludesOwner(email: string): DriveQueryBuilder {\n    this.query += ` and not ${email} in  owners`;\n    return this;\n  }\n\n  /**\n   * Require the file to be created after the supplied date\n   *\n   * @param {Date} date The date the file should be created after\n   * @memberof DriveQueryBuilder\n   */\n  createdAfter(date: Date): DriveQueryBuilder {\n    this.query += ` and createdTime >= '${date.toISOString().split('.')[0]}'`;\n    return this;\n  }\n\n  /**\n   * Require the file to be created before the supplied date\n   *\n   * @param {Date} date The date the file should be created before\n   * @memberof DriveQueryBuilder\n   */\n  createdBefore(date: Date): DriveQueryBuilder {\n    this.query += ` and createdTime = '${date.toISOString().split('.')[0]}'`;\n    return this;\n  }\n\n  /**\n   * Require the file to be modified before the supplied date\n   *\n   * @param {Date} date The date the file should be modified before\n   * @memberof DriveQueryBuilder\n   */\n  modifiedBefore(date: Date): DriveQueryBuilder {\n    this.query += ` and modifiedTime = '${\n      date.toISOString().split('.')[0]\n    }'`;\n    return this;\n  }\n\n  /**\n   * Require the file to be opened before the supplied date\n   *\n   * @param {Date} date The date the file beeds to be opened before\n   * @memberof DriveQueryBuilder\n   */\n  openedBefore(date: Date): DriveQueryBuilder {\n    this.query += ` and viewedByMeTime \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FolderCreation.html":{"url":"interfaces/FolderCreation.html","title":"interface - FolderCreation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FolderCreation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        parent\n                                \n                                \n                                        prefix\n                                \n                                \n                                        suffix\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                    \n                                \n                                \n                                    \n                                        parent:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prefix\n                                    \n                                \n                                \n                                    \n                                        prefix:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        suffix\n                                    \n                                \n                                \n                                    \n                                        suffix:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Config {\n  name: String;\n  key: String;\n}\n\nexport interface ConfigInterface {\n  activeConfig: string;\n}\n\nexport interface RuleInterface {\n  id: string;\n  name: string;\n  data?: any;\n  classifier?: string;\n  constraint?: string;\n}\n\nexport interface GroupFolderInterface {\n  name?: string;\n  renameUntitled?: boolean;\n  folderID?: string;\n}\n\nexport interface FolderCreation {\n  parent: {\n    folderID: string | undefined;\n    name: string | null;\n  };\n  prefix: {\n    type: string | null;\n    value: string;\n  };\n  name: {\n    type: string | null;\n    value: string;\n  };\n  suffix: {\n    type: string | null;\n    value: string;\n  };\n}\n\nexport interface GroupInterface {\n  id: string;\n  name: string;\n  rules: Array;\n  source: GroupFolderInterface;\n  destination?: GroupFolderInterface;\n  createFolder?: FolderCreation;\n}\n\nexport interface ConfigsInterface {\n  id: string;\n  name: string;\n  groups: Array;\n}\n\nexport interface JSONConfiguration {\n  configs: Array;\n  activeConfig: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FolderCreationComponent.html":{"url":"components/FolderCreationComponent.html","title":"component - FolderCreationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FolderCreationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/folder-creation/folder-creation.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-folder-creation\n            \n\n            \n                styleUrls\n                folder-creation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./folder-creation.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createFolder\n                            \n                            \n                                    Public\n                                finished\n                            \n                            \n                                    Public\n                                namingOptions\n                            \n                            \n                                    Public\n                                parentFolderIsRoot\n                            \n                            \n                                    Private\n                                valueAttributes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                done\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                opened\n                            \n                            \n                                openFolderPicker\n                            \n                            \n                                reset\n                            \n                            \n                                rootToggleChange\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                inputFolder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(google: GoogleService, snackbar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:67\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        google\n                                                  \n                                                        \n                                                                    GoogleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        inputFolder\n                    \n                    \n                            \n                            Type:    FolderCreation\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:19\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:21\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            done\n                            \n                            \n                        \n                    \n                \n                \n                    \ndone()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:146\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            opened\n                            \n                            \n                        \n                    \n                \n                \n                    \nopened()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:79\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openFolderPicker\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenFolderPicker()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:85\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:153\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rootToggleChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nrootToggleChange(event: MatSlideToggleChange)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:102\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    MatSlideToggleChange\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validate\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalidate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:118\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            createFolder\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        createFolder:     FolderCreation\n\n                    \n                \n                    \n                        \n                            Type :     FolderCreation\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    parent: {\n      folderID: undefined,\n      name: null\n    },\n    prefix: {\n      type: null,\n      value: ''\n    },\n    name: {\n      type: null,\n      value: ''\n    },\n    suffix: {\n      type: null,\n      value: ''\n    }\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            finished\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        finished:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            namingOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        namingOptions:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      name: 'Text',\n      value: 'text'\n    },\n    {\n      name: 'Sorting Date',\n      value: 'date'\n    },\n    {\n      name: 'None',\n      value: 'none'\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            parentFolderIsRoot\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parentFolderIsRoot:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            valueAttributes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        valueAttributes:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['prefix', 'name', 'suffix']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:61\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  AfterViewInit,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output\n} from '@angular/core';\nimport { FolderCreation } from '../../../../interfaces';\nimport { GoogleService } from '../../../services/google/google.service';\nimport { MatSlideToggleChange, MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-folder-creation',\n  templateUrl: './folder-creation.component.html',\n  styleUrls: ['./folder-creation.component.scss']\n})\nexport class FolderCreationComponent implements AfterViewInit {\n  @Input() inputFolder: FolderCreation;\n\n  @Output() valueChange = new EventEmitter();\n\n  private valueAttributes = ['prefix', 'name', 'suffix'];\n\n  public namingOptions = [\n    {\n      name: 'Text',\n      value: 'text'\n    },\n    {\n      name: 'Sorting Date',\n      value: 'date'\n    },\n    {\n      name: 'None',\n      value: 'none'\n    }\n  ];\n  public createFolder: FolderCreation = {\n    parent: {\n      folderID: undefined,\n      name: null\n    },\n    prefix: {\n      type: null,\n      value: ''\n    },\n    name: {\n      type: null,\n      value: ''\n    },\n    suffix: {\n      type: null,\n      value: ''\n    }\n  };\n  public parentFolderIsRoot = false;\n\n  public finished = false;\n\n  public get value(): FolderCreation {\n    if (this.validate()) {\n      return this.createFolder;\n    } else {\n      return null;\n    }\n  }\n\n  constructor(private google: GoogleService, private snackbar: MatSnackBar) {}\n\n  ngAfterViewInit() {\n    if (this.inputFolder) {\n      setTimeout(_ => {\n        this.createFolder = this.inputFolder;\n      });\n    }\n  }\n\n  opened() {\n    setTimeout(_ => {\n      this.finished = false;\n    });\n  }\n\n  openFolderPicker() {\n    const folderPickedListener = this.google.folderPicked$.subscribe(\n      pickedFolder => {\n        this.createFolder.parent = {\n          folderID: pickedFolder.id,\n          name: pickedFolder.name\n        };\n        folderPickedListener.unsubscribe();\n      },\n      err => {\n        console.error(err);\n        folderPickedListener.unsubscribe();\n      }\n    );\n    this.google.openFilePicker();\n  }\n\n  rootToggleChange(event: MatSlideToggleChange) {\n    if (event.checked) {\n      this.parentFolderIsRoot = true;\n      this.createFolder.parent = {\n        folderID: 'root',\n        name: 'My Drive'\n      };\n    } else {\n      this.parentFolderIsRoot = false;\n      this.createFolder.parent = {\n        folderID: undefined,\n        name: null\n      };\n    }\n  }\n\n  validate(): boolean {\n    const folder = this.createFolder;\n    if (folder) {\n      if (folder.parent.folderID !== undefined) {\n        let anyInvalid = false;\n        let numNone = 0;\n        this.valueAttributes.forEach(attribute => {\n          if (folder[attribute].type === 'none') {\n            numNone += 1;\n          }\n          if (folder[attribute].type === 'text') {\n            if (folder[attribute].value.length \n    \n\n    \n        \n  \n    \n      \n        Folder Creation\n      \n    \n    \n      \n        \n          \n          \n            folder\n          \n        \n        My Drive\n      \n      \n        \n          \n            {{ option.name }}\n          \n        \n        \n          \n            {{ option.name }}\n          \n        \n        \n          \n            {{ option.name }}\n          \n        \n      \n      \n        \n          \n        \n        \n          \n        \n        \n          \n        \n      \n    \n    \n      Done\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Folder Creation                                                            folder                          My Drive                                          {{ option.name }}                                                {{ option.name }}                                                {{ option.name }}                                                                                                                                Done      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'ConfigListComponent', 'selector': 'app-config-list'},{'name': 'ConfigModalComponent', 'selector': 'app-config-modal'},{'name': 'EditConfigModalComponent', 'selector': 'app-edit-config-modal'},{'name': 'EditConfigPageComponent', 'selector': 'app-edit-config-page'},{'name': 'FolderCreationComponent', 'selector': 'app-folder-creation'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NewConfigPageComponent', 'selector': 'app-new-rule-page'},{'name': 'NewRuleStepperComponent', 'selector': 'app-new-rule-stepper'},{'name': 'PresetConfigComponent', 'selector': 'app-preset-config'},{'name': 'PresetConfigPageComponent', 'selector': 'app-preset-config-page'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'UnauthenticatedComponent', 'selector': 'app-unauthenticated'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FolderCreationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleService.html":{"url":"injectables/GoogleService.html","title":"injectable - GoogleService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  GoogleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/google/google.service.ts\n        \n\n            \n                Description\n            \n            \n                Utility class to handle all interacting with the Google API\n\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _authState\n                            \n                            \n                                    Public\n                                authState$\n                            \n                            \n                                    Public\n                                folderPicked$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createFolder\n                            \n                            \n                                getAuthStatus\n                            \n                            \n                                getFileInfo\n                            \n                            \n                                getToken\n                            \n                            \n                                init\n                            \n                            \n                                listFiles\n                            \n                            \n                                moveFile\n                            \n                            \n                                openFilePicker\n                            \n                            \n                                renameFile\n                            \n                            \n                                signIn\n                            \n                            \n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(database: DatabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/google/google.service.ts:53\n                            \n                        \n\n                \n                    \n                            Creates an instance of GoogleService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        database\n                                                  \n                                                        \n                                                                    DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createFolder\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateFolder(name: string, parent?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:176\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        parent\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAuthStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAuthStatus()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:114\n                            \n                        \n\n\n                \n                    \n                            Returns the users current authentication status.\n\n\n                            \n                            \n                            \n                                Returns :     Boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFileInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFileInfo(fileID: string, fields: string, cb: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:161\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        fields\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        cb\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getToken\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:147\n                            \n                        \n\n\n                \n                    \n                            Gets the users id token\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit(config: Object, callback?: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:69\n                            \n                        \n\n\n                \n                    \n                            Initialize the Google API\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        callback\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listFiles\n                            \n                            \n                        \n                    \n                \n                \n                    \nlistFiles(query: string, cb: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:151\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        cb\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moveFile\n                            \n                            \n                        \n                    \n                \n                \n                    \nmoveFile(fileID: string, folder: string, cb: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:207\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        folder\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        cb\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openFilePicker\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenFilePicker()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:104\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            renameFile\n                            \n                            \n                        \n                    \n                \n                \n                    \nrenameFile(fileID: string, name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:194\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signIn\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignIn()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:127\n                            \n                        \n\n\n                \n                    \n                            Opens a popup allowing the user to sign in.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:136\n                            \n                        \n\n\n                \n                    \n                            Signs a user out\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _authState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _authState:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:44\n                            \n                        \n\n                \n                    \n                        Holds a subject that is used to update subscribers with the authentication status.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authState$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authState$:     \n\n                    \n                \n                    \n                        \n                            Default value : this._authState.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:51\n                            \n                        \n\n                \n                    \n                        Allows other modules / services to subscribe to the authentication status.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            folderPicked$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        folderPicked$:     \n\n                    \n                \n                    \n                        \n                            Default value : _folderPicked.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:53\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { DriveMimeType } from '../../classes/drive-query-builder';\nimport { DatabaseService } from '../database/database.service';\n\n/**\n * Workaround for testing\n */\ndeclare var gapi: any;\ndeclare var google: any;\n\n/**\n * Variable for easy reference to the authenitcation instance.\n */\nlet authInstance;\n\nlet folderPicker;\n\nconst _folderPicked = new Subject();\n\nfunction folderPicked(data: any): void {\n  if (data.action === 'picked') {\n    _folderPicked.next(data.docs[0]);\n  } else if (data.action === 'cancel') {\n    _folderPicked.error(true);\n  }\n}\n\n/**\n * Utility class to handle all interacting with the Google API\n *\n * @export\n * @class GoogleService\n */\n@Injectable()\nexport class GoogleService {\n  /**\n   * Holds a subject that is used to update subscribers with the authentication status.\n   *\n   * @private\n   * @memberof GoogleService\n   */\n  private _authState = new Subject();\n\n  /**\n   * Allows other modules / services to subscribe to the authentication status.\n   *\n   * @memberof GoogleService\n   */\n  public authState$ = this._authState.asObservable();\n\n  public folderPicked$ = _folderPicked.asObservable();\n\n  /**\n   * Creates an instance of GoogleService.\n   * @memberof GoogleService\n   */\n  constructor(\n    private database: DatabaseService\n  ) {}\n\n  /**\n   * Initialize the Google API\n   *\n   * @param {Object} config\n   * @memberof GoogleService\n   */\n  init(config: Object, callback?: Function) {\n    gapi.load('client:auth2', () => {\n      gapi.client.init(config).then(() => {\n        authInstance = gapi.auth2.getAuthInstance();\n        authInstance.isSignedIn.listen(() => {\n          this._authState.next(authInstance.isSignedIn.get());\n        });\n        const authStatus = authInstance.isSignedIn.get();\n        this._authState.next(authStatus);\n        gapi.load('picker', () => {\n          const view = new google.picker.DocsView(google.picker.ViewId.FOLDERS)\n            .setIncludeFolders(true)\n            .setSelectFolderEnabled(true)\n            .setParent('root')\n            .setOwnedByMe(true);\n\n          folderPicker = new google.picker.PickerBuilder()\n            .disableFeature(google.picker.Feature.SUPPORT_TEAM_DRIVES)\n            .setAppId(362606538820)\n            .setOAuthToken(\n              authInstance.currentUser.get().getAuthResponse().access_token\n            )\n            .setDeveloperKey('AIzaSyB-yE9IXT29Vl_eAU7bzvzv5Qe17flfpzM')\n            .setSelectableMimeTypes('application/vnd.google-apps.folder')\n            .addView(view)\n            .setCallback(folderPicked)\n            .build();\n          if (callback) {\n            callback();\n          }\n        });\n      }, console.error);\n    });\n  }\n\n  openFilePicker() {\n    folderPicker.setVisible(true);\n  }\n\n  /**\n   * Returns the users current authentication status.\n   *\n   * @returns {Boolean}\n   * @memberof GoogleService\n   */\n  getAuthStatus(): Boolean {\n    if (authInstance) {\n      return authInstance.isSignedIn.get();\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Opens a popup allowing the user to sign in.\n   *\n   * @memberof GoogleService\n   */\n  signIn(): void {\n    authInstance.signIn();\n  }\n\n  /**\n   * Signs a user out\n   *\n   * @memberof GoogleService\n   */\n  signOut(): void {\n    authInstance.signOut();\n    this.database.initalized = false;\n  }\n\n  /**\n   * Gets the users id token\n   *\n   * @returns {string}\n   * @memberof GoogleService\n   */\n  getToken(): string {\n    return authInstance.currentUser.get().getAuthResponse().id_token;\n  }\n\n  listFiles(query: string, cb: Function): void {\n    gapi.client.drive.files\n      .list({\n        q: query\n      })\n      .execute(resp => {\n        cb(resp);\n      });\n  }\n\n  getFileInfo(fileID: string, fields: string, cb: Function): void {\n    gapi.client.drive.files\n      .get({\n        fileId: fileID,\n        fields: fields\n      })\n      .execute(resp => {\n        if (resp.err) {\n          console.error(resp.err);\n        } else {\n          cb(resp);\n        }\n      });\n  }\n\n  createFolder(name: string, parent?: string): Promise {\n    const fileResource = {\n      name: name,\n      mimeType: DriveMimeType.folder\n    };\n    if (parent) { fileResource['parents'] = [parent]; }\n    return new Promise((resolve, reject) => {\n      gapi.client.drive.files\n        .create({\n          resource: fileResource,\n          fields: 'id'\n        })\n        .execute(resp => {\n          if (resp.err) { reject(resp.err); } else { resolve(resp.id); }\n        });\n    });\n  }\n\n  renameFile(fileID: string, name: string) {\n    return new Promise((resolve, reject) => {\n      gapi.client.drive.files.update({\n        'fileId': fileID,\n        'resource': {\n          'name': name\n        }\n      }).execute(resp => {\n        if (resp.err) { reject(resp.err); } else { resolve(); }\n      });\n    });\n  }\n\n  moveFile(fileID: string, folder: string, cb: Function): void {\n    this.getFileInfo(fileID, 'parents', file => {\n      const prevParents = file.parents.join(',');\n      gapi.client.drive.files\n        .update({\n          fileId: fileID,\n          addParents: folder,\n          removeParents: prevParents\n        })\n        .execute(resp => {\n          if (resp.err) {\n            console.error(resp.err);\n          } else {\n            cb(true);\n          }\n        });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GroupFolderInterface.html":{"url":"interfaces/GroupFolderInterface.html","title":"interface - GroupFolderInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GroupFolderInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        folderID\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        renameUntitled\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        folderID\n                                    \n                                \n                                \n                                    \n                                        folderID:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        renameUntitled\n                                    \n                                \n                                \n                                    \n                                        renameUntitled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Config {\n  name: String;\n  key: String;\n}\n\nexport interface ConfigInterface {\n  activeConfig: string;\n}\n\nexport interface RuleInterface {\n  id: string;\n  name: string;\n  data?: any;\n  classifier?: string;\n  constraint?: string;\n}\n\nexport interface GroupFolderInterface {\n  name?: string;\n  renameUntitled?: boolean;\n  folderID?: string;\n}\n\nexport interface FolderCreation {\n  parent: {\n    folderID: string | undefined;\n    name: string | null;\n  };\n  prefix: {\n    type: string | null;\n    value: string;\n  };\n  name: {\n    type: string | null;\n    value: string;\n  };\n  suffix: {\n    type: string | null;\n    value: string;\n  };\n}\n\nexport interface GroupInterface {\n  id: string;\n  name: string;\n  rules: Array;\n  source: GroupFolderInterface;\n  destination?: GroupFolderInterface;\n  createFolder?: FolderCreation;\n}\n\nexport interface ConfigsInterface {\n  id: string;\n  name: string;\n  groups: Array;\n}\n\nexport interface JSONConfiguration {\n  configs: Array;\n  activeConfig: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GroupInterface.html":{"url":"interfaces/GroupInterface.html","title":"interface - GroupInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GroupInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        createFolder\n                                \n                                \n                                            Optional\n                                        destination\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        rules\n                                \n                                \n                                        source\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createFolder\n                                    \n                                \n                                \n                                    \n                                        createFolder:     FolderCreation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FolderCreation\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                    \n                                \n                                \n                                    \n                                        destination:     GroupFolderInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     GroupFolderInterface\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rules\n                                    \n                                \n                                \n                                    \n                                        rules:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:     GroupFolderInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     GroupFolderInterface\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Config {\n  name: String;\n  key: String;\n}\n\nexport interface ConfigInterface {\n  activeConfig: string;\n}\n\nexport interface RuleInterface {\n  id: string;\n  name: string;\n  data?: any;\n  classifier?: string;\n  constraint?: string;\n}\n\nexport interface GroupFolderInterface {\n  name?: string;\n  renameUntitled?: boolean;\n  folderID?: string;\n}\n\nexport interface FolderCreation {\n  parent: {\n    folderID: string | undefined;\n    name: string | null;\n  };\n  prefix: {\n    type: string | null;\n    value: string;\n  };\n  name: {\n    type: string | null;\n    value: string;\n  };\n  suffix: {\n    type: string | null;\n    value: string;\n  };\n}\n\nexport interface GroupInterface {\n  id: string;\n  name: string;\n  rules: Array;\n  source: GroupFolderInterface;\n  destination?: GroupFolderInterface;\n  createFolder?: FolderCreation;\n}\n\nexport interface ConfigsInterface {\n  id: string;\n  name: string;\n  groups: Array;\n}\n\nexport interface JSONConfiguration {\n  configs: Array;\n  activeConfig: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tabs/home/home.component.ts\n\n\n    \n        Description\n    \n    \n        Declare a component to be shown when the home tab is selected.\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeConfigName\n                            \n                            \n                                    Public\n                                isActiveConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToConfigPage\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                sortUsersDrive\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(zone: NgZone, router: Router, snackBar: MatSnackBar, database: DatabaseService, sorterService: SorterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tabs/home/home.component.ts:21\n                            \n                        \n\n                \n                    \n                            Creates an instance of HomeComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        database\n                                                  \n                                                        \n                                                                    DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        sorterService\n                                                  \n                                                        \n                                                                    SorterService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToConfigPage\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToConfigPage()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/home/home.component.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/home/home.component.ts:40\n                            \n                        \n\n\n                \n                    \n                            Handle component initalization\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortUsersDrive\n                            \n                            \n                        \n                    \n                \n                \n                    \nsortUsersDrive()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/home/home.component.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            activeConfigName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeConfigName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Loading...'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/home/home.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isActiveConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isActiveConfig:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/home/home.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, NgZone, AfterViewInit } from '@angular/core';\nimport { DatabaseService } from '../../../services/database/database.service';\nimport { MatSnackBar } from '@angular/material';\nimport { SorterService } from '../../../services/sorter/sorter.service';\nimport { Router } from '@angular/router';\n\n/**\n * Declare a component to be shown when the home tab is selected.\n *\n * @export\n * @class HomeComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements AfterViewInit {\n  public isActiveConfig = false;\n  public activeConfigName = 'Loading...';\n\n  /**\n   * Creates an instance of HomeComponent.\n   * @memberof HomeComponent\n   */\n  constructor(\n    private zone: NgZone,\n    private router: Router,\n    private snackBar: MatSnackBar,\n    private database: DatabaseService,\n    private sorterService: SorterService\n  ) {}\n\n  /**\n   * Handle component initalization\n   *\n   * @memberof HomeComponent\n   */\n  ngAfterViewInit() {\n    const databaseInitalizedCheck = setInterval(() => {\n      if (this.database.initalized) {\n        this.database.getActiveConfig().then(\n          activeConfig => {\n            this.database.getConfig(activeConfig, config => {\n              this.activeConfigName = config.name;\n            });\n            this.isActiveConfig = true;\n          },\n          err => {\n            this.activeConfigName = err;\n            this.isActiveConfig = false;\n          }\n        );\n        clearInterval(databaseInitalizedCheck);\n      }\n    }, 750);\n  }\n\n  sortUsersDrive() {\n    this.sorterService.sort().then(() => {\n      this.snackBar.open('Google Drive sorted!', 'OK', {\n        duration: 5000\n      });\n    }, err => console.error);\n  }\n\n  goToConfigPage() {\n    this.zone.run(() => {\n      this.router.navigateByUrl('/app/config');\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      settings_power\n      Active Config\n    \n    \n      {{ activeConfigName }}\n    \n  \n  \n    \n      sort\n      Sorting\n    \n    \n      Sort Now\n    \n  \n\n\n  \n    \n      settings\n      Configuration's\n    \n    \n      Configuration's control how your Google Drive is sorted!\n    \n    \n      Go to Configuration's\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            settings_power      Active Config              {{ activeConfigName }}                  sort      Sorting              Sort Now                  settings      Configuration\\'s              Configuration\\'s control how your Google Drive is sorted!              Go to Configuration\\'s      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'ConfigListComponent', 'selector': 'app-config-list'},{'name': 'ConfigModalComponent', 'selector': 'app-config-modal'},{'name': 'EditConfigModalComponent', 'selector': 'app-edit-config-modal'},{'name': 'EditConfigPageComponent', 'selector': 'app-edit-config-page'},{'name': 'FolderCreationComponent', 'selector': 'app-folder-creation'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NewConfigPageComponent', 'selector': 'app-new-rule-page'},{'name': 'NewRuleStepperComponent', 'selector': 'app-new-rule-stepper'},{'name': 'PresetConfigComponent', 'selector': 'app-preset-config'},{'name': 'PresetConfigPageComponent', 'selector': 'app-preset-config-page'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'UnauthenticatedComponent', 'selector': 'app-unauthenticated'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JSONConfiguration.html":{"url":"interfaces/JSONConfiguration.html","title":"interface - JSONConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JSONConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        activeConfig\n                                \n                                \n                                        configs\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activeConfig\n                                    \n                                \n                                \n                                    \n                                        activeConfig:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        configs\n                                    \n                                \n                                \n                                    \n                                        configs:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Config {\n  name: String;\n  key: String;\n}\n\nexport interface ConfigInterface {\n  activeConfig: string;\n}\n\nexport interface RuleInterface {\n  id: string;\n  name: string;\n  data?: any;\n  classifier?: string;\n  constraint?: string;\n}\n\nexport interface GroupFolderInterface {\n  name?: string;\n  renameUntitled?: boolean;\n  folderID?: string;\n}\n\nexport interface FolderCreation {\n  parent: {\n    folderID: string | undefined;\n    name: string | null;\n  };\n  prefix: {\n    type: string | null;\n    value: string;\n  };\n  name: {\n    type: string | null;\n    value: string;\n  };\n  suffix: {\n    type: string | null;\n    value: string;\n  };\n}\n\nexport interface GroupInterface {\n  id: string;\n  name: string;\n  rules: Array;\n  source: GroupFolderInterface;\n  destination?: GroupFolderInterface;\n  createFolder?: FolderCreation;\n}\n\nexport interface ConfigsInterface {\n  id: string;\n  name: string;\n  groups: Array;\n}\n\nexport interface JSONConfiguration {\n  configs: Array;\n  activeConfig: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PresetConfigComponent.html":{"url":"components/PresetConfigComponent.html","title":"component - PresetConfigComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PresetConfigComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tabs/config/preset-config/preset-config.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-preset-config\n            \n\n            \n                styleUrls\n                preset-config.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./preset-config.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _closeCommand\n                            \n                            \n                                    Public\n                                closeCommand\n                            \n                            \n                                    Public\n                                creationEnabled\n                            \n                            \n                                    Public\n                                isPage\n                            \n                            \n                                    Public\n                                presets\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                zone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addPreset\n                            \n                            \n                                close\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(zone: NgZone, router: Router, snackbar: MatSnackBar, google: GoogleService, database: DatabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        google\n                                                  \n                                                        \n                                                                    GoogleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        database\n                                                  \n                                                        \n                                                                    DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addPreset\n                            \n                            \n                        \n                    \n                \n                \n                    \naddPreset(presetID: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        presetID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \nclose()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _closeCommand\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _closeCommand:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            closeCommand\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        closeCommand:     \n\n                    \n                \n                    \n                        \n                            Default value : this._closeCommand.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            creationEnabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        creationEnabled:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isPage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isPage:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            presets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        presets:     \n\n                    \n                \n                    \n                        \n                            Default value : presets\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            zone\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zone:     NgZone\n\n                    \n                \n                    \n                        \n                            Type :     NgZone\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, NgZone } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { presets } from '../presets';\nimport { GoogleService } from '../../../../services/google/google.service';\nimport { v4 as uuid } from 'uuid';\nimport { ConfigBuilder } from '../../../../classes/config-builder';\nimport { DatabaseService } from '../../../../services/database/database.service';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-preset-config',\n  templateUrl: './preset-config.component.html',\n  styleUrls: ['./preset-config.component.scss']\n})\nexport class PresetConfigComponent implements OnInit {\n  private _closeCommand = new Subject();\n\n  public closeCommand = this._closeCommand.asObservable();\n\n  public isPage = false;\n  public presets = presets;\n  public creationEnabled = true;\n\n  constructor(\n    public zone: NgZone,\n    public router: Router,\n    private snackbar: MatSnackBar,\n    private google: GoogleService,\n    private database: DatabaseService\n  ) {}\n\n  ngOnInit() {}\n\n  close() {\n    this._closeCommand.next(true);\n  }\n\n  addPreset(presetID: string) {\n    const config = presets.find(element => {\n      return element.id === presetID;\n    });\n    const createFolders = config.data.createFolders;\n    const groups = config.data.groups;\n    const createdFolders = [];\n    let requestsSent = 0;\n    let requestsRecived = 0;\n    this.creationEnabled = false;\n    createFolders.forEach(folder => {\n      requestsSent += 1;\n      this.google\n        .createFolder(folder)\n        .then(id => {\n          requestsRecived += 1;\n          const foundGroup = groups.find(group => {\n            return group.destination.presetID === folder;\n          });\n          foundGroup.destination = {\n            folderID: id,\n            name: folder\n          };\n        })\n        .catch(err => console.error);\n    });\n    const checkInterval = setInterval(() => {\n      if (requestsSent === requestsRecived) {\n        clearInterval(checkInterval);\n        groups.forEach(group => {\n          group['id'] = uuid();\n          group.rules.forEach(rule => {\n            rule['id'] = uuid();\n          });\n        });\n        this.database\n          .addConfig(ConfigBuilder.configFromGroup(groups, 'I-STEM'))\n          .then(\n            () => {\n              this.close();\n              this.creationEnabled = true;\n            },\n            err => {\n              this.snackbar.open('There was a problem adding your preset!');\n              this.creationEnabled = true;\n            }\n          );\n      }\n    }, 100);\n  }\n}\n\n    \n\n    \n        \n  Preset Configs\n  Preset Configs\n  \n    \n      \n          \n        {{ preset.name }}\n        {{ preset.category }}\n      \n      \n        {{ preset.description }}\n      \n      \n        Add Preset\n      \n    \n    \n      Cancel\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Preset Configs  Preset Configs                              {{ preset.name }}        {{ preset.category }}                    {{ preset.description }}                    Add Preset                    Cancel      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'ConfigListComponent', 'selector': 'app-config-list'},{'name': 'ConfigModalComponent', 'selector': 'app-config-modal'},{'name': 'EditConfigModalComponent', 'selector': 'app-edit-config-modal'},{'name': 'EditConfigPageComponent', 'selector': 'app-edit-config-page'},{'name': 'FolderCreationComponent', 'selector': 'app-folder-creation'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NewConfigPageComponent', 'selector': 'app-new-rule-page'},{'name': 'NewRuleStepperComponent', 'selector': 'app-new-rule-stepper'},{'name': 'PresetConfigComponent', 'selector': 'app-preset-config'},{'name': 'PresetConfigPageComponent', 'selector': 'app-preset-config-page'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'UnauthenticatedComponent', 'selector': 'app-unauthenticated'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PresetConfigComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PresetConfigPageComponent.html":{"url":"components/PresetConfigPageComponent.html","title":"component - PresetConfigPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PresetConfigPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tabs/config/preset-config-page/preset-config-page.component.ts\n\n\n\n    \n        Extends\n    \n    \n            PresetConfigComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-preset-config-page\n            \n\n            \n                styleUrls\n                .preset-config/preset-config.component.scss\n            \n\n\n\n            \n                templateUrl\n                ../preset-config/preset-config.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isPage\n                            \n                            \n                                    Private\n                                _closeCommand\n                            \n                            \n                                    Public\n                                closeCommand\n                            \n                            \n                                    Public\n                                creationEnabled\n                            \n                            \n                                    Public\n                                isPage\n                            \n                            \n                                    Public\n                                presets\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                zone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                addPreset\n                            \n                            \n                                close\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \nclose()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config-page/preset-config-page.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addPreset\n                            \n                            \n                        \n                    \n                \n                \n                    \naddPreset(presetID: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PresetConfigComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PresetConfigComponent:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        presetID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \nclose()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PresetConfigComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PresetConfigComponent:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PresetConfigComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PresetConfigComponent:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isPage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isPage:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config-page/preset-config-page.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _closeCommand\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _closeCommand:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from     PresetConfigComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PresetConfigComponent:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            closeCommand\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        closeCommand:     \n\n                    \n                \n                    \n                        \n                            Default value : this._closeCommand.asObservable()\n                        \n                    \n                            \n                                \n                                    Inherited from     PresetConfigComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PresetConfigComponent:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            creationEnabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        creationEnabled:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                            \n                                \n                                    Inherited from     PresetConfigComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PresetConfigComponent:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isPage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isPage:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     PresetConfigComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PresetConfigComponent:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            presets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        presets:     \n\n                    \n                \n                    \n                        \n                            Default value : presets\n                        \n                    \n                            \n                                \n                                    Inherited from     PresetConfigComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PresetConfigComponent:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                            \n                                \n                                    Inherited from     PresetConfigComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PresetConfigComponent:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            zone\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zone:     NgZone\n\n                    \n                \n                    \n                        \n                            Type :     NgZone\n\n                        \n                    \n                            \n                                \n                                    Inherited from     PresetConfigComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PresetConfigComponent:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { PresetConfigComponent } from '../preset-config/preset-config.component';\n\n@Component({\n  selector: 'app-preset-config-page',\n  templateUrl: '../preset-config/preset-config.component.html',\n  styleUrls: ['../preset-config/preset-config.component.scss']\n})\nexport class PresetConfigPageComponent extends PresetConfigComponent {\n  public isPage = true;\n\n  close() {\n    this.zone.run(() => {\n      this.router.navigateByUrl('/app/config');\n    });\n  }\n}\n\n    \n\n    \n        \n  Preset Configs\n  Preset Configs\n  \n    \n      \n          \n        {{ preset.name }}\n        {{ preset.category }}\n      \n      \n        {{ preset.description }}\n      \n      \n        Add Preset\n      \n    \n    \n      Cancel\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Preset Configs  Preset Configs                              {{ preset.name }}        {{ preset.category }}                    {{ preset.description }}                    Add Preset                    Cancel      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'ConfigListComponent', 'selector': 'app-config-list'},{'name': 'ConfigModalComponent', 'selector': 'app-config-modal'},{'name': 'EditConfigModalComponent', 'selector': 'app-edit-config-modal'},{'name': 'EditConfigPageComponent', 'selector': 'app-edit-config-page'},{'name': 'FolderCreationComponent', 'selector': 'app-folder-creation'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NewConfigPageComponent', 'selector': 'app-new-rule-page'},{'name': 'NewRuleStepperComponent', 'selector': 'app-new-rule-stepper'},{'name': 'PresetConfigComponent', 'selector': 'app-preset-config'},{'name': 'PresetConfigPageComponent', 'selector': 'app-preset-config-page'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'UnauthenticatedComponent', 'selector': 'app-unauthenticated'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PresetConfigPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PreventAuthGuardService.html":{"url":"injectables/PreventAuthGuardService.html","title":"injectable - PreventAuthGuardService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  PreventAuthGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth/auth-guard.service.ts\n        \n\n            \n                Description\n            \n            \n                Prevent a user from accessing a route if they are authenticated.\n\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                google\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                zone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(google: GoogleService, router: Router, zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth/auth-guard.service.ts:47\n                            \n                        \n\n                \n                    \n                            Creates an instance of PreventAuthGuardService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        google\n                                                  \n                                                        \n                                                                    GoogleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Declare the Google Service as google.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Declare the Router as router\n\n                                                        \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Declare NgZone as zone\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth/auth-guard.service.ts:62\n                            \n                        \n\n\n                \n                    \n                            Determines whether the user can go to the page and handle it.\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Whether or not the user can access the route\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            google\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        google:     GoogleService\n\n                    \n                \n                    \n                        \n                            Type :     GoogleService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth/auth-guard.service.ts:55\n                            \n                        \n\n                \n                    \n                        Declare the Google Service as google.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth/auth-guard.service.ts:55\n                            \n                        \n\n                \n                    \n                        Declare the Router as router\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            zone\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zone:     NgZone\n\n                    \n                \n                    \n                        \n                            Type :     NgZone\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth/auth-guard.service.ts:55\n                            \n                        \n\n                \n                    \n                        Declare NgZone as zone\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { CanActivate, Router } from '@angular/router';\nimport { GoogleService } from '../google/google.service';\nimport { Injectable, NgZone } from '@angular/core';\n\n/**\n * Prevent a user from accessing a route if they aren't authenticated.\n *\n * @export\n * @class AuthGuardService\n * @implements {CanActivate}\n */\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n/**\n * Creates an instance of AuthGuardService.\n * @param {GoogleService} google Declare the Google Service as google.\n * @param {Router} router Declare the Router as router\n * @param {NgZone} zone Declare NgZone as zone\n * @memberof AuthGuardService\n */\nconstructor(public google: GoogleService, public router: Router, public zone: NgZone) { }\n  /**\n   * Determines whether the user can go to the page and handle it.\n   *\n   * @returns {boolean} Whether or not the user can access the route\n   * @memberof AuthGuardService\n   */\n  canActivate(): boolean {\n    if (this.google.getAuthStatus()) {\n      return true;\n    }\n    this.zone.run(() => {\n      this.router.navigate(['/']);\n    });\n    return false;\n  }\n}\n\n/**\n * Prevent a user from accessing a route if they are authenticated.\n *\n * @export\n * @class PreventAuthGuardService\n * @implements {CanActivate}\n */\n@Injectable()\nexport class PreventAuthGuardService implements CanActivate {\n/**\n * Creates an instance of PreventAuthGuardService.\n * @param {GoogleService} google Declare the Google Service as google.\n * @param {Router} router Declare the Router as router\n * @param {NgZone} zone Declare NgZone as zone\n * @memberof PreventAuthGuardService\n */\nconstructor(public google: GoogleService, public router: Router, public zone: NgZone) { }\n  /**\n   * Determines whether the user can go to the page and handle it.\n   *\n   * @returns {boolean} Whether or not the user can access the route\n   * @memberof PreventAuthGuardService\n   */\n  canActivate(): boolean {\n    if (!this.google.getAuthStatus()) {\n      return true;\n    }\n    this.zone.run(() => {\n      this.router.navigate(['/app/home']);\n    });\n    return false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RuleInterface.html":{"url":"interfaces/RuleInterface.html","title":"interface - RuleInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RuleInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        classifier\n                                \n                                \n                                            Optional\n                                        constraint\n                                \n                                \n                                            Optional\n                                        data\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        classifier\n                                    \n                                \n                                \n                                    \n                                        classifier:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        constraint\n                                    \n                                \n                                \n                                    \n                                        constraint:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Config {\n  name: String;\n  key: String;\n}\n\nexport interface ConfigInterface {\n  activeConfig: string;\n}\n\nexport interface RuleInterface {\n  id: string;\n  name: string;\n  data?: any;\n  classifier?: string;\n  constraint?: string;\n}\n\nexport interface GroupFolderInterface {\n  name?: string;\n  renameUntitled?: boolean;\n  folderID?: string;\n}\n\nexport interface FolderCreation {\n  parent: {\n    folderID: string | undefined;\n    name: string | null;\n  };\n  prefix: {\n    type: string | null;\n    value: string;\n  };\n  name: {\n    type: string | null;\n    value: string;\n  };\n  suffix: {\n    type: string | null;\n    value: string;\n  };\n}\n\nexport interface GroupInterface {\n  id: string;\n  name: string;\n  rules: Array;\n  source: GroupFolderInterface;\n  destination?: GroupFolderInterface;\n  createFolder?: FolderCreation;\n}\n\nexport interface ConfigsInterface {\n  id: string;\n  name: string;\n  groups: Array;\n}\n\nexport interface JSONConfiguration {\n  configs: Array;\n  activeConfig: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tabs/settings/settings.component.ts\n\n\n    \n        Description\n    \n    \n        Declare the component to be shown when the settings tab is selected.\n\n    \n\n\n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n            \n                styleUrls\n                settings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearConfigs\n                            \n                            \n                                deleteAccount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(google: GoogleService, database: DatabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tabs/settings/settings.component.ts:21\n                            \n                        \n\n                \n                    \n                            Creates an instance of SettingsComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        google\n                                                  \n                                                        \n                                                                    GoogleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        database\n                                                  \n                                                        \n                                                                    DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clearConfigs\n                            \n                            \n                        \n                    \n                \n                \n                    \nclearConfigs()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/settings/settings.component.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteAccount()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/settings/settings.component.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { DatabaseService } from '../../../services/database/database.service';\nimport { GoogleService } from '../../../services/google/google.service';\n\n/**\n * Workaround for testing\n */\ndeclare var gapi: any;\n\n/**\n * Declare the component to be shown when the settings tab is selected.\n *\n * @export\n * @class SettingsComponent\n */\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent {\n  /**\n   * Creates an instance of SettingsComponent.\n   * @memberof SettingsComponent\n   */\n  constructor(\n    private google: GoogleService,\n    private database: DatabaseService\n  ) {}\n\n  clearConfigs() {\n    this.database.clearConfigs().catch(err => console.error);\n  }\n\n  deleteAccount() {\n    this.database.clearConfigs().then(() => {\n      this.google.signOut();\n    }, err => console.error);\n  }\n}\n\n    \n\n    \n        \n    \n        Clear Configurations\n    \n\n\n    \n        Delete Account\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Clear Configurations                Delete Account    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'ConfigListComponent', 'selector': 'app-config-list'},{'name': 'ConfigModalComponent', 'selector': 'app-config-modal'},{'name': 'EditConfigModalComponent', 'selector': 'app-edit-config-modal'},{'name': 'EditConfigPageComponent', 'selector': 'app-edit-config-page'},{'name': 'FolderCreationComponent', 'selector': 'app-folder-creation'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NewConfigPageComponent', 'selector': 'app-new-rule-page'},{'name': 'NewRuleStepperComponent', 'selector': 'app-new-rule-stepper'},{'name': 'PresetConfigComponent', 'selector': 'app-preset-config'},{'name': 'PresetConfigPageComponent', 'selector': 'app-preset-config-page'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'UnauthenticatedComponent', 'selector': 'app-unauthenticated'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SorterService.html":{"url":"injectables/SorterService.html","title":"injectable - SorterService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SorterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/sorter/sorter.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getDriveQuery\n                            \n                            \n                                    Private\n                                getUntitledFiles\n                            \n                            \n                                loadConfig\n                            \n                            \n                                sort\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(google: GoogleService, database: DatabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/sorter/sorter.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        google\n                                                  \n                                                        \n                                                                    GoogleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        database\n                                                  \n                                                        \n                                                                    DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getDriveQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getDriveQuery(group: GroupInterface)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/sorter/sorter.service.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        group\n                                                        \n                                                                    GroupInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getUntitledFiles\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getUntitledFiles(destination: GroupFolderInterface)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/sorter/sorter.service.ts:124\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        destination\n                                                        \n                                                                    GroupFolderInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadConfig(cb?: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/sorter/sorter.service.ts:130\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cb\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                            \n                        \n                    \n                \n                \n                    \nsort()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/sorter/sorter.service.ts:146\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     ConfigsInterface\n\n                    \n                \n                    \n                        \n                            Type :     ConfigsInterface\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/sorter/sorter.service.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n  ConfigsInterface,\n  GroupInterface,\n  GroupFolderInterface\n} from '../../../interfaces';\nimport { DatabaseService } from '../database/database.service';\nimport {\n  DriveMimeType,\n  DriveQueryBuilder\n} from '../../classes/drive-query-builder';\nimport { GoogleService } from '../google/google.service';\nimport { Injectable } from '@angular/core';\nimport { ConfigBuilder } from '../../classes/config-builder';\n\n/**\n * Workaround for testing\n */\ndeclare var gapi: any;\n\n@Injectable()\nexport class SorterService {\n  config: ConfigsInterface;\n\n  constructor(\n    private google: GoogleService,\n    private database: DatabaseService\n  ) {\n    this.loadConfig();\n    this.database.activeConfigChanged.subscribe(() => {\n      this.loadConfig();\n    });\n  }\n\n  private getDriveQuery(group: GroupInterface): string {\n    let driveQuery = new DriveQueryBuilder(group.source.folderID, true);\n    group.rules.forEach(rule => {\n      switch (rule.classifier) {\n        case 'fullText':\n          driveQuery = driveQuery.fullTextContains(rule.data.fullText);\n          break;\n        case 'title':\n          const title = rule.data.title;\n          switch (rule.constraint) {\n            case 'include':\n              driveQuery = driveQuery.nameContains(title);\n              break;\n            case 'exclude':\n              driveQuery = driveQuery.nameExcludes(title);\n              break;\n          }\n          break;\n        case 'type':\n          const type = rule.data.fileType;\n          switch (rule.constraint) {\n            case 'include':\n              driveQuery = driveQuery.requiresType(type);\n              break;\n            case 'exclude':\n              driveQuery = driveQuery.excludeType(type);\n              break;\n          }\n          break;\n        case 'owner':\n          const owner = rule.data.owner;\n          switch (rule.constraint) {\n            case 'include':\n              driveQuery = driveQuery.hasOwner(owner);\n              break;\n            case 'exclude':\n              driveQuery = driveQuery.excludesOwner(owner);\n              break;\n          }\n          break;\n        case 'creationDate':\n          switch (rule.constraint) {\n            case 'include':\n              driveQuery = driveQuery.createdAfter(rule.data.date);\n              break;\n            case 'exclude':\n              driveQuery = driveQuery.createdBefore(rule.data.date);\n              break;\n            case 'between':\n              driveQuery = driveQuery\n                .createdAfter(rule.data.firstDate)\n                .createdBefore(rule.data.secondDate);\n              break;\n          }\n          break;\n        case 'lastOpened':\n          switch (rule.constraint) {\n            case 'include':\n              driveQuery = driveQuery.openedAfter(rule.data.date);\n              break;\n            case 'exclude':\n              driveQuery = driveQuery.openedBefore(rule.data.date);\n              break;\n            case 'between':\n              driveQuery = driveQuery\n                .openedAfter(rule.data.firstDate)\n                .openedBefore(rule.data.secondDate);\n              break;\n          }\n          break;\n        case 'lastModified':\n          switch (rule.constraint) {\n            case 'include':\n              driveQuery = driveQuery.modifiedAfter(rule.data.date);\n              break;\n            case 'exclude':\n              driveQuery = driveQuery.modifiedBefore(rule.data.date);\n              break;\n            case 'between':\n              driveQuery = driveQuery\n                .modifiedAfter(rule.data.firstDate)\n                .modifiedBefore(rule.data.secondDate);\n              break;\n          }\n          break;\n      }\n    });\n    return driveQuery.get();\n  }\n\n  private getUntitledFiles(destination: GroupFolderInterface) {\n    return new DriveQueryBuilder(destination.folderID, true)\n      .nameContains('Untitled')\n      .get();\n  }\n\n  loadConfig(cb?: Function): void {\n    this.database.getActiveConfig().then(\n      activeConfig => {\n        if (activeConfig) {\n          this.database.getConfig(activeConfig, config => {\n            this.config = config;\n            if (cb) {\n              cb();\n            }\n          });\n        }\n      },\n      err => {}\n    );\n  }\n\n  sort() {\n    return new Promise((resolve, reject) => {\n      const drive = gapi.client.drive;\n      const success = true;\n      this.config.groups.forEach(group => {\n        if (group.destination) {\n          this.google.listFiles(this.getDriveQuery(group), resp => {\n            if (resp.error) {\n              reject(resp.error);\n            } else {\n              resp.files.forEach(file => {\n                this.google.moveFile(\n                  file.id,\n                  group.destination.folderID,\n                  moved => {\n                    if (!moved) {\n                      moved = false;\n                    }\n                  }\n                );\n              }, this);\n            }\n          });\n          if (group.source.renameUntitled) {\n            this.google.listFiles(this.getUntitledFiles(group.source), resp => {\n              if (resp.error) {\n                reject(resp.error);\n              } else {\n                resp.files.forEach(file => {\n                  this.google.renameFile(file.id, Date());\n                });\n              }\n            });\n          }\n        } else {\n          const newFolderName = ConfigBuilder.folderNameBuilder(\n            group.createFolder\n          );\n          this.google\n            .createFolder(newFolderName, group.createFolder.parent.folderID)\n            .then(newFolderID => {\n              this.google.listFiles(this.getDriveQuery(group), resp => {\n                if (resp.error) {\n                  reject(resp.error);\n                } else {\n                  resp.files.forEach(file => {\n                    this.google.moveFile(file.id, newFolderID, moved => {\n                      if (!moved) {\n                        moved = false;\n                      }\n                    });\n                  }, this);\n                }\n              });\n            }, err => console.error);\n        }\n      });\n      if (success) {\n        resolve();\n      } else {\n        reject();\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/UnNamedPipe.html":{"url":"pipes/UnNamedPipe.html","title":"pipe - UnNamedPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  UnNamedPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/un-named.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        unNamed\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: any, args?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/un-named.pipe.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        args\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'unNamed'\n})\nexport class UnNamedPipe implements PipeTransform {\n  transform(value: any, args?: any): any {\n    return (value.length > 0) ? value : 'No Name';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UnauthenticatedComponent.html":{"url":"components/UnauthenticatedComponent.html","title":"component - UnauthenticatedComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UnauthenticatedComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/auth/unauthenticated/unauthenticated.component.ts\n\n\n    \n        Description\n    \n    \n        Declare the component to be shown when the user isn't authenticated.\n\n    \n\n\n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-unauthenticated\n            \n\n            \n                styleUrls\n                unauthenticated.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./unauthenticated.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                google\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(google: GoogleService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/auth/unauthenticated/unauthenticated.component.ts:15\n                            \n                        \n\n                \n                    \n                            Creates an instance of UnauthenticatedComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        google\n                                                  \n                                                        \n                                                                    GoogleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Declare the Google Service as google.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/auth/unauthenticated/unauthenticated.component.ts:28\n                            \n                        \n\n\n                \n                    \n                            Method to log the user in.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            google\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        google:     GoogleService\n\n                    \n                \n                    \n                        \n                            Type :     GoogleService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/auth/unauthenticated/unauthenticated.component.ts:21\n                            \n                        \n\n                \n                    \n                        Declare the Google Service as google.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { GoogleService } from '../../../services/google/google.service';\n\n/**\n * Declare the component to be shown when the user isn't authenticated.\n *\n * @export\n * @class UnauthenticatedComponent\n */\n@Component({\n  selector: 'app-unauthenticated',\n  templateUrl: './unauthenticated.component.html',\n  styleUrls: ['./unauthenticated.component.scss']\n})\nexport class UnauthenticatedComponent {\n  /**\n   * Creates an instance of UnauthenticatedComponent.\n   * @param {GoogleService} google Declare the Google Service as google.\n   * @memberof UnauthenticatedComponent\n   */\n  constructor(public google: GoogleService) {}\n\n  /**\n   * Method to log the user in.\n   *\n   * @memberof UnauthenticatedComponent\n   */\n  login() {\n    this.google.signIn();\n  }\n}\n\n    \n\n    \n        \n  \n    G-Drive Sorter\n    An organized Google Drive™ has never been easier\n    Get Organized\n  \n\n\n  \n    \n      view_list\n      Effectively Sort Files\n      Sorting your drive only requires a quick visit to this website. And we do the rest of the work for you!\n    \n    \n      accessibility\n      Simplistic Use\n      Preset configurations and a simplistic user interface makes the G-Drive sorter suitable for all Google Drive users.\n    \n    \n      art_track\n      Fully Customizable\n      Fully customizable configurations that sorts all Google Drive files based on type, creation date, name, current owner, and much more.\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      G-Drive Sorter    An organized Google Drive™ has never been easier    Get Organized              view_list      Effectively Sort Files      Sorting your drive only requires a quick visit to this website. And we do the rest of the work for you!              accessibility      Simplistic Use      Preset configurations and a simplistic user interface makes the G-Drive sorter suitable for all Google Drive users.              art_track      Fully Customizable      Fully customizable configurations that sorts all Google Drive files based on type, creation date, name, current owner, and much more.      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'ConfigListComponent', 'selector': 'app-config-list'},{'name': 'ConfigModalComponent', 'selector': 'app-config-modal'},{'name': 'EditConfigModalComponent', 'selector': 'app-edit-config-modal'},{'name': 'EditConfigPageComponent', 'selector': 'app-edit-config-page'},{'name': 'FolderCreationComponent', 'selector': 'app-folder-creation'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NewConfigPageComponent', 'selector': 'app-new-rule-page'},{'name': 'NewRuleStepperComponent', 'selector': 'app-new-rule-stepper'},{'name': 'PresetConfigComponent', 'selector': 'app-preset-config'},{'name': 'PresetConfigPageComponent', 'selector': 'app-preset-config-page'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'UnauthenticatedComponent', 'selector': 'app-unauthenticated'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UnauthenticatedComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/animations.ts\n            \n            \n                variable\n            \n            \n                fabAnimation\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/animations.ts\n            \n            \n                variable\n            \n            \n                fadeOutIn\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/animations.ts\n            \n            \n                variable\n            \n            \n                routerAnimation\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/animations.ts\n            \n            \n                variable\n            \n            \n                slideDown\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/animations.ts\n            \n            \n                variable\n            \n            \n                slideLeft\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/animations.ts\n            \n            \n                variable\n            \n            \n                slideRight\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                25 %\n                (4/16)\n            \n        \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                variable\n            \n            \n                gapi\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/classes/config-builder.ts\n            \n            \n                class\n            \n            \n                ConfigBuilder\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/app/classes/config-data-source.ts\n            \n            \n                class\n            \n            \n                ConfigDataSource\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                    src/app/classes/drive-query-builder.ts\n            \n            \n                class\n            \n            \n                DriveQueryBuilder\n            \n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                    src/app/components/auth/unauthenticated/unauthenticated.component.ts\n            \n            \n                component\n            \n            \n                UnauthenticatedComponent\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/components/shared/config-modal/config-modal.component.ts\n            \n            \n                component\n            \n            \n                ConfigModalComponent\n            \n            \n                0 %\n                (0/32)\n            \n        \n        \n            \n                \n                    src/app/components/shared/edit-config-modal/edit-config-modal.component.ts\n            \n            \n                component\n            \n            \n                EditConfigModalComponent\n            \n            \n                0 %\n                (0/31)\n            \n        \n        \n            \n                \n                    src/app/components/shared/edit-config-page/edit-config-page.component.ts\n            \n            \n                component\n            \n            \n                EditConfigPageComponent\n            \n            \n                0 %\n                (0/32)\n            \n        \n        \n            \n                \n                    src/app/components/shared/folder-creation/folder-creation.component.ts\n            \n            \n                component\n            \n            \n                FolderCreationComponent\n            \n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                    src/app/components/shared/new-config-page/new-config-page.component.ts\n            \n            \n                component\n            \n            \n                NewConfigPageComponent\n            \n            \n                0 %\n                (0/33)\n            \n        \n        \n            \n                \n                    src/app/components/shared/new-rule-stepper/new-rule-stepper.component.ts\n            \n            \n                component\n            \n            \n                NewRuleStepperComponent\n            \n            \n                0 %\n                (0/31)\n            \n        \n        \n            \n                \n                    src/app/components/tabs/config/config-list/config-list.component.ts\n            \n            \n                component\n            \n            \n                ConfigListComponent\n            \n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                    src/app/components/tabs/config/config.component.ts\n            \n            \n                component\n            \n            \n                ConfigComponent\n            \n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                    src/app/components/tabs/config/preset-config-page/preset-config-page.component.ts\n            \n            \n                component\n            \n            \n                PresetConfigPageComponent\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                    src/app/components/tabs/config/preset-config/preset-config.component.ts\n            \n            \n                component\n            \n            \n                PresetConfigComponent\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                    src/app/components/tabs/config/presets.ts\n            \n            \n                variable\n            \n            \n                presets\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/components/tabs/config/presets.ts\n            \n            \n                variable\n            \n            \n                quartersArray\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/components/tabs/home/home.component.ts\n            \n            \n                component\n            \n            \n                HomeComponent\n            \n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                    src/app/components/tabs/settings/settings.component.ts\n            \n            \n                component\n            \n            \n                SettingsComponent\n            \n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                    src/app/components/tabs/settings/settings.component.ts\n            \n            \n                variable\n            \n            \n                gapi\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/pipes/un-named.pipe.ts\n            \n            \n                pipe\n            \n            \n                UnNamedPipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/services/auth/auth-guard.service.ts\n            \n            \n                injectable\n            \n            \n                AuthGuardService\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    src/app/services/auth/auth-guard.service.ts\n            \n            \n                injectable\n            \n            \n                PreventAuthGuardService\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    src/app/services/database/database.service.ts\n            \n            \n                injectable\n            \n            \n                DatabaseService\n            \n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                    src/app/services/database/database.service.ts\n            \n            \n                variable\n            \n            \n                gapi\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/services/database/database.service.ts\n            \n            \n                variable\n            \n            \n                google\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/services/google/google.service.ts\n            \n            \n                injectable\n            \n            \n                GoogleService\n            \n            \n                56 %\n                (9/16)\n            \n        \n        \n            \n                \n                    src/app/services/google/google.service.ts\n            \n            \n                function\n            \n            \n                folderPicked\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/services/google/google.service.ts\n            \n            \n                variable\n            \n            \n                _folderPicked\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/services/google/google.service.ts\n            \n            \n                variable\n            \n            \n                authInstance\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/services/google/google.service.ts\n            \n            \n                variable\n            \n            \n                folderPicker\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/services/google/google.service.ts\n            \n            \n                variable\n            \n            \n                gapi\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/services/google/google.service.ts\n            \n            \n                variable\n            \n            \n                google\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/services/sorter/sorter.service.ts\n            \n            \n                injectable\n            \n            \n                SorterService\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/app/services/sorter/sorter.service.ts\n            \n            \n                variable\n            \n            \n                gapi\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/interfaces.ts\n            \n            \n                interface\n            \n            \n                Config\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/interfaces.ts\n            \n            \n                interface\n            \n            \n                ConfigInterface\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/interfaces.ts\n            \n            \n                interface\n            \n            \n                ConfigsInterface\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/interfaces.ts\n            \n            \n                interface\n            \n            \n                FolderCreation\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/interfaces.ts\n            \n            \n                interface\n            \n            \n                GroupFolderInterface\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/interfaces.ts\n            \n            \n                interface\n            \n            \n                GroupInterface\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/interfaces.ts\n            \n            \n                interface\n            \n            \n                JSONConfiguration\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/interfaces.ts\n            \n            \n                interface\n            \n            \n                RuleInterface\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/jestGlobalMocks.ts\n            \n            \n                variable\n            \n            \n                mock\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.0\n        \n            @angular/cdk : 6.1.0\n        \n            @angular/common : ^6.0.0\n        \n            @angular/compiler : ^6.0.0\n        \n            @angular/core : ^6.0.0\n        \n            @angular/forms : ^6.0.0\n        \n            @angular/http : ^6.0.0\n        \n            @angular/material : 6.1.0\n        \n            @angular/platform-browser : ^6.0.0\n        \n            @angular/platform-browser-dynamic : ^6.0.0\n        \n            @angular/router : ^6.0.0\n        \n            @types/uuid : ^3.4.3\n        \n            core-js : ^2.5.4\n        \n            hammerjs : ^2.0.8\n        \n            jasmine : ^3.1.0\n        \n            rxjs : ^6.0.0\n        \n            rxjs-compat : 6\n        \n            uuid : ^3.2.1\n        \n            web-animations-js : ^2.3.1\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DriveMimeType   (src/.../drive-query-builder.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/classes/drive-query-builder.ts\n    \n        \n            \n                \n                    \n                        \n                        DriveMimeType\n                    \n                \n                    \n                        \n                            A enumerable of Google Drive file types\n\n                        \n                    \n                        \n                            \n                                 audio\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.audio\n                            \n                        \n                        \n                            \n                                 document\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.document\n                            \n                        \n                        \n                            \n                                 drawing\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.drawing\n                            \n                        \n                        \n                            \n                                 file\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.file\n                            \n                        \n                        \n                            \n                                 folder\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.folder\n                            \n                        \n                        \n                            \n                                 form\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.form\n                            \n                        \n                        \n                            \n                                 fustiontable\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.fusiontable\n                            \n                        \n                        \n                            \n                                 map\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.map\n                            \n                        \n                        \n                            \n                                 photo\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.photo\n                            \n                        \n                        \n                            \n                                 presentation\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.presentation\n                            \n                        \n                        \n                            \n                                 script\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.script\n                            \n                        \n                        \n                            \n                                 site\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.site\n                            \n                        \n                        \n                            \n                                 spreadsheet\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.spreadsheet\n                            \n                        \n                        \n                            \n                                 unknown\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.unknown\n                            \n                        \n                        \n                            \n                                 video\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.video\n                            \n                        \n                        \n                            \n                                 thirdParty\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.drive-sdk\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            folderPicked   (src/.../google.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/google/google.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            folderPicked\n                            \n                            \n                        \n                    \n                \n                \n                    \nfolderPicked(data: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nG-Drive-Sorter\n\n   \n\nMain Countributors\n\nBrandon Cravener (Project Manager/Developer)\nFernando Arredondo (Developer)\nLane Faccoldi (Software Tester)\nIvan Abreu-Cespedes (Public Relations)\n\n\nOther Contributors\n\nAshhad Hanafi, made the logo for the app\n\n\nDescription\nThis project solves the problem of constantly needing to organize Google Drive files, by organizing it your way whenever necessary.\n\nFeatures\n\nUser friendly interface.\nCustomizable configuration.\nCompatible with Google Drive and associated accounts.\nFree to use.\n\n\nInstallation\nInstall this project by running:\n\n$ git clone https://github.com/BrandonCravener/G-Drive-Sorter\n$ cd G-Drive-Sorter\n$ git checkout angularjs\n$ yarn global add @angular/cli\n$ yarn\n\nRun with $ ng serve\n\nDocumentation\nAfter installing you can open the documentation with $ yarn run doc:buildandserve. The documentation is auto generated by compdoc.\n\nContribution\n\nProject Management\nIssue Tracker\nRepository\nGitter\n\n\nSupport\nIf there are any major issues with this project, please report them at: contact@brandoncravener.com\n\nLicense\n  This project is licensed under the MIT license.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Brandon Cravener\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthenticatedModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_AppComponent_providers\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthenticatedModule\n\n\n\ncluster_AuthenticatedModule_declarations\n\n\n\ncluster_AuthenticatedModule_exports\n\n\n\ncluster_AuthenticatedModule_providers\n\n\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_declarations\n\n\n\ncluster_ConfigModule_imports\n\n\n\ncluster_ConfigModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nUnauthenticatedComponent\n\nUnauthenticatedComponent\n\nAppModule -->\n\nUnauthenticatedComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nGoogleService\n\nGoogleService\n\nAppComponent -->\n\nGoogleService->AppComponent\n\n\n\nAppModule -->\n\nGoogleService->AppModule\n\n\n\n\n\nAuthenticatedModule\n\nAuthenticatedModule\n\nAppModule -->\n\nAuthenticatedModule->AppModule\n\n\n\n\n\nConfigComponent \n\nConfigComponent \n\nConfigComponent  -->\n\nAuthenticatedModule->ConfigComponent \n\n\n\n\n\nConfigModule\n\nConfigModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\nAuthenticatedModule -->\n\nConfigModule->AuthenticatedModule\n\n\n\n\n\nConfigListComponent \n\nConfigListComponent \n\nConfigListComponent  -->\n\nConfigModule->ConfigListComponent \n\n\n\n\n\nAuthGuardService\n\nAuthGuardService\n\nAppModule -->\n\nAuthGuardService->AppModule\n\n\n\n\n\nDatabaseService\n\nDatabaseService\n\nAppModule -->\n\nDatabaseService->AppModule\n\n\n\n\n\nPreventAuthGuardService\n\nPreventAuthGuardService\n\nAppModule -->\n\nPreventAuthGuardService->AppModule\n\n\n\n\n\nConfigComponent\n\nConfigComponent\n\nAuthenticatedModule -->\n\nConfigComponent->AuthenticatedModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAuthenticatedModule -->\n\nHomeComponent->AuthenticatedModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nAuthenticatedModule -->\n\nSettingsComponent->AuthenticatedModule\n\n\n\n\n\nSorterService\n\nSorterService\n\nAuthenticatedModule -->\n\nSorterService->AuthenticatedModule\n\n\n\n\n\nConfigListComponent\n\nConfigListComponent\n\nConfigModule -->\n\nConfigListComponent->ConfigModule\n\n\n\n\n\nConfigModalComponent\n\nConfigModalComponent\n\nConfigModule -->\n\nConfigModalComponent->ConfigModule\n\n\n\n\n\nEditConfigModalComponent\n\nEditConfigModalComponent\n\nConfigModule -->\n\nEditConfigModalComponent->ConfigModule\n\n\n\n\n\nEditConfigPageComponent\n\nEditConfigPageComponent\n\nConfigModule -->\n\nEditConfigPageComponent->ConfigModule\n\n\n\n\n\nFolderCreationComponent\n\nFolderCreationComponent\n\nConfigModule -->\n\nFolderCreationComponent->ConfigModule\n\n\n\n\n\nNewConfigPageComponent\n\nNewConfigPageComponent\n\nConfigModule -->\n\nNewConfigPageComponent->ConfigModule\n\n\n\n\n\nNewRuleStepperComponent\n\nNewRuleStepperComponent\n\nConfigModule -->\n\nNewRuleStepperComponent->ConfigModule\n\n\n\n\n\nPresetConfigComponent\n\nPresetConfigComponent\n\nConfigModule -->\n\nPresetConfigComponent->ConfigModule\n\n\n\n\n\nPresetConfigPageComponent\n\nPresetConfigPageComponent\n\nConfigModule -->\n\nPresetConfigPageComponent->ConfigModule\n\n\n\n\n\nUnNamedPipe\n\nUnNamedPipe\n\nConfigModule -->\n\nUnNamedPipe->ConfigModule\n\n\n\n\n\nConfigRoutingModule\n\nConfigRoutingModule\n\nConfigModule -->\n\nConfigRoutingModule->ConfigModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            4 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        14 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        5 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 pipe\n                    \n                \n            \n            \n                \n                    \n                        \n                        3 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        8 interfaces\n                    \n                \n            \n            \n                \n                    \n                        \n                        \n                            4 routes\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTodo\n\nAdd untitled name renamer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            _folderPicked   (src/.../google.service.ts)\n                        \n                        \n                            authInstance   (src/.../google.service.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            fabAnimation   (src/.../animations.ts)\n                        \n                        \n                            fadeOutIn   (src/.../animations.ts)\n                        \n                        \n                            folderPicker   (src/.../google.service.ts)\n                        \n                        \n                            gapi   (src/.../settings.component.ts)\n                        \n                        \n                            gapi   (src/.../app.component.ts)\n                        \n                        \n                            gapi   (src/.../sorter.service.ts)\n                        \n                        \n                            gapi   (src/.../database.service.ts)\n                        \n                        \n                            gapi   (src/.../google.service.ts)\n                        \n                        \n                            google   (src/.../database.service.ts)\n                        \n                        \n                            google   (src/.../google.service.ts)\n                        \n                        \n                            mock   (src/.../jestGlobalMocks.ts)\n                        \n                        \n                            presets   (src/.../presets.ts)\n                        \n                        \n                            quartersArray   (src/.../presets.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            routerAnimation   (src/.../animations.ts)\n                        \n                        \n                            slideDown   (src/.../animations.ts)\n                        \n                        \n                            slideLeft   (src/.../animations.ts)\n                        \n                        \n                            slideRight   (src/.../animations.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/google/google.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            _folderPicked\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _folderPicked:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authInstance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authInstance:     \n\n                    \n                \n\n                \n                    \n                        Variable for easy reference to the authenitcation instance.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            folderPicker\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        folderPicker:     \n\n                    \n                \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gapi\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gapi:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n                \n                    \n                        Workaround for testing\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            google\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        google:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n                \n                    \n                        Environment for development builds\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n                \n                    \n                        Environment for production builds\n\n                    \n                \n\n            \n        \n\n    src/animations.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            fabAnimation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fabAnimation:     \n\n                    \n                \n                    \n                        \n                            Default value : trigger('createConfigFABState', [\n  state(\n    'inactive',\n    style({\n      transform: 'scale(0)'\n    })\n  ),\n  state(\n    'active',\n    style({\n      transform: 'scale(1)'\n    })\n  ),\n  transition('inactive => active', animate('0.1s')),\n  transition('active => inactive', animate('0.1s'))\n])\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fadeOutIn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fadeOutIn:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  query(\n    ':enter, :leave',\n    style({\n      position: 'fixed',\n      width: '100%'\n    }),\n    {\n      optional: true\n    }\n  ),\n  query(\n    ':enter',\n    style({\n      opacity: 0\n    })\n  ),\n  query(\n    ':leave',\n    [\n      style({\n        opacity: 1\n      }),\n      animate(\n        '0.5s ease-out',\n        style({\n          opacity: 0\n        })\n      )\n    ],\n    {\n      optional: true\n    }\n  ),\n  query(\n    ':enter',\n    animate(\n      '0.5s 0.5s ease-in',\n      style({\n        opacity: 1\n      })\n    ),\n    {\n      optional: true\n    }\n  )\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            routerAnimation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        routerAnimation:     \n\n                    \n                \n                    \n                        \n                            Default value : trigger('routerTransition', [\n  // Landing transitions\n  transition('* => landing', fadeOutIn),\n  transition('landing => appHome', fadeOutIn),\n  // Tabs transitions\n  transition('appHome => appConfig', slideLeft),\n  transition('appConfig => appHome', slideRight),\n  transition('appHome => appSettings', slideLeft),\n  transition('appSettings => appHome', slideRight),\n  transition('appConfig => appSettings', slideLeft),\n  transition('appSettings => appConfig', slideRight),\n  // Small screen pages\n  transition('appConfig => appConfigEdit', slideDown),\n  transition('appConfigEdit => appConfig', slideDown),\n  transition('appConfig => appConfigCreate', slideDown),\n  transition('appConfigCreate => appConfig', slideDown),\n  transition('appConfig => appConfigPresets', slideDown),\n  transition('appConfigPresets => appConfig', slideDown),\n  transition('appSettings => appConfigEdit', slideDown),\n  transition('appConfigEdit => appSettings', slideDown),\n  transition('appSettings => appConfigCreate', slideDown),\n  transition('appConfigCreate => appSettings', slideDown),\n  transition('appSettings => appConfigPresets', slideDown),\n  transition('appConfigPresets => appSettings', slideDown),\n  transition('appHome => appConfigEdit', slideDown),\n  transition('appConfigEdit => appHome', slideDown),\n  transition('appHome => appConfigCreate', slideDown),\n  transition('appConfigCreate => appHome', slideDown),\n  transition('appHome => appConfigPresets', slideDown),\n  transition('appConfigPresets => appHome', slideDown)\n])\n                        \n                    \n\n                \n                    \n                        Animation for switching between routes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slideDown\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        slideDown:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  query(\n    ':enter, :leave',\n    style({\n      position: 'fixed',\n      width: '100%',\n      height: '100%'\n    }),\n    {\n      optional: false\n    }\n  ),\n  group([\n    query(\n      ':enter',\n      [\n        style({\n          transform: 'translateY(100%)',\n          opacity: 0\n        }),\n        animate(\n          '0.5s',\n          style({\n            transform: 'translateY(0%)',\n            opacity: 1\n          })\n        )\n      ],\n      {\n        optional: false\n      }\n    ),\n    query(\n      ':leave',\n      [\n        style({\n          transform: 'translateY(0%)',\n          opacity: 1\n        }),\n        animate(\n          '0.5s',\n          style({\n            transform: 'translateY(100%)',\n            opacity: 0\n          })\n        )\n      ],\n      {\n        optional: false\n      }\n    )\n  ])\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slideLeft\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        slideLeft:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  query(\n    ':enter, :leave',\n    style({\n      position: 'fixed',\n      width: '100%'\n    }),\n    {\n      optional: false\n    }\n  ),\n  group([\n    query(\n      ':enter',\n      [\n        style({\n          transform: 'translateX(100%)'\n        }),\n        animate(\n          '0.5s',\n          style({\n            transform: 'translateX(0%)'\n          })\n        )\n      ],\n      {\n        optional: false\n      }\n    ),\n    query(\n      ':leave',\n      [\n        style({\n          transform: 'translateX(0%)'\n        }),\n        animate(\n          '0.5s',\n          style({\n            transform: 'translateX(-100%)'\n          })\n        )\n      ],\n      {\n        optional: false\n      }\n    )\n  ])\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slideRight\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        slideRight:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  query(\n    ':enter, :leave',\n    style({\n      position: 'fixed',\n      width: '100%'\n    }),\n    {\n      optional: false\n    }\n  ),\n  group([\n    query(\n      ':enter',\n      [\n        style({\n          transform: 'translateX(-100%)'\n        }),\n        animate(\n          '0.5s',\n          style({\n            transform: 'translateX(0%)'\n          })\n        )\n      ],\n      {\n        optional: false\n      }\n    ),\n    query(\n      ':leave',\n      [\n        style({\n          transform: 'translateX(0%)'\n        }),\n        animate(\n          '0.5s',\n          style({\n            transform: 'translateX(100%)'\n          })\n        )\n      ],\n      {\n        optional: false\n      }\n    )\n  ])\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/components/tabs/settings/settings.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            gapi\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gapi:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n                \n                    \n                        Workaround for testing\n\n                    \n                \n\n            \n        \n\n    src/app/app.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            gapi\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gapi:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n                \n                    \n                        Workaround for testing\n\n                    \n                \n\n            \n        \n\n    src/app/services/sorter/sorter.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            gapi\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gapi:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n                \n                    \n                        Workaround for testing\n\n                    \n                \n\n            \n        \n\n    src/app/services/database/database.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            gapi\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gapi:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n                \n                    \n                        Workaround for testing\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            google\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        google:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/jestGlobalMocks.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mock\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mock:     \n\n                    \n                \n                    \n                        \n                            Default value : () => {\n  let storage = {};\n  return {\n    getItem: key => key in storage ? storage[key] : null,\n    setItem: (key, value) => storage[key] = value || '',\n    removeItem: key => delete storage[key],\n    clear: () => storage = {},\n  };\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/components/tabs/config/presets.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            presets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        presets:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    id: 'istem',\n    name: 'I-STEM Geometry Preset',\n    category: 'School',\n    description:\n      'A preset configuration for the Wilson High School 9th Grade Geometry I-STEM classes(Periods 3-5).',\n    imageURL: 'assets/images/istem-logo.png',\n    data: {\n      createFolders: [\n        'Geometry',\n        'Physics',\n        'Integrated Engineering and Design'\n      ],\n      groups: [\n        {\n          destination: {\n            presetID: 'Geometry'\n          },\n          name: 'Geometry',\n          rules: [\n            {\n              classifier: 'title',\n              constraint: 'include',\n              data: {\n                title: 'Geo'\n              },\n              name: 'Name'\n            }\n          ],\n          source: {\n            folderID: 'root',\n            name: 'My Drive'\n          }\n        },\n        {\n          destination: {\n            presetID: 'Physics'\n          },\n          name: 'Physics',\n          rules: [\n            {\n              classifier: 'title',\n              constraint: 'include',\n              data: {\n                title: 'Phys'\n              },\n              name: 'Name'\n            }\n          ],\n          source: {\n            folderID: 'root',\n            name: 'My Drive'\n          }\n        },\n        {\n          destination: {\n            presetID: 'Integrated Engineering and Design'\n          },\n          name: 'Integrated Engineering and Design',\n          rules: [\n            {\n              classifier: 'title',\n              constraint: 'include',\n              data: {\n                title: 'IED'\n              },\n              name: 'Name'\n            }\n          ],\n          source: {\n            folderID: 'root',\n            name: 'My Drive'\n          }\n        }\n      ]\n    }\n  }\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            quartersArray\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        quartersArray:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['Quarter 1', 'Quarter 2', 'Quarter 3', 'Quarter 4']\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
