var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.557,1,1.173]],["body/components/AppComponent.html",[0,0.898,1,2.04,2,0.217,3,0.195,4,1.009,5,1.009,6,1.009,7,0.134,8,1.687,9,1.526,10,2.927,11,3.457,12,1.631,13,3.15,14,1.009,15,0.941,16,1.787,17,1.557,18,2.5,19,2.052,20,2.109,21,1.344,22,3.457,23,1.344,24,3.457,25,0.24,26,0.602,27,2.006,28,2.631,29,4.699,30,2.631,31,1.911,32,4.699,33,5.727,34,4.699,35,4.699,36,4.699,37,0.851,38,3.457,39,2.429,40,4.699,41,3.978,42,3.978,43,0.969,44,1.17,45,1.872,46,1.5,47,2.601,48,1.955,49,2.31,50,1.569,51,2.262,52,1.178,53,1.438,54,0.796,55,0.026,56,0.498,57,0.55,58,0.602,59,1.279,60,1.772,61,2.109,62,3.457,63,3.457,64,2.262,65,2.109,66,2.317,67,2.258,68,3.457,69,3.457,70,1.04,71,2.262,72,3.457,73,2.927,74,2.56,75,1.5,76,2.262,77,2.262,78,2.262,79,1.422,80,2.262,81,0.966,82,2.083,83,1.151,84,3.553,85,2.262,86,1.557,87,2.262,88,2.262,89,2.76,90,1.317,91,2.262,92,3.457,93,2.262,94,2.262,95,4.519,96,3.457,97,5.338,98,2.927,99,3.553,100,1.542,101,3.457,102,2.578,103,2.262,104,1.597,105,2.262,106,1,107,0.424,108,1.516,109,1.009,110,2.578,111,2.578,112,2.578,113,1.009,114,3.457,115,2.262,116,0.823,117,1.085,118,1.267,119,1.267,120,1.841,121,1.17,122,0.298,123,0.402,124,2.631,125,1.631,126,0.823,127,2.262,128,1.687,129,2.262,130,2.262,131,2.262,132,2.262,133,1.915,134,2.262,135,2.262,136,2.262,137,2.262,138,2.262,139,2.262,140,2.262,141,2.262,142,2.262,143,2.262,144,3.457,145,1.516,146,2.262,147,2.262,148,2.262,149,2.262,150,2.578,151,1.687,152,1.542,153,1.687,154,1.687,155,2.262,156,2.262,157,2.262,158,1.516,159,1.516,160,2.262,161,1.687,162,2.262,163,4.699,164,3.457,165,1.17,166,1.915,167,1.915,168,1.915,169,3.457,170,1.915,171,1.915,172,2.262,173,2.262,174,3.978,175,1.658,176,3.457,177,3.457,178,1.936,179,0.77,180,1.542,181,1.542,182,1.542,183,1.009,184,1.009,185,0.634,186,1.542,187,0.634,188,0.7,189,1.009,190,0.77,191,1.542,192,0.722,193,1.542,194,0.77,195,1.872,196,0.722,197,0.823,198,1.009,199,0.77,200,1.009,201,0.77,202,0.744,203,0.77,204,1.009,205,0.677,206,1.178,207,0.722,208,0.77,209,1.009,210,0.77,211,1.009,212,1.009,213,0.012,214,0.012]],["title/modules/AppModule.html",[215,1.252,216,2.308]],["body/modules/AppModule.html",[1,2.353,2,0.366,3,0.329,7,0.225,16,2.9,17,1.817,46,2.028,55,0.026,60,1.79,67,1.702,106,1.313,107,0.715,113,1.702,116,1.388,117,1.83,122,0.433,123,0.444,175,1.83,179,1.3,196,1.218,210,2.165,213,0.018,214,0.018,215,1.826,216,4.707,217,2.137,218,3.76,219,3.231,220,3.231,221,3.231,222,3.231,223,3.231,224,3.231,225,3.777,226,3.466,227,3.286,228,3.559,229,3.365,230,2.328,231,3.817,232,3.231,233,3.817,234,3.817,235,3.817,236,3.231,237,3.231,238,5.02,239,4.25,240,3.817,241,5.02,242,2.846,243,3.817,244,2.846,245,3.817,246,3.231,247,2.558,248,3.231,249,3.743,250,3.817,251,4.25,252,2.846,253,3.743,254,3.743,255,2.846,256,5.02,257,1.484,258,5.02,259,3.817,260,5.02,261,3.817,262,3.365,263,3.231,264,3.817,265,3.231,266,3.817,267,3.817]],["title/injectables/AuthGuardService.html",[227,1.78,268,1.252]],["body/injectables/AuthGuardService.html",[2,0.318,3,0.286,7,0.196,9,1.66,12,2.187,14,1.478,17,1.811,25,0.351,26,0.795,27,1.956,28,2.923,37,1.123,43,0.929,44,1.713,47,2.914,48,2.79,49,2.79,50,1.452,52,1.778,53,2.172,54,0.763,55,0.026,56,0.351,57,0.54,58,0.577,59,1.569,60,2.125,61,3.432,67,2.72,70,1.17,79,1.358,86,1.279,104,1.365,106,0.978,107,0.62,116,1.205,122,0.486,123,0.655,124,3.415,125,2.187,152,2.036,153,2.47,154,2.47,213,0.016,214,0.016,227,3.23,228,3.303,268,2.046,269,4.547,270,2.47,271,4.42,272,3.941,273,4.547,274,3.864,275,4.875,276,3.313,277,3.313,278,4.42,279,4.088,280,3.893,281,2.699,282,3.185,283,5.22,284,2.47,285,3.403,286,2.784]],["title/modules/AuthenticatedModule.html",[215,1.252,225,2.101]],["body/modules/AuthenticatedModule.html",[0,0.818,2,0.37,3,0.333,7,0.228,9,1.403,16,3.094,19,1.231,20,2.354,28,2.831,55,0.026,60,1.8,70,0.947,106,1.284,107,0.723,122,0.536,123,0.588,125,1.5,175,1.85,179,1.314,185,1.912,187,1.082,190,1.314,199,2.171,208,2.171,213,0.018,214,0.018,215,2.177,217,2.161,218,2.586,225,4.259,226,3.479,229,3.389,230,2.354,249,3.77,251,4.281,252,2.877,253,3.77,254,3.77,255,2.877,257,1.5,262,3.78,265,3.267,282,3.084,287,3.267,288,3.267,289,3.858,290,3.267,291,3.267,292,3.57,293,3.858,294,4.281,295,2.877,296,3.267,297,3.267,298,2.161,299,3.267,300,3.267,301,2.586,302,2.161,303,3.858,304,4.281,305,4.281,306,2.877,307,3.858,308,4.281,309,3.858,310,3.267,311,3.858,312,3.267,313,3.267,314,4.281,315,3.267,316,3.267,317,3.267,318,4.281,319,3.267,320,4.281,321,4.775,322,3.858,323,3.267,324,3.267,325,3.77,326,3.267]],["title/interfaces/Config.html",[188,0.476,327,0.476]],["body/interfaces/Config.html",[0,0.604,2,0.241,3,0.216,7,0.148,12,1.452,17,1.047,18,0.974,19,0.8,21,0.974,23,0.974,25,0.266,26,0.651,27,1.583,30,2.964,31,2.074,39,1.296,43,0.703,45,1.118,46,1.192,47,1.858,48,1.043,49,1.554,52,0.854,55,0.026,56,0.626,57,0.359,59,0.577,70,1.04,75,0.8,79,1.028,81,1.437,86,1.252,90,1.252,100,1.118,104,1.583,106,1.207,107,0.469,108,2.504,109,1.992,113,1.118,116,0.912,117,1.202,122,0.386,123,0.435,126,2.091,145,1.68,152,1.666,158,2.993,159,2.993,165,1.931,185,0.703,187,0.703,188,0.898,192,0.8,205,0.75,206,0.854,213,0.013,214,0.013,257,0.974,281,2.309,286,2.279,298,1.403,302,1.403,327,0.617,328,1.68,329,1.68,330,3.548,331,2.504,332,1.554,333,1.68,334,2.279,335,1.869,336,1.869,337,3.33,338,1.869,339,1.869,340,1.529,341,2.504,342,2.504,343,1.869,344,1.869,345,2.504,346,3.548,347,1.296,348,0.75,349,1.529,350,1.869,351,1.869,352,1.869,353,3.33,354,1.272,355,1.869,356,3.961,357,2.786,358,1.869,359,1.869,360,1.869,361,1.869,362,1.869,363,2.724,364,1.869,365,1.68,366,1.68,367,1.403,368,1.869,369,1.869,370,1.869,371,3.33,372,3.33,373,2.309,374,3.691,375,2.786,376,1.869,377,2.786,378,3.691,379,3.33,380,2.786,381,1.869,382,1.869,383,1.869,384,2.786,385,1.869,386,1.869,387,1.869,388,1.68,389,3.947,390,0.974,391,2.786,392,1.68,393,2.786,394,1.118,395,1.118,396,1.68,397,2.786,398,1.869,399,1.68,400,3.508,401,1.68,402,1.68,403,1.529,404,1.68,405,1.68,406,1.869,407,3.317,408,2.504,409,2.504,410,1.869,411,2.504,412,2.504,413,2.504,414,2.786,415,2.504,416,2.504,417,2.786,418,2.786,419,2.279,420,2.504,421,2.786,422,1.869,423,1.869,424,1.869,425,1.869,426,1.68,427,1.869,428,1.869,429,1.869,430,2.786,431,1.869,432,1.869,433,1.869,434,1.869,435,1.869,436,1.68,437,1.869,438,1.869,439,1.869,440,1.869,441,1.68,442,1.869,443,1.869,444,1.869,445,1.68,446,0.974,447,1.869,448,3.947,449,1.68,450,1.869,451,1.869,452,1.869,453,1.869,454,1.869,455,2.092,456,1.869,457,1.869,458,1.869,459,0.854,460,1.869,461,1.869,462,1.869,463,1.869,464,1.869]],["title/classes/ConfigBuilder.html",[123,0.401,465,1.928]],["body/classes/ConfigBuilder.html",[2,0.303,3,0.439,7,0.186,25,0.335,37,1.086,50,1.426,54,1.335,55,0.026,56,0.705,57,0.557,58,1.01,70,1.213,79,1.016,81,1.551,86,0.885,104,0.944,106,0.827,122,0.273,123,0.514,126,1.605,188,0.761,202,0.95,213,0.016,214,0.016,325,5.024,327,0.436,348,2.015,465,2.471,466,5.086,467,2.116,468,5.088,469,4.413,470,4.413,471,5.088,472,4.413,473,3.156,474,5.509,475,5.509,476,2.42,477,5.509,478,5.326,479,2.397,480,3.156,481,4.413,482,3.156,483,2.142,484,4.413,485,2.243,486,3.156,487,3.156,488,3.156,489,4.665,490,5.509,491,5.509,492,1.975,493,3.156,494,4.308,495,4.413,496,3.156,497,1.227,498,2.673,499,4.479,500,4.413,501,1.877,502,3.156,503,3.156,504,4.413,505,3.156,506,1.313,507,4.308,508,3.156,509,2.673,510,2.354,511,3.156,512,2.673,513,3.156,514,3.156,515,3.156,516,3.156,517,3.156,518,3.156,519,3.156,520,3.156,521,2.673,522,2.673,523,6.291,524,3.794,525,3.156,526,5.086,527,3.794,528,3.156,529,5.086,530,3.665,531,3.156,532,3.156,533,3.156,534,3.156]],["title/components/ConfigComponent.html",[0,0.557,185,0.965]],["body/components/ConfigComponent.html",[0,0.983,1,2.071,2,0.288,3,0.259,4,1.34,5,1.34,6,1.34,7,0.177,9,1.093,12,1.926,13,3.32,14,1.34,15,1.25,18,2.614,19,2.147,21,1.657,23,1.657,25,0.319,26,0.743,27,1.769,31,1.941,37,1.049,39,2.787,43,1.195,47,2.53,48,2.061,49,2.243,50,1.529,52,1.452,53,1.773,54,0.692,55,0.026,56,0.525,57,0.476,58,0.524,60,1.36,70,1.164,74,3.289,75,1.72,79,1.141,82,1.093,83,0.604,86,1.195,90,1.195,104,1.275,106,1.139,107,0.563,109,1.34,116,1.093,120,1.961,122,0.368,123,0.496,125,1.168,126,1.802,152,1.34,179,1.023,180,1.901,181,1.901,182,1.901,183,1.34,184,1.34,185,1.742,186,1.901,187,0.842,188,0.873,189,1.34,190,1.452,191,1.901,192,0.959,193,1.901,194,1.023,195,2.21,196,0.959,197,1.093,198,1.34,199,1.023,200,1.34,201,1.023,202,0.917,203,1.023,204,1.34,205,0.899,206,1.452,207,0.959,208,1.023,209,1.34,210,1.023,211,1.34,212,1.34,213,0.015,214,0.015,232,2.544,257,1.168,301,2.014,302,1.682,331,3.32,332,2.243,341,3.613,346,3.613,356,2.857,366,3.32,367,3.018,373,1.25,399,3.613,400,3.607,401,2.014,402,2.014,403,1.833,404,2.014,405,2.014,407,2.857,408,2.014,409,2.014,411,2.014,412,2.014,413,2.014,415,2.857,416,2.014,420,2.014,436,3.613,535,2.544,536,2.857,537,2.857,538,3.178,539,3.178,540,3.178,541,5.39,542,5.39,543,3.005,544,4.262,545,3.005,546,3.005,547,3.005,548,3.005,549,3.005,550,3.005,551,3.005,552,3.005,553,3.005,554,3.005,555,3.005,556,1.833,557,3.005,558,2.544,559,3.005,560,3.005,561,3.005,562,3.005,563,2.241,564,3.005,565,3.005,566,3.005]],["title/classes/ConfigDataSource.html",[123,0.401,363,2.101]],["body/classes/ConfigDataSource.html",[0,0.56,2,0.218,3,0.196,7,0.134,12,1.634,17,0.971,18,0.881,19,0.724,21,0.881,23,0.881,25,0.24,26,0.604,27,1.663,30,3.209,31,2.115,37,0.852,39,1.172,43,0.971,45,1.011,46,1.106,47,1.748,48,0.943,49,1.441,50,1.41,52,0.772,54,0.968,55,0.026,56,0.608,57,0.404,58,0.732,59,0.522,70,1.122,75,1.341,79,0.968,81,1.28,82,1.711,83,0.945,86,1.178,90,1.421,100,1.011,104,1.516,106,1.184,107,0.425,108,2.817,109,1.875,113,1.011,116,0.825,117,1.087,122,0.363,123,0.489,126,2.021,145,1.52,152,1.545,158,2.817,159,2.817,165,1.791,185,0.636,187,0.636,188,0.882,192,0.724,205,0.678,206,0.772,213,0.012,214,0.012,257,0.881,281,2.62,286,2.113,298,3.289,302,1.27,327,0.479,328,3.937,329,1.52,330,2.322,331,2.322,332,1.441,333,1.52,334,2.113,335,1.691,336,1.691,337,3.508,338,1.691,339,1.691,340,1.383,341,2.322,342,2.322,343,1.691,344,1.691,345,2.817,346,3.397,347,1.172,348,0.678,349,1.383,350,1.691,351,1.691,352,1.691,353,3.779,354,1.18,355,1.691,356,4.343,357,3.134,358,1.691,359,1.691,360,1.691,361,1.691,362,1.691,363,2.87,364,1.691,365,1.52,366,1.52,367,1.27,368,1.691,369,1.691,370,1.691,371,3.134,372,3.134,373,2.312,374,3.508,375,2.583,376,1.691,377,2.583,378,3.508,379,3.134,380,2.583,381,1.691,382,1.691,383,1.691,384,2.583,385,1.691,386,1.691,387,1.691,388,1.52,389,3.779,390,0.881,391,2.583,392,1.52,393,2.583,394,1.011,395,1.011,396,1.52,397,2.583,398,1.691,399,1.52,400,3.391,401,1.52,402,1.52,403,1.383,404,1.52,405,1.52,406,1.691,407,3.154,408,2.322,409,2.322,410,1.691,411,2.322,412,2.322,413,2.322,414,2.583,415,2.322,416,2.322,417,2.583,418,2.583,419,2.113,420,2.322,421,2.583,422,1.691,423,1.691,424,1.691,425,1.691,426,1.52,427,1.691,428,1.691,429,1.691,430,2.583,431,1.691,432,1.691,433,1.691,434,1.691,435,1.691,436,1.52,437,1.691,438,1.691,439,1.691,440,1.691,441,3.154,442,3.508,443,2.583,444,2.583,445,1.52,446,1.634,447,2.583,448,4.38,449,3.154,450,1.691,451,3.508,452,1.691,453,1.691,454,2.583,455,1.94,456,1.691,457,1.691,458,1.691,459,0.772,460,1.691,461,1.691,462,1.691,463,1.691,464,1.691,567,3.464,568,2.933,569,2.268,570,3.464,571,2.268,572,2.268,573,2.268,574,2.268,575,2.268,576,2.268]],["title/interfaces/ConfigInterface.html",[327,0.476,497,1.338]],["body/interfaces/ConfigInterface.html",[2,0.427,3,0.478,7,0.262,25,0.471,26,0.964,55,0.026,56,0.701,57,0.606,79,1.023,81,1.64,83,1.211,122,0.579,188,0.614,202,0.957,213,0.02,214,0.02,327,0.937,348,1.329,354,2.21,390,1.728,446,2.343,459,1.514,476,2.192,479,1.728,483,1.728,485,2.013,492,1.514,497,2.151,501,2.053,506,1.849,577,2.131,578,2.131,579,2.131,580,2.298,581,2.302,582,1.728,583,2.624,584,2.131,585,2.131,586,1.849,587,1.849]],["title/components/ConfigListComponent.html",[0,0.557,187,0.965]],["body/components/ConfigListComponent.html",[0,0.733,1,0.61,2,0.172,3,0.155,4,0.799,5,0.799,6,0.799,7,0.106,12,1.403,15,0.745,17,1.159,18,2.388,19,1.961,21,1.119,23,1.119,25,0.19,26,0.502,27,1.771,30,2.96,31,2.099,37,0.708,39,2.137,43,0.807,45,1.284,46,1.319,47,2.115,48,1.501,49,1.72,50,1.581,52,1.229,54,1.043,55,0.026,56,0.644,57,0.59,58,0.789,59,0.831,70,1.151,75,1.741,79,1.217,81,1.428,82,1.503,83,0.831,86,1.012,90,1.27,100,1.61,104,1.521,106,1.125,107,0.335,108,1.929,109,1.61,113,0.799,116,0.651,117,0.859,120,1.503,122,0.312,123,0.335,126,1.849,145,1.2,152,1.284,158,2.419,159,2.419,165,1.488,179,0.61,180,1.284,181,1.284,182,1.284,183,0.799,184,0.799,185,0.807,186,1.284,187,1.159,188,0.888,189,0.799,190,0.61,191,1.284,192,0.919,193,1.844,194,0.61,195,1.61,196,0.572,197,0.651,198,0.799,199,0.61,200,0.799,201,0.61,202,0.62,203,0.61,204,0.799,205,0.861,206,1.229,207,0.572,208,0.61,209,0.799,210,0.61,211,0.799,212,0.799,213,0.01,214,0.01,257,0.696,281,1.866,286,1.756,298,3.618,302,1.003,327,0.398,328,4.331,329,1.2,330,1.929,331,2.419,332,1.501,333,1.929,334,1.756,335,1.335,336,1.335,337,3.607,338,1.335,339,1.335,340,1.093,341,2.771,342,2.771,343,1.335,344,1.335,345,1.929,346,3.969,347,0.926,348,0.536,349,2.522,350,2.146,351,2.146,352,1.335,353,3.607,354,1.543,355,3.083,356,3.835,357,2.691,358,3.083,359,3.083,360,3.083,361,3.083,362,3.083,363,2.763,364,3.083,365,2.771,366,2.419,367,2.315,368,1.335,369,1.335,370,1.335,371,2.691,372,2.691,373,2.012,374,3.083,375,2.146,376,1.335,377,2.146,378,3.083,379,2.691,380,2.146,381,1.335,382,1.335,383,1.335,384,2.146,385,1.335,386,1.335,387,1.335,388,1.2,389,3.377,390,0.696,391,2.146,392,1.2,393,2.146,394,0.799,395,0.799,396,1.2,397,2.146,398,1.335,399,2.771,400,3.102,401,1.2,402,1.2,403,1.093,404,1.2,405,1.2,406,3.083,407,2.771,408,1.929,409,1.929,410,1.335,411,1.929,412,1.929,413,1.929,414,2.146,415,1.929,416,1.929,417,2.146,418,2.146,419,1.756,420,1.929,421,2.146,422,1.335,423,3.083,424,2.146,425,1.335,426,1.929,427,1.335,428,1.335,429,2.146,430,3.377,431,1.335,432,1.335,433,2.146,434,1.335,435,2.146,436,2.771,437,1.335,438,1.335,439,1.335,440,1.335,441,1.2,442,1.335,443,1.335,444,1.335,445,1.2,446,0.696,447,1.335,448,3.377,449,1.2,450,1.335,451,1.335,452,1.335,453,1.335,454,1.335,455,1.612,456,1.335,457,1.335,458,1.335,459,0.61,460,1.335,461,1.335,462,1.335,463,1.335,464,1.335,510,2.146,588,2.437,589,2.878,590,2.437,591,2.437,592,1.516,593,2.878,594,1.791,595,1.791,596,1.791,597,1.791,598,1.791,599,1.791,600,1.791,601,1.791,602,1.791,603,1.791,604,1.791,605,1.791,606,1.791,607,1.791,608,1.791,609,1.791,610,1.791,611,1.791,612,1.791,613,1.791,614,1.791,615,1.516,616,2.878,617,2.437,618,2.878,619,2.878,620,2.878,621,1.516]],["title/modules/ConfigModule.html",[215,1.252,226,1.928]],["body/modules/ConfigModule.html",[2,0.327,3,0.294,7,0.201,16,2.406,19,1.088,20,2.08,55,0.026,60,1.691,70,0.872,106,1.286,107,0.639,122,0.492,123,0.397,125,1.325,175,1.634,179,1.161,187,1.876,188,0.898,190,2.183,192,2.046,194,2.095,196,1.963,201,2.095,202,1.002,203,2.095,205,1.917,207,1.963,213,0.017,214,0.017,215,2.071,217,1.909,218,2.285,226,3.948,229,3.12,230,2.08,246,2.886,247,2.285,248,2.886,249,3.471,252,3.471,253,3.471,254,3.471,255,3.471,257,1.325,262,3.552,294,3.941,295,2.542,297,2.886,298,1.909,299,2.886,300,2.886,301,2.285,302,2.606,304,3.941,305,3.941,306,2.542,308,3.941,310,3.941,312,3.941,313,3.941,314,3.941,315,3.941,316,3.941,317,3.941,318,3.941,319,3.941,320,3.941,321,4.487,324,2.886,325,3.471,326,2.886,334,2.08,340,2.08,342,2.285,347,1.763,622,2.886,623,2.886,624,2.886,625,2.886,626,3.753,627,3.753,628,3.409,629,4.654,630,3.941,631,2.542,632,4.487,633,4.654,634,3.409,635,4.654,636,3.941,637,2.542,638,2.542,639,3.409,640,3.409,641,3.409,642,3.941,643,2.285,644,3.409]],["title/modules/ConfigRoutingModule.html",[215,1.252,627,2.101]],["body/modules/ConfigRoutingModule.html",[0,1.022,2,0.429,3,0.386,7,0.264,55,0.026,67,2.694,95,5.349,99,3.781,106,1.271,107,0.836,116,1.624,122,0.479,123,0.52,126,1.624,150,4.711,166,3.781,167,3.781,168,3.781,185,1.556,188,0.915,194,1.89,201,1.89,207,1.771,213,0.02,214,0.02,215,1.624,227,3.359,236,3.781,237,3.781,262,3.72,263,4.699,275,4.711,296,3.781,459,2.152,627,3.386,630,3.781,631,3.33,632,5.113,636,3.781,637,3.33,642,3.781,643,2.993,645,4.465,646,4.465,647,3.781,648,3.781,649,3.781,650,3.781,651,4.465]],["title/interfaces/ConfigsInterface.html",[327,0.476,348,1.03]],["body/interfaces/ConfigsInterface.html",[2,0.417,3,0.471,7,0.257,25,0.461,26,0.951,55,0.026,56,0.722,57,0.632,79,1.001,81,1.641,83,1.199,122,0.576,188,0.601,202,0.936,213,0.02,214,0.02,327,0.933,348,1.633,354,1.859,390,1.69,446,2.506,459,1.481,476,2.17,479,1.69,483,2.432,485,1.985,492,1.481,497,1.69,501,2.241,506,1.809,577,2.085,578,2.085,579,2.085,580,2.248,581,2.271,582,1.69,583,2.603,584,2.085,585,2.085,586,1.809,587,1.809]],["title/injectables/DatabaseService.html",[46,1.099,268,1.252]],["body/injectables/DatabaseService.html",[2,0.237,3,0.213,7,0.146,25,0.262,26,0.643,27,1.976,31,2.068,37,0.908,43,1.24,46,1.178,50,1.661,52,0.84,54,1.27,55,0.026,56,0.624,57,0.597,58,0.961,59,0.568,60,1.178,70,1.244,74,3.588,75,2.032,81,1.56,82,2.007,83,1.109,86,1.035,89,2.718,90,1.649,100,2.345,104,0.738,106,0.92,107,0.462,109,1.1,118,1.381,119,1.381,120,1.343,121,1.275,122,0.213,123,0.287,126,0.897,165,1.275,188,0.859,213,0.013,214,0.013,268,1.609,327,0.341,348,1.711,349,1.505,354,1.257,373,1.536,394,1.647,395,1.647,426,4.104,441,3.291,446,2.044,465,1.381,476,2.08,478,4.157,479,1.909,485,1.786,489,4.157,492,1.672,494,3.745,497,0.959,501,0.84,509,3.745,558,2.088,582,0.959,583,1.026,587,2.043,588,3.125,590,4.157,591,3.125,652,1.839,653,4.91,654,4.91,655,4.91,656,4.91,657,4.91,658,3.691,659,4.157,660,4.423,661,5.517,662,4.91,663,3.691,664,4.91,665,3.691,666,3.691,667,2.467,668,4.98,669,2.467,670,2.467,671,4.91,672,4.91,673,2.467,674,3.691,675,2.467,676,2.467,677,3.691,678,3.662,679,2.944,680,2.467,681,2.467,682,2.467,683,2.467,684,3.691,685,2.467,686,3.691,687,2.467,688,4.423,689,2.467,690,2.467,691,2.467,692,3.691,693,2.467,694,2.467,695,2.467,696,3.691,697,2.467,698,2.467,699,2.467,700,2.467,701,1.839,702,1.653,703,3.125,704,2.088,705,3.691,706,2.467,707,3.691,708,3.125,709,2.467,710,3.691,711,2.467,712,3.691,713,2.467,714,2.088,715,2.467,716,2.467,717,2.467,718,3.691,719,3.662,720,3.662,721,2.467,722,2.753,723,2.467,724,3.691,725,5.257,726,2.467,727,2.467,728,2.467,729,2.467,730,1.505,731,4.91,732,2.467,733,2.467,734,2.467,735,2.467,736,2.467]],["title/classes/DriveQueryBuilder.html",[123,0.401,737,2.308]],["body/classes/DriveQueryBuilder.html",[2,0.189,3,0.17,7,0.399,9,2.257,14,0.879,25,0.329,26,0.541,31,1.393,37,0.764,43,0.552,50,1.542,52,1.963,53,1.292,54,1.413,55,0.026,56,0.695,57,0.632,58,1.07,59,0.715,66,2.925,70,1.247,79,1.005,81,1.572,82,0.717,83,0.396,122,0.332,123,0.552,124,3.346,125,2.357,178,3.346,197,1.398,213,0.011,214,0.011,279,2.082,467,1.321,501,1.058,527,3.254,530,4.242,556,3.077,582,0.766,737,4.608,738,4.713,739,3.837,740,2.63,741,2.316,742,1.489,743,3.106,744,3.106,745,3.106,746,3.106,747,3.106,748,3.106,749,3.106,750,3.106,751,3.106,752,3.106,753,3.106,754,3.106,755,3.106,756,3.106,757,3.106,758,4.748,759,1.97,760,4.363,761,3.106,762,2.082,763,3.106,764,1.97,765,2.63,766,3.106,767,1.97,768,4.298,769,5.877,770,3.106,771,1.97,772,5.976,773,3.106,774,1.97,775,4.298,776,3.106,777,5.763,778,4.363,779,3.694,780,3.106,781,3.773,782,1.97,783,4.363,784,4.632,785,1.97,786,1.97,787,2.345,788,1.97,789,3.255,790,1.97,791,3.106,792,3.106,793,1.97,794,1.97,795,1.97,796,4.271,797,3.106,798,1.97,799,3.106,800,1.97,801,4.363,802,3.106,803,1.97,804,1.97,805,1.97,806,3.844,807,3.106,808,1.97,809,3.106,810,1.97,811,1.97,812,1.668,813,5.305,814,1.668,815,1.668,816,1.668,817,1.668,818,1.668,819,1.469,820,1.668,821,1.668,822,1.668,823,1.668,824,1.668,825,1.668,826,1.668,827,1.668,828,1.668,829,1.668,830,1.668,831,1.668,832,1.668,833,1.668,834,1.668,835,1.668,836,1.668,837,1.668,838,1.668,839,1.668,840,1.668,841,1.668,842,1.668,843,6.062,844,1.97,845,3.106,846,3.106,847,3.844,848,1.97,849,1.97]],["title/interfaces/FolderCreation.html",[327,0.476,485,1.252]],["body/interfaces/FolderCreation.html",[2,0.408,3,0.464,7,0.251,25,0.451,26,0.938,55,0.026,56,0.719,57,0.671,79,0.978,81,1.629,83,1.186,122,0.573,188,0.587,202,0.915,213,0.019,214,0.019,327,0.929,348,1.271,354,1.833,390,1.652,446,2.295,459,1.447,476,2.147,479,1.652,483,1.652,485,2.147,492,1.447,497,1.652,501,2.011,506,1.768,577,2.037,578,2.037,579,2.037,580,2.197,581,2.238,582,2.412,583,2.582,584,2.975,585,2.975,586,1.768,587,1.768,850,6.722]],["title/components/FolderCreationComponent.html",[0,0.557,196,1.099]],["body/components/FolderCreationComponent.html",[0,0.838,1,0.812,2,0.229,3,0.206,4,1.063,5,1.063,6,1.063,7,0.141,12,1.398,13,2.904,15,0.991,17,1.353,18,2.522,19,2.071,20,1.454,21,1.398,23,1.398,25,0.253,26,0.627,27,1.891,31,1.54,37,0.885,39,2.495,43,0.668,44,1.232,50,1.597,54,0.828,55,0.026,56,0.701,57,0.618,58,0.627,59,0.828,70,1.116,75,1.738,79,1.34,82,1.884,83,1.328,86,1.585,90,1.215,104,0.713,106,0.904,107,0.446,113,1.063,120,1.755,122,0.206,123,0.277,126,0.867,161,2.682,179,0.812,180,1.604,181,1.604,182,1.604,183,1.063,184,1.063,185,0.668,186,1.604,187,0.668,188,0.716,189,1.063,190,0.812,191,1.604,192,0.761,193,1.604,194,0.812,195,1.932,196,1.54,197,2.299,198,1.063,199,0.812,200,1.063,201,0.812,202,0.774,203,0.812,204,1.063,205,0.713,206,1.225,207,0.761,208,0.812,209,1.063,210,0.812,211,1.063,212,1.063,213,0.013,214,0.013,230,2.643,247,4.379,257,0.926,327,0.329,332,0.991,373,0.991,390,1.876,394,1.063,396,2.411,445,1.597,485,2.056,492,1.644,507,4.086,527,3.863,530,2.944,556,2.944,581,2.155,582,1.398,583,2.525,584,2.314,585,2.314,730,1.454,742,2.077,851,5.531,852,2.018,853,4.086,854,3.597,855,3.597,856,4.826,857,4.826,858,4.826,859,4.826,860,5.18,861,4.826,862,3.597,863,4.826,864,4.332,865,4.826,866,4.332,867,3.231,868,3.599,869,2.383,870,2.383,871,4.332,872,2.383,873,2.383,874,2.383,875,2.383,876,2.383,877,2.383,878,3.597,879,4.826,880,2.383,881,2.383,882,2.383,883,2.383,884,2.411,885,5.18,886,2.383,887,2.383,888,2.383,889,2.383,890,2.383,891,2.383,892,2.383,893,4.332,894,3.597,895,2.383,896,2.383,897,2.383,898,2.383,899,4.332,900,2.383,901,2.383,902,3.597,903,2.383,904,2.383,905,2.383,906,3.597,907,2.383,908,2.383,909,3.597,910,2.383,911,3.597,912,2.383,913,5.446]],["title/injectables/GoogleService.html",[17,0.965,268,1.252]],["body/injectables/GoogleService.html",[2,0.216,3,0.195,7,0.204,9,0.82,14,1.006,17,1.752,25,0.239,26,0.601,27,1.595,28,2.985,30,1.931,31,1.613,37,0.849,41,3.972,42,3.972,43,0.967,45,1.538,46,1.497,50,1.568,52,1.427,53,1.742,54,1.277,55,0.026,56,0.676,57,0.533,58,0.967,59,1.164,60,1.101,61,2.104,65,2.104,66,2.312,70,1.234,73,1.909,74,2.104,75,1.994,79,0.964,81,1.57,82,1.523,83,0.842,86,0.967,89,2.756,90,1.555,106,0.947,107,0.422,109,1.538,118,1.263,119,1.263,120,1.254,121,1.166,122,0.298,123,0.546,124,1.263,125,2.224,126,1.706,133,1.909,151,1.681,174,3.972,175,1.654,188,0.477,197,1.706,213,0.012,214,0.012,215,1.254,268,1.523,272,3.49,282,2.104,345,1.511,349,1.376,395,1.006,492,1.175,501,1.427,556,2.104,582,2.072,592,1.909,668,2.92,678,4.373,679,3.499,702,1.511,703,3.972,704,1.909,708,4.514,714,2.92,719,2.572,720,2.572,722,1.681,739,2.345,740,2.92,741,1.681,781,1.511,784,1.909,819,1.681,914,1.511,915,3.449,916,4.691,917,4.691,918,4.691,919,3.573,920,4.691,921,3.449,922,4.691,923,3.449,924,3.449,925,4.691,926,3.449,927,3.449,928,3.449,929,2.255,930,2.572,931,2.255,932,5.331,933,3.449,934,2.255,935,5.864,936,2.255,937,3.449,938,3.449,939,3.972,940,5.055,941,2.255,942,3.449,943,3.449,944,2.255,945,3.449,946,2.255,947,2.255,948,3.449,949,2.255,950,2.255,951,3.449,952,4.691,953,2.255,954,2.255,955,3.449,956,2.312,957,4.188,958,4.691,959,3.449,960,2.255,961,3.449,962,1.909,963,1.909,964,1.511,965,1.909,966,1.909,967,1.909,968,3.123,969,1.681,970,1.909,971,3.449,972,2.255,973,2.255,974,1.681,975,2.255,976,2.255,977,3.449,978,2.255,979,2.255,980,2.255,981,2.255,982,2.255,983,2.255,984,2.255,985,3.449,986,2.255,987,2.255,988,2.255,989,2.255,990,2.255,991,2.255,992,2.255,993,2.255,994,2.255,995,2.255,996,2.255,997,2.255,998,2.255,999,2.255,1000,2.255,1001,2.255,1002,2.255,1003,2.255,1004,2.255,1005,2.255,1006,2.255,1007,5.055,1008,3.449,1009,4.691,1010,3.449,1011,3.449,1012,2.255,1013,2.255,1014,3.449,1015,2.255,1016,2.255,1017,2.255,1018,3.449,1019,2.255,1020,2.255,1021,2.255,1022,2.255]],["title/interfaces/GroupFolderInterface.html",[327,0.476,476,1.252]],["body/interfaces/GroupFolderInterface.html",[2,0.414,3,0.469,7,0.254,25,0.457,26,0.946,55,0.026,56,0.721,57,0.63,58,1.144,79,1.368,81,1.64,83,1.194,122,0.575,188,0.595,202,0.927,213,0.02,214,0.02,327,0.931,348,1.289,354,1.848,390,1.675,446,2.31,459,1.467,476,2.268,479,1.675,483,1.675,485,1.974,492,1.467,497,1.675,501,2.024,506,1.792,577,2.065,578,2.065,579,2.065,580,3.224,581,2.675,582,1.675,583,2.595,584,2.065,585,2.065,586,1.792,587,1.792]],["title/interfaces/GroupInterface.html",[327,0.476,586,1.432]],["body/interfaces/GroupInterface.html",[2,0.402,3,0.55,7,0.247,25,0.444,26,0.929,55,0.026,56,0.717,57,0.65,58,1.075,79,0.964,81,1.637,83,1.178,122,0.572,188,0.579,202,1.328,213,0.019,214,0.019,327,0.926,348,1.252,354,1.815,390,1.627,446,2.477,459,1.426,476,2.408,479,1.627,483,1.627,485,2.245,492,2.102,497,1.627,501,2.219,506,2.568,577,2.007,578,2.007,579,2.007,580,2.164,581,2.217,582,1.627,583,2.568,584,2.007,585,2.007,586,2.217,587,1.742]],["title/components/HomeComponent.html",[0,0.557,199,1.173]],["body/components/HomeComponent.html",[0,1.023,1,1.026,2,0.289,3,0.26,4,1.343,5,1.343,6,1.343,7,0.178,9,1.095,12,1.928,13,3.324,14,1.343,15,1.253,18,2.615,19,2.147,21,1.659,23,1.659,25,0.319,26,0.744,27,1.77,30,2.39,31,1.818,37,1.05,39,2.79,43,1.197,45,2.212,46,1.722,47,2.531,48,1.776,49,2.245,50,1.456,52,1.454,53,1.776,54,0.693,55,0.026,56,0.526,57,0.476,58,0.525,59,0.983,60,1.362,70,0.929,74,2.604,75,1.583,79,1.142,81,1.142,82,1.553,83,0.858,86,1.39,90,1.197,98,4.568,102,3.183,104,0.901,106,1.067,107,0.564,116,1.095,117,1.444,120,1.962,122,0.369,123,0.497,125,1.659,128,2.245,151,2.245,152,1.343,165,2.207,179,1.026,180,1.904,181,1.904,182,1.904,183,1.343,184,1.343,185,0.844,186,1.904,187,0.844,188,0.859,189,1.343,190,1.026,191,1.904,192,0.961,193,1.904,194,1.026,195,2.212,196,0.961,197,1.095,198,1.343,199,2.154,200,1.343,201,1.026,202,0.919,203,1.026,204,1.343,205,0.901,206,1.454,207,0.961,208,1.026,209,1.343,210,1.026,211,1.343,212,1.343,213,0.015,214,0.015,257,1.17,280,3.183,282,2.604,292,3.407,323,2.549,332,1.253,354,1.026,394,2.212,395,1.343,510,2.245,536,2.861,537,2.861,538,3.183,615,4.199,617,3.614,621,4.199,742,2.378,867,3.698,868,4.024,884,4.238,1023,2.549,1024,4.269,1025,4.269,1026,5.916,1027,5.396,1028,5.396,1029,5.396,1030,2.549,1031,4.269,1032,3.011,1033,3.011,1034,3.011,1035,3.011,1036,3.011,1037,3.011,1038,2.549,1039,4.269,1040,4.269,1041,3.011,1042,3.011,1043,3.011,1044,3.011,1045,3.011,1046,3.011,1047,3.011,1048,3.011,1049,2.549,1050,4.269,1051,4.269]],["title/interfaces/JSONConfiguration.html",[327,0.476,587,1.432]],["body/interfaces/JSONConfiguration.html",[2,0.422,3,0.474,7,0.259,25,0.466,26,0.958,55,0.026,56,0.699,57,0.621,79,1.012,81,1.638,83,1.205,122,0.578,188,0.868,202,0.946,213,0.02,214,0.02,327,0.935,348,1.315,354,2.203,390,1.709,446,2.514,459,1.497,476,2.181,479,1.709,483,1.709,485,1.999,492,1.497,497,1.709,501,2.042,506,1.829,577,2.107,578,2.107,579,2.107,580,2.273,581,2.286,582,1.709,583,2.614,584,2.107,585,2.107,586,1.829,587,2.286]],["title/components/PresetConfigComponent.html",[0,0.557,205,1.03]],["body/components/PresetConfigComponent.html",[0,0.878,1,0.906,2,0.255,3,0.23,4,1.187,5,1.187,6,1.187,7,0.157,12,1.518,15,1.107,17,1.429,18,2.568,19,2.108,21,1.518,23,1.518,25,0.282,26,0.68,27,1.998,31,1.81,37,0.961,43,1.095,45,2.063,46,1.626,47,2.661,48,2.257,49,2.359,50,1.556,54,0.899,55,0.026,56,0.575,57,0.489,58,0.68,59,1.065,70,1.016,75,1.476,81,1.065,82,1.973,83,1.09,86,1.297,89,2.391,90,1.429,104,1.524,106,1.149,107,0.498,109,1.187,113,1.187,116,0.968,117,1.276,120,1.853,122,0.23,123,0.31,126,1.853,128,1.984,178,2.186,179,0.906,180,1.741,181,1.741,182,1.741,183,1.187,184,1.187,185,0.746,186,1.741,187,0.746,188,0.884,189,1.187,190,0.906,191,1.741,192,0.849,193,1.741,194,0.906,195,2.063,196,0.849,197,1.682,198,1.187,199,0.906,200,1.187,201,0.906,202,0.84,203,0.906,204,1.187,205,1.524,206,2.32,207,0.849,208,0.906,209,1.187,210,0.906,211,1.187,212,1.187,213,0.014,214,0.014,257,1.034,332,1.924,347,3.306,367,2.853,373,1.624,394,1.187,395,1.187,419,3.108,465,1.49,483,1.518,492,0.906,498,2.253,499,3.799,501,0.906,539,2.911,540,2.911,563,3.799,581,1.107,701,1.984,702,1.783,730,2.382,867,3.449,868,3.799,974,2.911,1030,2.253,1052,4.769,1053,2.253,1054,4.314,1055,4.314,1056,4.314,1057,3.306,1058,3.904,1059,3.306,1060,2.66,1061,2.911,1062,2.66,1063,2.66,1064,2.66,1065,3.306,1066,2.66,1067,2.66,1068,2.66,1069,2.66,1070,2.66,1071,2.66,1072,2.66,1073,2.66,1074,2.66,1075,2.66,1076,2.66,1077,4.625,1078,4.625,1079,4.625,1080,2.66,1081,2.253,1082,2.66,1083,2.66,1084,2.66,1085,2.66,1086,2.253,1087,2.66,1088,2.66,1089,2.66,1090,2.66,1091,2.66,1092,2.253,1093,2.66,1094,2.66,1095,2.66,1096,2.253,1097,2.66,1098,2.66,1099,2.253,1100,2.66,1101,1.984,1102,3.306,1103,3.306,1104,3.306]],["title/components/PresetConfigPageComponent.html",[0,0.557,207,1.099]],["body/components/PresetConfigPageComponent.html",[0,0.946,1,1.101,2,0.31,3,0.279,4,1.442,5,1.442,6,1.442,7,0.191,15,1.345,18,2.64,19,2.168,21,1.744,23,1.744,25,0.343,26,0.782,27,2.022,31,1.432,37,1.104,47,2.433,48,2.144,49,1.867,50,1.631,54,0.744,55,0.026,56,0.546,57,0.495,58,0.563,70,1.043,75,1.777,81,1.033,82,2.201,83,1.216,86,0.906,89,1.671,90,1.445,104,1.542,106,0.84,107,0.606,120,2.025,122,0.279,123,0.376,152,1.442,178,2.512,179,1.101,180,2.001,181,2.001,182,2.001,183,1.442,184,1.442,185,0.906,186,2.001,187,0.906,188,0.943,189,1.442,190,1.101,191,2.001,192,1.032,193,2.001,194,1.101,195,2.299,196,1.032,197,1.176,198,1.442,199,1.101,200,1.442,201,1.101,202,0.966,203,1.101,204,1.442,205,2.011,206,2.341,207,1.777,208,1.101,209,1.442,210,1.101,211,1.442,212,1.442,213,0.016,214,0.016,281,2.32,332,1.345,334,1.972,347,3.023,367,2.886,419,3.787,539,3.346,540,3.346,563,3.843,643,3.454,974,3.346,1049,2.737,1052,3.843,1054,4.363,1055,4.363,1056,5.255,1057,3.799,1059,2.737,1061,2.411,1065,2.737,1102,3.799,1103,3.799,1104,3.799,1105,2.737,1106,4.487,1107,3.233,1108,6.506,1109,3.233,1110,3.233,1111,3.233,1112,3.233,1113,3.233,1114,3.233,1115,3.233,1116,3.233,1117,3.233,1118,3.233,1119,3.233]],["title/injectables/PreventAuthGuardService.html",[228,1.928,268,1.252]],["body/injectables/PreventAuthGuardService.html",[2,0.318,3,0.286,7,0.196,9,1.661,12,2.188,14,1.479,17,1.812,25,0.352,26,0.796,27,1.956,28,2.925,37,1.124,43,0.93,44,1.715,47,2.914,48,2.79,49,2.79,50,1.452,52,1.779,53,2.173,54,0.764,55,0.026,56,0.352,57,0.54,58,0.578,59,1.569,60,2.125,61,3.433,67,2.721,70,1.171,79,1.359,86,1.281,104,1.366,106,0.978,107,0.621,116,1.206,122,0.486,123,0.655,124,3.416,125,2.188,152,2.037,153,2.473,154,2.473,213,0.016,214,0.016,227,3.051,228,3.5,268,2.047,269,4.549,270,2.473,271,4.423,272,3.942,273,4.549,274,2.808,275,4.877,278,4.423,279,4.089,280,3.895,281,2.701,282,3.187,284,2.473,285,3.406,286,2.786,1120,3.317,1121,3.317,1122,5.223]],["title/interfaces/RuleInterface.html",[327,0.476,479,1.338]],["body/interfaces/RuleInterface.html",[2,0.406,3,0.463,7,0.25,25,0.448,26,0.935,55,0.026,56,0.719,57,0.645,58,1.138,79,0.974,81,1.645,83,1.184,122,0.573,188,0.585,202,0.911,213,0.019,214,0.019,327,0.928,348,1.265,354,1.827,390,1.644,446,2.29,459,2.11,476,2.143,479,2.085,483,1.644,485,1.951,492,1.441,497,1.644,501,2.225,506,1.76,577,2.028,578,2.97,579,2.97,580,2.187,581,2.232,582,1.644,583,2.578,584,2.028,585,2.028,586,1.76,587,1.76]],["title/components/SettingsComponent.html",[0,0.557,208,1.173]],["body/components/SettingsComponent.html",[0,1.04,1,1.262,2,0.356,3,0.32,4,1.653,5,1.653,6,1.653,7,0.219,9,1.348,14,1.653,15,1.542,17,1.652,18,2.686,19,2.205,21,1.914,23,1.914,25,0.393,31,1.571,37,1.211,43,1.38,44,1.916,45,2.466,46,1.88,50,1.36,52,1.677,53,2.048,54,0.853,55,0.026,56,0.586,57,0.356,58,0.646,59,1.134,60,1.764,70,0.922,75,1.571,90,1.38,100,2.196,102,4.393,106,1.035,107,0.694,113,1.653,117,1.777,118,2.075,119,2.075,120,2.23,121,1.916,122,0.425,123,0.573,125,1.441,170,3.138,179,1.262,180,2.196,181,2.196,182,2.196,183,1.653,184,1.653,185,1.039,186,2.196,187,1.039,188,0.847,189,1.653,190,1.262,191,2.196,192,1.183,193,2.196,194,1.262,195,2.466,196,1.183,197,1.348,198,1.653,199,1.262,200,1.653,201,1.262,202,1.06,203,1.262,204,1.653,205,1.109,206,1.677,207,1.183,208,2.225,209,1.653,210,1.262,211,1.653,212,1.653,213,0.018,214,0.018,332,1.542,394,1.653,395,2.196,536,3.3,537,3.3,538,3.671,659,4.987,1123,2.764,1124,4.923,1125,4.923,1126,5.89,1127,3.706,1128,3.706,1129,3.706,1130,3.706,1131,3.706,1132,4.168,1133,4.168,1134,4.168]],["title/injectables/SorterService.html",[268,1.252,292,1.928]],["body/injectables/SorterService.html",[2,0.271,3,0.244,7,0.167,17,1.47,25,0.3,26,0.711,31,1.951,37,1.004,43,1.144,44,1.461,45,2.135,46,1.673,50,1.425,54,1.207,55,0.026,56,0.556,57,0.573,58,0.913,59,0.939,60,0.902,70,1.118,75,1.302,81,0.939,86,1.144,90,1.342,104,1.432,106,1.085,107,0.529,118,1.583,119,1.583,120,1.028,121,1.461,122,0.244,123,0.329,126,1.028,188,0.801,213,0.015,214,0.015,268,1.741,284,2.108,292,2.284,327,0.391,348,1.568,354,0.963,388,1.894,392,1.894,394,1.82,395,1.261,465,1.583,476,1.907,483,1.099,506,1.176,512,2.393,521,4.904,522,2.393,524,4.453,526,5.788,529,5.788,530,1.724,568,3.454,586,2.181,678,3.57,679,2.681,701,2.108,702,2.735,719,2.108,720,3.042,722,2.108,737,1.894,739,1.583,742,1.355,762,3.883,775,3.042,779,4.904,781,1.894,884,3.514,930,2.108,962,2.393,963,2.393,1038,2.393,1081,2.393,1086,2.393,1092,2.393,1135,2.108,1136,4.08,1137,4.08,1138,4.08,1139,4.08,1140,2.826,1141,4.08,1142,2.826,1143,4.08,1144,2.826,1145,2.826,1146,4.08,1147,6.79,1148,2.826,1149,2.826,1150,2.826,1151,3.454,1152,2.826,1153,2.826,1154,2.826,1155,2.826,1156,2.826,1157,2.826,1158,2.826,1159,2.826,1160,2.826,1161,2.826,1162,2.826,1163,2.826,1164,4.054,1165,2.826,1166,2.826,1167,2.826,1168,2.826,1169,2.826,1170,2.826,1171,2.826,1172,2.826,1173,2.826,1174,2.826,1175,2.826,1176,2.826,1177,2.826,1178,2.826,1179,2.826,1180,2.826,1181,2.826,1182,6.113,1183,2.826,1184,4.08,1185,4.787,1186,4.787,1187,4.787,1188,4.787,1189,2.826,1190,2.826,1191,2.826,1192,2.826,1193,2.826,1194,2.826,1195,2.826,1196,2.826,1197,2.826,1198,2.826,1199,2.826,1200,2.826,1201,2.826]],["title/pipes/UnNamedPipe.html",[626,2.101,1202,2.308]],["body/pipes/UnNamedPipe.html",[2,0.482,3,0.433,7,0.296,12,1.95,15,2.086,37,1.234,50,1.234,54,1.155,55,0.026,56,0.697,57,0.482,58,0.874,70,1.116,83,1.197,106,0.939,107,0.939,122,0.433,123,0.584,213,0.021,214,0.021,373,2.086,626,3.634,930,3.74,1202,4.258,1203,5.043,1204,4.246,1205,5.956,1206,4.246,1207,5.956,1208,6.353,1209,5.015,1210,5.956,1211,5.015]],["title/components/UnauthenticatedComponent.html",[0,0.557,210,1.173]],["body/components/UnauthenticatedComponent.html",[0,1.006,1,1.109,2,0.313,3,0.281,4,1.452,5,1.452,6,1.452,7,0.346,9,1.64,10,3.817,14,1.452,15,1.354,17,1.744,18,2.643,19,2.17,21,1.753,23,1.753,25,0.345,26,0.786,27,1.349,28,2.524,37,1.374,43,0.913,44,1.683,50,1.273,52,1.536,53,1.876,54,0.75,55,0.026,56,0.622,57,0.536,58,0.567,59,1.578,60,1.871,61,3.155,66,3.022,70,0.61,75,1.039,90,1.264,100,2.49,106,0.844,107,0.61,113,1.452,120,2.031,122,0.389,123,0.525,124,1.823,125,1.753,171,2.756,179,1.109,180,2.011,181,2.011,182,2.011,183,1.452,184,1.452,185,0.913,186,2.011,187,0.913,188,0.81,189,1.452,190,1.109,191,2.011,192,1.039,193,2.011,194,1.109,195,2.307,196,1.039,197,1.184,198,1.452,199,1.109,200,1.452,201,1.109,202,0.97,203,1.109,204,1.452,205,0.974,206,1.902,207,1.039,208,1.109,209,1.452,210,2.192,211,2.307,212,1.452,213,0.016,214,0.016,272,3.867,273,3.362,285,2.427,327,0.623,332,1.354,333,2.182,530,2.75,536,3.022,742,3.183,768,3.022,775,3.362,853,3.817,884,4.065,956,3.022,1212,2.756,1213,4.508,1214,4.508,1215,4.508,1216,5.583,1217,3.255,1218,3.255,1219,4.508,1220,3.255,1221,4.727,1222,4.727,1223,4.727,1224,4.508,1225,4.508,1226,4.508,1227,4.508,1228,4.508,1229,4.508,1230,4.508,1231,4.508,1232,4.508,1233,5.583,1234,4.508,1235,4.508,1236,4.508,1237,5.583,1238,4.727,1239,4.508,1240,4.508]],["title/coverage.html",[1241,3.967]],["body/coverage.html",[0,1.083,1,1.074,7,0.186,8,3.288,17,0.884,46,1.006,55,0.026,57,0.303,59,1.015,90,0.884,110,2.351,111,2.351,121,2.996,123,0.592,185,0.884,187,0.884,188,0.883,190,1.074,192,1.006,194,1.074,196,1.006,199,1.074,201,1.074,202,1.185,203,1.074,205,0.943,206,1.074,207,1.006,208,1.074,210,1.074,213,0.016,214,0.016,227,1.63,228,1.765,244,3.288,247,2.113,268,2.108,269,3.288,270,3.288,292,1.765,298,2.847,301,2.113,327,0.869,328,3.408,329,3.408,340,1.924,347,1.63,348,0.943,363,1.924,373,2.947,465,1.765,466,2.67,467,2.956,476,1.147,479,1.226,485,1.147,497,1.226,535,2.67,577,2.955,586,1.312,587,1.312,626,1.924,631,2.351,637,2.351,638,3.288,643,2.113,652,3.792,679,1.765,737,2.113,738,2.351,739,1.765,768,2.113,787,1.924,851,2.67,852,2.67,914,4.132,919,2.956,964,4.657,968,2.351,969,2.351,1023,2.67,1052,3.288,1053,2.67,1101,4.961,1105,4.305,1123,3.288,1135,3.288,1202,2.113,1203,2.67,1204,2.67,1212,2.67,1241,2.67,1242,3.153,1243,3.153,1244,5.084,1245,6.801,1246,2.67,1247,6.39,1248,2.67,1249,2.67,1250,2.67,1251,3.153,1252,3.153,1253,4.409,1254,3.153,1255,3.153,1256,3.153,1257,4.409,1258,4.409,1259,4.409,1260,4.409,1261,3.153,1262,4.305,1263,3.153,1264,3.733,1265,2.67,1266,3.153,1267,3.153,1268,4.409,1269,3.153,1270,3.153,1271,3.153,1272,3.153,1273,3.733,1274,2.67,1275,3.153,1276,3.153,1277,3.153,1278,3.153,1279,4.409,1280,3.153,1281,3.153,1282,3.153,1283,4.409,1284,2.67,1285,2.67,1286,3.153,1287,4.409,1288,3.153,1289,2.67,1290,2.67,1291,3.733,1292,2.67,1293,3.153,1294,3.153]],["title/dependencies.html",[217,2.317,1295,2.882]],["body/dependencies.html",[55,0.026,107,0.92,109,2.623,112,3.662,116,1.786,213,0.021,214,0.021,217,2.749,239,4.98,242,4.386,257,1.909,295,3.662,306,3.662,499,3.662,1296,4.91,1297,6.986,1298,4.91,1299,5.881,1300,4.91,1301,4.91,1302,4.91,1303,4.91,1304,4.91,1305,4.91,1306,5.881,1307,4.91,1308,4.91,1309,4.91,1310,4.91,1311,4.91,1312,4.157,1313,4.91,1314,4.91,1315,4.91,1316,4.91,1317,4.91,1318,4.91]],["title/miscellaneous/enumerations.html",[1319,1.614,1320,3.503]],["body/miscellaneous/enumerations.html",[7,0.343,25,0.509,55,0.021,57,0.461,59,1.105,83,1.426,197,1.746,213,0.021,214,0.021,467,3.889,738,3.58,739,3.249,742,2.302,781,3.889,787,2.929,812,4.065,813,6.009,814,4.065,815,4.065,816,4.065,817,4.065,818,4.065,819,3.58,820,4.065,821,4.065,822,4.065,823,4.065,824,4.065,825,4.065,826,4.065,827,4.065,828,4.065,829,4.065,830,4.065,831,4.065,832,4.065,833,4.065,834,4.065,835,4.065,836,4.065,837,4.065,838,4.065,839,4.065,840,4.065,841,4.065,842,4.065,1319,2.688,1320,4.913,1321,4.801]],["title/miscellaneous/functions.html",[679,2.317,1319,1.614]],["body/miscellaneous/functions.html",[25,0.575,54,1.248,55,0.024,56,0.575,57,0.521,58,0.945,213,0.022,214,0.022,459,1.847,679,3.036,914,3.634,919,4.178,970,4.59,1319,3.036,1322,4.59]],["title/index.html",[25,0.306,65,1.758,455,1.614]],["body/index.html",[7,0.267,9,1.648,19,1.446,27,1.355,55,0.025,59,1.289,100,2.021,178,2.537,213,0.02,214,0.02,272,2.764,327,0.626,556,2.764,742,3.128,765,3.836,787,3.708,789,3.836,956,3.037,1099,3.836,1134,3.836,1221,4.741,1222,5.146,1223,4.741,1238,3.836,1312,3.836,1323,4.53,1324,4.53,1325,3.836,1326,3.836,1327,6.646,1328,4.53,1329,4.53,1330,4.53,1331,3.836,1332,4.53,1333,4.53,1334,3.836,1335,4.53,1336,4.53,1337,4.53,1338,4.53,1339,4.53,1340,4.53,1341,4.53,1342,4.53,1343,4.53,1344,4.53,1345,4.53,1346,4.53,1347,4.53,1348,4.53,1349,4.53,1350,4.53,1351,4.53,1352,3.836,1353,3.836,1354,6.078,1355,6.078,1356,5.6,1357,4.53,1358,4.53,1359,4.53,1360,4.53,1361,4.53,1362,6.078,1363,4.53,1364,4.53,1365,4.53,1366,4.53,1367,4.53,1368,4.53,1369,4.53,1370,4.53,1371,4.53,1372,5.6,1373,4.53,1374,4.53,1375,4.53,1376,3.836,1377,4.53,1378,4.53,1379,4.53,1380,4.53,1381,4.533,1382,4.53,1383,3.836]],["title/license.html",[65,1.758,455,1.614,1381,2.149]],["body/license.html",[7,0.278,16,2.432,55,0.021,89,2.432,161,3.508,175,2.256,213,0.021,214,0.021,279,3.153,365,3.153,449,3.153,762,4.143,787,2.87,796,3.983,956,3.842,1325,3.983,1326,3.983,1334,5.845,1352,3.983,1353,3.983,1381,3.508,1383,3.983,1384,6.181,1385,4.705,1386,4.705,1387,5.731,1388,4.705,1389,4.705,1390,4.705,1391,5.731,1392,4.705,1393,6.433,1394,5.731,1395,6.181,1396,4.705,1397,5.731,1398,4.705,1399,4.705,1400,4.705,1401,4.705,1402,4.705,1403,4.705,1404,4.705,1405,4.705,1406,4.705,1407,4.705,1408,4.705,1409,4.705,1410,5.731,1411,5.731,1412,4.705,1413,4.705,1414,5.731,1415,4.705,1416,4.705,1417,4.705,1418,4.705,1419,4.705,1420,4.705,1421,4.705,1422,4.705,1423,4.705,1424,4.705,1425,4.705,1426,4.705,1427,4.705,1428,4.705,1429,4.705,1430,4.705,1431,4.705,1432,4.705]],["title/modules.html",[215,1.704]],["body/modules.html",[55,0.022,213,0.022,214,0.022,215,1.949,216,3.593,225,3.27,226,3.001,242,4.87,627,3.27,1376,5.529,1433,6.53,1434,6.714,1435,5.36,1436,5.36]],["title/overview.html",[1437,3.967]],["body/overview.html",[0,0.64,1,2.281,16,2.045,17,1.694,46,1.822,55,0.026,60,1.263,67,1.765,122,0.342,123,0.46,175,1.897,179,1.348,185,1.832,187,1.832,190,1.944,192,1.822,194,1.944,196,1.822,199,1.944,201,1.944,203,1.944,205,1.708,207,1.822,208,1.944,210,1.944,213,0.018,214,0.018,215,1.869,216,4.703,217,2.215,218,2.652,219,3.35,220,3.35,221,3.35,222,3.35,223,3.35,224,3.35,225,4.216,226,3.979,227,2.951,228,3.196,229,3.445,230,2.414,268,1.439,287,3.35,288,3.35,290,3.35,291,3.35,292,3.196,327,0.547,622,3.35,623,3.35,624,3.35,625,3.35,626,3.482,627,3.482,730,2.414,1202,2.652,1437,3.35,1438,4.351,1439,3.956,1440,3.35,1441,3.35,1442,3.956]],["title/routes.html",[67,2.09]],["body/routes.html",[55,0.023,67,2.481,213,0.023,214,0.023]],["title/todo.html",[65,1.758,455,1.614,1443,2.44]],["body/todo.html",[55,0.023,56,0.585,178,3.089,213,0.023,214,0.023,1443,4.672,1444,5.517,1445,5.517]],["title/miscellaneous/variables.html",[964,2.773,1319,1.614]],["body/miscellaneous/variables.html",[3,0.346,8,1.567,9,0.764,16,1.086,20,2.445,25,0.223,53,0.874,55,0.026,56,0.652,57,0.614,58,1.058,59,1.193,67,0.937,70,0.394,82,2.264,83,1.275,84,2.766,86,1.646,89,1.086,90,0.589,100,0.937,104,1.55,110,2.988,111,2.988,112,4.283,118,2.741,119,2.741,121,3.251,150,2.436,165,1.689,175,1.008,202,1.115,203,0.716,206,1.667,213,0.012,214,0.012,244,4.17,281,1.086,330,3.029,373,1.88,400,2.757,403,1.282,459,1.539,483,1.757,492,0.716,501,0.716,506,1.667,524,1.567,537,1.409,578,1.921,579,1.921,581,1.667,583,0.874,638,1.567,647,4.144,648,3.393,649,3.393,650,3.393,652,1.567,730,2.986,739,3.445,741,2.436,742,1.921,762,2.686,768,2.686,914,1.409,919,2.686,939,3.826,964,2.19,965,1.779,966,1.779,967,1.779,968,2.988,969,2.988,1061,2.988,1096,2.766,1101,4.033,1123,1.567,1132,1.779,1133,1.779,1135,1.567,1151,4.387,1164,1.779,1206,5.27,1244,1.779,1246,4.144,1248,5.549,1249,4.387,1250,4.387,1262,1.779,1264,2.766,1265,3.393,1273,1.779,1274,3.393,1284,1.779,1285,1.779,1289,1.779,1290,3.393,1291,1.779,1292,3.393,1319,1.177,1322,4.144,1331,1.779,1438,1.779,1440,1.779,1441,2.766,1446,3.266,1447,2.101,1448,2.101,1449,2.101,1450,5.182,1451,2.101,1452,2.101,1453,2.101,1454,3.266,1455,2.101,1456,3.266,1457,2.101,1458,2.101,1459,2.101,1460,2.101,1461,2.101,1462,2.101,1463,4.007,1464,2.101,1465,6.586,1466,2.101,1467,2.101,1468,2.101,1469,3.266,1470,2.101,1471,5.743,1472,5.592,1473,4.519,1474,4.519,1475,5.592,1476,5.743,1477,3.266,1478,2.101,1479,3.266,1480,4.007,1481,2.101,1482,5.182,1483,4.895,1484,4.895,1485,4.895,1486,4.895,1487,2.101,1488,2.101,1489,4.007,1490,4.007,1491,4.007,1492,2.101,1493,3.266,1494,3.266,1495,3.266,1496,4.519,1497,3.266,1498,4.007,1499,2.101,1500,4.007,1501,2.101,1502,2.101,1503,2.101,1504,4.895,1505,2.101,1506,3.266,1507,2.101,1508,2.101,1509,2.101,1510,2.101,1511,2.101,1512,2.101,1513,2.101,1514,2.101,1515,4.007,1516,4.007,1517,4.007,1518,4.007,1519,2.101,1520,2.101,1521,2.101,1522,4.519]]],"invertedIndex":[["",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":373,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{},"components/PresetConfigComponent.html":{},"pipes/UnNamedPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.5",{"_index":1476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.8.26",{"_index":1318,"title":{},"body":{"dependencies.html":{}}}],["0.9}px",{"_index":414,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["0/1",{"_index":1245,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1272,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1271,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1261,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1286,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":1266,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":1280,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1268,"title":{},"body":{"coverage.html":{}}}],["0/31",{"_index":1260,"title":{},"body":{"coverage.html":{}}}],["0/32",{"_index":1258,"title":{},"body":{"coverage.html":{}}}],["0/33",{"_index":1263,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1287,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1288,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1253,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1283,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1267,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":730,"title":{},"body":{"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{},"components/PresetConfigComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.5",{"_index":405,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["1/1",{"_index":1247,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":357,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["100",{"_index":1101,"title":{},"body":{"components/PresetConfigComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["1280",{"_index":402,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["14",{"_index":1439,"title":{},"body":{"overview.html":{}}}],["17/17",{"_index":1254,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":403,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"miscellaneous/variables.html":{}}}],["2.0.8",{"_index":1309,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":1316,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1307,"title":{},"body":{"dependencies.html":{}}}],["2/4",{"_index":1278,"title":{},"body":{"coverage.html":{}}}],["2/9",{"_index":1270,"title":{},"body":{"coverage.html":{}}}],["2018",{"_index":1386,"title":{},"body":{"license.html":{}}}],["22",{"_index":1269,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":1251,"title":{},"body":{"coverage.html":{}}}],["250",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["3",{"_index":1441,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["3.1.0",{"_index":1311,"title":{},"body":{"dependencies.html":{}}}],["3.2.1",{"_index":1314,"title":{},"body":{"dependencies.html":{}}}],["3.4.3",{"_index":1304,"title":{},"body":{"dependencies.html":{}}}],["3/7",{"_index":1276,"title":{},"body":{"coverage.html":{}}}],["362606538820",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["4",{"_index":1438,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["4/16",{"_index":1252,"title":{},"body":{"coverage.html":{}}}],["4/4",{"_index":1255,"title":{},"body":{"coverage.html":{}}}],["42",{"_index":1275,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":1440,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["50",{"_index":1277,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["5000",{"_index":1048,"title":{},"body":{"components/HomeComponent.html":{}}}],["56",{"_index":1281,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1313,"title":{},"body":{"dependencies.html":{}}}],["6.0.0",{"_index":1297,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":1299,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1279,"title":{},"body":{"coverage.html":{}}}],["640",{"_index":404,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["750",{"_index":1043,"title":{},"body":{"components/HomeComponent.html":{}}}],["8",{"_index":1442,"title":{},"body":{"overview.html":{}}}],["9/16",{"_index":1282,"title":{},"body":{"coverage.html":{}}}],["9th",{"_index":1509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9}px",{"_index":561,"title":{},"body":{"components/ConfigComponent.html":{}}}],["_activeconfigchang",{"_index":653,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["_authstat",{"_index":917,"title":{},"body":{"injectables/GoogleService.html":{}}}],["_closecommand",{"_index":1054,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["_configsubject",{"_index":654,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["_folderpick",{"_index":969,"title":{},"body":{"injectables/GoogleService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["_folderpicked.asobserv",{"_index":961,"title":{},"body":{"injectables/GoogleService.html":{}}}],["_folderpicked.error(tru",{"_index":975,"title":{},"body":{"injectables/GoogleService.html":{}}}],["_folderpicked.next(data.docs[0",{"_index":973,"title":{},"body":{"injectables/GoogleService.html":{}}}],["abov",{"_index":1409,"title":{},"body":{"license.html":{}}}],["abreu",{"_index":1337,"title":{},"body":{"index.html":{}}}],["access",{"_index":273,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{},"components/UnauthenticatedComponent.html":{}}}],["accessor",{"_index":889,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["account",{"_index":1134,"title":{},"body":{"components/SettingsComponent.html":{},"index.html":{}}}],["action",{"_index":365,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"license.html":{}}}],["activ",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["activeconfig",{"_index":354,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"injectables/SorterService.html":{}}}],["activeconfigchang",{"_index":655,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["activeconfigchangesubscript",{"_index":361,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["activeconfignam",{"_index":1026,"title":{},"body":{"components/HomeComponent.html":{}}}],["actual_compon",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["ad",{"_index":1100,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["add",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"classes/DriveQueryBuilder.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"index.html":{},"todo.html":{}}}],["addconfig",{"_index":658,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["addconfig(config",{"_index":666,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["addconfig(configbuilder.configfromgroup(group",{"_index":1095,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["addgroup",{"_index":468,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["addgroup(config",{"_index":473,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["addpar",{"_index":1020,"title":{},"body":{"injectables/GoogleService.html":{}}}],["addpreset",{"_index":1057,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["addpreset(presetid",{"_index":1059,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["address",{"_index":778,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["addview(view",{"_index":1001,"title":{},"body":{"injectables/GoogleService.html":{}}}],["afterviewinit",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{}}}],["aizasyb",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["allow",{"_index":952,"title":{},"body":{"injectables/GoogleService.html":{}}}],["and/or",{"_index":1403,"title":{},"body":{"license.html":{}}}],["angular/anim",{"_index":1296,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1298,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/collect",{"_index":338,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["angular/cdk/overlay",{"_index":553,"title":{},"body":{"components/ConfigComponent.html":{}}}],["angular/cli",{"_index":1364,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":295,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"dependencies.html":{}}}],["angular/compil",{"_index":1300,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler/src/cor",{"_index":336,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["angular/cor",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":306,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1301,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"dependencies.html":{}}}],["angular/material/button",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/menu",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/tab",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigRoutingModule.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"injectables/PreventAuthGuardService.html":{},"dependencies.html":{}}}],["angularj",{"_index":1361,"title":{},"body":{"index.html":{}}}],["anim",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["animate('0.1",{"_index":1469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["anyinvalid",{"_index":908,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["api",{"_index":916,"title":{},"body":{"injectables/GoogleService.html":{}}}],["apikey",{"_index":131,"title":{},"body":{"components/AppComponent.html":{}}}],["app",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"index.html":{}}}],["app.compon",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"components/ConfigComponent.html":{}}}],["app.component.html",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["app.rout",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["app/config",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"modules/ConfigRoutingModule.html":{}}}],["app/config/cr",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"modules/ConfigRoutingModule.html":{}}}],["app/config/edit",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"modules/ConfigRoutingModule.html":{}}}],["app/config/preset",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"modules/ConfigRoutingModule.html":{}}}],["app/hom",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["app/set",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appconfig",{"_index":647,"title":{},"body":{"modules/ConfigRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["appconfigcr",{"_index":648,"title":{},"body":{"modules/ConfigRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["appconfigedit",{"_index":650,"title":{},"body":{"modules/ConfigRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["appconfigpreset",{"_index":649,"title":{},"body":{"modules/ConfigRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["appdatafold",{"_index":707,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["apphom",{"_index":1482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applic",{"_index":11,"title":{},"body":{"components/AppComponent.html":{}}}],["application/vnd.googl",{"_index":813,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["appmodul",{"_index":216,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approut",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["apps.audio",{"_index":814,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.docu",{"_index":815,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.draw",{"_index":817,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.driv",{"_index":841,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.fil",{"_index":818,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.fold",{"_index":819,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"miscellaneous/enumerations.html":{}}}],["apps.form",{"_index":821,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.fusiont",{"_index":823,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.map",{"_index":825,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.photo",{"_index":827,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.present",{"_index":829,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.script",{"_index":831,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.sit",{"_index":833,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.spreadsheet",{"_index":835,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.unknown",{"_index":837,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.video",{"_index":839,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["appset",{"_index":1485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aren't",{"_index":274,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{}}}],["arg",{"_index":1208,"title":{},"body":{"pipes/UnNamedPipe.html":{}}}],["aris",{"_index":1432,"title":{},"body":{"license.html":{}}}],["array",{"_index":446,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{}}}],["arredondo",{"_index":1330,"title":{},"body":{"index.html":{}}}],["art_track",{"_index":1236,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["ashhad",{"_index":1341,"title":{},"body":{"index.html":{}}}],["assets/images/istem",{"_index":1513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["associ",{"_index":1352,"title":{},"body":{"index.html":{},"license.html":{}}}],["audio",{"_index":812,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["auth",{"_index":979,"title":{},"body":{"injectables/GoogleService.html":{}}}],["authenitc",{"_index":967,"title":{},"body":{"injectables/GoogleService.html":{},"miscellaneous/variables.html":{}}}],["authent",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"injectables/GoogleService.html":{},"injectables/PreventAuthGuardService.html":{},"components/UnauthenticatedComponent.html":{}}}],["authenticatedmodul",{"_index":225,"title":{"modules/AuthenticatedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules.html":{},"overview.html":{}}}],["authenticatedmodule.forroot",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["authguardservic",{"_index":227,"title":{"injectables/AuthGuardService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/ConfigRoutingModule.html":{},"injectables/PreventAuthGuardService.html":{},"coverage.html":{},"overview.html":{}}}],["authinst",{"_index":968,"title":{},"body":{"injectables/GoogleService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authinstance.currentuser.get().getauthresponse().access_token",{"_index":998,"title":{},"body":{"injectables/GoogleService.html":{}}}],["authinstance.currentuser.get().getauthresponse().id_token",{"_index":1006,"title":{},"body":{"injectables/GoogleService.html":{}}}],["authinstance.issignedin.get",{"_index":985,"title":{},"body":{"injectables/GoogleService.html":{}}}],["authinstance.issignedin.listen",{"_index":982,"title":{},"body":{"injectables/GoogleService.html":{}}}],["authinstance.signin",{"_index":1004,"title":{},"body":{"injectables/GoogleService.html":{}}}],["authinstance.signout",{"_index":1005,"title":{},"body":{"injectables/GoogleService.html":{}}}],["author",{"_index":1423,"title":{},"body":{"license.html":{}}}],["authstat",{"_index":918,"title":{},"body":{"injectables/GoogleService.html":{}}}],["authstatu",{"_index":984,"title":{},"body":{"injectables/GoogleService.html":{}}}],["auto",{"_index":1368,"title":{},"body":{"index.html":{}}}],["avail",{"_index":1436,"title":{},"body":{"modules.html":{}}}],["base",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["beed",{"_index":806,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["befor",{"_index":772,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["behaviorsubject",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["behaviorsubject(tru",{"_index":443,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["between",{"_index":1164,"title":{},"body":{"injectables/SorterService.html":{},"miscellaneous/variables.html":{}}}],["boolean",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"interfaces/JSONConfiguration.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{}}}],["bootstrap",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"overview.html":{}}}],["brandon",{"_index":1325,"title":{},"body":{"index.html":{},"license.html":{}}}],["break",{"_index":529,"title":{},"body":{"classes/ConfigBuilder.html":{},"injectables/SorterService.html":{}}}],["brows",{"_index":1434,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":741,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"miscellaneous/variables.html":{}}}],["builder",{"_index":702,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"components/PresetConfigComponent.html":{},"injectables/SorterService.html":{}}}],["builder.t",{"_index":467,"title":{},"body":{"classes/ConfigBuilder.html":{},"classes/DriveQueryBuilder.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["builder.ts:106",{"_index":803,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:11",{"_index":493,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["builder.ts:113",{"_index":486,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["builder.ts:117",{"_index":793,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:128",{"_index":774,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:139",{"_index":767,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:142",{"_index":482,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["builder.ts:150",{"_index":771,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:161",{"_index":795,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:172",{"_index":798,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:183",{"_index":805,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:196",{"_index":808,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:209",{"_index":786,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:39",{"_index":480,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["builder.ts:40",{"_index":764,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:48",{"_index":790,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:50",{"_index":759,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:57",{"_index":496,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["builder.ts:73",{"_index":782,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:84",{"_index":810,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:95",{"_index":800,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["built",{"_index":791,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["c",{"_index":1385,"title":{},"body":{"license.html":{}}}],["calculatestart",{"_index":567,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["calculatestart(pag",{"_index":447,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["call",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["callback",{"_index":940,"title":{},"body":{"injectables/GoogleService.html":{}}}],["canactiv",{"_index":275,"title":{},"body":{"injectables/AuthGuardService.html":{},"modules/ConfigRoutingModule.html":{},"injectables/PreventAuthGuardService.html":{}}}],["cancel",{"_index":974,"title":{},"body":{"injectables/GoogleService.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["case",{"_index":526,"title":{},"body":{"classes/ConfigBuilder.html":{},"injectables/SorterService.html":{}}}],["catch(err",{"_index":1087,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["categori",{"_index":1505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cb",{"_index":678,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"injectables/SorterService.html":{}}}],["cb(resp",{"_index":1008,"title":{},"body":{"injectables/GoogleService.html":{}}}],["cb(true",{"_index":1022,"title":{},"body":{"injectables/GoogleService.html":{}}}],["cd",{"_index":1359,"title":{},"body":{"index.html":{}}}],["cesped",{"_index":1338,"title":{},"body":{"index.html":{}}}],["chang",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["charg",{"_index":1390,"title":{},"body":{"license.html":{}}}],["checkinterv",{"_index":1088,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["checkout",{"_index":1360,"title":{},"body":{"index.html":{}}}],["claim",{"_index":1426,"title":{},"body":{"license.html":{}}}],["class",{"_index":123,"title":{"classes/ConfigBuilder.html":{},"classes/ConfigDataSource.html":{},"classes/DriveQueryBuilder.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["classes(period",{"_index":1511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["classes/config",{"_index":701,"title":{},"body":{"injectables/DatabaseService.html":{},"components/PresetConfigComponent.html":{},"injectables/SorterService.html":{}}}],["classes/dr",{"_index":962,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/SorterService.html":{}}}],["classifi",{"_index":578,"title":{},"body":{"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"miscellaneous/variables.html":{}}}],["clear",{"_index":1132,"title":{},"body":{"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["clearconfig",{"_index":659,"title":{},"body":{"injectables/DatabaseService.html":{},"components/SettingsComponent.html":{}}}],["clearinterval(checkinterv",{"_index":1089,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["clearinterval(databaseinitalizedcheck",{"_index":1042,"title":{},"body":{"components/HomeComponent.html":{}}}],["clearinterval(googleinitinterv",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["client",{"_index":978,"title":{},"body":{"injectables/GoogleService.html":{}}}],["clientid",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["clone",{"_index":1357,"title":{},"body":{"index.html":{}}}],["close",{"_index":419,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["closecommand",{"_index":563,"title":{},"body":{"components/ConfigComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["closesubscript",{"_index":417,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["closesubscription.unsubscrib",{"_index":421,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["cluster_appmodul",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_appcomponent_provid",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authenticatedmodul",{"_index":287,"title":{},"body":{"modules/AuthenticatedModule.html":{},"overview.html":{}}}],["cluster_authenticatedmodule_declar",{"_index":288,"title":{},"body":{"modules/AuthenticatedModule.html":{},"overview.html":{}}}],["cluster_authenticatedmodule_export",{"_index":290,"title":{},"body":{"modules/AuthenticatedModule.html":{},"overview.html":{}}}],["cluster_authenticatedmodule_import",{"_index":289,"title":{},"body":{"modules/AuthenticatedModule.html":{}}}],["cluster_authenticatedmodule_provid",{"_index":291,"title":{},"body":{"modules/AuthenticatedModule.html":{},"overview.html":{}}}],["cluster_configmodul",{"_index":622,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_declar",{"_index":623,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_export",{"_index":625,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_import",{"_index":624,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["commonmodul",{"_index":294,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["compat",{"_index":1312,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["compdoc",{"_index":1369,"title":{},"body":{"index.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigRoutingModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component_templ",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["componentinst",{"_index":415,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["componentinstance.closecommand.subscrib",{"_index":418,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["components/auth/unauthenticated/unauthenticated.compon",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["components/shared/config",{"_index":300,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["components/shared/edit",{"_index":630,"title":{},"body":{"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{}}}],["components/shared/fold",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{}}}],["components/shared/new",{"_index":636,"title":{},"body":{"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{}}}],["components/tabs/config/config",{"_index":297,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["components/tabs/config/config.compon",{"_index":296,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigRoutingModule.html":{}}}],["components/tabs/config/preset",{"_index":642,"title":{},"body":{"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{}}}],["components/tabs/home/home.compon",{"_index":307,"title":{},"body":{"modules/AuthenticatedModule.html":{}}}],["components/tabs/settings/settings.compon",{"_index":322,"title":{},"body":{"modules/AuthenticatedModule.html":{}}}],["condit",{"_index":1408,"title":{},"body":{"license.html":{}}}],["config",{"_index":188,"title":{"interfaces/Config.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{}}}],["config'},{'nam",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["config.compon",{"_index":334,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/PresetConfigPageComponent.html":{}}}],["config.component.html",{"_index":540,"title":{},"body":{"components/ConfigComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["config.component.scss",{"_index":539,"title":{},"body":{"components/ConfigComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["config.component.t",{"_index":1053,"title":{},"body":{"components/PresetConfigComponent.html":{},"coverage.html":{}}}],["config.component.ts:17",{"_index":1064,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.component.ts:19",{"_index":1066,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.component.ts:21",{"_index":1067,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.component.ts:22",{"_index":1068,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.component.ts:23",{"_index":1058,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.component.ts:26",{"_index":1070,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.component.ts:27",{"_index":1069,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.component.ts:33",{"_index":1063,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.component.ts:35",{"_index":1062,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.component.ts:39",{"_index":1060,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.data.createfold",{"_index":1074,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.data.group",{"_index":1075,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.group",{"_index":508,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["config.id",{"_index":509,"title":{},"body":{"classes/ConfigBuilder.html":{},"injectables/DatabaseService.html":{}}}],["config.nam",{"_index":510,"title":{},"body":{"classes/ConfigBuilder.html":{},"components/ConfigListComponent.html":{},"components/HomeComponent.html":{}}}],["config.name.length",{"_index":511,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["config/config.modul",{"_index":303,"title":{},"body":{"modules/AuthenticatedModule.html":{}}}],["config/preset",{"_index":347,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"coverage.html":{}}}],["configbuild",{"_index":465,"title":{"classes/ConfigBuilder.html":{}},"body":{"classes/ConfigBuilder.html":{},"injectables/DatabaseService.html":{},"components/PresetConfigComponent.html":{},"injectables/SorterService.html":{},"coverage.html":{}}}],["configbuilder.foldernamebuild",{"_index":1196,"title":{},"body":{"injectables/SorterService.html":{}}}],["configbuilder.generatenewconfig",{"_index":716,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["configchangesubscript",{"_index":360,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["configcompon",{"_index":185,"title":{"components/ConfigComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigRoutingModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["configdatasourc",{"_index":363,"title":{"classes/ConfigDataSource.html":{}},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"coverage.html":{}}}],["configfromgroup",{"_index":469,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["configfromgroup(group",{"_index":481,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["confighold",{"_index":500,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["configholder.groups[0].createfold",{"_index":502,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["configholder.groups[0].destin",{"_index":503,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["configid",{"_index":426,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{}}}],["configindex",{"_index":727,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["configinterfac",{"_index":497,"title":{"interfaces/ConfigInterface.html":{}},"body":{"classes/ConfigBuilder.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"coverage.html":{}}}],["configkey",{"_index":430,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["configlistcompon",{"_index":187,"title":{"components/ConfigListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["configmodalcompon",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"modules/AuthenticatedModule.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["configmodul",{"_index":226,"title":{"modules/ConfigModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"modules.html":{},"overview.html":{}}}],["configmodule.forroot",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{}}}],["confignam",{"_index":494,"title":{},"body":{"classes/ConfigBuilder.html":{},"injectables/DatabaseService.html":{}}}],["configroutingmodul",{"_index":627,"title":{"modules/ConfigRoutingModule.html":{}},"body":{"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["configs.find(config",{"_index":726,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["configs[config].id",{"_index":462,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["configs[config]['nam",{"_index":460,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["configsinterfac",{"_index":348,"title":{"interfaces/ConfigsInterface.html":{}},"body":{"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"injectables/SorterService.html":{},"coverage.html":{}}}],["configsubject",{"_index":441,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{}}}],["configur",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["configuration'",{"_index":615,"title":{},"body":{"components/ConfigListComponent.html":{},"components/HomeComponent.html":{}}}],["configuration.json",{"_index":705,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["configuration\\'",{"_index":621,"title":{},"body":{"components/ConfigListComponent.html":{},"components/HomeComponent.html":{}}}],["connect",{"_index":449,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"license.html":{}}}],["console.debug('gapi",{"_index":977,"title":{},"body":{"injectables/GoogleService.html":{}}}],["console.debug('googl",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["console.error",{"_index":395,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{}}}],["console.error(err",{"_index":903,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["console.error(resp.err",{"_index":1010,"title":{},"body":{"injectables/GoogleService.html":{}}}],["console.log(err",{"_index":1041,"title":{},"body":{"components/HomeComponent.html":{}}}],["const",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigRoutingModule.html":{},"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/PresetConfigComponent.html":{},"injectables/SorterService.html":{}}}],["constantli",{"_index":1346,"title":{},"body":{"index.html":{}}}],["constraint",{"_index":579,"title":{},"body":{"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{}}}],["constructor(appcompon",{"_index":543,"title":{},"body":{"components/ConfigComponent.html":{}}}],["constructor(config",{"_index":569,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["constructor(databas",{"_index":592,"title":{},"body":{"components/ConfigListComponent.html":{},"injectables/GoogleService.html":{}}}],["constructor(googl",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/FolderCreationComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{}}}],["constructor(parentfolderid",{"_index":757,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["constructor(priv",{"_index":445,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{}}}],["constructor(publ",{"_index":285,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{},"components/UnauthenticatedComponent.html":{}}}],["constructor(zon",{"_index":1030,"title":{},"body":{"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{}}}],["contact@brandoncravener.com",{"_index":1380,"title":{},"body":{"index.html":{}}}],["contain",{"_index":845,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["content",{"_index":788,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["content'",{"_index":801,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["context",{"_index":1292,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contract",{"_index":1429,"title":{},"body":{"license.html":{}}}],["contribut",{"_index":1370,"title":{},"body":{"index.html":{}}}],["contributor",{"_index":1340,"title":{},"body":{"index.html":{}}}],["control",{"_index":1051,"title":{},"body":{"components/HomeComponent.html":{}}}],["copi",{"_index":1393,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1384,"title":{},"body":{"license.html":{}}}],["core",{"_index":1305,"title":{},"body":{"dependencies.html":{}}}],["countributor",{"_index":1324,"title":{},"body":{"index.html":{}}}],["coverag",{"_index":1241,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["craven",{"_index":1326,"title":{},"body":{"index.html":{},"license.html":{}}}],["creat",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["createconfig",{"_index":660,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["createconfig(confignam",{"_index":670,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["createconfigbuttonst",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["createdaft",{"_index":744,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["createdafter(d",{"_index":766,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["createdafter(rule.data.firstd",{"_index":1165,"title":{},"body":{"injectables/SorterService.html":{}}}],["createdbefor",{"_index":745,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["createdbefore(d",{"_index":770,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["createdbefore(rule.data.secondd",{"_index":1166,"title":{},"body":{"injectables/SorterService.html":{}}}],["createdfold",{"_index":1076,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["createdirect",{"_index":335,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["createdtim",{"_index":846,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["createfold",{"_index":492,"title":{},"body":{"classes/ConfigBuilder.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"interfaces/RuleInterface.html":{},"miscellaneous/variables.html":{}}}],["createfolder(fold",{"_index":1082,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["createfolder(nam",{"_index":928,"title":{},"body":{"injectables/GoogleService.html":{}}}],["createfolder(newfoldernam",{"_index":1197,"title":{},"body":{"injectables/SorterService.html":{}}}],["createfolderconfig",{"_index":487,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["createfolderconfig.name.typ",{"_index":531,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["createfolderconfig.name.valu",{"_index":532,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["createfolderconfig.prefix.typ",{"_index":525,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["createfolderconfig.prefix.valu",{"_index":528,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["createfolderconfig.suffix.typ",{"_index":533,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["createfolderconfig.suffix.valu",{"_index":534,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["createfolders.foreach(fold",{"_index":1080,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["creation",{"_index":853,"title":{},"body":{"components/FolderCreationComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["creation'},{'nam",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["creation.compon",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{}}}],["creation.component.html",{"_index":855,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.scss",{"_index":854,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.t",{"_index":852,"title":{},"body":{"components/FolderCreationComponent.html":{},"coverage.html":{}}}],["creation.component.ts:102",{"_index":880,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:118",{"_index":881,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:146",{"_index":873,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:153",{"_index":877,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:19",{"_index":870,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:21",{"_index":872,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:23",{"_index":888,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:25",{"_index":886,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:39",{"_index":882,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:57",{"_index":887,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:59",{"_index":883,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:61",{"_index":891,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:67",{"_index":869,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:71",{"_index":874,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:79",{"_index":875,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:85",{"_index":876,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation/fold",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"coverage.html":{}}}],["creationd",{"_index":1161,"title":{},"body":{"injectables/SorterService.html":{}}}],["creationen",{"_index":1055,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["current",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"components/UnauthenticatedComponent.html":{}}}],["customiz",{"_index":1238,"title":{},"body":{"components/UnauthenticatedComponent.html":{},"index.html":{}}}],["damag",{"_index":1427,"title":{},"body":{"license.html":{}}}],["data",{"_index":459,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigRoutingModule.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["data.act",{"_index":971,"title":{},"body":{"injectables/GoogleService.html":{}}}],["data.push",{"_index":461,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["databas",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{}}}],["database/database.servic",{"_index":963,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/SorterService.html":{}}}],["databaseinitalizedcheck",{"_index":1036,"title":{},"body":{"components/HomeComponent.html":{}}}],["databaseservic",{"_index":46,"title":{"injectables/DatabaseService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"coverage.html":{},"overview.html":{}}}],["datasourc",{"_index":337,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["date",{"_index":530,"title":{},"body":{"classes/ConfigBuilder.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{}}}],["date.toisostring().split('.')[0",{"_index":847,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["deal",{"_index":1394,"title":{},"body":{"license.html":{}}}],["declar",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"components/ConfigComponent.html":{},"modules/ConfigModule.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{},"overview.html":{}}}],["decor",{"_index":612,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["default",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"miscellaneous/variables.html":{}}}],["default_value_accessor",{"_index":1265,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{}}}],["delet",{"_index":1133,"title":{},"body":{"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["delete_forev",{"_index":618,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["deleteaccount",{"_index":1126,"title":{},"body":{"components/SettingsComponent.html":{}}}],["deleteconfig",{"_index":588,"title":{},"body":{"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{}}}],["deleteconfig(configid",{"_index":674,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["deleteconfig(configkey",{"_index":429,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["depend",{"_index":217,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"components/ConfigComponent.html":{},"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["design",{"_index":1518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["destin",{"_index":506,"title":{},"body":{"classes/ConfigBuilder.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"injectables/SorterService.html":{},"miscellaneous/variables.html":{}}}],["destinationfold",{"_index":491,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["destinationloc",{"_index":672,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["determin",{"_index":278,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{}}}],["develop",{"_index":1331,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["dialog",{"_index":366,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["dialoginst",{"_index":409,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["dialoginstance.clos",{"_index":420,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["dialoginstance.componentinst",{"_index":416,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["dialogsubscript",{"_index":562,"title":{},"body":{"components/ConfigComponent.html":{}}}],["dialogsubscription.unsubscrib",{"_index":565,"title":{},"body":{"components/ConfigComponent.html":{}}}],["dialogwidth",{"_index":407,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["dialogwidth}px",{"_index":411,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["direct",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["disablefeature(google.picker.feature.support_team_dr",{"_index":995,"title":{},"body":{"injectables/GoogleService.html":{}}}],["disabletrash",{"_index":758,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["disconnect",{"_index":451,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["discoverydoc",{"_index":137,"title":{},"body":{"components/AppComponent.html":{}}}],["distribut",{"_index":1401,"title":{},"body":{"license.html":{}}}],["doc:buildandserv",{"_index":1367,"title":{},"body":{"index.html":{}}}],["document",{"_index":787,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{}}}],["document.body.clientheight",{"_index":413,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["document.body.clientwidth",{"_index":401,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["document.getelementbyid('loader').remov",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["done",{"_index":860,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["draw",{"_index":816,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["drive",{"_index":742,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["drivemimetyp",{"_index":781,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"injectables/SorterService.html":{},"miscellaneous/enumerations.html":{}}}],["drivemimetype.fold",{"_index":1012,"title":{},"body":{"injectables/GoogleService.html":{}}}],["drivequeri",{"_index":1147,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.createdafter(rule.data.d",{"_index":1162,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.createdbefore(rule.data.d",{"_index":1163,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.excludesowner(own",{"_index":1160,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.excludetype(typ",{"_index":1157,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.fulltextcontains(rule.data.fulltext",{"_index":1150,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.get",{"_index":1177,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.hasowner(own",{"_index":1159,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.modifiedafter(rule.data.d",{"_index":1173,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.modifiedbefore(rule.data.d",{"_index":1174,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.namecontains(titl",{"_index":1153,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.nameexcludes(titl",{"_index":1154,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.openedafter(rule.data.d",{"_index":1168,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.openedbefore(rule.data.d",{"_index":1169,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.requirestype(typ",{"_index":1156,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequerybuild",{"_index":737,"title":{"classes/DriveQueryBuilder.html":{}},"body":{"classes/DriveQueryBuilder.html":{},"injectables/SorterService.html":{},"coverage.html":{}}}],["drivequerybuilder(destination.folderid",{"_index":1178,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequerybuilder(group.source.folderid",{"_index":1148,"title":{},"body":{"injectables/SorterService.html":{}}}],["durat",{"_index":1047,"title":{},"body":{"components/HomeComponent.html":{}}}],["dynam",{"_index":1302,"title":{},"body":{"dependencies.html":{}}}],["eas",{"_index":1477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["easi",{"_index":965,"title":{},"body":{"injectables/GoogleService.html":{},"miscellaneous/variables.html":{}}}],["easier",{"_index":1225,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["edit",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["editconfig",{"_index":589,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["editconfig(configid",{"_index":424,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["editconfigmodalcompon",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editconfigpagecompon",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editingconfig",{"_index":656,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["effect",{"_index":1227,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["element",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["element.id",{"_index":1073,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["email",{"_index":777,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["engin",{"_index":1517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enter",{"_index":1471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entrycompon",{"_index":629,"title":{},"body":{"modules/ConfigModule.html":{}}}],["enum",{"_index":811,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["enumer",{"_index":1320,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environments/environment.prod",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":394,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{}}}],["event",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/FolderCreationComponent.html":{},"license.html":{}}}],["event.check",{"_index":905,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["event.url",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["eventemitt",{"_index":871,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["exampl",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/ConfigComponent.html":{},"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["exclud",{"_index":779,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"injectables/SorterService.html":{}}}],["excludesown",{"_index":746,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["excludesowner(email",{"_index":773,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["excludetyp",{"_index":747,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["excludetype(mimetyp",{"_index":780,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["exclus",{"_index":776,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["execute(resp",{"_index":1007,"title":{},"body":{"injectables/GoogleService.html":{}}}],["export",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"overview.html":{}}}],["express",{"_index":1416,"title":{},"body":{"license.html":{}}}],["extend",{"_index":1106,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["fabanim",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["faccoldi",{"_index":1333,"title":{},"body":{"index.html":{}}}],["fadeoutin",{"_index":1246,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["fals",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"injectables/SorterService.html":{},"miscellaneous/variables.html":{}}}],["featur",{"_index":1350,"title":{},"body":{"index.html":{}}}],["fernando",{"_index":1329,"title":{},"body":{"index.html":{}}}],["field",{"_index":708,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{}}}],["file.id",{"_index":1190,"title":{},"body":{"injectables/SorterService.html":{}}}],["file.parents.join",{"_index":1019,"title":{},"body":{"injectables/GoogleService.html":{}}}],["fileid",{"_index":935,"title":{},"body":{"injectables/GoogleService.html":{}}}],["fileresourc",{"_index":1011,"title":{},"body":{"injectables/GoogleService.html":{}}}],["fileresource['par",{"_index":1013,"title":{},"body":{"injectables/GoogleService.html":{}}}],["files(id",{"_index":709,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["finish",{"_index":856,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["firstgroupnam",{"_index":489,"title":{},"body":{"classes/ConfigBuilder.html":{},"injectables/DatabaseService.html":{}}}],["firstgrouprul",{"_index":478,"title":{},"body":{"classes/ConfigBuilder.html":{},"injectables/DatabaseService.html":{}}}],["fit",{"_index":1419,"title":{},"body":{"license.html":{}}}],["fix",{"_index":1474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["folder",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"miscellaneous/enumerations.html":{}}}],["folder.parent.folderid",{"_index":907,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["folder[attribute].typ",{"_index":911,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["folder[attribute].value.length",{"_index":912,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["foldercr",{"_index":485,"title":{"interfaces/FolderCreation.html":{}},"body":{"classes/ConfigBuilder.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"coverage.html":{}}}],["foldercreationcompon",{"_index":196,"title":{"components/FolderCreationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["folderid",{"_index":581,"title":{},"body":{"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"interfaces/RuleInterface.html":{},"miscellaneous/variables.html":{}}}],["foldernamebuild",{"_index":470,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["foldernamebuilder(createfolderconfig",{"_index":484,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["folderpick",{"_index":919,"title":{},"body":{"injectables/GoogleService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["folderpicked(data",{"_index":970,"title":{},"body":{"injectables/GoogleService.html":{},"miscellaneous/functions.html":{}}}],["folderpickedlisten",{"_index":896,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["folderpickedlistener.unsubscrib",{"_index":902,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["folderpicker.setvisible(tru",{"_index":1003,"title":{},"body":{"injectables/GoogleService.html":{}}}],["follow",{"_index":1407,"title":{},"body":{"license.html":{}}}],["form",{"_index":820,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["formsmodul",{"_index":304,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["forroot",{"_index":326,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["forwardref",{"_index":1461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["free",{"_index":1353,"title":{},"body":{"index.html":{},"license.html":{}}}],["friendli",{"_index":1351,"title":{},"body":{"index.html":{}}}],["fulli",{"_index":1237,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["fulltext",{"_index":1149,"title":{},"body":{"injectables/SorterService.html":{}}}],["fulltextcontain",{"_index":748,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["fulltextcontains(text",{"_index":785,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["function",{"_index":679,"title":{"miscellaneous/functions.html":{}},"body":{"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"injectables/SorterService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["furnish",{"_index":1406,"title":{},"body":{"license.html":{}}}],["fustiont",{"_index":822,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["g",{"_index":1221,"title":{},"body":{"components/UnauthenticatedComponent.html":{},"index.html":{}}}],["gapi",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gapi.auth2.getauthinst",{"_index":981,"title":{},"body":{"injectables/GoogleService.html":{}}}],["gapi.client.dr",{"_index":1181,"title":{},"body":{"injectables/SorterService.html":{}}}],["gapi.client.drive.fil",{"_index":703,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{}}}],["gapi.client.drive.files.upd",{"_index":1016,"title":{},"body":{"injectables/GoogleService.html":{}}}],["gapi.client.init(config).then",{"_index":980,"title":{},"body":{"injectables/GoogleService.html":{}}}],["gapi.load('client:auth2",{"_index":976,"title":{},"body":{"injectables/GoogleService.html":{}}}],["gapi.load('pick",{"_index":987,"title":{},"body":{"injectables/GoogleService.html":{}}}],["gener",{"_index":765,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"index.html":{}}}],["generatenewconfig",{"_index":471,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["generatenewconfig(confignam",{"_index":488,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["geo",{"_index":1519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["geometri",{"_index":1504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get",{"_index":65,"title":{"index.html":{},"license.html":{},"todo.html":{}},"body":{"components/AppComponent.html":{},"injectables/GoogleService.html":{}}}],["getactiveconfig",{"_index":590,"title":{},"body":{"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{}}}],["getactiveconfig(configkey",{"_index":435,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["getauthstatu",{"_index":920,"title":{},"body":{"injectables/GoogleService.html":{}}}],["getconfig",{"_index":661,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["getconfig(configid",{"_index":677,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["getdialogwidth",{"_index":399,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["getdrivequeri",{"_index":1136,"title":{},"body":{"injectables/SorterService.html":{}}}],["getdrivequery(group",{"_index":1139,"title":{},"body":{"injectables/SorterService.html":{}}}],["getfileinfo",{"_index":921,"title":{},"body":{"injectables/GoogleService.html":{}}}],["getfileinfo(fileid",{"_index":933,"title":{},"body":{"injectables/GoogleService.html":{}}}],["getitem",{"_index":1499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getroutest",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["getroutestate(outlet",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["gettoken",{"_index":922,"title":{},"body":{"injectables/GoogleService.html":{}}}],["getuntitledfil",{"_index":1137,"title":{},"body":{"injectables/SorterService.html":{}}}],["getuntitledfiles(destin",{"_index":1141,"title":{},"body":{"injectables/SorterService.html":{}}}],["getvalu",{"_index":890,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["git",{"_index":1356,"title":{},"body":{"index.html":{}}}],["gitter",{"_index":1375,"title":{},"body":{"index.html":{}}}],["global",{"_index":1363,"title":{},"body":{"index.html":{}}}],["go",{"_index":280,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/HomeComponent.html":{},"injectables/PreventAuthGuardService.html":{}}}],["googl",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["google.picker.docsview(google.picker.viewid.fold",{"_index":989,"title":{},"body":{"injectables/GoogleService.html":{}}}],["google.picker.pickerbuild",{"_index":994,"title":{},"body":{"injectables/GoogleService.html":{}}}],["google/google.servic",{"_index":284,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{},"injectables/SorterService.html":{}}}],["googleinitinterv",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["googleservic",{"_index":17,"title":{"injectables/GoogleService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/PresetConfigComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gotoconfigpag",{"_index":1028,"title":{},"body":{"components/HomeComponent.html":{}}}],["grade",{"_index":1510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grant",{"_index":1389,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1435,"title":{},"body":{"modules.html":{}}}],["group",{"_index":483,"title":{},"body":{"classes/ConfigBuilder.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"interfaces/RuleInterface.html":{},"injectables/SorterService.html":{},"miscellaneous/variables.html":{}}}],["group.createfold",{"_index":512,"title":{},"body":{"classes/ConfigBuilder.html":{},"injectables/SorterService.html":{}}}],["group.createfolder.nam",{"_index":513,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["group.createfolder.name.value.length",{"_index":517,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["group.createfolder.par",{"_index":514,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["group.createfolder.parent.folderid",{"_index":1198,"title":{},"body":{"injectables/SorterService.html":{}}}],["group.createfolder.prefix",{"_index":515,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["group.createfolder.suffix",{"_index":516,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["group.destin",{"_index":1086,"title":{},"body":{"components/PresetConfigComponent.html":{},"injectables/SorterService.html":{}}}],["group.destination.folderid",{"_index":1191,"title":{},"body":{"injectables/SorterService.html":{}}}],["group.destination.presetid",{"_index":1085,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["group.rules.foreach(rul",{"_index":1092,"title":{},"body":{"components/PresetConfigComponent.html":{},"injectables/SorterService.html":{}}}],["group.source.renameuntitl",{"_index":1192,"title":{},"body":{"injectables/SorterService.html":{}}}],["group['id",{"_index":1091,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["groupfolderinterfac",{"_index":476,"title":{"interfaces/GroupFolderInterface.html":{}},"body":{"classes/ConfigBuilder.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"injectables/SorterService.html":{},"coverage.html":{}}}],["groupinterfac",{"_index":586,"title":{"interfaces/GroupInterface.html":{}},"body":{"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"injectables/SorterService.html":{},"coverage.html":{}}}],["groups.find(group",{"_index":1084,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["groups.foreach(group",{"_index":1090,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["guard.servic",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigRoutingModule.html":{}}}],["guard.service.t",{"_index":270,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{},"coverage.html":{}}}],["guard.service.ts:13",{"_index":276,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["guard.service.ts:21",{"_index":283,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["guard.service.ts:28",{"_index":277,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["guard.service.ts:47",{"_index":1120,"title":{},"body":{"injectables/PreventAuthGuardService.html":{}}}],["guard.service.ts:55",{"_index":1122,"title":{},"body":{"injectables/PreventAuthGuardService.html":{}}}],["guard.service.ts:62",{"_index":1121,"title":{},"body":{"injectables/PreventAuthGuardService.html":{}}}],["hammerj",{"_index":1308,"title":{},"body":{"dependencies.html":{}}}],["hanafi",{"_index":1342,"title":{},"body":{"index.html":{}}}],["handl",{"_index":282,"title":{},"body":{"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"injectables/PreventAuthGuardService.html":{}}}],["hasown",{"_index":749,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["hasowner(email",{"_index":792,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["height",{"_index":1492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["herebi",{"_index":1388,"title":{},"body":{"license.html":{}}}],["high",{"_index":1508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hold",{"_index":955,"title":{},"body":{"injectables/GoogleService.html":{}}}],["holder",{"_index":1424,"title":{},"body":{"license.html":{}}}],["home",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["home'},{'nam",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["home.component.html",{"_index":1025,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":1024,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecompon",{"_index":199,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthenticatedModule.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["html",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["https://github.com/brandoncravener/g",{"_index":1358,"title":{},"body":{"index.html":{}}}],["https://www.googleapis.com/auth/dr",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["https://www.googleapis.com/auth/drive.appdata",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["https://www.googleapis.com/discovery/v1/apis/drive/v3/rest",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["i",{"_index":1521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":501,"title":{},"body":{"classes/ConfigBuilder.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"interfaces/RuleInterface.html":{},"miscellaneous/variables.html":{}}}],["identifi",{"_index":1242,"title":{},"body":{"coverage.html":{}}}],["ignor",{"_index":783,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["imageurl",{"_index":1512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implement",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"injectables/PreventAuthGuardService.html":{},"pipes/UnNamedPipe.html":{}}}],["impli",{"_index":1417,"title":{},"body":{"license.html":{}}}],["import",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{}}}],["inact",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["includ",{"_index":762,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"injectables/SorterService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["index",{"_index":25,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{}}}],["inform",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["inherit",{"_index":1108,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["init",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{}}}],["init(config",{"_index":938,"title":{},"body":{"injectables/GoogleService.html":{}}}],["initi",{"_index":942,"title":{},"body":{"injectables/GoogleService.html":{}}}],["inject",{"_index":268,"title":{"injectables/AuthGuardService.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"injectables/PreventAuthGuardService.html":{},"injectables/SorterService.html":{}},"body":{"injectables/AuthGuardService.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"injectables/PreventAuthGuardService.html":{},"injectables/SorterService.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":863,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["inputfold",{"_index":864,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["instal",{"_index":1354,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/ConfigComponent.html":{},"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"miscellaneous/variables.html":{}}}],["instanceof",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["integr",{"_index":1516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["interact",{"_index":915,"title":{},"body":{"injectables/GoogleService.html":{}}}],["interfac",{"_index":327,"title":{"interfaces/Config.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{}},"body":{"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["isactiveconfig",{"_index":1027,"title":{},"body":{"components/HomeComponent.html":{}}}],["isn't",{"_index":1213,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["ispag",{"_index":1056,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["issu",{"_index":1372,"title":{},"body":{"index.html":{}}}],["istem",{"_index":1503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ivan",{"_index":1336,"title":{},"body":{"index.html":{}}}],["jasmin",{"_index":1310,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":1306,"title":{},"body":{"dependencies.html":{}}}],["jsonconfigur",{"_index":587,"title":{"interfaces/JSONConfiguration.html":{}},"body":{"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"coverage.html":{}}}],["key",{"_index":330,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":1415,"title":{},"body":{"license.html":{}}}],["label",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["land",{"_index":1479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lane",{"_index":1332,"title":{},"body":{"index.html":{}}}],["lastmodifi",{"_index":1172,"title":{},"body":{"injectables/SorterService.html":{}}}],["lastopen",{"_index":1167,"title":{},"body":{"injectables/SorterService.html":{}}}],["leav",{"_index":1472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legend",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"overview.html":{}}}],["liabil",{"_index":1428,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":1425,"title":{},"body":{"license.html":{}}}],["licens",{"_index":1381,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["limit",{"_index":1397,"title":{},"body":{"license.html":{}}}],["link.label",{"_index":177,"title":{},"body":{"components/AppComponent.html":{}}}],["list",{"_index":349,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{}}}],["list'},{'nam",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["list.compon",{"_index":299,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["list.component.html",{"_index":350,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["list.component.scss",{"_index":351,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["list.component.t",{"_index":329,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"coverage.html":{}}}],["list.component.ts:120",{"_index":597,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:131",{"_index":601,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:152",{"_index":602,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:163",{"_index":595,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:185",{"_index":594,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:192",{"_index":603,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:196",{"_index":596,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:200",{"_index":599,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:211",{"_index":571,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["list.component.ts:213",{"_index":572,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["list.component.ts:214",{"_index":570,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["list.component.ts:218",{"_index":573,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["list.component.ts:222",{"_index":574,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["list.component.ts:226",{"_index":575,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["list.component.ts:231",{"_index":576,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["list.component.ts:32",{"_index":613,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:34",{"_index":604,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:35",{"_index":611,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:36",{"_index":609,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:37",{"_index":614,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:38",{"_index":606,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:39",{"_index":605,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:41",{"_index":608,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:42",{"_index":610,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:43",{"_index":607,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:44",{"_index":593,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:54",{"_index":600,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:70",{"_index":598,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list/config",{"_index":298,"title":{},"body":{"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"coverage.html":{}}}],["listen",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["listfil",{"_index":923,"title":{},"body":{"injectables/GoogleService.html":{}}}],["listfiles(queri",{"_index":943,"title":{},"body":{"injectables/GoogleService.html":{}}}],["liter",{"_index":850,"title":{},"body":{"interfaces/FolderCreation.html":{}}}],["load",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{}}}],["loadconfig",{"_index":568,"title":{},"body":{"classes/ConfigDataSource.html":{},"injectables/SorterService.html":{}}}],["loadconfig(cb",{"_index":1143,"title":{},"body":{"injectables/SorterService.html":{}}}],["loadconfigs(pag",{"_index":454,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["loaderremov",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["loadingsubject",{"_index":442,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["loadingsubscript",{"_index":358,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["localconfig",{"_index":504,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["localconfig.groups.push",{"_index":505,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["log",{"_index":1219,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["login",{"_index":1216,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["logo",{"_index":1344,"title":{},"body":{"index.html":{}}}],["logo.png",{"_index":1514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["made",{"_index":1343,"title":{},"body":{"index.html":{}}}],["main",{"_index":1323,"title":{},"body":{"index.html":{}}}],["major",{"_index":1377,"title":{},"body":{"index.html":{}}}],["make",{"_index":1234,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["manag",{"_index":1371,"title":{},"body":{"index.html":{}}}],["manager/develop",{"_index":1328,"title":{},"body":{"index.html":{}}}],["map",{"_index":824,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["matbuttonmodul",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["matcardmodul",{"_index":308,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["match",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["matdatepick",{"_index":309,"title":{},"body":{"modules/AuthenticatedModule.html":{}}}],["matdatepickermodul",{"_index":310,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["matdialog",{"_index":341,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["matdialogcont",{"_index":311,"title":{},"body":{"modules/AuthenticatedModule.html":{}}}],["matdialogmodul",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{}}}],["matexpansionmodul",{"_index":312,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["matformfieldmodul",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["matgridlistmodul",{"_index":313,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["maticonmodul",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["matinputmodul",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["matlistmodul",{"_index":314,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["matmenumodul",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["matnativedatemodul",{"_index":315,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["matpagin",{"_index":342,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{}}}],["matpaginatormodul",{"_index":316,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["matprogressbarmodul",{"_index":633,"title":{},"body":{"modules/ConfigModule.html":{}}}],["matprogressspinnermodul",{"_index":634,"title":{},"body":{"modules/ConfigModule.html":{}}}],["matselectmodul",{"_index":317,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["matslidetogglechang",{"_index":879,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["matslidetogglemodul",{"_index":635,"title":{},"body":{"modules/ConfigModule.html":{}}}],["matsnackbar",{"_index":868,"title":{},"body":{"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{}}}],["matsnackbarmodul",{"_index":318,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["matsteppermodul",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["mattabl",{"_index":343,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["mattabledatasourc",{"_index":344,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["mattablemodul",{"_index":319,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["mattabsmodul",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodul",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["mattooltipmodul",{"_index":320,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["maxheight",{"_index":412,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["memberof",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"components/ConfigComponent.html":{},"modules/ConfigModule.html":{},"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["merchant",{"_index":1418,"title":{},"body":{"license.html":{}}}],["merg",{"_index":1399,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{}}}],["method",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{}}}],["mimetyp",{"_index":784,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{}}}],["miscellan",{"_index":1319,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1383,"title":{},"body":{"index.html":{},"license.html":{}}}],["mock",{"_index":1290,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["modal'},{'nam",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["modal.compon",{"_index":302,"title":{},"body":{"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{}}}],["modal.component.t",{"_index":1257,"title":{},"body":{"coverage.html":{}}}],["modal/config",{"_index":301,"title":{},"body":{"modules/AuthenticatedModule.html":{},"components/ConfigComponent.html":{},"modules/ConfigModule.html":{},"coverage.html":{}}}],["modal/edit",{"_index":340,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"coverage.html":{}}}],["modifi",{"_index":796,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"license.html":{}}}],["modifiedaft",{"_index":750,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["modifiedafter(d",{"_index":794,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["modifiedafter(rule.data.firstd",{"_index":1175,"title":{},"body":{"injectables/SorterService.html":{}}}],["modifiedbefor",{"_index":751,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["modifiedbefore(d",{"_index":797,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["modifiedbefore(rule.data.secondd",{"_index":1176,"title":{},"body":{"injectables/SorterService.html":{}}}],["modifiedtim",{"_index":848,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["modul",{"_index":215,"title":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"injectables/GoogleService.html":{},"modules.html":{},"overview.html":{}}}],["modules/authenticated/authenticated.modul",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/config/config.modul",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["modulewithprovid",{"_index":321,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["more",{"_index":1240,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["more_vert",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["movefil",{"_index":924,"title":{},"body":{"injectables/GoogleService.html":{}}}],["movefile(fileid",{"_index":945,"title":{},"body":{"injectables/GoogleService.html":{}}}],["much",{"_index":1239,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["multi",{"_index":1462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["namecontain",{"_index":752,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["namecontains('untitl",{"_index":1179,"title":{},"body":{"injectables/SorterService.html":{}}}],["namecontains(str",{"_index":799,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["named.pip",{"_index":641,"title":{},"body":{"modules/ConfigModule.html":{}}}],["named.pipe.t",{"_index":1204,"title":{},"body":{"pipes/UnNamedPipe.html":{},"coverage.html":{}}}],["named.pipe.ts:7",{"_index":1209,"title":{},"body":{"pipes/UnNamedPipe.html":{}}}],["nameexclud",{"_index":753,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["nameexcludes(str",{"_index":802,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["namingopt",{"_index":857,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["navigationend",{"_index":114,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationstart",{"_index":115,"title":{},"body":{"components/AppComponent.html":{}}}],["necessari",{"_index":1349,"title":{},"body":{"index.html":{}}}],["need",{"_index":789,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"index.html":{}}}],["never",{"_index":1224,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["new",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newconfig",{"_index":688,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["newconfigid",{"_index":393,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["newconfigpagecompon",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["newfolderid",{"_index":1201,"title":{},"body":{"injectables/SorterService.html":{}}}],["newfoldernam",{"_index":1195,"title":{},"body":{"injectables/SorterService.html":{}}}],["newgroupdestin",{"_index":475,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["newgroupnam",{"_index":474,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["newgroupsourc",{"_index":477,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["newrulesteppercompon",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":1365,"title":{},"body":{"index.html":{}}}],["ng_value_accessor",{"_index":1459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngafterviewinit",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{}}}],["ngmodul",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{}}}],["ngondestroy",{"_index":436,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["ngoninit",{"_index":367,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["ngzone",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{}}}],["noconfig",{"_index":362,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["none",{"_index":885,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["noninfring",{"_index":1422,"title":{},"body":{"license.html":{}}}],["notic",{"_index":1410,"title":{},"body":{"license.html":{}}}],["now",{"_index":1050,"title":{},"body":{"components/HomeComponent.html":{}}}],["null",{"_index":583,"title":{},"body":{"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":356,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["numberconfig",{"_index":662,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["numconfig",{"_index":372,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["numnon",{"_index":909,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["object",{"_index":939,"title":{},"body":{"injectables/GoogleService.html":{},"miscellaneous/variables.html":{}}}],["observ",{"_index":345,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/GoogleService.html":{}}}],["obtain",{"_index":1392,"title":{},"body":{"license.html":{}}}],["ok",{"_index":1046,"title":{},"body":{"components/HomeComponent.html":{}}}],["oldpages",{"_index":355,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["om1dhhvv5d9npas7jj02mbtvi5mjksmo.apps.googleusercontent.com",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["on",{"_index":620,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["ondestroy",{"_index":331,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["oninit",{"_index":332,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["opac",{"_index":1475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["open",{"_index":556,"title":{},"body":{"components/ConfigComponent.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"index.html":{}}}],["openconfigmod",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["openconfigmodalfunc",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["openconfigmodallisten",{"_index":541,"title":{},"body":{"components/ConfigComponent.html":{}}}],["openedaft",{"_index":754,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["openedafter(d",{"_index":804,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["openedafter(rule.data.firstd",{"_index":1170,"title":{},"body":{"injectables/SorterService.html":{}}}],["openedbefor",{"_index":755,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["openedbefore(d",{"_index":807,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["openedbefore(rule.data.secondd",{"_index":1171,"title":{},"body":{"injectables/SorterService.html":{}}}],["openfilepick",{"_index":925,"title":{},"body":{"injectables/GoogleService.html":{}}}],["openfolderpick",{"_index":861,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["opennewconfigdialog",{"_index":542,"title":{},"body":{"components/ConfigComponent.html":{}}}],["openpreset",{"_index":406,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["option",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["option.nam",{"_index":913,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["organ",{"_index":1223,"title":{},"body":{"components/UnauthenticatedComponent.html":{},"index.html":{}}}],["otherwis",{"_index":1431,"title":{},"body":{"license.html":{}}}],["out",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"injectables/GoogleService.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["outlet",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["outlet.activatedroutedata.st",{"_index":173,"title":{},"body":{"components/AppComponent.html":{}}}],["output",{"_index":865,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["outputstr",{"_index":523,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["overview",{"_index":1437,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":775,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{}}}],["packag",{"_index":1295,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":281,"title":{},"body":{"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"miscellaneous/variables.html":{}}}],["page'},{'nam",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["page.compon",{"_index":632,"title":{},"body":{"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{}}}],["page.component.t",{"_index":1105,"title":{},"body":{"components/PresetConfigPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:10",{"_index":1112,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["page.component.ts:12",{"_index":1107,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["page/edit",{"_index":631,"title":{},"body":{"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"coverage.html":{}}}],["page/new",{"_index":637,"title":{},"body":{"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"coverage.html":{}}}],["page/preset",{"_index":643,"title":{},"body":{"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"components/PresetConfigPageComponent.html":{},"coverage.html":{}}}],["pages",{"_index":448,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["pagin",{"_index":353,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["paginatorsubscript",{"_index":359,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["param",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"injectables/PreventAuthGuardService.html":{},"components/UnauthenticatedComponent.html":{}}}],["paramet",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":582,"title":{},"body":{"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{}}}],["parentfolderid",{"_index":760,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["parentfolderisroot",{"_index":858,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["particular",{"_index":1420,"title":{},"body":{"license.html":{}}}],["pass",{"_index":382,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["path",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"modules/ConfigRoutingModule.html":{}}}],["permiss",{"_index":1387,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1405,"title":{},"body":{"license.html":{}}}],["person",{"_index":1391,"title":{},"body":{"license.html":{}}}],["phi",{"_index":1520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["photo",{"_index":826,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["physic",{"_index":1515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pick",{"_index":972,"title":{},"body":{"injectables/GoogleService.html":{}}}],["pickedfold",{"_index":898,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["pickedfolder.id",{"_index":900,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["pickedfolder.nam",{"_index":901,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["picker",{"_index":988,"title":{},"body":{"injectables/GoogleService.html":{}}}],["pipe",{"_index":1202,"title":{"pipes/UnNamedPipe.html":{}},"body":{"pipes/UnNamedPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipes/un",{"_index":640,"title":{},"body":{"modules/ConfigModule.html":{}}}],["pipetransform",{"_index":1210,"title":{},"body":{"pipes/UnNamedPipe.html":{}}}],["pleas",{"_index":1378,"title":{},"body":{"index.html":{}}}],["popup",{"_index":951,"title":{},"body":{"injectables/GoogleService.html":{}}}],["portion",{"_index":1413,"title":{},"body":{"license.html":{}}}],["posit",{"_index":1473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix",{"_index":584,"title":{},"body":{"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{}}}],["present",{"_index":828,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["preset",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["preset.categori",{"_index":1103,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["preset.descript",{"_index":1104,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["preset.nam",{"_index":1102,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["presetconfigcompon",{"_index":205,"title":{"components/PresetConfigComponent.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["presetconfigcomponent:17",{"_index":1113,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["presetconfigcomponent:19",{"_index":1114,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["presetconfigcomponent:21",{"_index":1116,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["presetconfigcomponent:22",{"_index":1117,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["presetconfigcomponent:23",{"_index":1115,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["presetconfigcomponent:26",{"_index":1119,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["presetconfigcomponent:27",{"_index":1118,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["presetconfigcomponent:33",{"_index":1111,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["presetconfigcomponent:35",{"_index":1110,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["presetconfigcomponent:39",{"_index":1109,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["presetconfigpagecompon",{"_index":207,"title":{"components/PresetConfigPageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["presetid",{"_index":1061,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"miscellaneous/variables.html":{}}}],["presets.find(el",{"_index":1072,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["prevent",{"_index":271,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{}}}],["preventauthguardservic",{"_index":228,"title":{"injectables/PreventAuthGuardService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{},"coverage.html":{},"overview.html":{}}}],["prevpar",{"_index":1018,"title":{},"body":{"injectables/GoogleService.html":{}}}],["privat",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{}}}],["problem",{"_index":1099,"title":{},"body":{"components/PresetConfigComponent.html":{},"index.html":{}}}],["product",{"_index":1463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":1327,"title":{},"body":{"index.html":{}}}],["promis",{"_index":668,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{}}}],["promise((resolv",{"_index":719,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"injectables/SorterService.html":{}}}],["properti",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{}}}],["provid",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/UnauthenticatedComponent.html":{},"index.html":{}}}],["publish",{"_index":1400,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":1421,"title":{},"body":{"license.html":{}}}],["q",{"_index":704,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{}}}],["quarter",{"_index":1522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["quartersarray",{"_index":1274,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["queri",{"_index":739,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"injectables/SorterService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["query'",{"_index":743,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["quick",{"_index":1228,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["reactiveformsmodul",{"_index":305,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["refer",{"_index":966,"title":{},"body":{"injectables/GoogleService.html":{},"miscellaneous/variables.html":{}}}],["refresh",{"_index":616,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["refreshconfig",{"_index":423,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["regist",{"_index":324,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["reject",{"_index":720,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"injectables/SorterService.html":{}}}],["reject('no",{"_index":734,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["reject(resp.err",{"_index":1014,"title":{},"body":{"injectables/GoogleService.html":{}}}],["reject(resp.error",{"_index":1187,"title":{},"body":{"injectables/SorterService.html":{}}}],["relat",{"_index":1339,"title":{},"body":{"index.html":{}}}],["removeitem",{"_index":1502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["removepar",{"_index":1021,"title":{},"body":{"injectables/GoogleService.html":{}}}],["renam",{"_index":1445,"title":{},"body":{"todo.html":{}}}],["renamefil",{"_index":926,"title":{},"body":{"injectables/GoogleService.html":{}}}],["renamefile(fileid",{"_index":948,"title":{},"body":{"injectables/GoogleService.html":{}}}],["renameuntitl",{"_index":580,"title":{},"body":{"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{}}}],["report",{"_index":1379,"title":{},"body":{"index.html":{}}}],["repositionscrollstrategi",{"_index":552,"title":{},"body":{"components/ConfigComponent.html":{}}}],["repositori",{"_index":1374,"title":{},"body":{"index.html":{}}}],["requestsreciv",{"_index":1078,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["requestss",{"_index":1077,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["requir",{"_index":768,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requirestyp",{"_index":756,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["requirestype(mimetyp",{"_index":809,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["reset",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"overview.html":{}}}],["resolv",{"_index":722,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"injectables/SorterService.html":{}}}],["resolve(0",{"_index":736,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["resolve(resp.id",{"_index":1015,"title":{},"body":{"injectables/GoogleService.html":{}}}],["resolve(this.configuration.activeconfig",{"_index":733,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["resolve(this.configuration.configs.length",{"_index":735,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["resourc",{"_index":714,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{}}}],["resp",{"_index":1185,"title":{},"body":{"injectables/SorterService.html":{}}}],["resp.err",{"_index":1009,"title":{},"body":{"injectables/GoogleService.html":{}}}],["resp.error",{"_index":1186,"title":{},"body":{"injectables/SorterService.html":{}}}],["resp.files.foreach(fil",{"_index":1188,"title":{},"body":{"injectables/SorterService.html":{}}}],["response.result.files.length",{"_index":711,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["response.result.files[0].id",{"_index":713,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["response.result.id",{"_index":715,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["rest",{"_index":1231,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["restrict",{"_index":1396,"title":{},"body":{"license.html":{}}}],["result",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["retriv",{"_index":387,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["return",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"miscellaneous/variables.html":{}}}],["right",{"_index":1398,"title":{},"body":{"license.html":{}}}],["rlasaf",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["root",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"miscellaneous/variables.html":{}}}],["root'},{'nam",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["roottogglechang",{"_index":862,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["roottogglechange(ev",{"_index":878,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["rout",{"_index":67,"title":{"routes.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/ConfigRoutingModule.html":{},"injectables/PreventAuthGuardService.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{}}}],["routeranim",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routermodul",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigRoutingModule.html":{}}}],["routermodule.forchild(rout",{"_index":651,"title":{},"body":{"modules/ConfigRoutingModule.html":{}}}],["routermodule.forroot(approut",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.modul",{"_index":644,"title":{},"body":{"modules/ConfigModule.html":{}}}],["routing.module.t",{"_index":646,"title":{},"body":{"modules/ConfigRoutingModule.html":{}}}],["rule",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rule.classifi",{"_index":522,"title":{},"body":{"classes/ConfigBuilder.html":{},"injectables/SorterService.html":{}}}],["rule.constraint",{"_index":521,"title":{},"body":{"classes/ConfigBuilder.html":{},"injectables/SorterService.html":{}}}],["rule.data",{"_index":520,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["rule.data.filetyp",{"_index":1155,"title":{},"body":{"injectables/SorterService.html":{}}}],["rule.data.own",{"_index":1158,"title":{},"body":{"injectables/SorterService.html":{}}}],["rule.data.titl",{"_index":1152,"title":{},"body":{"injectables/SorterService.html":{}}}],["rule.id",{"_index":519,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["rule.nam",{"_index":518,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["rule['id",{"_index":1093,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["ruleinterfac",{"_index":479,"title":{"interfaces/RuleInterface.html":{}},"body":{"classes/ConfigBuilder.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"coverage.html":{}}}],["run",{"_index":1355,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"components/PresetConfigComponent.html":{},"dependencies.html":{}}}],["scale(0",{"_index":1466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scale(1",{"_index":1467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["school",{"_index":1506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scope",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["screen",{"_index":1488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["script",{"_index":830,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["sdk",{"_index":842,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["search",{"_index":761,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["select",{"_index":538,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"components/SettingsComponent.html":{}}}],["selector",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["sell",{"_index":1404,"title":{},"body":{"license.html":{}}}],["serv",{"_index":1366,"title":{},"body":{"index.html":{}}}],["servic",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/GoogleService.html":{},"injectables/PreventAuthGuardService.html":{},"components/UnauthenticatedComponent.html":{}}}],["services/auth/auth",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigRoutingModule.html":{}}}],["services/database/database.servic",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/SettingsComponent.html":{}}}],["services/google/google.servic",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/PresetConfigComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["services/sorter/sorter.servic",{"_index":323,"title":{},"body":{"modules/AuthenticatedModule.html":{},"components/HomeComponent.html":{}}}],["set",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/SettingsComponent.html":{}}}],["setactiveconfig",{"_index":591,"title":{},"body":{"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{}}}],["setactiveconfig(configid",{"_index":684,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["setactiveconfig(configkey",{"_index":433,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["setappid(362606538820",{"_index":996,"title":{},"body":{"injectables/GoogleService.html":{}}}],["setcallback(folderpick",{"_index":1002,"title":{},"body":{"injectables/GoogleService.html":{}}}],["setdeveloperkey('aizasyb",{"_index":999,"title":{},"body":{"injectables/GoogleService.html":{}}}],["setincludefolders(tru",{"_index":990,"title":{},"body":{"injectables/GoogleService.html":{}}}],["setinterv",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{}}}],["setitem",{"_index":1501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setoauthtoken",{"_index":997,"title":{},"body":{"injectables/GoogleService.html":{}}}],["setownedbyme(tru",{"_index":993,"title":{},"body":{"injectables/GoogleService.html":{}}}],["setparent('root",{"_index":992,"title":{},"body":{"injectables/GoogleService.html":{}}}],["setselectablemimetypes('application/vnd.googl",{"_index":1000,"title":{},"body":{"injectables/GoogleService.html":{}}}],["setselectfolderenabled(tru",{"_index":991,"title":{},"body":{"injectables/GoogleService.html":{}}}],["settimeout",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["settimeout(_",{"_index":396,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{}}}],["settings'},{'nam",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["settings.component.html",{"_index":1125,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.scss",{"_index":1124,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings_pow",{"_index":617,"title":{},"body":{"components/ConfigListComponent.html":{},"components/HomeComponent.html":{}}}],["settingscompon",{"_index":208,"title":{"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthenticatedModule.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["shall",{"_index":1411,"title":{},"body":{"license.html":{}}}],["shared/config",{"_index":551,"title":{},"body":{"components/ConfigComponent.html":{}}}],["shared/edit",{"_index":339,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["shown",{"_index":536,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["sign",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleService.html":{}}}],["signin",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleService.html":{}}}],["signout",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleService.html":{}}}],["simplist",{"_index":1233,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["site",{"_index":832,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["slidedown",{"_index":1248,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["slideleft",{"_index":1249,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["slideright",{"_index":1250,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["small",{"_index":1487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["snackbar",{"_index":867,"title":{},"body":{"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{}}}],["softwar",{"_index":1334,"title":{},"body":{"index.html":{},"license.html":{}}}],["solv",{"_index":1345,"title":{},"body":{"index.html":{}}}],["sort",{"_index":884,"title":{},"body":{"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{}}}],["sorter",{"_index":1222,"title":{},"body":{"components/UnauthenticatedComponent.html":{},"index.html":{}}}],["sorterservic",{"_index":292,"title":{"injectables/SorterService.html":{}},"body":{"modules/AuthenticatedModule.html":{},"components/HomeComponent.html":{},"injectables/SorterService.html":{},"coverage.html":{},"overview.html":{}}}],["sortusersdr",{"_index":1029,"title":{},"body":{"components/HomeComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"miscellaneous/variables.html":{}}}],["sourcefold",{"_index":490,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["sourceloc",{"_index":671,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["space",{"_index":706,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["spec\\.t",{"_index":1458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spreadsheet",{"_index":834,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["src/.../animations.t",{"_index":1450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.component.t",{"_index":1451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../database.service.t",{"_index":1454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../drive",{"_index":1321,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.prod.t",{"_index":1448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":1449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../google.service.t",{"_index":1322,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../jestglobalmocks.t",{"_index":1455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../new",{"_index":1447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../presets.t",{"_index":1456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../settings.component.t",{"_index":1453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../sorter.service.t",{"_index":1452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.t",{"_index":1446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/animations.t",{"_index":1244,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.ts:112",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:135",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:139",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:143",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:154",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:31",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:32",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:33",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:34",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:35",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:36",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:37",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:50",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/classes/config",{"_index":466,"title":{},"body":{"classes/ConfigBuilder.html":{},"coverage.html":{}}}],["src/app/classes/dr",{"_index":738,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/components/auth/unauthenticated/unauthenticated.component.t",{"_index":1212,"title":{},"body":{"components/UnauthenticatedComponent.html":{},"coverage.html":{}}}],["src/app/components/auth/unauthenticated/unauthenticated.component.ts:15",{"_index":1217,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["src/app/components/auth/unauthenticated/unauthenticated.component.ts:21",{"_index":1220,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["src/app/components/auth/unauthenticated/unauthenticated.component.ts:28",{"_index":1218,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["src/app/components/shared/config",{"_index":1256,"title":{},"body":{"coverage.html":{}}}],["src/app/components/shared/edit",{"_index":1259,"title":{},"body":{"coverage.html":{}}}],["src/app/components/shared/fold",{"_index":851,"title":{},"body":{"components/FolderCreationComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/new",{"_index":1262,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/tabs/config/config",{"_index":328,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"coverage.html":{}}}],["src/app/components/tabs/config/config.component.t",{"_index":535,"title":{},"body":{"components/ConfigComponent.html":{},"coverage.html":{}}}],["src/app/components/tabs/config/config.component.ts:22",{"_index":550,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/components/tabs/config/config.component.ts:24",{"_index":544,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/components/tabs/config/config.component.ts:37",{"_index":548,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/components/tabs/config/config.component.ts:46",{"_index":546,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/components/tabs/config/config.component.ts:50",{"_index":547,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/components/tabs/config/config.component.ts:54",{"_index":545,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/components/tabs/config/config.component.ts:65",{"_index":549,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/components/tabs/config/preset",{"_index":1052,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"coverage.html":{}}}],["src/app/components/tabs/config/presets.t",{"_index":1273,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/tabs/home/home.component.t",{"_index":1023,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/components/tabs/home/home.component.ts:20",{"_index":1035,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/tabs/home/home.component.ts:21",{"_index":1031,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/tabs/home/home.component.ts:40",{"_index":1033,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/tabs/home/home.component.ts:61",{"_index":1034,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/tabs/home/home.component.ts:69",{"_index":1032,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/tabs/settings/settings.component.t",{"_index":1123,"title":{},"body":{"components/SettingsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/tabs/settings/settings.component.ts:21",{"_index":1127,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/components/tabs/settings/settings.component.ts:31",{"_index":1128,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/components/tabs/settings/settings.component.ts:35",{"_index":1129,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/authenticated/authenticated.module.t",{"_index":293,"title":{},"body":{"modules/AuthenticatedModule.html":{}}}],["src/app/modules/config/config",{"_index":645,"title":{},"body":{"modules/ConfigRoutingModule.html":{}}}],["src/app/modules/config/config.module.t",{"_index":628,"title":{},"body":{"modules/ConfigModule.html":{}}}],["src/app/pipes/un",{"_index":1203,"title":{},"body":{"pipes/UnNamedPipe.html":{},"coverage.html":{}}}],["src/app/services/auth/auth",{"_index":269,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{},"coverage.html":{}}}],["src/app/services/database/database.service.t",{"_index":652,"title":{},"body":{"injectables/DatabaseService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/database/database.service.ts:109",{"_index":680,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:118",{"_index":675,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:125",{"_index":669,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:134",{"_index":685,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:138",{"_index":676,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:149",{"_index":681,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:153",{"_index":683,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:21",{"_index":690,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:22",{"_index":691,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:23",{"_index":698,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:27",{"_index":694,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:29",{"_index":693,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:30",{"_index":697,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:31",{"_index":695,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:32",{"_index":699,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:33",{"_index":700,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:34",{"_index":665,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:38",{"_index":682,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:68",{"_index":689,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:72",{"_index":673,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:92",{"_index":667,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:99",{"_index":687,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/google/google.service.t",{"_index":914,"title":{},"body":{"injectables/GoogleService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/google/google.service.ts:106",{"_index":947,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:116",{"_index":931,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:129",{"_index":950,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:138",{"_index":953,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:149",{"_index":936,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:153",{"_index":944,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:163",{"_index":934,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:178",{"_index":929,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:197",{"_index":949,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:211",{"_index":946,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:44",{"_index":954,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:51",{"_index":960,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:53",{"_index":927,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:69",{"_index":941,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/sorter/sorter.service.t",{"_index":1135,"title":{},"body":{"injectables/SorterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/sorter/sorter.service.ts:124",{"_index":1142,"title":{},"body":{"injectables/SorterService.html":{}}}],["src/app/services/sorter/sorter.service.ts:130",{"_index":1144,"title":{},"body":{"injectables/SorterService.html":{}}}],["src/app/services/sorter/sorter.service.ts:141",{"_index":1145,"title":{},"body":{"injectables/SorterService.html":{}}}],["src/app/services/sorter/sorter.service.ts:22",{"_index":1138,"title":{},"body":{"injectables/SorterService.html":{}}}],["src/app/services/sorter/sorter.service.ts:34",{"_index":1140,"title":{},"body":{"injectables/SorterService.html":{}}}],["src/environments/environment.prod.t",{"_index":1284,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":1285,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/interfaces.t",{"_index":577,"title":{},"body":{"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"coverage.html":{}}}],["src/jestglobalmocks.t",{"_index":1289,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.t",{"_index":1291,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":455,"title":{"index.html":{},"license.html":{},"todo.html":{}},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["state",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"modules/ConfigRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["statement",{"_index":1243,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":325,"title":{},"body":{"modules/AuthenticatedModule.html":{},"classes/ConfigBuilder.html":{},"modules/ConfigModule.html":{}}}],["statu",{"_index":932,"title":{},"body":{"injectables/GoogleService.html":{}}}],["stem",{"_index":1096,"title":{},"body":{"components/PresetConfigComponent.html":{},"miscellaneous/variables.html":{}}}],["stepper'},{'nam",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["stepper.compon",{"_index":639,"title":{},"body":{"modules/ConfigModule.html":{}}}],["stepper.component.t",{"_index":1264,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stepper/new",{"_index":638,"title":{},"body":{"modules/ConfigModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storag",{"_index":1498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storage[key",{"_index":1500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"interfaces/RuleInterface.html":{},"injectables/SorterService.html":{}}}],["style",{"_index":1465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["styleurl",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["subject",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["sublicens",{"_index":1402,"title":{},"body":{"license.html":{}}}],["subscrib",{"_index":958,"title":{},"body":{"injectables/GoogleService.html":{}}}],["subscribe(clos",{"_index":564,"title":{},"body":{"components/ConfigComponent.html":{}}}],["subscript",{"_index":346,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["substanti",{"_index":1412,"title":{},"body":{"license.html":{}}}],["success",{"_index":1182,"title":{},"body":{"injectables/SorterService.html":{}}}],["suffix",{"_index":585,"title":{},"body":{"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{}}}],["suitabl",{"_index":1235,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["suppli",{"_index":769,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["support",{"_index":1376,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1433,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":524,"title":{},"body":{"classes/ConfigBuilder.html":{},"injectables/SorterService.html":{},"miscellaneous/variables.html":{}}}],["tab",{"_index":537,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["tabl",{"_index":1294,"title":{},"body":{"coverage.html":{}}}],["tablecolumn",{"_index":364,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1293,"title":{},"body":{"coverage.html":{}}}],["tablink",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["tabsen",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["templateurl",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["test",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"miscellaneous/variables.html":{}}}],["tester",{"_index":1335,"title":{},"body":{"index.html":{}}}],["text",{"_index":527,"title":{},"body":{"classes/ConfigBuilder.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{}}}],["then(id",{"_index":1083,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["then(newfolderid",{"_index":1199,"title":{},"body":{"injectables/SorterService.html":{}}}],["then(respons",{"_index":710,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["thirdparti",{"_index":840,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["this._activeconfigchanged.asobserv",{"_index":692,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this._authstate.asobserv",{"_index":959,"title":{},"body":{"injectables/GoogleService.html":{}}}],["this._authstate.next(authinstance.issignedin.get",{"_index":983,"title":{},"body":{"injectables/GoogleService.html":{}}}],["this._authstate.next(authstatu",{"_index":986,"title":{},"body":{"injectables/GoogleService.html":{}}}],["this._closecommand.asobserv",{"_index":1065,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["this._closecommand.next(tru",{"_index":1071,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["this._configsubject.asobserv",{"_index":696,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this._configsubject.next(tru",{"_index":718,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.activeconfig",{"_index":389,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.activeconfigchangesubscript",{"_index":391,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.activeconfigchangesubscription.unsubscrib",{"_index":440,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.activeconfignam",{"_index":1039,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.appcomponent.openconfigmodal$.subscribe(open",{"_index":555,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.authent",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["this.calculatestart(pag",{"_index":456,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.clos",{"_index":1097,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["this.config",{"_index":1180,"title":{},"body":{"injectables/SorterService.html":{}}}],["this.config.groups.foreach(group",{"_index":1183,"title":{},"body":{"injectables/SorterService.html":{}}}],["this.configchangesubscript",{"_index":384,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.configchangesubscription.unsubscrib",{"_index":439,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.configid",{"_index":712,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.configs.findindex(config",{"_index":728,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.configs.slice(start",{"_index":457,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.configsubject.asobserv",{"_index":450,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.configsubject.complet",{"_index":452,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.configsubject.next(data",{"_index":463,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.configuration.activeconfig",{"_index":731,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.configuration.activeconfig.length",{"_index":732,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.configuration.config",{"_index":725,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.configuration.configs.foreach(config",{"_index":723,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.configuration.configs.push(config",{"_index":721,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.configuration.configs.push(newconfig",{"_index":717,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.configuration.configs.splice(configindex",{"_index":729,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.createconfigbuttonst",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["this.createfold",{"_index":893,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["this.createfolder.par",{"_index":899,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["this.creationen",{"_index":1079,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["this.databas",{"_index":1094,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["this.database.activeconfigchanged.subscrib",{"_index":392,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/SorterService.html":{}}}],["this.database.clearconfigs().catch(err",{"_index":1130,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.database.clearconfigs().then",{"_index":1131,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.database.configsubject.subscrib",{"_index":385,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.database.deleteconfig(configkey",{"_index":432,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.database.editingconfig",{"_index":425,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.database.getactiveconfig().then",{"_index":1037,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.database.getactiveconfig().then(activeconfig",{"_index":388,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/SorterService.html":{}}}],["this.database.getconfig",{"_index":369,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.database.getconfig(activeconfig",{"_index":1038,"title":{},"body":{"components/HomeComponent.html":{},"injectables/SorterService.html":{}}}],["this.database.init",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{}}}],["this.database.numberconfigs().then(numconfig",{"_index":371,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.database.setactiveconfig(configkey",{"_index":434,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.datasourc",{"_index":368,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.datasource.loadconfig",{"_index":379,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.datasource.loadconfigs(0",{"_index":381,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.datasource.loading$.subscrib",{"_index":398,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.dialog.open(configmodalcompon",{"_index":560,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.dialog.open(editconfigmodalcompon",{"_index":427,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.dialog.open(presetconfigcompon",{"_index":410,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.editingconfig",{"_index":724,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.finish",{"_index":895,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["this.getdialogwidth",{"_index":408,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.getfileinfo(fileid",{"_index":1017,"title":{},"body":{"injectables/GoogleService.html":{}}}],["this.googl",{"_index":1081,"title":{},"body":{"components/PresetConfigComponent.html":{},"injectables/SorterService.html":{}}}],["this.google.authstate$.subscribe(st",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["this.google.folderpicked$.subscrib",{"_index":897,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["this.google.getauthstatu",{"_index":286,"title":{},"body":{"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/PreventAuthGuardService.html":{}}}],["this.google.init",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["this.google.listfiles(this.getdrivequery(group",{"_index":1184,"title":{},"body":{"injectables/SorterService.html":{}}}],["this.google.listfiles(this.getuntitledfiles(group.sourc",{"_index":1193,"title":{},"body":{"injectables/SorterService.html":{}}}],["this.google.movefil",{"_index":1189,"title":{},"body":{"injectables/SorterService.html":{}}}],["this.google.movefile(file.id",{"_index":1200,"title":{},"body":{"injectables/SorterService.html":{}}}],["this.google.openfilepick",{"_index":904,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["this.google.renamefile(file.id",{"_index":1194,"title":{},"body":{"injectables/SorterService.html":{}}}],["this.google.signin",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["this.google.signout",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"components/SettingsComponent.html":{}}}],["this.init",{"_index":558,"title":{},"body":{"components/ConfigComponent.html":{},"injectables/DatabaseService.html":{}}}],["this.inputfold",{"_index":894,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["this.isactiveconfig",{"_index":1040,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.load",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.loadconfig",{"_index":1146,"title":{},"body":{"injectables/SorterService.html":{}}}],["this.loaderremov",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadingsubject.asobserv",{"_index":444,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.loadingsubject.complet",{"_index":453,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.loadingsubject.next(fals",{"_index":464,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.loadingsubject.next(tru",{"_index":458,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.loadingsubscript",{"_index":397,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.loadingsubscription.unsubscrib",{"_index":437,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.noconfig",{"_index":374,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.oldpages",{"_index":377,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.openconfigmodal.asobserv",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["this.openconfigmodal.next(tru",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["this.openconfigmodallisten",{"_index":554,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.openconfigmodallistener.unsubscrib",{"_index":559,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.opennewconfigdialog",{"_index":557,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.pagin",{"_index":370,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.paginator.length",{"_index":383,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.paginator.page.subscrib",{"_index":376,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.paginator.pageindex",{"_index":380,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.paginator.pages",{"_index":378,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.paginatorsubscript",{"_index":375,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.paginatorsubscription.unsubscrib",{"_index":438,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.parentfolderisroot",{"_index":906,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["this.queri",{"_index":843,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["this.refreshconfig",{"_index":386,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.rlasaf",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.events.subscribe(ev",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navig",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{}}}],["this.router.navigate(['/app/config/cr",{"_index":566,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.router.navigate(['/app/config/edit",{"_index":428,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.router.navigate(['/app/config/preset",{"_index":422,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.router.navigate(['/app/hom",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{}}}],["this.router.navigatebyurl('/app/config",{"_index":1049,"title":{},"body":{"components/HomeComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["this.setactiveconfig",{"_index":431,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.snackbar.open('googl",{"_index":1045,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.snackbar.open('ther",{"_index":1098,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["this.sorterservice.sort().then",{"_index":1044,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.tabsen",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["this.valid",{"_index":892,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["this.valueattributes.foreach(attribut",{"_index":910,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["this.zone.run",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{}}}],["titl",{"_index":1151,"title":{},"body":{"injectables/SorterService.html":{},"miscellaneous/variables.html":{}}}],["todo",{"_index":1443,"title":{"todo.html":{}},"body":{"todo.html":{}}}],["token",{"_index":937,"title":{},"body":{"injectables/GoogleService.html":{}}}],["tort",{"_index":1430,"title":{},"body":{"license.html":{}}}],["tracker",{"_index":1373,"title":{},"body":{"index.html":{}}}],["transform",{"_index":1206,"title":{},"body":{"pipes/UnNamedPipe.html":{},"miscellaneous/variables.html":{}}}],["transform(valu",{"_index":1207,"title":{},"body":{"pipes/UnNamedPipe.html":{}}}],["transit",{"_index":1480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('act",{"_index":1470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('appconfig",{"_index":1484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('appconfigcr",{"_index":1490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('appconfigedit",{"_index":1489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('appconfigpreset",{"_index":1491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('apphom",{"_index":1483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('appset",{"_index":1486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('inact",{"_index":1468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('land",{"_index":1481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatex",{"_index":1497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatex(0",{"_index":1496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatex(100",{"_index":1495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatey(0",{"_index":1494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatey(100",{"_index":1493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trash",{"_index":763,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["trashed=fals",{"_index":844,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["tri",{"_index":619,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["trigger('createconfigfabst",{"_index":1464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigger('routertransit",{"_index":1478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"injectables/SorterService.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["types/uuid",{"_index":1303,"title":{},"body":{"dependencies.html":{}}}],["unauthent",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["unauthenticated.component.html",{"_index":1215,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["unauthenticated.component.scss",{"_index":1214,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["unauthenticatedcompon",{"_index":210,"title":{"components/UnauthenticatedComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["undefin",{"_index":390,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{}}}],["under",{"_index":1382,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":836,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["unnam",{"_index":1205,"title":{},"body":{"pipes/UnNamedPipe.html":{}}}],["unnamedpip",{"_index":626,"title":{"pipes/UnNamedPipe.html":{}},"body":{"modules/ConfigModule.html":{},"pipes/UnNamedPipe.html":{},"coverage.html":{},"overview.html":{}}}],["untitl",{"_index":1444,"title":{},"body":{"todo.html":{}}}],["updat",{"_index":957,"title":{},"body":{"injectables/GoogleService.html":{}}}],["updateconfig",{"_index":663,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["updateconfig(newconfig",{"_index":686,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["updateconfigur",{"_index":664,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["us",{"_index":956,"title":{},"body":{"injectables/GoogleService.html":{},"components/UnauthenticatedComponent.html":{},"index.html":{},"license.html":{}}}],["useexist",{"_index":1460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":272,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/GoogleService.html":{},"injectables/PreventAuthGuardService.html":{},"components/UnauthenticatedComponent.html":{},"index.html":{}}}],["userid",{"_index":657,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["util",{"_index":740,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{}}}],["uuid",{"_index":499,"title":{},"body":{"classes/ConfigBuilder.html":{},"components/PresetConfigComponent.html":{},"dependencies.html":{}}}],["v4",{"_index":498,"title":{},"body":{"classes/ConfigBuilder.html":{},"components/PresetConfigComponent.html":{}}}],["valid",{"_index":507,"title":{},"body":{"classes/ConfigBuilder.html":{},"components/FolderCreationComponent.html":{}}}],["valu",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"interfaces/RuleInterface.html":{},"pipes/UnNamedPipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":1211,"title":{},"body":{"pipes/UnNamedPipe.html":{}}}],["valueattribut",{"_index":859,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["valuechang",{"_index":866,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["var",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{}}}],["variabl",{"_index":964,"title":{"miscellaneous/variables.html":{}},"body":{"injectables/GoogleService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["verifyconfig",{"_index":472,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["verifyconfig(config",{"_index":495,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["video",{"_index":838,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["view",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleService.html":{}}}],["view_list",{"_index":1226,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["viewchild",{"_index":333,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["viewchild(matpagin",{"_index":352,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["viewedbymetim",{"_index":849,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["visit",{"_index":1229,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["void",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{}}}],["warranti",{"_index":1414,"title":{},"body":{"license.html":{}}}],["way",{"_index":1347,"title":{},"body":{"index.html":{}}}],["web",{"_index":1315,"title":{},"body":{"dependencies.html":{}}}],["websit",{"_index":1230,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["whenev",{"_index":1348,"title":{},"body":{"index.html":{}}}],["whether",{"_index":279,"title":{},"body":{"injectables/AuthGuardService.html":{},"classes/DriveQueryBuilder.html":{},"injectables/PreventAuthGuardService.html":{},"license.html":{}}}],["width",{"_index":400,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"miscellaneous/variables.html":{}}}],["wilson",{"_index":1507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["window['gapi",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["without",{"_index":1395,"title":{},"body":{"license.html":{}}}],["work",{"_index":1232,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["workaround",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"miscellaneous/variables.html":{}}}],["yarn",{"_index":1362,"title":{},"body":{"index.html":{}}}],["ye",{"_index":930,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{}}}],["ye9ixt29vl_eau7bzvzv5qe17flfpzm",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleService.html":{}}}],["zon",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["zone",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{}}}],["zone.j",{"_index":1317,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Base application component.\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            GoogleService\n                \n            \n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authenticated\n                            \n                            \n                                    Public\n                                createConfigButtonState\n                            \n                            \n                                    Public\n                                loaded\n                            \n                            \n                                    Private\n                                loaderRemoved\n                            \n                            \n                                    Private\n                                openConfigModal\n                            \n                            \n                                    Public\n                                openConfigModal$\n                            \n                            \n                                    Public\n                                rlaSafe\n                            \n                            \n                                    Public\n                                tabLinks\n                            \n                            \n                                    Public\n                                tabsEnabled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRouteState\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                openConfigModalFunc\n                            \n                            \n                                signIn\n                            \n                            \n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(google: GoogleService, database: DatabaseService, router: Router, zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:50\n                            \n                        \n\n                \n                    \n                            Creates an instance of AppComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        google\n                                                  \n                                                        \n                                                                    GoogleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Declare the Google Service as google\n\n                                                        \n                                                \n                                                \n                                                        database\n                                                  \n                                                        \n                                                                    DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Declare the Router as router\n\n                                                        \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Declare NgZone as zon\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRouteState\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRouteState(outlet: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:154\n                            \n                        \n\n\n                \n                    \n                            Gets the current route information.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        outlet\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The route\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:112\n                            \n                        \n\n\n                \n                    \n                            Called after the view is initalized.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openConfigModalFunc\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenConfigModalFunc()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:143\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signIn\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignIn()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:139\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:135\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authenticated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authenticated:     Boolean\n\n                    \n                \n                    \n                        \n                            Type :     Boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            createConfigButtonState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        createConfigButtonState:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'inactive'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loaded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loaded:     Boolean\n\n                    \n                \n                    \n                        \n                            Type :     Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loaderRemoved\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loaderRemoved:     Boolean\n\n                    \n                \n                    \n                        \n                            Type :     Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            openConfigModal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        openConfigModal:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            openConfigModal$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        openConfigModal$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.openConfigModal.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rlaSafe\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rlaSafe:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tabLinks\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tabLinks:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      path: 'app/home',\n      label: 'Home'\n    },\n    {\n      path: 'app/config',\n      label: 'Configuration'\n    },\n    {\n      path: 'app/settings',\n      label: 'Settings'\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tabsEnabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tabsEnabled:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { AfterViewInit, Component, NgZone } from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { fabAnimation, routerAnimation } from '../animations';\nimport { GoogleService } from './services/google/google.service';\nimport { NavigationEnd, NavigationStart, Router } from '@angular/router';\nimport { DatabaseService } from './services/database/database.service';\n\n/**\n * Workaround for testing\n */\ndeclare var gapi: any;\n\n/**\n * Base application component.\n *\n * @export\n * @class AppComponent\n * @implements {AfterViewInit}\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  providers: [GoogleService],\n  animations: [routerAnimation, fabAnimation]\n})\nexport class AppComponent implements AfterViewInit {\n  private openConfigModal: Subject = new Subject();\n  private loaderRemoved: Boolean = false;\n\n  public tabsEnabled = true;\n  public loaded: Boolean = false;\n  public authenticated: Boolean;\n  public rlaSafe: boolean = false;\n  public createConfigButtonState: string = 'inactive';\n  public openConfigModal$ = this.openConfigModal.asObservable();\n  public tabLinks = [\n    {\n      path: 'app/home',\n      label: 'Home'\n    },\n    {\n      path: 'app/config',\n      label: 'Configuration'\n    },\n    {\n      path: 'app/settings',\n      label: 'Settings'\n    }\n  ];\n\n  /**\n   * Creates an instance of AppComponent.\n   * @param {GoogleService} google Declare the Google Service as google\n   * @param {Router} router Declare the Router as router\n   * @param {NgZone} zone  Declare NgZone as zon\n   * @memberof AppComponent\n   */\n  constructor(\n    private google: GoogleService,\n    private database: DatabaseService,\n    private router: Router,\n    private zone: NgZone\n  ) {\n    const googleInitInterval = setInterval(() => {\n      if (window['gapi']) {\n        this.google.init(\n          {\n            apiKey: 'AIzaSyB-yE9IXT29Vl_eAU7bzvzv5Qe17flfpzM',\n            clientId:\n              '362606538820-om1dhhvv5d9npas7jj02mbtvi5mjksmo.apps.googleusercontent.com',\n            discoveryDocs: [\n              'https://www.googleapis.com/discovery/v1/apis/drive/v3/rest'\n            ],\n            scope:\n              'https://www.googleapis.com/auth/drive https://www.googleapis.com/auth/drive.appdata'\n          },\n          () => {\n            console.debug('Google initalized.');\n          }\n        );\n        this.google.authState$.subscribe(state => {\n          if (!this.loaderRemoved) {\n            this.loaded = true;\n            setTimeout(() => {\n              document.getElementById('loader').remove();\n              this.loaderRemoved = true;\n            }, 500);\n          }\n          this.authenticated = state;\n          if (state) {\n            this.database.initalize();\n            this.zone.run(() => {\n              this.router.navigate(['/app/home']);\n            });\n          } else {\n            this.zone.run(() => {\n              this.router.navigate(['/']);\n            });\n          }\n        });\n        clearInterval(googleInitInterval);\n      }\n    }, 250);\n  }\n\n  /**\n   * Called after the view is initalized.\n   *\n   * @memberof AppComponent\n   */\n  public ngAfterViewInit() {\n    this.rlaSafe = true;\n    // Listen for route changes\n    this.router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        if (event.url === '/app/config') {\n          this.createConfigButtonState = 'active';\n        } else {\n          this.createConfigButtonState = 'inactive';\n        }\n        if (\n          event.url === '/app/config/create' ||\n          event.url === '/app/config/presets' ||\n          event.url === '/app/config/edit'\n        ) {\n          this.tabsEnabled = false;\n        } else {\n          this.tabsEnabled = true;\n        }\n      }\n    });\n  }\n\n  signOut() {\n    this.google.signOut();\n  }\n\n  signIn() {\n    this.google.signIn();\n  }\n\n  openConfigModalFunc() {\n    this.openConfigModal.next(true);\n  }\n\n  /**\n   * Gets the current route information.\n   *\n   * @param {any} outlet The route\n   * @returns\n   * @memberof AppComponent\n   */\n  getRouteState(outlet) {\n    return outlet.activatedRouteData.state;\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n    \n    \n  \n\n\n  \n    \n    \n      \n    \n    \n      \n        Sign Out\n      \n      \n        more_vert\n      \n      \n        Sign In\n      \n    \n  \n  \n    \n      \n        {{ link.label }}\n      \n    \n  \n\n\n  \n\n\n  add\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                          Sign Out                    more_vert                    Sign In                                {{ link.label }}                add'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'ConfigListComponent', 'selector': 'app-config-list'},{'name': 'ConfigModalComponent', 'selector': 'app-config-modal'},{'name': 'EditConfigModalComponent', 'selector': 'app-edit-config-modal'},{'name': 'EditConfigPageComponent', 'selector': 'app-edit-config-page'},{'name': 'FolderCreationComponent', 'selector': 'app-folder-creation'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NewConfigPageComponent', 'selector': 'app-new-rule-page'},{'name': 'NewRuleStepperComponent', 'selector': 'app-new-rule-stepper'},{'name': 'PresetConfigComponent', 'selector': 'app-preset-config'},{'name': 'PresetConfigPageComponent', 'selector': 'app-preset-config-page'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'UnauthenticatedComponent', 'selector': 'app-unauthenticated'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_AppComponent_providers\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nUnauthenticatedComponent\n\nUnauthenticatedComponent\n\nAppModule -->\n\nUnauthenticatedComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nGoogleService\n\nGoogleService\n\nAppComponent -->\n\nGoogleService->AppComponent\n\n\n\nAppModule -->\n\nGoogleService->AppModule\n\n\n\n\n\nAuthenticatedModule\n\nAuthenticatedModule\n\nAppModule -->\n\nAuthenticatedModule->AppModule\n\n\n\n\n\nConfigModule\n\nConfigModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nAuthGuardService\n\nAuthGuardService\n\nAppModule -->\n\nAuthGuardService->AppModule\n\n\n\n\n\nDatabaseService\n\nDatabaseService\n\nAppModule -->\n\nDatabaseService->AppModule\n\n\n\n\n\nPreventAuthGuardService\n\nPreventAuthGuardService\n\nAppModule -->\n\nPreventAuthGuardService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                UnauthenticatedComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthGuardService\n                            \n                            \n                                     DatabaseService\n                            \n                            \n                                     GoogleService\n                            \n                            \n                                     PreventAuthGuardService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AuthenticatedModule\n                            \n                            \n                                    ConfigModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { AppComponent } from './app.component';\nimport { appRoutes } from './app.routes';\nimport { AuthenticatedModule } from './modules/authenticated/authenticated.module';\nimport { AuthGuardService, PreventAuthGuardService } from './services/auth/auth-guard.service';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ConfigModule } from './modules/config/config.module';\nimport { environment } from '../environments/environment.prod';\nimport { FolderCreationComponent } from './components/shared/folder-creation/folder-creation.component';\nimport { GoogleService } from './services/google/google.service';\nimport { MatButtonModule } from '@angular/material/button';\nimport {\n  MatDialogModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatInputModule,\n  MatStepperModule,\n  MatToolbarModule\n  } from '@angular/material';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { UnauthenticatedComponent } from './components/auth/unauthenticated/unauthenticated.component';\nimport { DatabaseService } from './services/database/database.service';\n\n@NgModule({\n  declarations: [AppComponent, UnauthenticatedComponent],\n  imports: [\n    BrowserModule,\n    MatMenuModule,\n    MatIconModule,\n    MatTabsModule,\n    MatInputModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatToolbarModule,\n    ConfigModule.forRoot(),\n    BrowserAnimationsModule,\n    AuthenticatedModule.forRoot(),\n    RouterModule.forRoot(appRoutes),\n  ],\n  providers: [\n    DatabaseService,\n    GoogleService,\n    AuthGuardService,\n    PreventAuthGuardService,\n    AppComponent\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuardService.html":{"url":"injectables/AuthGuardService.html","title":"injectable - AuthGuardService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth/auth-guard.service.ts\n        \n\n            \n                Description\n            \n            \n                Prevent a user from accessing a route if they aren't authenticated.\n\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                google\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                zone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(google: GoogleService, router: Router, zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth/auth-guard.service.ts:13\n                            \n                        \n\n                \n                    \n                            Creates an instance of AuthGuardService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        google\n                                                  \n                                                        \n                                                                    GoogleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Declare the Google Service as google.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Declare the Router as router\n\n                                                        \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Declare NgZone as zone\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth/auth-guard.service.ts:28\n                            \n                        \n\n\n                \n                    \n                            Determines whether the user can go to the page and handle it.\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Whether or not the user can access the route\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            google\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        google:     GoogleService\n\n                    \n                \n                    \n                        \n                            Type :     GoogleService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth/auth-guard.service.ts:21\n                            \n                        \n\n                \n                    \n                        Declare the Google Service as google.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth/auth-guard.service.ts:21\n                            \n                        \n\n                \n                    \n                        Declare the Router as router\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            zone\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zone:     NgZone\n\n                    \n                \n                    \n                        \n                            Type :     NgZone\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth/auth-guard.service.ts:21\n                            \n                        \n\n                \n                    \n                        Declare NgZone as zone\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { CanActivate, Router } from '@angular/router';\nimport { GoogleService } from '../google/google.service';\nimport { Injectable, NgZone } from '@angular/core';\n\n/**\n * Prevent a user from accessing a route if they aren't authenticated.\n * \n * @export\n * @class AuthGuardService\n * @implements {CanActivate}\n */\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n/**\n * Creates an instance of AuthGuardService.\n * @param {GoogleService} google Declare the Google Service as google.\n * @param {Router} router Declare the Router as router\n * @param {NgZone} zone Declare NgZone as zone\n * @memberof AuthGuardService\n */\nconstructor(public google: GoogleService, public router: Router, public zone: NgZone) { }\n  /**\n   * Determines whether the user can go to the page and handle it.\n   * \n   * @returns {boolean} Whether or not the user can access the route\n   * @memberof AuthGuardService\n   */\n  canActivate(): boolean {\n    if (this.google.getAuthStatus()) {\n      return true;\n    }\n    this.zone.run(() => {\n      this.router.navigate(['/']);\n    });\n    return false;\n  }\n}\n\n/**\n * Prevent a user from accessing a route if they are authenticated.\n * \n * @export\n * @class PreventAuthGuardService\n * @implements {CanActivate}\n */\n@Injectable()\nexport class PreventAuthGuardService implements CanActivate {\n/**\n * Creates an instance of PreventAuthGuardService.\n * @param {GoogleService} google Declare the Google Service as google.\n * @param {Router} router Declare the Router as router\n * @param {NgZone} zone Declare NgZone as zone\n * @memberof PreventAuthGuardService\n */\nconstructor(public google: GoogleService, public router: Router, public zone: NgZone) { }\n  /**\n   * Determines whether the user can go to the page and handle it.\n   * \n   * @returns {boolean} Whether or not the user can access the route\n   * @memberof PreventAuthGuardService\n   */\n  canActivate(): boolean {\n    if (!this.google.getAuthStatus()) {\n      return true;\n    }\n    this.zone.run(() => {\n      this.router.navigate(['/app/home']);\n    });\n    return false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthenticatedModule.html":{"url":"modules/AuthenticatedModule.html","title":"module - AuthenticatedModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthenticatedModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthenticatedModule\n\n\n\ncluster_AuthenticatedModule_declarations\n\n\n\ncluster_AuthenticatedModule_imports\n\n\n\ncluster_AuthenticatedModule_exports\n\n\n\ncluster_AuthenticatedModule_providers\n\n\n\n\nConfigComponent\n\nConfigComponent\n\n\n\nAuthenticatedModule\n\nAuthenticatedModule\n\nAuthenticatedModule -->\n\nConfigComponent->AuthenticatedModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAuthenticatedModule -->\n\nHomeComponent->AuthenticatedModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nAuthenticatedModule -->\n\nSettingsComponent->AuthenticatedModule\n\n\n\n\n\nConfigComponent \n\nConfigComponent \n\nConfigComponent  -->\n\nAuthenticatedModule->ConfigComponent \n\n\n\n\n\nConfigModule\n\nConfigModule\n\nAuthenticatedModule -->\n\nConfigModule->AuthenticatedModule\n\n\n\n\n\nSorterService\n\nSorterService\n\nAuthenticatedModule -->\n\nSorterService->AuthenticatedModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/authenticated/authenticated.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Handles all authenticated components\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ConfigComponent\n                            \n                            \n                                HomeComponent\n                            \n                            \n                                SettingsComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     SorterService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ConfigModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ConfigComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ConfigComponent } from '../../components/tabs/config/config.component';\nimport { ConfigListComponent } from '../../components/tabs/config/config-list/config-list.component';\nimport { ConfigModalComponent } from '../../components/shared/config-modal/config-modal.component';\nimport { ConfigModule } from '../config/config.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HomeComponent } from '../../components/tabs/home/home.component';\nimport {\n  MatButtonModule,\n  MatCardModule,\n  MatDatepicker,\n  MatDatepickerModule,\n  MatDialogContent,\n  MatDialogModule,\n  MatExpansionModule,\n  MatFormFieldModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatSelectModule,\n  MatSnackBarModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTooltipModule\n  } from '@angular/material';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { SettingsComponent } from '../../components/tabs/settings/settings.component';\nimport { SorterService } from '../../services/sorter/sorter.service';\n\n/**\n * Handles all authenticated components\n *\n * @export\n * @class AuthenticatedModule\n */\n@NgModule({\n  declarations: [HomeComponent, ConfigComponent, SettingsComponent],\n  imports: [\n    FormsModule,\n    CommonModule,\n    MatIconModule,\n    MatListModule,\n    MatCardModule,\n    MatInputModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    ReactiveFormsModule,\n    ConfigModule.forRoot()\n  ],\n  providers: [SorterService],\n  exports: [ConfigComponent]\n})\nexport class AuthenticatedModule {\n  /**\n   * Register with the root module of the app\n   *\n   * @static\n   * @returns {ModuleWithProviders} This module\n   * @memberof AuthenticatedModule\n   */\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: AuthenticatedModule,\n      providers: []\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Config.html":{"url":"interfaces/Config.html","title":"interface - Config","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Config\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/tabs/config/config-list/config-list.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        key\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BehaviorSubject } from 'rxjs';\nimport { Component, NgZone, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ConfigComponent } from '../config.component';\nimport { createDirective } from '@angular/compiler/src/core';\nimport { DatabaseService } from '../../../../services/database/database.service';\nimport { DataSource } from '@angular/cdk/collections';\nimport { EditConfigModalComponent } from '../../../shared/edit-config-modal/edit-config-modal.component';\nimport {\n  MatDialog,\n  MatPaginator,\n  MatTable,\n  MatTableDataSource\n} from '@angular/material';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { PresetConfigComponent } from '../preset-config/preset-config.component';\nimport { GoogleService } from '../../../../services/google/google.service';\nimport { ConfigsInterface } from '../../../../../interfaces';\n\nexport interface Config {\n  name: String;\n  key: String;\n}\n\n@Component({\n  selector: 'app-config-list',\n  templateUrl: './config-list.component.html',\n  styleUrls: ['./config-list.component.scss']\n})\nexport class ConfigListComponent implements OnInit, OnDestroy {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  private activeConfig: string;\n  private oldPageSize: number = 10;\n  private loadingSubscription: Subscription;\n  private paginatorSubscription: Subscription;\n  private configChangeSubscription: Subscription;\n  private activeConfigChangeSubscription: Subscription;\n\n  public loading: boolean = true;\n  public noConfigs: boolean = true;\n  public dataSource: ConfigDataSource;\n  public tableColumns = ['name', 'actions'];\n\n  constructor(\n    private database: DatabaseService,\n    private google: GoogleService,\n    private dialog: MatDialog,\n    private router: Router,\n    private zone: NgZone\n  ) {}\n\n  ngOnInit() {\n    if (this.google.getAuthStatus()) {\n      this.dataSource = new ConfigDataSource(\n        this.database.getConfigs(),\n        this.paginator\n      );\n      this.database.numberConfigs().then(numConfigs => {\n        if (numConfigs === 0) {\n          this.noConfigs = true;\n        } else {\n          this.noConfigs = false;\n        }\n      });\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.google.getAuthStatus()) {\n      // Listen for page changes\n      this.paginatorSubscription = this.paginator.page.subscribe(() => {\n        if (this.oldPageSize == this.paginator.pageSize) {\n          this.dataSource.loadConfigs(\n            this.paginator.pageIndex,\n            this.paginator.pageSize\n          );\n        } else {\n          this.dataSource.loadConfigs(0, this.paginator.pageSize);\n          this.oldPageSize = this.paginator.pageSize;\n          this.paginator.pageIndex = 0;\n        }\n      });\n      // Load the configurations\n      this.dataSource.loadConfigs();\n      // Pass the number of configs to the paginator\n      this.database.numberConfigs().then(numConfigs => {\n        this.paginator.length = numConfigs;\n      });\n      // Listen for config changes\n      this.configChangeSubscription = this.database.configSubject.subscribe(\n        created => {\n          this.refreshConfigs();\n        }\n      );\n      // Retrive the active config\n      this.database.getActiveConfig().then(activeConfig => {\n        this.activeConfig = activeConfig;\n      }, () => {\n        this.activeConfig = undefined;\n      })\n      // Listen for active config changes\n      this.activeConfigChangeSubscription = this.database.activeConfigChanged.subscribe(\n        newConfigID => {\n          this.activeConfig = newConfigID;\n        },\n        err => console.error\n      );\n      setTimeout(_ => {\n        this.loadingSubscription = this.dataSource.loading$.subscribe(\n          loading => {\n            this.loading = loading;\n          }\n        );\n      });\n    }\n  }\n\n  getDialogWidth() {\n    const width: number = document.body.clientWidth;\n    if (width >= 1280) {\n      return width / 2;\n    } else if (width >= 640) {\n      return width / 1.5;\n    } else {\n      return 0;\n    }\n  }\n\n  openPresets() {\n    let dialogWidth = this.getDialogWidth();\n    if (dialogWidth) {\n      const dialogInstance = this.dialog.open(PresetConfigComponent, {\n        width: `${dialogWidth}px`,\n        maxHeight: `${document.body.clientHeight * 0.9}px`\n      });\n      const componentInstance = dialogInstance.componentInstance;\n      let closeSubscription = componentInstance.closeCommand.subscribe(\n        close => {\n          dialogInstance.close();\n          closeSubscription.unsubscribe();\n        }\n      );\n    } else {\n      this.zone.run(() => {\n        this.router.navigate(['/app/config/presets']);\n      });\n    }\n  }\n\n  refreshConfigs() {\n    this.dataSource.loadConfigs();\n    this.database.numberConfigs().then(numConfigs => {\n      if (numConfigs === 0) {\n        this.noConfigs = true;\n      } else {\n        this.noConfigs = false;\n      }\n    });\n  }\n\n  editConfig(configID: string) {\n    this.database.editingConfig = configID;\n    let dialogWidth = this.getDialogWidth();\n    if (dialogWidth) {\n      const dialogInstance = this.dialog.open(EditConfigModalComponent, {\n        width: `${dialogWidth}px`,\n        maxHeight: `${document.body.clientHeight * 0.9}px`\n      });\n      const componentInstance = dialogInstance.componentInstance;\n      let closeSubscription = componentInstance.closeCommand.subscribe(\n        close => {\n          dialogInstance.close();\n          closeSubscription.unsubscribe();\n        }\n      );\n    } else {\n      this.zone.run(() => {\n        this.router.navigate(['/app/config/edit']);\n      });\n    }\n  }\n\n  deleteConfig(configKey: string) {\n    if (configKey === this.activeConfig) {\n      this.setActiveConfig('');\n    }\n    this.database.deleteConfig(configKey);\n  }\n\n  setActiveConfig(configKey: string) {\n    this.database.setActiveConfig(configKey);\n  }\n\n  getActiveConfig(configKey: string): boolean {\n    return this.activeConfig === configKey ? true : false;\n  }\n\n  ngOnDestroy() {\n    if (this.loadingSubscription) this.loadingSubscription.unsubscribe();\n    if (this.paginatorSubscription) this.paginatorSubscription.unsubscribe();\n    if (this.configChangeSubscription)\n      this.configChangeSubscription.unsubscribe();\n    if (this.activeConfigChangeSubscription)\n      this.activeConfigChangeSubscription.unsubscribe();\n  }\n}\n\nexport class ConfigDataSource implements DataSource {\n  private configSubject = new BehaviorSubject([]);\n\n  private loadingSubject = new BehaviorSubject(true);\n  public loading$ = this.loadingSubject.asObservable();\n\n  constructor(private configs: Array, private paginator) {}\n\n  private calculateStart(page: number, pageSize: number): number {\n    return page ? page * pageSize : 0;\n  }\n\n  connect(): Observable {\n    return this.configSubject.asObservable();\n  }\n\n  disconnect(): void {\n    this.configSubject.complete();\n    this.loadingSubject.complete();\n  }\n\n  loadConfigs(page: number = 0, pageSize: number = 10) {\n    let start = this.calculateStart(page, pageSize);\n    let configs = this.configs.slice(start, start + pageSize);\n    this.loadingSubject.next(true);\n    let data = [];\n    for (const config in configs) {\n      const name = configs[config]['name'];\n      data.push({\n        name: name,\n        key: configs[config].id\n      });\n    }\n    this.configSubject.next(data);\n    this.loadingSubject.next(false);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigBuilder.html":{"url":"classes/ConfigBuilder.html","title":"class - ConfigBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/config-builder.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                addGroup\n                            \n                            \n                                    Static\n                                configFromGroup\n                            \n                            \n                                    Static\n                                folderNameBuilder\n                            \n                            \n                                    Static\n                                generateNewConfig\n                            \n                            \n                                    Static\n                                verifyConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            addGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addGroup(config: ConfigsInterface, newGroupName: string, newGroupDestination: GroupFolderInterface, newGroupSource: GroupFolderInterface, firstGroupRule: RuleInterface)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/config-builder.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    ConfigsInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        newGroupName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        newGroupDestination\n                                                        \n                                                                    GroupFolderInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        newGroupSource\n                                                        \n                                                                    GroupFolderInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        firstGroupRule\n                                                        \n                                                                    RuleInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ConfigsInterface\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            configFromGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        configFromGroup(groups: , name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/config-builder.ts:142\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        groups\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ConfigsInterface\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            folderNameBuilder\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        folderNameBuilder(createFolderConfig: FolderCreation)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/config-builder.ts:113\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createFolderConfig\n                                                        \n                                                                    FolderCreation\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            generateNewConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        generateNewConfig(configName: string, firstGroupName: string, sourceFolder: GroupFolderInterface, destinationFolder: GroupFolderInterface, createFolder: FolderCreation, firstGroupRule: RuleInterface)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/config-builder.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        firstGroupName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        sourceFolder\n                                                        \n                                                                    GroupFolderInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        destinationFolder\n                                                        \n                                                                    GroupFolderInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        createFolder\n                                                        \n                                                                    FolderCreation\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        firstGroupRule\n                                                        \n                                                                    RuleInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ConfigsInterface\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            verifyConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        verifyConfig(config: ConfigsInterface)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/config-builder.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    ConfigsInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ConfigInterface,\n  ConfigsInterface,\n  GroupFolderInterface,\n  RuleInterface,\n  FolderCreation\n} from '../../interfaces';\nimport { v4 as uuid } from 'uuid';\n\nexport class ConfigBuilder {\n  static generateNewConfig(\n    configName: string,\n    firstGroupName: string,\n    sourceFolder: GroupFolderInterface,\n    destinationFolder: GroupFolderInterface,\n    createFolder: FolderCreation,\n    firstGroupRule: RuleInterface\n  ): ConfigsInterface {\n    const configHolder: ConfigsInterface = {\n      name: configName,\n      groups: [\n        {\n          id: uuid(),\n          name: firstGroupName,\n          source: sourceFolder,\n          rules: [firstGroupRule]\n        }\n      ],\n      id: uuid()\n    };\n    if (createFolder) {\n      configHolder.groups[0].createFolder = createFolder;\n    } else {\n      configHolder.groups[0].destination = destinationFolder;\n    }\n    return configHolder;\n  }\n\n  static addGroup(\n    config: ConfigsInterface,\n    newGroupName: string,\n    newGroupDestination: GroupFolderInterface,\n    newGroupSource: GroupFolderInterface,\n    firstGroupRule: RuleInterface\n  ): ConfigsInterface {\n    const localConfig: ConfigsInterface = config;\n    localConfig.groups.push({\n      id: uuid(),\n      name: newGroupName,\n      source: newGroupSource,\n      destination: newGroupDestination,\n      rules: [firstGroupRule]\n    });\n    return localConfig;\n  }\n\n  static verifyConfig(config: ConfigsInterface): boolean {\n    let valid = true;\n    if (\n      !config.groups ||\n      !config.id ||\n      !config.name ||\n      config.name.length  {\n        if (group.createFolder) {\n          if (\n            !group.createFolder.name ||\n            !group.createFolder.parent ||\n            !group.createFolder.prefix ||\n            !group.createFolder.suffix ||\n            group.createFolder.name.value.length  {\n            if (\n              !rule.name ||\n              !rule.id ||\n              !rule.data ||\n              !rule.constraint ||\n              !rule.classifier\n            ) {\n              valid = false;\n            }\n          });\n        }\n      });\n    }\n    return valid;\n  }\n\n  static folderNameBuilder(createFolderConfig: FolderCreation): string {\n    let outputString: string = '';\n    switch (createFolderConfig.prefix.type) {\n      case 'text':\n        outputString += createFolderConfig.prefix.value;\n        break;\n      case 'date':\n        outputString += Date();\n        break;\n    }\n    switch (createFolderConfig.name.type) {\n      case 'text':\n        outputString += ` ${createFolderConfig.name.value}`;\n        break;\n      case 'date':\n        outputString += ` ${Date()}`;\n        break;\n    }\n    switch (createFolderConfig.suffix.type) {\n      case 'text':\n        outputString += ` ${createFolderConfig.suffix.value}`;\n        break;\n      case 'date':\n        outputString += ` ${Date()}`;\n        break;\n    }\n    return outputString;\n  }\n\n  static configFromGroup(groups, name: string): ConfigsInterface {\n    return {\n      id: uuid(),\n      name: name,\n      groups: groups\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfigComponent.html":{"url":"components/ConfigComponent.html","title":"component - ConfigComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfigComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tabs/config/config.component.ts\n\n\n    \n        Description\n    \n    \n        Declare component to be shown when the config tab is selected.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-config\n            \n\n            \n                styleUrls\n                config.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./config.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                initalized\n                            \n                            \n                                    Private\n                                openConfigModalListener\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getDialogWidth\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openNewConfigDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(appComponent: AppComponent, dialog: MatDialog, router: Router, zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tabs/config/config.component.ts:24\n                            \n                        \n\n                \n                    \n                            Creates an instance of ConfigComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appComponent\n                                                  \n                                                        \n                                                                    AppComponent\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getDialogWidth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getDialogWidth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openNewConfigDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenNewConfigDialog()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config.component.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            initalized\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        initalized:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            openConfigModalListener\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        openConfigModalListener:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, NgZone, OnInit, AfterViewInit, OnDestroy } from '@angular/core';\nimport { ConfigModalComponent } from '../../shared/config-modal/config-modal.component';\nimport { MatDialog } from '@angular/material';\nimport { RepositionScrollStrategy } from '@angular/cdk/overlay';\nimport { Router } from '@angular/router';\nimport { AppComponent } from '../../../app.component';\nimport { Subscription } from 'rxjs';\n/**\n * Declare component to be shown when the config tab is selected.\n * \n * @export\n * @class ConfigComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-config',\n  templateUrl: './config.component.html',\n  styleUrls: ['./config.component.scss'],\n})\nexport class ConfigComponent implements OnInit, AfterViewInit, OnDestroy {\n\n  public initalized: boolean = false;\n\n  private openConfigModalListener: Subscription;\n  \n  /**\n   * Creates an instance of ConfigComponent.\n   * @memberof ConfigComponent\n   */\n  constructor(\n    private appComponent: AppComponent,\n    private dialog: MatDialog, \n    private router: Router, \n    private zone: NgZone\n  ) { }\n\n  ngOnInit() {\n    this.openConfigModalListener = \n      this.appComponent.openConfigModal$.subscribe(open => {\n        if (open === true) {\n          this.openNewConfigDialog();\n        }\n      });\n  }\n\n  ngAfterViewInit() {\n    this.initalized = true;\n  }\n\n  ngOnDestroy() {\n    this.openConfigModalListener.unsubscribe();\n  }\n\n  public getDialogWidth() {\n    const width: number = document.body.clientWidth;\n    if (width >= 1280) {\n      return (width / 2);\n    } else if (width >= 640) {\n      return (width / 1.5);\n    } else {\n      return 0;\n    }\n  }\n\n  openNewConfigDialog() {\n    let dialogWidth = this.getDialogWidth();\n    if (dialogWidth) {\n      const dialogInstance = this.dialog.open(ConfigModalComponent, {\n        width: `${dialogWidth}px`,\n        maxHeight: `${document.body.clientHeight * .9}px`\n      });\n      const componentInstance = dialogInstance.componentInstance;\n      let dialogSubscription = \n        componentInstance\n          .closeCommand\n          .subscribe(close => {\n            dialogInstance.close();\n            dialogSubscription.unsubscribe();\n          });\n    } else {\n      this.zone.run(() => {\n        this.router.navigate(['/app/config/create']);\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'ConfigListComponent', 'selector': 'app-config-list'},{'name': 'ConfigModalComponent', 'selector': 'app-config-modal'},{'name': 'EditConfigModalComponent', 'selector': 'app-edit-config-modal'},{'name': 'EditConfigPageComponent', 'selector': 'app-edit-config-page'},{'name': 'FolderCreationComponent', 'selector': 'app-folder-creation'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NewConfigPageComponent', 'selector': 'app-new-rule-page'},{'name': 'NewRuleStepperComponent', 'selector': 'app-new-rule-stepper'},{'name': 'PresetConfigComponent', 'selector': 'app-preset-config'},{'name': 'PresetConfigPageComponent', 'selector': 'app-preset-config-page'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'UnauthenticatedComponent', 'selector': 'app-unauthenticated'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfigComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigDataSource.html":{"url":"classes/ConfigDataSource.html","title":"class - ConfigDataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigDataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/tabs/config/config-list/config-list.component.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        DataSource\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                configSubject\n                            \n                            \n                                    Public\n                                loading$\n                            \n                            \n                                    Private\n                                loadingSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                calculateStart\n                            \n                            \n                                connect\n                            \n                            \n                                disconnect\n                            \n                            \n                                loadConfigs\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configs: Array, paginator: )\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tabs/config/config-list/config-list.component.ts:214\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configs\n                                                  \n                                                        \n                                                                    Array\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        paginator\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            configSubject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        configSubject:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject([])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:211\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loading$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loading$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.loadingSubject.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:214\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadingSubject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadingSubject:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(true)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:213\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            calculateStart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        calculateStart(page: number, pageSize: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:218\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        pageSize\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            connect\n                            \n                            \n                        \n                    \n                \n                \n                    \nconnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:222\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disconnect\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisconnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:226\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadConfigs\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadConfigs(page: number, pageSize: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:231\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                0\n                                                        \n\n                                                \n                                                \n                                                        pageSize\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                10\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { BehaviorSubject } from 'rxjs';\nimport { Component, NgZone, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ConfigComponent } from '../config.component';\nimport { createDirective } from '@angular/compiler/src/core';\nimport { DatabaseService } from '../../../../services/database/database.service';\nimport { DataSource } from '@angular/cdk/collections';\nimport { EditConfigModalComponent } from '../../../shared/edit-config-modal/edit-config-modal.component';\nimport {\n  MatDialog,\n  MatPaginator,\n  MatTable,\n  MatTableDataSource\n} from '@angular/material';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { PresetConfigComponent } from '../preset-config/preset-config.component';\nimport { GoogleService } from '../../../../services/google/google.service';\nimport { ConfigsInterface } from '../../../../../interfaces';\n\nexport interface Config {\n  name: String;\n  key: String;\n}\n\n@Component({\n  selector: 'app-config-list',\n  templateUrl: './config-list.component.html',\n  styleUrls: ['./config-list.component.scss']\n})\nexport class ConfigListComponent implements OnInit, OnDestroy {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  private activeConfig: string;\n  private oldPageSize: number = 10;\n  private loadingSubscription: Subscription;\n  private paginatorSubscription: Subscription;\n  private configChangeSubscription: Subscription;\n  private activeConfigChangeSubscription: Subscription;\n\n  public loading: boolean = true;\n  public noConfigs: boolean = true;\n  public dataSource: ConfigDataSource;\n  public tableColumns = ['name', 'actions'];\n\n  constructor(\n    private database: DatabaseService,\n    private google: GoogleService,\n    private dialog: MatDialog,\n    private router: Router,\n    private zone: NgZone\n  ) {}\n\n  ngOnInit() {\n    if (this.google.getAuthStatus()) {\n      this.dataSource = new ConfigDataSource(\n        this.database.getConfigs(),\n        this.paginator\n      );\n      this.database.numberConfigs().then(numConfigs => {\n        if (numConfigs === 0) {\n          this.noConfigs = true;\n        } else {\n          this.noConfigs = false;\n        }\n      });\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.google.getAuthStatus()) {\n      // Listen for page changes\n      this.paginatorSubscription = this.paginator.page.subscribe(() => {\n        if (this.oldPageSize == this.paginator.pageSize) {\n          this.dataSource.loadConfigs(\n            this.paginator.pageIndex,\n            this.paginator.pageSize\n          );\n        } else {\n          this.dataSource.loadConfigs(0, this.paginator.pageSize);\n          this.oldPageSize = this.paginator.pageSize;\n          this.paginator.pageIndex = 0;\n        }\n      });\n      // Load the configurations\n      this.dataSource.loadConfigs();\n      // Pass the number of configs to the paginator\n      this.database.numberConfigs().then(numConfigs => {\n        this.paginator.length = numConfigs;\n      });\n      // Listen for config changes\n      this.configChangeSubscription = this.database.configSubject.subscribe(\n        created => {\n          this.refreshConfigs();\n        }\n      );\n      // Retrive the active config\n      this.database.getActiveConfig().then(activeConfig => {\n        this.activeConfig = activeConfig;\n      }, () => {\n        this.activeConfig = undefined;\n      })\n      // Listen for active config changes\n      this.activeConfigChangeSubscription = this.database.activeConfigChanged.subscribe(\n        newConfigID => {\n          this.activeConfig = newConfigID;\n        },\n        err => console.error\n      );\n      setTimeout(_ => {\n        this.loadingSubscription = this.dataSource.loading$.subscribe(\n          loading => {\n            this.loading = loading;\n          }\n        );\n      });\n    }\n  }\n\n  getDialogWidth() {\n    const width: number = document.body.clientWidth;\n    if (width >= 1280) {\n      return width / 2;\n    } else if (width >= 640) {\n      return width / 1.5;\n    } else {\n      return 0;\n    }\n  }\n\n  openPresets() {\n    let dialogWidth = this.getDialogWidth();\n    if (dialogWidth) {\n      const dialogInstance = this.dialog.open(PresetConfigComponent, {\n        width: `${dialogWidth}px`,\n        maxHeight: `${document.body.clientHeight * 0.9}px`\n      });\n      const componentInstance = dialogInstance.componentInstance;\n      let closeSubscription = componentInstance.closeCommand.subscribe(\n        close => {\n          dialogInstance.close();\n          closeSubscription.unsubscribe();\n        }\n      );\n    } else {\n      this.zone.run(() => {\n        this.router.navigate(['/app/config/presets']);\n      });\n    }\n  }\n\n  refreshConfigs() {\n    this.dataSource.loadConfigs();\n    this.database.numberConfigs().then(numConfigs => {\n      if (numConfigs === 0) {\n        this.noConfigs = true;\n      } else {\n        this.noConfigs = false;\n      }\n    });\n  }\n\n  editConfig(configID: string) {\n    this.database.editingConfig = configID;\n    let dialogWidth = this.getDialogWidth();\n    if (dialogWidth) {\n      const dialogInstance = this.dialog.open(EditConfigModalComponent, {\n        width: `${dialogWidth}px`,\n        maxHeight: `${document.body.clientHeight * 0.9}px`\n      });\n      const componentInstance = dialogInstance.componentInstance;\n      let closeSubscription = componentInstance.closeCommand.subscribe(\n        close => {\n          dialogInstance.close();\n          closeSubscription.unsubscribe();\n        }\n      );\n    } else {\n      this.zone.run(() => {\n        this.router.navigate(['/app/config/edit']);\n      });\n    }\n  }\n\n  deleteConfig(configKey: string) {\n    if (configKey === this.activeConfig) {\n      this.setActiveConfig('');\n    }\n    this.database.deleteConfig(configKey);\n  }\n\n  setActiveConfig(configKey: string) {\n    this.database.setActiveConfig(configKey);\n  }\n\n  getActiveConfig(configKey: string): boolean {\n    return this.activeConfig === configKey ? true : false;\n  }\n\n  ngOnDestroy() {\n    if (this.loadingSubscription) this.loadingSubscription.unsubscribe();\n    if (this.paginatorSubscription) this.paginatorSubscription.unsubscribe();\n    if (this.configChangeSubscription)\n      this.configChangeSubscription.unsubscribe();\n    if (this.activeConfigChangeSubscription)\n      this.activeConfigChangeSubscription.unsubscribe();\n  }\n}\n\nexport class ConfigDataSource implements DataSource {\n  private configSubject = new BehaviorSubject([]);\n\n  private loadingSubject = new BehaviorSubject(true);\n  public loading$ = this.loadingSubject.asObservable();\n\n  constructor(private configs: Array, private paginator) {}\n\n  private calculateStart(page: number, pageSize: number): number {\n    return page ? page * pageSize : 0;\n  }\n\n  connect(): Observable {\n    return this.configSubject.asObservable();\n  }\n\n  disconnect(): void {\n    this.configSubject.complete();\n    this.loadingSubject.complete();\n  }\n\n  loadConfigs(page: number = 0, pageSize: number = 10) {\n    let start = this.calculateStart(page, pageSize);\n    let configs = this.configs.slice(start, start + pageSize);\n    this.loadingSubject.next(true);\n    let data = [];\n    for (const config in configs) {\n      const name = configs[config]['name'];\n      data.push({\n        name: name,\n        key: configs[config].id\n      });\n    }\n    this.configSubject.next(data);\n    this.loadingSubject.next(false);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfigInterface.html":{"url":"interfaces/ConfigInterface.html","title":"interface - ConfigInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ConfigInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        activeConfig\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activeConfig\n                                    \n                                \n                                \n                                    \n                                        activeConfig:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ConfigInterface {\n  activeConfig: string;\n}\n\nexport interface RuleInterface {\n  id: string;\n  name: string;\n  data?: any;\n  classifier?: string;\n  constraint?: string;\n}\n\nexport interface GroupFolderInterface {\n  name?: string;\n  renameUntitled?: boolean;\n  folderID?: string;\n}\n\nexport interface FolderCreation {\n  parent: {\n    folderID: string | undefined;\n    name: string | null;\n  };\n  prefix: {\n    type: string | null;\n    value: string;\n  };\n  name: {\n    type: string | null;\n    value: string;\n  };\n  suffix: {\n    type: string | null;\n    value: string;\n  };\n}\n\nexport interface GroupInterface {\n  id: string;\n  name: string;\n  rules: Array;\n  source: GroupFolderInterface;\n  destination?: GroupFolderInterface;\n  createFolder?: FolderCreation;\n}\n\nexport interface ConfigsInterface {\n  id: string;\n  name: string;\n  groups: Array;\n}\n\nexport interface JSONConfiguration {\n  configs: Array;\n  activeConfig: string\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfigListComponent.html":{"url":"components/ConfigListComponent.html","title":"component - ConfigListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfigListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tabs/config/config-list/config-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-config-list\n            \n\n            \n                styleUrls\n                config-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./config-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activeConfig\n                            \n                            \n                                    Private\n                                activeConfigChangeSubscription\n                            \n                            \n                                    Private\n                                configChangeSubscription\n                            \n                            \n                                    Public\n                                dataSource\n                            \n                            \n                                    Public\n                                loading\n                            \n                            \n                                    Private\n                                loadingSubscription\n                            \n                            \n                                    Public\n                                noConfigs\n                            \n                            \n                                    Private\n                                oldPageSize\n                            \n                            \n                                paginator\n                            \n                            \n                                    Private\n                                paginatorSubscription\n                            \n                            \n                                    Public\n                                tableColumns\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteConfig\n                            \n                            \n                                editConfig\n                            \n                            \n                                getActiveConfig\n                            \n                            \n                                getDialogWidth\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openPresets\n                            \n                            \n                                refreshConfigs\n                            \n                            \n                                setActiveConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(database: DatabaseService, google: GoogleService, dialog: MatDialog, router: Router, zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tabs/config/config-list/config-list.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        database\n                                                  \n                                                        \n                                                                    DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        google\n                                                  \n                                                        \n                                                                    GoogleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteConfig(configKey: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:185\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configKey\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \neditConfig(configID: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:163\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getActiveConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetActiveConfig(configKey: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:196\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configKey\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDialogWidth\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDialogWidth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:120\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:200\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openPresets\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenPresets()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:131\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refreshConfigs\n                            \n                            \n                        \n                    \n                \n                \n                    \nrefreshConfigs()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:152\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setActiveConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetActiveConfig(configKey: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:192\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configKey\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            activeConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeConfig:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            activeConfigChangeSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeConfigChangeSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            configChangeSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        configChangeSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dataSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dataSource:     ConfigDataSource\n\n                    \n                \n                    \n                        \n                            Type :     ConfigDataSource\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loading:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadingSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadingSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            noConfigs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        noConfigs:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            oldPageSize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        oldPageSize:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        paginator:     MatPaginator\n\n                    \n                \n                    \n                        \n                            Type :     MatPaginator\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            paginatorSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        paginatorSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tableColumns\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tableColumns:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['name', 'actions']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { BehaviorSubject } from 'rxjs';\nimport { Component, NgZone, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ConfigComponent } from '../config.component';\nimport { createDirective } from '@angular/compiler/src/core';\nimport { DatabaseService } from '../../../../services/database/database.service';\nimport { DataSource } from '@angular/cdk/collections';\nimport { EditConfigModalComponent } from '../../../shared/edit-config-modal/edit-config-modal.component';\nimport {\n  MatDialog,\n  MatPaginator,\n  MatTable,\n  MatTableDataSource\n} from '@angular/material';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { PresetConfigComponent } from '../preset-config/preset-config.component';\nimport { GoogleService } from '../../../../services/google/google.service';\nimport { ConfigsInterface } from '../../../../../interfaces';\n\nexport interface Config {\n  name: String;\n  key: String;\n}\n\n@Component({\n  selector: 'app-config-list',\n  templateUrl: './config-list.component.html',\n  styleUrls: ['./config-list.component.scss']\n})\nexport class ConfigListComponent implements OnInit, OnDestroy {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  private activeConfig: string;\n  private oldPageSize: number = 10;\n  private loadingSubscription: Subscription;\n  private paginatorSubscription: Subscription;\n  private configChangeSubscription: Subscription;\n  private activeConfigChangeSubscription: Subscription;\n\n  public loading: boolean = true;\n  public noConfigs: boolean = true;\n  public dataSource: ConfigDataSource;\n  public tableColumns = ['name', 'actions'];\n\n  constructor(\n    private database: DatabaseService,\n    private google: GoogleService,\n    private dialog: MatDialog,\n    private router: Router,\n    private zone: NgZone\n  ) {}\n\n  ngOnInit() {\n    if (this.google.getAuthStatus()) {\n      this.dataSource = new ConfigDataSource(\n        this.database.getConfigs(),\n        this.paginator\n      );\n      this.database.numberConfigs().then(numConfigs => {\n        if (numConfigs === 0) {\n          this.noConfigs = true;\n        } else {\n          this.noConfigs = false;\n        }\n      });\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.google.getAuthStatus()) {\n      // Listen for page changes\n      this.paginatorSubscription = this.paginator.page.subscribe(() => {\n        if (this.oldPageSize == this.paginator.pageSize) {\n          this.dataSource.loadConfigs(\n            this.paginator.pageIndex,\n            this.paginator.pageSize\n          );\n        } else {\n          this.dataSource.loadConfigs(0, this.paginator.pageSize);\n          this.oldPageSize = this.paginator.pageSize;\n          this.paginator.pageIndex = 0;\n        }\n      });\n      // Load the configurations\n      this.dataSource.loadConfigs();\n      // Pass the number of configs to the paginator\n      this.database.numberConfigs().then(numConfigs => {\n        this.paginator.length = numConfigs;\n      });\n      // Listen for config changes\n      this.configChangeSubscription = this.database.configSubject.subscribe(\n        created => {\n          this.refreshConfigs();\n        }\n      );\n      // Retrive the active config\n      this.database.getActiveConfig().then(activeConfig => {\n        this.activeConfig = activeConfig;\n      }, () => {\n        this.activeConfig = undefined;\n      })\n      // Listen for active config changes\n      this.activeConfigChangeSubscription = this.database.activeConfigChanged.subscribe(\n        newConfigID => {\n          this.activeConfig = newConfigID;\n        },\n        err => console.error\n      );\n      setTimeout(_ => {\n        this.loadingSubscription = this.dataSource.loading$.subscribe(\n          loading => {\n            this.loading = loading;\n          }\n        );\n      });\n    }\n  }\n\n  getDialogWidth() {\n    const width: number = document.body.clientWidth;\n    if (width >= 1280) {\n      return width / 2;\n    } else if (width >= 640) {\n      return width / 1.5;\n    } else {\n      return 0;\n    }\n  }\n\n  openPresets() {\n    let dialogWidth = this.getDialogWidth();\n    if (dialogWidth) {\n      const dialogInstance = this.dialog.open(PresetConfigComponent, {\n        width: `${dialogWidth}px`,\n        maxHeight: `${document.body.clientHeight * 0.9}px`\n      });\n      const componentInstance = dialogInstance.componentInstance;\n      let closeSubscription = componentInstance.closeCommand.subscribe(\n        close => {\n          dialogInstance.close();\n          closeSubscription.unsubscribe();\n        }\n      );\n    } else {\n      this.zone.run(() => {\n        this.router.navigate(['/app/config/presets']);\n      });\n    }\n  }\n\n  refreshConfigs() {\n    this.dataSource.loadConfigs();\n    this.database.numberConfigs().then(numConfigs => {\n      if (numConfigs === 0) {\n        this.noConfigs = true;\n      } else {\n        this.noConfigs = false;\n      }\n    });\n  }\n\n  editConfig(configID: string) {\n    this.database.editingConfig = configID;\n    let dialogWidth = this.getDialogWidth();\n    if (dialogWidth) {\n      const dialogInstance = this.dialog.open(EditConfigModalComponent, {\n        width: `${dialogWidth}px`,\n        maxHeight: `${document.body.clientHeight * 0.9}px`\n      });\n      const componentInstance = dialogInstance.componentInstance;\n      let closeSubscription = componentInstance.closeCommand.subscribe(\n        close => {\n          dialogInstance.close();\n          closeSubscription.unsubscribe();\n        }\n      );\n    } else {\n      this.zone.run(() => {\n        this.router.navigate(['/app/config/edit']);\n      });\n    }\n  }\n\n  deleteConfig(configKey: string) {\n    if (configKey === this.activeConfig) {\n      this.setActiveConfig('');\n    }\n    this.database.deleteConfig(configKey);\n  }\n\n  setActiveConfig(configKey: string) {\n    this.database.setActiveConfig(configKey);\n  }\n\n  getActiveConfig(configKey: string): boolean {\n    return this.activeConfig === configKey ? true : false;\n  }\n\n  ngOnDestroy() {\n    if (this.loadingSubscription) this.loadingSubscription.unsubscribe();\n    if (this.paginatorSubscription) this.paginatorSubscription.unsubscribe();\n    if (this.configChangeSubscription)\n      this.configChangeSubscription.unsubscribe();\n    if (this.activeConfigChangeSubscription)\n      this.activeConfigChangeSubscription.unsubscribe();\n  }\n}\n\nexport class ConfigDataSource implements DataSource {\n  private configSubject = new BehaviorSubject([]);\n\n  private loadingSubject = new BehaviorSubject(true);\n  public loading$ = this.loadingSubject.asObservable();\n\n  constructor(private configs: Array, private paginator) {}\n\n  private calculateStart(page: number, pageSize: number): number {\n    return page ? page * pageSize : 0;\n  }\n\n  connect(): Observable {\n    return this.configSubject.asObservable();\n  }\n\n  disconnect(): void {\n    this.configSubject.complete();\n    this.loadingSubject.complete();\n  }\n\n  loadConfigs(page: number = 0, pageSize: number = 10) {\n    let start = this.calculateStart(page, pageSize);\n    let configs = this.configs.slice(start, start + pageSize);\n    this.loadingSubject.next(true);\n    let data = [];\n    for (const config in configs) {\n      const name = configs[config]['name'];\n      data.push({\n        name: name,\n        key: configs[config].id\n      });\n    }\n    this.configSubject.next(data);\n    this.loadingSubject.next(false);\n  }\n}\n\n    \n\n    \n        \n  Configuration's\n  \n    \n      list\n    \n    \n      refresh\n    \n  \n\n\n  \n\n\n  \n    \n    \n      Name\n      {{config.name}}\n    \n    \n      Actions\n      \n        \n          edit\n        \n        \n          settings_power\n        \n        \n          delete_forever\n        \n      \n    \n    \n    \n  \n  \n  \n  \n\nYou have no configurations try creating one!\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Configuration\\'s            list              refresh                        Name      {{config.name}}              Actions                        edit                          settings_power                          delete_forever                                  You have no configurations try creating one!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'ConfigListComponent', 'selector': 'app-config-list'},{'name': 'ConfigModalComponent', 'selector': 'app-config-modal'},{'name': 'EditConfigModalComponent', 'selector': 'app-edit-config-modal'},{'name': 'EditConfigPageComponent', 'selector': 'app-edit-config-page'},{'name': 'FolderCreationComponent', 'selector': 'app-folder-creation'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NewConfigPageComponent', 'selector': 'app-new-rule-page'},{'name': 'NewRuleStepperComponent', 'selector': 'app-new-rule-stepper'},{'name': 'PresetConfigComponent', 'selector': 'app-preset-config'},{'name': 'PresetConfigPageComponent', 'selector': 'app-preset-config-page'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'UnauthenticatedComponent', 'selector': 'app-unauthenticated'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfigListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigModule.html":{"url":"modules/ConfigModule.html","title":"module - ConfigModule","body":"\n                   \n\n\n\n\n  Modules\n  ConfigModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_declarations\n\n\n\ncluster_ConfigModule_imports\n\n\n\ncluster_ConfigModule_exports\n\n\n\n\nConfigListComponent\n\nConfigListComponent\n\n\n\nConfigModule\n\nConfigModule\n\nConfigModule -->\n\nConfigListComponent->ConfigModule\n\n\n\n\n\nConfigModalComponent\n\nConfigModalComponent\n\nConfigModule -->\n\nConfigModalComponent->ConfigModule\n\n\n\n\n\nEditConfigModalComponent\n\nEditConfigModalComponent\n\nConfigModule -->\n\nEditConfigModalComponent->ConfigModule\n\n\n\n\n\nEditConfigPageComponent\n\nEditConfigPageComponent\n\nConfigModule -->\n\nEditConfigPageComponent->ConfigModule\n\n\n\n\n\nFolderCreationComponent\n\nFolderCreationComponent\n\nConfigModule -->\n\nFolderCreationComponent->ConfigModule\n\n\n\n\n\nNewConfigPageComponent\n\nNewConfigPageComponent\n\nConfigModule -->\n\nNewConfigPageComponent->ConfigModule\n\n\n\n\n\nNewRuleStepperComponent\n\nNewRuleStepperComponent\n\nConfigModule -->\n\nNewRuleStepperComponent->ConfigModule\n\n\n\n\n\nPresetConfigComponent\n\nPresetConfigComponent\n\nConfigModule -->\n\nPresetConfigComponent->ConfigModule\n\n\n\n\n\nPresetConfigPageComponent\n\nPresetConfigPageComponent\n\nConfigModule -->\n\nPresetConfigPageComponent->ConfigModule\n\n\n\n\n\nUnNamedPipe\n\nUnNamedPipe\n\nConfigModule -->\n\nUnNamedPipe->ConfigModule\n\n\n\n\n\nConfigListComponent \n\nConfigListComponent \n\nConfigListComponent  -->\n\nConfigModule->ConfigListComponent \n\n\n\n\n\nConfigRoutingModule\n\nConfigRoutingModule\n\nConfigModule -->\n\nConfigRoutingModule->ConfigModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/config/config.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ConfigListComponent\n                            \n                            \n                                ConfigModalComponent\n                            \n                            \n                                EditConfigModalComponent\n                            \n                            \n                                EditConfigPageComponent\n                            \n                            \n                                FolderCreationComponent\n                            \n                            \n                                NewConfigPageComponent\n                            \n                            \n                                NewRuleStepperComponent\n                            \n                            \n                                PresetConfigComponent\n                            \n                            \n                                PresetConfigPageComponent\n                            \n                            \n                                UnNamedPipe\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                ConfigModalComponent\n                            \n                            \n                                EditConfigModalComponent\n                            \n                            \n                                PresetConfigComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ConfigRoutingModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ConfigListComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ConfigListComponent } from '../../components/tabs/config/config-list/config-list.component';\nimport { ConfigModalComponent } from '../../components/shared/config-modal/config-modal.component';\nimport { EditConfigModalComponent } from '../../components/shared/edit-config-modal/edit-config-modal.component';\nimport { EditConfigPageComponent } from '../../components/shared/edit-config-page/edit-config-page.component';\nimport { FolderCreationComponent } from '../../components/shared/folder-creation/folder-creation.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  MatButtonModule,\n  MatDatepickerModule,\n  MatExpansionModule,\n  MatFormFieldModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatNativeDateModule,\n  MatPaginator,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatSelectModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTooltipModule,\n  MatCardModule\n  } from '@angular/material';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { NewConfigPageComponent } from '../../components/shared/new-config-page/new-config-page.component';\nimport { NewRuleStepperComponent } from '../../components/shared/new-rule-stepper/new-rule-stepper.component';\nimport { UnNamedPipe } from '../../pipes/un-named.pipe';\nimport { PresetConfigComponent } from '../../components/tabs/config/preset-config/preset-config.component';\nimport { PresetConfigPageComponent } from '../../components/tabs/config/preset-config-page/preset-config-page.component';\nimport { ConfigRoutingModule } from './config-routing.module';\n\n@NgModule({\n  declarations: [\n    ConfigListComponent,\n    NewConfigPageComponent,\n    ConfigModalComponent,\n    NewRuleStepperComponent,\n    EditConfigModalComponent,\n    EditConfigPageComponent,\n    FolderCreationComponent,\n    PresetConfigComponent,\n    PresetConfigPageComponent,\n    UnNamedPipe\n  ],\n  imports: [\n    FormsModule,\n    CommonModule,\n    MatIconModule,\n    MatListModule,\n    MatCardModule,\n    MatInputModule,\n    MatTableModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatTooltipModule,\n    MatStepperModule,\n    MatGridListModule,\n    MatSnackBarModule,\n    MatPaginatorModule,\n    MatFormFieldModule,\n    MatExpansionModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    ReactiveFormsModule,\n    MatProgressBarModule,\n    MatSlideToggleModule,\n    ConfigRoutingModule\n  ],\n  entryComponents: [ConfigModalComponent, EditConfigModalComponent, PresetConfigComponent],\n  exports: [ConfigListComponent]\n})\nexport class ConfigModule {\n  /**\n   * Register with the root module of the app\n   *\n   * @static\n   * @returns {ModuleWithProviders} This module\n   * @memberof ConfigModule\n   */\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: ConfigModule,\n      providers: []\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigRoutingModule.html":{"url":"modules/ConfigRoutingModule.html","title":"module - ConfigRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  ConfigRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/config/config-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ConfigComponent } from '../../components/tabs/config/config.component';\nimport { NewConfigPageComponent } from '../../components/shared/new-config-page/new-config-page.component';\nimport { AuthGuardService } from '../../services/auth/auth-guard.service';\nimport { PresetConfigPageComponent } from '../../components/tabs/config/preset-config-page/preset-config-page.component';\nimport { EditConfigPageComponent } from '../../components/shared/edit-config-page/edit-config-page.component';\n\n\nconst routes: Routes = [\n  {\n    path: 'app/config',\n    component: ConfigComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      state: 'appConfig'\n    }\n  },\n  {\n    path: 'app/config/create',\n    component: NewConfigPageComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      state: 'appConfigCreate'\n    }\n  },\n  {\n    path: 'app/config/presets',\n    component: PresetConfigPageComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      state: 'appConfigPresets'\n    }\n  },\n  {\n    path: 'app/config/edit',\n    component: EditConfigPageComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      state: 'appConfigEdit'\n    }\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ConfigRoutingModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfigsInterface.html":{"url":"interfaces/ConfigsInterface.html","title":"interface - ConfigsInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ConfigsInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        groups\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        groups\n                                    \n                                \n                                \n                                    \n                                        groups:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ConfigInterface {\n  activeConfig: string;\n}\n\nexport interface RuleInterface {\n  id: string;\n  name: string;\n  data?: any;\n  classifier?: string;\n  constraint?: string;\n}\n\nexport interface GroupFolderInterface {\n  name?: string;\n  renameUntitled?: boolean;\n  folderID?: string;\n}\n\nexport interface FolderCreation {\n  parent: {\n    folderID: string | undefined;\n    name: string | null;\n  };\n  prefix: {\n    type: string | null;\n    value: string;\n  };\n  name: {\n    type: string | null;\n    value: string;\n  };\n  suffix: {\n    type: string | null;\n    value: string;\n  };\n}\n\nexport interface GroupInterface {\n  id: string;\n  name: string;\n  rules: Array;\n  source: GroupFolderInterface;\n  destination?: GroupFolderInterface;\n  createFolder?: FolderCreation;\n}\n\nexport interface ConfigsInterface {\n  id: string;\n  name: string;\n  groups: Array;\n}\n\nexport interface JSONConfiguration {\n  configs: Array;\n  activeConfig: string\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseService.html":{"url":"injectables/DatabaseService.html","title":"injectable - DatabaseService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  DatabaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/database/database.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _activeConfigChanged\n                            \n                            \n                                    Private\n                                _configSubject\n                            \n                            \n                                    Public\n                                activeConfigChanged\n                            \n                            \n                                    Private\n                                configID\n                            \n                            \n                                    Public\n                                configs\n                            \n                            \n                                    Public\n                                configSubject\n                            \n                            \n                                    Private\n                                configuration\n                            \n                            \n                                    Public\n                                editingConfig\n                            \n                            \n                                    Public\n                                initalized\n                            \n                            \n                                    Public\n                                userID\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addConfig\n                            \n                            \n                                clearConfigs\n                            \n                            \n                                createConfig\n                            \n                            \n                                deleteConfig\n                            \n                            \n                                getActiveConfig\n                            \n                            \n                                getConfig\n                            \n                            \n                                getConfigs\n                            \n                            \n                                initalize\n                            \n                            \n                                numberConfigs\n                            \n                            \n                                setActiveConfig\n                            \n                            \n                                updateConfig\n                            \n                            \n                                    Private\n                                updateConfiguration\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/database/database.service.ts:34\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \naddConfig(config: ConfigsInterface)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:92\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    ConfigsInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clearConfigs\n                            \n                            \n                        \n                    \n                \n                \n                    \nclearConfigs()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:125\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateConfig(configName: string, firstGroupName: string, sourceLocation: GroupFolderInterface, destinationLocation: GroupFolderInterface, createFolder: FolderCreation, firstGroupRule: RuleInterface)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        firstGroupName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        sourceLocation\n                                                        \n                                                                    GroupFolderInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        destinationLocation\n                                                        \n                                                                    GroupFolderInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        createFolder\n                                                        \n                                                                    FolderCreation\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        firstGroupRule\n                                                        \n                                                                    RuleInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteConfig(configID: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:118\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getActiveConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetActiveConfig()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:138\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetConfig(configID: string, cb: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:109\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        cb\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getConfigs\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetConfigs()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:149\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Array\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initalize\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitalize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            numberConfigs\n                            \n                            \n                        \n                    \n                \n                \n                    \nnumberConfigs()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:153\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setActiveConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetActiveConfig(configID: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:134\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateConfig(newConfig: ConfigsInterface)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:99\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newConfig\n                                                        \n                                                                    ConfigsInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateConfiguration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateConfiguration()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _activeConfigChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _activeConfigChanged:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _configSubject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _configSubject:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            activeConfigChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeConfigChanged:     \n\n                    \n                \n                    \n                        \n                            Default value : this._activeConfigChanged.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            configID\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        configID:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            configs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        configs:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            configSubject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        configSubject:     \n\n                    \n                \n                    \n                        \n                            Default value : this._configSubject.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            configuration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        configuration:     JSONConfiguration\n\n                    \n                \n                    \n                        \n                            Type :     JSONConfiguration\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    configs: [],\n    activeConfig: ''\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editingConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editingConfig:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            initalized\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        initalized:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userID\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userID:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:34\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { ConfigBuilder } from '../../classes/config-builder';\nimport {\n  ConfigInterface,\n  ConfigsInterface,\n  FolderCreation,\n  GroupFolderInterface,\n  JSONConfiguration,\n  RuleInterface\n} from '../../../interfaces';\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n/**\n * Workaround for testing\n */\ndeclare var gapi: any;\ndeclare var google: any;\n\n@Injectable()\nexport class DatabaseService {\n  private _activeConfigChanged = new Subject();\n  private _configSubject = new Subject();\n  private configuration: JSONConfiguration = {\n    configs: [],\n    activeConfig: ''\n  };\n  private configID: string;\n\n  public activeConfigChanged = this._activeConfigChanged.asObservable();\n  public configSubject = this._configSubject.asObservable();\n  public configs: Array;\n  public editingConfig: string;\n  public initalized = false;\n  public userID: string;\n\n  constructor() {}\n\n  initalize(): void {\n    gapi.client.drive.files\n      .list({\n        q: \"name = 'configuration.json'\",\n        spaces: 'appDataFolder',\n        fields: 'files(id)'\n      })\n      .then(response => {\n        if (response.result.files.length > 0) {\n          this.configID = response.result.files[0].id;\n        } else {\n          gapi.client.drive.files\n            .create({\n              fields: 'id',\n              resource: {\n                name: 'configuration.json',\n                parents: ['appDataFolder']\n              }\n            })\n            .then(response => {\n              this.configID = response.result.id;\n            }, err => console.error);\n        }\n      }, err => console.error);\n    this.initalized = true;\n  }\n\n  /*\n    Configuration functions\n  */\n  private updateConfiguration() {}\n  /*\n  Config functions \n  */\n  createConfig(\n    configName: string,\n    firstGroupName: string,\n    sourceLocation: GroupFolderInterface,\n    destinationLocation: GroupFolderInterface,\n    createFolder: FolderCreation,\n    firstGroupRule: RuleInterface\n  ): void {\n    const newConfig = ConfigBuilder.generateNewConfig(\n      configName,\n      firstGroupName,\n      sourceLocation,\n      destinationLocation,\n      createFolder,\n      firstGroupRule\n    );\n    this.configuration.configs.push(newConfig);\n    this._configSubject.next(true);\n  }\n\n  addConfig(config: ConfigsInterface): Promise {\n    return new Promise((resolve, reject) => {\n      this.configuration.configs.push(config);\n      resolve();\n    });\n  }\n\n  updateConfig(newConfig: ConfigsInterface): void {\n    this.configuration.configs.forEach(config => {\n      if (config.id === this.editingConfig) {\n        config = newConfig;\n        this.editingConfig = '';\n        this._configSubject.next(true);\n      }\n    });\n  }\n\n  getConfig(configID: string, cb: Function): void {\n    let configs = this.configuration.configs;\n    cb(\n      configs.find(config => {\n        return config.id === configID;\n      })\n    );\n  }\n\n  deleteConfig(configID: string): void {\n    let configIndex = this.configs.findIndex(config => {\n      return config.id === configID;\n    });\n    this.configuration.configs.splice(configIndex, 1);\n  }\n\n  clearConfigs(): Promise {\n    return new Promise((resolve, reject) => {\n      if (this.configuration.configs) this.configuration.configs = [];\n      if (this.configuration.activeConfig)\n        this.configuration.activeConfig = null;\n      resolve();\n    });\n  }\n\n  setActiveConfig(configID: string): void {\n    this.configuration.activeConfig = configID;\n  }\n\n  getActiveConfig(): Promise {\n    return new Promise((resolve, reject) => {\n      if (\n        this.configuration.activeConfig &&\n        this.configuration.activeConfig.length > 0\n      )\n        resolve(this.configuration.activeConfig);\n      else reject('No active config');\n    });\n  }\n\n  getConfigs(): Array {\n    return this.configuration.configs;\n  }\n\n  numberConfigs(): Promise {\n    return new Promise((resolve, reject) => {\n      if (this.configuration.configs)\n        resolve(this.configuration.configs.length);\n      else resolve(0);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DriveQueryBuilder.html":{"url":"classes/DriveQueryBuilder.html","title":"class - DriveQueryBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DriveQueryBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/drive-query-builder.ts\n        \n\n            \n                Description\n            \n            \n                A utility class to build Google Drive query's\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                query\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createdAfter\n                            \n                            \n                                createdBefore\n                            \n                            \n                                excludesOwner\n                            \n                            \n                                excludeType\n                            \n                            \n                                fullTextContains\n                            \n                            \n                                get\n                            \n                            \n                                hasOwner\n                            \n                            \n                                modifiedAfter\n                            \n                            \n                                modifiedBefore\n                            \n                            \n                                nameContains\n                            \n                            \n                                nameExcludes\n                            \n                            \n                                openedAfter\n                            \n                            \n                                openedBefore\n                            \n                            \n                                requiresType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(parentFolderID: string, disableTrashed: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/drive-query-builder.ts:50\n                            \n                        \n\n                \n                    \n                            Creates an instance of DriveQueryBuilder.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        parentFolderID\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The ID of the folder to search in\n\n                                                        \n                                                \n                                                \n                                                        disableTrashed\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Whether or not to include file in trash\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            query\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        query:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:40\n                            \n                        \n\n                \n                    \n                        The current generated query\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAfter\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreatedAfter(date: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:139\n                            \n                        \n\n\n                \n                    \n                            Require the file to be created after the supplied date\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The date the file should be created after\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdBefore\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreatedBefore(date: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:150\n                            \n                        \n\n\n                \n                    \n                            Require the file to be created before the supplied date\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The date the file should be created before\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            excludesOwner\n                            \n                            \n                        \n                    \n                \n                \n                    \nexcludesOwner(email: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:128\n                            \n                        \n\n\n                \n                    \n                            Adds a owner exclusion to the query\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The owners email address to exclude\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            excludeType\n                            \n                            \n                        \n                    \n                \n                \n                    \nexcludeType(mimeType: DriveMimeType)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:73\n                            \n                        \n\n\n                \n                    \n                            Add a file type to ignore to the query\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        mimeType\n                                                        \n                                                                    DriveMimeType\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The file type to ignore\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fullTextContains\n                            \n                            \n                        \n                    \n                \n                \n                    \nfullTextContains(text: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:209\n                            \n                        \n\n\n                \n                    \n                            Require the document name, description, content, or indexable text to have the supplied text\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The text the document needs to have\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:48\n                            \n                        \n\n\n                \n                    \n                            Returns the current query\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The built query\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasOwner\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasOwner(email: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:117\n                            \n                        \n\n\n                \n                    \n                            Adds a owner requirement to the query\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The owners email address\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modifiedAfter\n                            \n                            \n                        \n                    \n                \n                \n                    \nmodifiedAfter(date: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:161\n                            \n                        \n\n\n                \n                    \n                            Require the file to be modified after the supplied date\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The date the file should be modified after\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modifiedBefore\n                            \n                            \n                        \n                    \n                \n                \n                    \nmodifiedBefore(date: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:172\n                            \n                        \n\n\n                \n                    \n                            Require the file to be modified before the supplied date\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The date the file should be modified before\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nameContains\n                            \n                            \n                        \n                    \n                \n                \n                    \nnameContains(string: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:95\n                            \n                        \n\n\n                \n                    \n                            Add a name content's requirement to the query\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        string\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The string the name needs\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nameExcludes\n                            \n                            \n                        \n                    \n                \n                \n                    \nnameExcludes(string: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:106\n                            \n                        \n\n\n                \n                    \n                            Add a name content's to exclude from the query\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        string\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openedAfter\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenedAfter(date: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:183\n                            \n                        \n\n\n                \n                    \n                            Require the file to be opened after the supplied date\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The date the file beeds to be opened after\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openedBefore\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenedBefore(date: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:196\n                            \n                        \n\n\n                \n                    \n                            Require the file to be opened before the supplied date\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The date the file beeds to be opened before\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requiresType\n                            \n                            \n                        \n                    \n                \n                \n                    \nrequiresType(mimeType: DriveMimeType)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:84\n                            \n                        \n\n\n                \n                    \n                            Add a file type to require to the query\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        mimeType\n                                                        \n                                                                    DriveMimeType\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The file type to require\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export enum DriveMimeType {\n  audio = 'application/vnd.google-apps.audio',\n  document = 'application/vnd.google-apps.document',\n  drawing = 'application/vnd.google-apps.drawing',\n  file = 'application/vnd.google-apps.file',\n  folder = 'application/vnd.google-apps.folder',\n  form = 'application/vnd.google-apps.form',\n  fustiontable = 'application/vnd.google-apps.fusiontable',\n  map = 'application/vnd.google-apps.map',\n  photo = 'application/vnd.google-apps.photo',\n  presentation = 'application/vnd.google-apps.presentation',\n  script = 'application/vnd.google-apps.script',\n  site = 'application/vnd.google-apps.site',\n  spreadsheet = 'application/vnd.google-apps.spreadsheet',\n  unknown = 'application/vnd.google-apps.unknown',\n  video = 'application/vnd.google-apps.video',\n  thirdParty = 'application/vnd.google-apps.drive-sdk'\n}\n\n/**\n * A utility class to build Google Drive query's\n *\n * @export\n * @class DriveQueryBuilder\n */\nexport class DriveQueryBuilder {\n  /**\n   * The current generated query\n   *\n   * @private\n   * @type {string}\n   * @memberof DriveQueryBuilder\n   */\n  private query: string = '';\n\n  /**\n   * Returns the current query\n   *\n   * @returns {string} The built query\n   * @memberof DriveQueryBuilder\n   */\n  get(): string {\n    return this.query;\n  }\n\n  /**\n   * Creates an instance of DriveQueryBuilder.\n   * @param {string} parentFolderID The ID of the folder to search in\n   * @param {boolean} disableTrashed Whether or not to include file in trash\n   * @memberof DriveQueryBuilder\n   */\n  constructor(parentFolderID: string, disableTrashed: boolean) {\n    if (parentFolderID) {\n      this.query += `'${parentFolderID}' in parents`;\n    }\n    if (disableTrashed) {\n      this.query += ' and trashed=false';\n    }\n  }\n\n  /**\n   * Add a file type to ignore to the query\n   *\n   * @param {DriveMimeType} mimeType The file type to ignore\n   * @memberof DriveQueryBuilder\n   */\n  excludeType(mimeType: DriveMimeType): DriveQueryBuilder {\n    this.query += ` and mimeType != '${mimeType}'`;\n    return this;\n  }\n\n  /**\n   * Add a file type to require to the query\n   *\n   * @param {DriveMimeType} mimeType The file type to require\n   * @memberof DriveQueryBuilder\n   */\n  requiresType(mimeType: DriveMimeType): DriveQueryBuilder {\n    this.query += ` and mimeType = '${mimeType}'`;\n    return this;\n  }\n\n  /**\n   * Add a name content's requirement to the query\n   *\n   * @param {string} string The string the name needs\n   * @memberof DriveQueryBuilder\n   */\n  nameContains(string: string): DriveQueryBuilder {\n    this.query += ` and name contains '${string}'`;\n    return this;\n  }\n\n  /**\n   * Add a name content's to exclude from the query\n   *\n   * @param {string} string\n   * @memberof DriveQueryBuilder\n   */\n  nameExcludes(string: string): DriveQueryBuilder {\n    this.query += ` and not name contains '${string}'`;\n    return this;\n  }\n\n  /**\n   * Adds a owner requirement to the query\n   *\n   * @param {string} email The owners email address\n   * @memberof DriveQueryBuilder\n   */\n  hasOwner(email: string): DriveQueryBuilder {\n    this.query += ` and ${email} in owners`;\n    return this;\n  }\n\n  /**\n   * Adds a owner exclusion to the query\n   *\n   * @param {string} email The owners email address to exclude\n   * @memberof DriveQueryBuilder\n   */\n  excludesOwner(email: string): DriveQueryBuilder {\n    this.query += ` and not ${email} in  owners`;\n    return this;\n  }\n\n  /**\n   * Require the file to be created after the supplied date\n   *\n   * @param {Date} date The date the file should be created after\n   * @memberof DriveQueryBuilder\n   */\n  createdAfter(date: Date): DriveQueryBuilder {\n    this.query += ` and createdTime >= '${date.toISOString().split('.')[0]}'`;\n    return this;\n  }\n\n  /**\n   * Require the file to be created before the supplied date\n   *\n   * @param {Date} date The date the file should be created before\n   * @memberof DriveQueryBuilder\n   */\n  createdBefore(date: Date): DriveQueryBuilder {\n    this.query += ` and createdTime = '${date.toISOString().split('.')[0]}'`;\n    return this;\n  }\n\n  /**\n   * Require the file to be modified before the supplied date\n   *\n   * @param {Date} date The date the file should be modified before\n   * @memberof DriveQueryBuilder\n   */\n  modifiedBefore(date: Date): DriveQueryBuilder {\n    this.query += ` and modifiedTime = '${\n      date.toISOString().split('.')[0]\n    }'`;\n    return this;\n  }\n\n  /**\n   * Require the file to be opened before the supplied date\n   *\n   * @param {Date} date The date the file beeds to be opened before\n   * @memberof DriveQueryBuilder\n   */\n  openedBefore(date: Date): DriveQueryBuilder {\n    this.query += ` and viewedByMeTime \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FolderCreation.html":{"url":"interfaces/FolderCreation.html","title":"interface - FolderCreation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FolderCreation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        parent\n                                \n                                \n                                        prefix\n                                \n                                \n                                        suffix\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                    \n                                \n                                \n                                    \n                                        parent:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prefix\n                                    \n                                \n                                \n                                    \n                                        prefix:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        suffix\n                                    \n                                \n                                \n                                    \n                                        suffix:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ConfigInterface {\n  activeConfig: string;\n}\n\nexport interface RuleInterface {\n  id: string;\n  name: string;\n  data?: any;\n  classifier?: string;\n  constraint?: string;\n}\n\nexport interface GroupFolderInterface {\n  name?: string;\n  renameUntitled?: boolean;\n  folderID?: string;\n}\n\nexport interface FolderCreation {\n  parent: {\n    folderID: string | undefined;\n    name: string | null;\n  };\n  prefix: {\n    type: string | null;\n    value: string;\n  };\n  name: {\n    type: string | null;\n    value: string;\n  };\n  suffix: {\n    type: string | null;\n    value: string;\n  };\n}\n\nexport interface GroupInterface {\n  id: string;\n  name: string;\n  rules: Array;\n  source: GroupFolderInterface;\n  destination?: GroupFolderInterface;\n  createFolder?: FolderCreation;\n}\n\nexport interface ConfigsInterface {\n  id: string;\n  name: string;\n  groups: Array;\n}\n\nexport interface JSONConfiguration {\n  configs: Array;\n  activeConfig: string\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FolderCreationComponent.html":{"url":"components/FolderCreationComponent.html","title":"component - FolderCreationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FolderCreationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/folder-creation/folder-creation.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-folder-creation\n            \n\n            \n                styleUrls\n                folder-creation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./folder-creation.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createFolder\n                            \n                            \n                                    Public\n                                finished\n                            \n                            \n                                    Public\n                                namingOptions\n                            \n                            \n                                    Public\n                                parentFolderIsRoot\n                            \n                            \n                                    Private\n                                valueAttributes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                done\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                opened\n                            \n                            \n                                openFolderPicker\n                            \n                            \n                                reset\n                            \n                            \n                                rootToggleChange\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                inputFolder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(google: GoogleService, snackbar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:67\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        google\n                                                  \n                                                        \n                                                                    GoogleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        inputFolder\n                    \n                    \n                            \n                            Type:    FolderCreation\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:19\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:21\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            done\n                            \n                            \n                        \n                    \n                \n                \n                    \ndone()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:146\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            opened\n                            \n                            \n                        \n                    \n                \n                \n                    \nopened()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:79\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openFolderPicker\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenFolderPicker()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:85\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:153\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rootToggleChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nrootToggleChange(event: MatSlideToggleChange)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:102\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    MatSlideToggleChange\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validate\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalidate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:118\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            createFolder\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        createFolder:     FolderCreation\n\n                    \n                \n                    \n                        \n                            Type :     FolderCreation\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    parent: {\n      folderID: undefined,\n      name: null\n    },\n    prefix: {\n      type: null,\n      value: ''\n    },\n    name: {\n      type: null,\n      value: ''\n    },\n    suffix: {\n      type: null,\n      value: ''\n    }\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            finished\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        finished:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            namingOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        namingOptions:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      name: 'Text',\n      value: 'text'\n    },\n    {\n      name: 'Sorting Date',\n      value: 'date'\n    },\n    {\n      name: 'None',\n      value: 'none'\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            parentFolderIsRoot\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parentFolderIsRoot:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            valueAttributes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        valueAttributes:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['prefix', 'name', 'suffix']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:61\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  AfterViewInit,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output\n} from '@angular/core';\nimport { FolderCreation } from '../../../../interfaces';\nimport { GoogleService } from '../../../services/google/google.service';\nimport { MatSlideToggleChange, MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-folder-creation',\n  templateUrl: './folder-creation.component.html',\n  styleUrls: ['./folder-creation.component.scss']\n})\nexport class FolderCreationComponent implements AfterViewInit {\n  @Input() inputFolder: FolderCreation;\n\n  @Output() valueChange = new EventEmitter();\n\n  private valueAttributes = ['prefix', 'name', 'suffix'];\n\n  public namingOptions = [\n    {\n      name: 'Text',\n      value: 'text'\n    },\n    {\n      name: 'Sorting Date',\n      value: 'date'\n    },\n    {\n      name: 'None',\n      value: 'none'\n    }\n  ];\n  public createFolder: FolderCreation = {\n    parent: {\n      folderID: undefined,\n      name: null\n    },\n    prefix: {\n      type: null,\n      value: ''\n    },\n    name: {\n      type: null,\n      value: ''\n    },\n    suffix: {\n      type: null,\n      value: ''\n    }\n  };\n  public parentFolderIsRoot: boolean = false;\n\n  public finished: boolean = false;\n\n  public get value(): FolderCreation {\n    if (this.validate()) {\n      return this.createFolder;\n    } else {\n      return null;\n    }\n  }\n\n  constructor(private google: GoogleService, private snackbar: MatSnackBar) {}\n\n  ngAfterViewInit() {\n    if (this.inputFolder) {\n      setTimeout(_ => {\n        this.createFolder = this.inputFolder;\n      });\n    }\n  }\n\n  opened() {\n    setTimeout(_ => {\n      this.finished = false;\n    });\n  }\n\n  openFolderPicker() {\n    let folderPickedListener = this.google.folderPicked$.subscribe(\n      pickedFolder => {\n        this.createFolder.parent = {\n          folderID: pickedFolder.id,\n          name: pickedFolder.name\n        };\n        folderPickedListener.unsubscribe();\n      },\n      err => {\n        console.error(err);\n        folderPickedListener.unsubscribe();\n      }\n    );\n    this.google.openFilePicker();\n  }\n\n  rootToggleChange(event: MatSlideToggleChange) {\n    if (event.checked) {\n      this.parentFolderIsRoot = true;\n      this.createFolder.parent = {\n        folderID: 'root',\n        name: 'My Drive'\n      };\n    } else {\n      this.parentFolderIsRoot = false;\n      this.createFolder.parent = {\n        folderID: undefined,\n        name: null\n      };\n    }\n  }\n\n  validate(): boolean {\n    const folder = this.createFolder;\n    if (folder) {\n      if (folder.parent.folderID !== undefined) {\n        let anyInvalid = false;\n        let numNone = 0;\n        this.valueAttributes.forEach(attribute => {\n          if (folder[attribute].type === 'none') {\n            numNone += 1;\n          }\n          if (folder[attribute].type === 'text') {\n            if (folder[attribute].value.length \n    \n\n    \n        \n  \n    \n      \n        Folder Creation\n      \n    \n    \n      \n        \n          \n          \n            folder\n          \n        \n        My Drive\n      \n      \n        \n          \n            {{ option.name }}\n          \n        \n        \n          \n            {{ option.name }}\n          \n        \n        \n          \n            {{ option.name }}\n          \n        \n      \n      \n        \n          \n        \n        \n          \n        \n        \n          \n        \n      \n    \n    \n      Done\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Folder Creation                                                            folder                          My Drive                                          {{ option.name }}                                                {{ option.name }}                                                {{ option.name }}                                                                                                                                Done      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'ConfigListComponent', 'selector': 'app-config-list'},{'name': 'ConfigModalComponent', 'selector': 'app-config-modal'},{'name': 'EditConfigModalComponent', 'selector': 'app-edit-config-modal'},{'name': 'EditConfigPageComponent', 'selector': 'app-edit-config-page'},{'name': 'FolderCreationComponent', 'selector': 'app-folder-creation'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NewConfigPageComponent', 'selector': 'app-new-rule-page'},{'name': 'NewRuleStepperComponent', 'selector': 'app-new-rule-stepper'},{'name': 'PresetConfigComponent', 'selector': 'app-preset-config'},{'name': 'PresetConfigPageComponent', 'selector': 'app-preset-config-page'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'UnauthenticatedComponent', 'selector': 'app-unauthenticated'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FolderCreationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleService.html":{"url":"injectables/GoogleService.html","title":"injectable - GoogleService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  GoogleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/google/google.service.ts\n        \n\n            \n                Description\n            \n            \n                Utility class to handle all interacting with the Google API\n\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _authState\n                            \n                            \n                                    Public\n                                authState$\n                            \n                            \n                                    Public\n                                folderPicked$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createFolder\n                            \n                            \n                                getAuthStatus\n                            \n                            \n                                getFileInfo\n                            \n                            \n                                getToken\n                            \n                            \n                                init\n                            \n                            \n                                listFiles\n                            \n                            \n                                moveFile\n                            \n                            \n                                openFilePicker\n                            \n                            \n                                renameFile\n                            \n                            \n                                signIn\n                            \n                            \n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(database: DatabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/google/google.service.ts:53\n                            \n                        \n\n                \n                    \n                            Creates an instance of GoogleService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        database\n                                                  \n                                                        \n                                                                    DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createFolder\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateFolder(name: string, parent?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:178\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        parent\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAuthStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAuthStatus()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:116\n                            \n                        \n\n\n                \n                    \n                            Returns the users current authentication status.\n\n\n                            \n                            \n                            \n                                Returns :     Boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFileInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFileInfo(fileID: string, fields: string, cb: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:163\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        fields\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        cb\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getToken\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:149\n                            \n                        \n\n\n                \n                    \n                            Gets the users id token\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit(config: Object, callback?: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:69\n                            \n                        \n\n\n                \n                    \n                            Initialize the Google API\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        callback\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listFiles\n                            \n                            \n                        \n                    \n                \n                \n                    \nlistFiles(query: string, cb: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:153\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        cb\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moveFile\n                            \n                            \n                        \n                    \n                \n                \n                    \nmoveFile(fileID: string, folder: string, cb: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:211\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        folder\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        cb\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openFilePicker\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenFilePicker()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:106\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            renameFile\n                            \n                            \n                        \n                    \n                \n                \n                    \nrenameFile(fileID: string, name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:197\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signIn\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignIn()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:129\n                            \n                        \n\n\n                \n                    \n                            Opens a popup allowing the user to sign in.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:138\n                            \n                        \n\n\n                \n                    \n                            Signs a user out\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _authState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _authState:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:44\n                            \n                        \n\n                \n                    \n                        Holds a subject that is used to update subscribers with the authentication status.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authState$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authState$:     \n\n                    \n                \n                    \n                        \n                            Default value : this._authState.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:51\n                            \n                        \n\n                \n                    \n                        Allows other modules / services to subscribe to the authentication status.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            folderPicked$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        folderPicked$:     \n\n                    \n                \n                    \n                        \n                            Default value : _folderPicked.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:53\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { DriveMimeType } from '../../classes/drive-query-builder';\nimport { DatabaseService } from '../database/database.service';\n\n/**\n * Workaround for testing\n */\ndeclare var gapi: any;\ndeclare var google: any;\n\n/**\n * Variable for easy reference to the authenitcation instance.\n */\nlet authInstance;\n\nlet folderPicker;\n\nlet _folderPicked = new Subject();\n\nfunction folderPicked(data: any): void {\n  if (data.action === 'picked') {\n    _folderPicked.next(data.docs[0]);\n  } else if (data.action === 'cancel') {\n    _folderPicked.error(true);\n  }\n}\n\n/**\n * Utility class to handle all interacting with the Google API\n *\n * @export\n * @class GoogleService\n */\n@Injectable()\nexport class GoogleService {\n  /**\n   * Holds a subject that is used to update subscribers with the authentication status.\n   *\n   * @private\n   * @memberof GoogleService\n   */\n  private _authState = new Subject();\n\n  /**\n   * Allows other modules / services to subscribe to the authentication status.\n   *\n   * @memberof GoogleService\n   */\n  public authState$ = this._authState.asObservable();\n\n  public folderPicked$ = _folderPicked.asObservable();\n\n  /**\n   * Creates an instance of GoogleService.\n   * @memberof GoogleService\n   */\n  constructor(\n    private database: DatabaseService\n  ) {}\n\n  /**\n   * Initialize the Google API\n   *\n   * @param {Object} config\n   * @memberof GoogleService\n   */\n  init(config: Object, callback?: Function) {\n    gapi.load('client:auth2', () => {\n      console.debug('GAPI: Client & Auth Loaded');\n      gapi.client.init(config).then(() => {\n        authInstance = gapi.auth2.getAuthInstance();\n        authInstance.isSignedIn.listen(() => {\n          this._authState.next(authInstance.isSignedIn.get());\n        });\n        const authStatus = authInstance.isSignedIn.get();\n        this._authState.next(authStatus);\n        gapi.load('picker', () => {\n          console.debug('GAPI: Picker Loaded');\n          const view = new google.picker.DocsView(google.picker.ViewId.FOLDERS)\n            .setIncludeFolders(true)\n            .setSelectFolderEnabled(true)\n            .setParent('root')\n            .setOwnedByMe(true);\n\n          folderPicker = new google.picker.PickerBuilder()\n            .disableFeature(google.picker.Feature.SUPPORT_TEAM_DRIVES)\n            .setAppId(362606538820)\n            .setOAuthToken(\n              authInstance.currentUser.get().getAuthResponse().access_token\n            )\n            .setDeveloperKey('AIzaSyB-yE9IXT29Vl_eAU7bzvzv5Qe17flfpzM')\n            .setSelectableMimeTypes('application/vnd.google-apps.folder')\n            .addView(view)\n            .setCallback(folderPicked)\n            .build();\n          if (callback) {\n            callback();\n          }\n        });\n      }, console.error);\n    });\n  }\n\n  openFilePicker() {\n    folderPicker.setVisible(true);\n  }\n\n  /**\n   * Returns the users current authentication status.\n   *\n   * @returns {Boolean}\n   * @memberof GoogleService\n   */\n  getAuthStatus(): Boolean {\n    if (authInstance) {\n      return authInstance.isSignedIn.get();\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Opens a popup allowing the user to sign in.\n   *\n   * @memberof GoogleService\n   */\n  signIn(): void {\n    authInstance.signIn();\n  }\n\n  /**\n   * Signs a user out\n   *\n   * @memberof GoogleService\n   */\n  signOut(): void {\n    authInstance.signOut();\n    this.database.initalized = false;\n  }\n\n  /**\n   * Gets the users id token\n   *\n   * @returns {string}\n   * @memberof GoogleService\n   */\n  getToken(): string {\n    return authInstance.currentUser.get().getAuthResponse().id_token;\n  }\n\n  listFiles(query: string, cb: Function): void {\n    gapi.client.drive.files\n      .list({\n        q: query\n      })\n      .execute(resp => {\n        cb(resp);\n      });\n  }\n\n  getFileInfo(fileID: string, fields: string, cb: Function): void {\n    gapi.client.drive.files\n      .get({\n        fileId: fileID,\n        fields: fields\n      })\n      .execute(resp => {\n        if (resp.err) {\n          console.error(resp.err);\n        } else {\n          cb(resp);\n        }\n      });\n  }\n\n  createFolder(name: string, parent?: string): Promise {\n    const fileResource = {\n      name: name,\n      mimeType: DriveMimeType.folder\n    }\n    if (parent) fileResource['parents'] = [parent];\n    return new Promise((resolve, reject) => {\n      gapi.client.drive.files\n        .create({\n          resource: fileResource,\n          fields: 'id'\n        })\n        .execute(resp => {\n          if (resp.err) reject(resp.err);\n          else resolve(resp.id);\n        });\n    });\n  }\n\n  renameFile(fileID: string, name: string) {\n    return new Promise((resolve, reject) => {\n      gapi.client.drive.files.update({\n        'fileId': fileID,\n        'resource': {\n          'name': name\n        }\n      }).execute(resp => {\n        if (resp.err) reject(resp.err);\n        else resolve();\n      })\n    });\n  }\n\n  moveFile(fileID: string, folder: string, cb: Function): void {\n    this.getFileInfo(fileID, 'parents', file => {\n      const prevParents = file.parents.join(',');\n      gapi.client.drive.files\n        .update({\n          fileId: fileID,\n          addParents: folder,\n          removeParents: prevParents\n        })\n        .execute(resp => {\n          if (resp.err) {\n            console.error(resp.err);\n          } else {\n            cb(true);\n          }\n        });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GroupFolderInterface.html":{"url":"interfaces/GroupFolderInterface.html","title":"interface - GroupFolderInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GroupFolderInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        folderID\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        renameUntitled\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        folderID\n                                    \n                                \n                                \n                                    \n                                        folderID:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        renameUntitled\n                                    \n                                \n                                \n                                    \n                                        renameUntitled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ConfigInterface {\n  activeConfig: string;\n}\n\nexport interface RuleInterface {\n  id: string;\n  name: string;\n  data?: any;\n  classifier?: string;\n  constraint?: string;\n}\n\nexport interface GroupFolderInterface {\n  name?: string;\n  renameUntitled?: boolean;\n  folderID?: string;\n}\n\nexport interface FolderCreation {\n  parent: {\n    folderID: string | undefined;\n    name: string | null;\n  };\n  prefix: {\n    type: string | null;\n    value: string;\n  };\n  name: {\n    type: string | null;\n    value: string;\n  };\n  suffix: {\n    type: string | null;\n    value: string;\n  };\n}\n\nexport interface GroupInterface {\n  id: string;\n  name: string;\n  rules: Array;\n  source: GroupFolderInterface;\n  destination?: GroupFolderInterface;\n  createFolder?: FolderCreation;\n}\n\nexport interface ConfigsInterface {\n  id: string;\n  name: string;\n  groups: Array;\n}\n\nexport interface JSONConfiguration {\n  configs: Array;\n  activeConfig: string\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GroupInterface.html":{"url":"interfaces/GroupInterface.html","title":"interface - GroupInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GroupInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        createFolder\n                                \n                                \n                                            Optional\n                                        destination\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        rules\n                                \n                                \n                                        source\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createFolder\n                                    \n                                \n                                \n                                    \n                                        createFolder:     FolderCreation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FolderCreation\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                    \n                                \n                                \n                                    \n                                        destination:     GroupFolderInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     GroupFolderInterface\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rules\n                                    \n                                \n                                \n                                    \n                                        rules:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:     GroupFolderInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     GroupFolderInterface\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ConfigInterface {\n  activeConfig: string;\n}\n\nexport interface RuleInterface {\n  id: string;\n  name: string;\n  data?: any;\n  classifier?: string;\n  constraint?: string;\n}\n\nexport interface GroupFolderInterface {\n  name?: string;\n  renameUntitled?: boolean;\n  folderID?: string;\n}\n\nexport interface FolderCreation {\n  parent: {\n    folderID: string | undefined;\n    name: string | null;\n  };\n  prefix: {\n    type: string | null;\n    value: string;\n  };\n  name: {\n    type: string | null;\n    value: string;\n  };\n  suffix: {\n    type: string | null;\n    value: string;\n  };\n}\n\nexport interface GroupInterface {\n  id: string;\n  name: string;\n  rules: Array;\n  source: GroupFolderInterface;\n  destination?: GroupFolderInterface;\n  createFolder?: FolderCreation;\n}\n\nexport interface ConfigsInterface {\n  id: string;\n  name: string;\n  groups: Array;\n}\n\nexport interface JSONConfiguration {\n  configs: Array;\n  activeConfig: string\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tabs/home/home.component.ts\n\n\n    \n        Description\n    \n    \n        Declare a component to be shown when the home tab is selected.\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeConfigName\n                            \n                            \n                                    Public\n                                isActiveConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToConfigPage\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                sortUsersDrive\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(zone: NgZone, router: Router, snackBar: MatSnackBar, database: DatabaseService, sorterService: SorterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tabs/home/home.component.ts:21\n                            \n                        \n\n                \n                    \n                            Creates an instance of HomeComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        database\n                                                  \n                                                        \n                                                                    DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        sorterService\n                                                  \n                                                        \n                                                                    SorterService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToConfigPage\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToConfigPage()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/home/home.component.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/home/home.component.ts:40\n                            \n                        \n\n\n                \n                    \n                            Handle component initalization\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortUsersDrive\n                            \n                            \n                        \n                    \n                \n                \n                    \nsortUsersDrive()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/home/home.component.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            activeConfigName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeConfigName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Loading...'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/home/home.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isActiveConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isActiveConfig:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/home/home.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, NgZone, AfterViewInit } from '@angular/core';\nimport { DatabaseService } from '../../../services/database/database.service';\nimport { MatSnackBar } from '@angular/material';\nimport { SorterService } from '../../../services/sorter/sorter.service';\nimport { Router } from '@angular/router';\n\n/**\n * Declare a component to be shown when the home tab is selected.\n *\n * @export\n * @class HomeComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements AfterViewInit {\n  public isActiveConfig: boolean = false;\n  public activeConfigName: string = 'Loading...';\n\n  /**\n   * Creates an instance of HomeComponent.\n   * @memberof HomeComponent\n   */\n  constructor(\n    private zone: NgZone,\n    private router: Router,\n    private snackBar: MatSnackBar,\n    private database: DatabaseService,\n    private sorterService: SorterService\n  ) {}\n\n  /**\n   * Handle component initalization\n   *\n   * @memberof HomeComponent\n   */\n  ngAfterViewInit() {\n    let databaseInitalizedCheck = setInterval(() => {\n      if (this.database.initalized) {\n        this.database.getActiveConfig().then(\n          activeConfig => {\n            this.database.getConfig(activeConfig, config => {\n              this.activeConfigName = config.name;\n            });\n            this.isActiveConfig = true;\n          },\n          err => {\n            console.log(err);\n            this.activeConfigName = err;\n            this.isActiveConfig = false;\n          }\n        );\n        clearInterval(databaseInitalizedCheck);\n      }\n    }, 750);\n  }\n\n  sortUsersDrive() {\n    this.sorterService.sort().then(() => {\n      this.snackBar.open('Google Drive sorted!', 'OK', {\n        duration: 5000\n      });\n    }, err => console.error);\n  }\n\n  goToConfigPage() {\n    this.zone.run(() => {\n      this.router.navigateByUrl('/app/config');\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      settings_power\n      Active Config\n    \n    \n      {{ activeConfigName }}\n    \n  \n  \n    \n      sort\n      Sorting\n    \n    \n      Sort Now\n    \n  \n\n\n  \n    \n      settings\n      Configuration's\n    \n    \n      Configuration's control how your Google Drive is sorted!\n    \n    \n      Go to Configuration's\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            settings_power      Active Config              {{ activeConfigName }}                  sort      Sorting              Sort Now                  settings      Configuration\\'s              Configuration\\'s control how your Google Drive is sorted!              Go to Configuration\\'s      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'ConfigListComponent', 'selector': 'app-config-list'},{'name': 'ConfigModalComponent', 'selector': 'app-config-modal'},{'name': 'EditConfigModalComponent', 'selector': 'app-edit-config-modal'},{'name': 'EditConfigPageComponent', 'selector': 'app-edit-config-page'},{'name': 'FolderCreationComponent', 'selector': 'app-folder-creation'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NewConfigPageComponent', 'selector': 'app-new-rule-page'},{'name': 'NewRuleStepperComponent', 'selector': 'app-new-rule-stepper'},{'name': 'PresetConfigComponent', 'selector': 'app-preset-config'},{'name': 'PresetConfigPageComponent', 'selector': 'app-preset-config-page'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'UnauthenticatedComponent', 'selector': 'app-unauthenticated'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JSONConfiguration.html":{"url":"interfaces/JSONConfiguration.html","title":"interface - JSONConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JSONConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        activeConfig\n                                \n                                \n                                        configs\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activeConfig\n                                    \n                                \n                                \n                                    \n                                        activeConfig:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        configs\n                                    \n                                \n                                \n                                    \n                                        configs:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ConfigInterface {\n  activeConfig: string;\n}\n\nexport interface RuleInterface {\n  id: string;\n  name: string;\n  data?: any;\n  classifier?: string;\n  constraint?: string;\n}\n\nexport interface GroupFolderInterface {\n  name?: string;\n  renameUntitled?: boolean;\n  folderID?: string;\n}\n\nexport interface FolderCreation {\n  parent: {\n    folderID: string | undefined;\n    name: string | null;\n  };\n  prefix: {\n    type: string | null;\n    value: string;\n  };\n  name: {\n    type: string | null;\n    value: string;\n  };\n  suffix: {\n    type: string | null;\n    value: string;\n  };\n}\n\nexport interface GroupInterface {\n  id: string;\n  name: string;\n  rules: Array;\n  source: GroupFolderInterface;\n  destination?: GroupFolderInterface;\n  createFolder?: FolderCreation;\n}\n\nexport interface ConfigsInterface {\n  id: string;\n  name: string;\n  groups: Array;\n}\n\nexport interface JSONConfiguration {\n  configs: Array;\n  activeConfig: string\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PresetConfigComponent.html":{"url":"components/PresetConfigComponent.html","title":"component - PresetConfigComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PresetConfigComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tabs/config/preset-config/preset-config.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-preset-config\n            \n\n            \n                styleUrls\n                preset-config.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./preset-config.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _closeCommand\n                            \n                            \n                                    Public\n                                closeCommand\n                            \n                            \n                                    Public\n                                creationEnabled\n                            \n                            \n                                    Public\n                                isPage\n                            \n                            \n                                    Public\n                                presets\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                zone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addPreset\n                            \n                            \n                                close\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(zone: NgZone, router: Router, snackbar: MatSnackBar, google: GoogleService, database: DatabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        google\n                                                  \n                                                        \n                                                                    GoogleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        database\n                                                  \n                                                        \n                                                                    DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addPreset\n                            \n                            \n                        \n                    \n                \n                \n                    \naddPreset(presetID: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        presetID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \nclose()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _closeCommand\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _closeCommand:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            closeCommand\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        closeCommand:     \n\n                    \n                \n                    \n                        \n                            Default value : this._closeCommand.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            creationEnabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        creationEnabled:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isPage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isPage:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            presets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        presets:     \n\n                    \n                \n                    \n                        \n                            Default value : presets\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            zone\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zone:     NgZone\n\n                    \n                \n                    \n                        \n                            Type :     NgZone\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, NgZone } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { presets } from '../presets';\nimport { GoogleService } from '../../../../services/google/google.service';\nimport { v4 as uuid } from 'uuid';\nimport { ConfigBuilder } from '../../../../classes/config-builder';\nimport { DatabaseService } from '../../../../services/database/database.service';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-preset-config',\n  templateUrl: './preset-config.component.html',\n  styleUrls: ['./preset-config.component.scss']\n})\nexport class PresetConfigComponent implements OnInit {\n  private _closeCommand = new Subject();\n\n  public closeCommand = this._closeCommand.asObservable();\n\n  public isPage = false;\n  public presets = presets;\n  public creationEnabled = true;\n\n  constructor(\n    public zone: NgZone,\n    public router: Router,\n    private snackbar: MatSnackBar,\n    private google: GoogleService,\n    private database: DatabaseService\n  ) {}\n\n  ngOnInit() {}\n\n  close() {\n    this._closeCommand.next(true);\n  }\n\n  addPreset(presetID: string) {\n    const config = presets.find(element => {\n      return element.id === presetID;\n    });\n    const createFolders = config.data.createFolders;\n    const groups = config.data.groups;\n    const createdFolders = [];\n    let requestsSent = 0;\n    let requestsRecived = 0;\n    this.creationEnabled = false;\n    createFolders.forEach(folder => {\n      requestsSent += 1;\n      this.google\n        .createFolder(folder)\n        .then(id => {\n          requestsRecived += 1;\n          let group = groups.find(group => {\n            return group.destination.presetID === folder;\n          });\n          group.destination = {\n            folderID: id,\n            name: folder\n          };\n        })\n        .catch(err => console.error);\n    });\n    let checkInterval = setInterval(() => {\n      if (requestsSent === requestsRecived) {\n        clearInterval(checkInterval);\n        groups.forEach(group => {\n          group['id'] = uuid();\n          group.rules.forEach(rule => {\n            rule['id'] = uuid();\n          });\n        });\n        this.database\n          .addConfig(ConfigBuilder.configFromGroup(groups, 'I-STEM'))\n          .then(\n            () => {\n              this.close();\n              this.creationEnabled = true;\n            },\n            err => {\n              this.snackbar.open('There was a problem adding your preset!');\n              this.creationEnabled = true;\n            }\n          );\n      }\n    }, 100);\n  }\n}\n\n    \n\n    \n        \n  Preset Configs\n  Preset Configs\n  \n    \n      \n          \n        {{ preset.name }}\n        {{ preset.category }}\n      \n      \n        {{ preset.description }}\n      \n      \n        Add Preset\n      \n    \n    \n      Cancel\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Preset Configs  Preset Configs                              {{ preset.name }}        {{ preset.category }}                    {{ preset.description }}                    Add Preset                    Cancel      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'ConfigListComponent', 'selector': 'app-config-list'},{'name': 'ConfigModalComponent', 'selector': 'app-config-modal'},{'name': 'EditConfigModalComponent', 'selector': 'app-edit-config-modal'},{'name': 'EditConfigPageComponent', 'selector': 'app-edit-config-page'},{'name': 'FolderCreationComponent', 'selector': 'app-folder-creation'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NewConfigPageComponent', 'selector': 'app-new-rule-page'},{'name': 'NewRuleStepperComponent', 'selector': 'app-new-rule-stepper'},{'name': 'PresetConfigComponent', 'selector': 'app-preset-config'},{'name': 'PresetConfigPageComponent', 'selector': 'app-preset-config-page'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'UnauthenticatedComponent', 'selector': 'app-unauthenticated'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PresetConfigComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PresetConfigPageComponent.html":{"url":"components/PresetConfigPageComponent.html","title":"component - PresetConfigPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PresetConfigPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tabs/config/preset-config-page/preset-config-page.component.ts\n\n\n\n    \n        Extends\n    \n    \n            PresetConfigComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-preset-config-page\n            \n\n            \n                styleUrls\n                .preset-config/preset-config.component.scss\n            \n\n\n\n            \n                templateUrl\n                ../preset-config/preset-config.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isPage\n                            \n                            \n                                    Private\n                                _closeCommand\n                            \n                            \n                                    Public\n                                closeCommand\n                            \n                            \n                                    Public\n                                creationEnabled\n                            \n                            \n                                    Public\n                                isPage\n                            \n                            \n                                    Public\n                                presets\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                zone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                addPreset\n                            \n                            \n                                close\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \nclose()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config-page/preset-config-page.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addPreset\n                            \n                            \n                        \n                    \n                \n                \n                    \naddPreset(presetID: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PresetConfigComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PresetConfigComponent:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        presetID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \nclose()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PresetConfigComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PresetConfigComponent:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PresetConfigComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PresetConfigComponent:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isPage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isPage:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config-page/preset-config-page.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _closeCommand\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _closeCommand:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from     PresetConfigComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PresetConfigComponent:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            closeCommand\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        closeCommand:     \n\n                    \n                \n                    \n                        \n                            Default value : this._closeCommand.asObservable()\n                        \n                    \n                            \n                                \n                                    Inherited from     PresetConfigComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PresetConfigComponent:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            creationEnabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        creationEnabled:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                            \n                                \n                                    Inherited from     PresetConfigComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PresetConfigComponent:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isPage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isPage:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     PresetConfigComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PresetConfigComponent:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            presets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        presets:     \n\n                    \n                \n                    \n                        \n                            Default value : presets\n                        \n                    \n                            \n                                \n                                    Inherited from     PresetConfigComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PresetConfigComponent:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                            \n                                \n                                    Inherited from     PresetConfigComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PresetConfigComponent:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            zone\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zone:     NgZone\n\n                    \n                \n                    \n                        \n                            Type :     NgZone\n\n                        \n                    \n                            \n                                \n                                    Inherited from     PresetConfigComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PresetConfigComponent:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { PresetConfigComponent } from '../preset-config/preset-config.component';\n\n@Component({\n  selector: 'app-preset-config-page',\n  templateUrl: '../preset-config/preset-config.component.html',\n  styleUrls: ['../preset-config/preset-config.component.scss']\n})\nexport class PresetConfigPageComponent extends PresetConfigComponent {\n  public isPage = true;\n\n  close() {\n    this.zone.run(() => {\n      this.router.navigateByUrl('/app/config');\n    });\n  }\n}\n\n    \n\n    \n        \n  Preset Configs\n  Preset Configs\n  \n    \n      \n          \n        {{ preset.name }}\n        {{ preset.category }}\n      \n      \n        {{ preset.description }}\n      \n      \n        Add Preset\n      \n    \n    \n      Cancel\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Preset Configs  Preset Configs                              {{ preset.name }}        {{ preset.category }}                    {{ preset.description }}                    Add Preset                    Cancel      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'ConfigListComponent', 'selector': 'app-config-list'},{'name': 'ConfigModalComponent', 'selector': 'app-config-modal'},{'name': 'EditConfigModalComponent', 'selector': 'app-edit-config-modal'},{'name': 'EditConfigPageComponent', 'selector': 'app-edit-config-page'},{'name': 'FolderCreationComponent', 'selector': 'app-folder-creation'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NewConfigPageComponent', 'selector': 'app-new-rule-page'},{'name': 'NewRuleStepperComponent', 'selector': 'app-new-rule-stepper'},{'name': 'PresetConfigComponent', 'selector': 'app-preset-config'},{'name': 'PresetConfigPageComponent', 'selector': 'app-preset-config-page'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'UnauthenticatedComponent', 'selector': 'app-unauthenticated'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PresetConfigPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PreventAuthGuardService.html":{"url":"injectables/PreventAuthGuardService.html","title":"injectable - PreventAuthGuardService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  PreventAuthGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth/auth-guard.service.ts\n        \n\n            \n                Description\n            \n            \n                Prevent a user from accessing a route if they are authenticated.\n\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                google\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                zone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(google: GoogleService, router: Router, zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth/auth-guard.service.ts:47\n                            \n                        \n\n                \n                    \n                            Creates an instance of PreventAuthGuardService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        google\n                                                  \n                                                        \n                                                                    GoogleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Declare the Google Service as google.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Declare the Router as router\n\n                                                        \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Declare NgZone as zone\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth/auth-guard.service.ts:62\n                            \n                        \n\n\n                \n                    \n                            Determines whether the user can go to the page and handle it.\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Whether or not the user can access the route\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            google\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        google:     GoogleService\n\n                    \n                \n                    \n                        \n                            Type :     GoogleService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth/auth-guard.service.ts:55\n                            \n                        \n\n                \n                    \n                        Declare the Google Service as google.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth/auth-guard.service.ts:55\n                            \n                        \n\n                \n                    \n                        Declare the Router as router\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            zone\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zone:     NgZone\n\n                    \n                \n                    \n                        \n                            Type :     NgZone\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth/auth-guard.service.ts:55\n                            \n                        \n\n                \n                    \n                        Declare NgZone as zone\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { CanActivate, Router } from '@angular/router';\nimport { GoogleService } from '../google/google.service';\nimport { Injectable, NgZone } from '@angular/core';\n\n/**\n * Prevent a user from accessing a route if they aren't authenticated.\n * \n * @export\n * @class AuthGuardService\n * @implements {CanActivate}\n */\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n/**\n * Creates an instance of AuthGuardService.\n * @param {GoogleService} google Declare the Google Service as google.\n * @param {Router} router Declare the Router as router\n * @param {NgZone} zone Declare NgZone as zone\n * @memberof AuthGuardService\n */\nconstructor(public google: GoogleService, public router: Router, public zone: NgZone) { }\n  /**\n   * Determines whether the user can go to the page and handle it.\n   * \n   * @returns {boolean} Whether or not the user can access the route\n   * @memberof AuthGuardService\n   */\n  canActivate(): boolean {\n    if (this.google.getAuthStatus()) {\n      return true;\n    }\n    this.zone.run(() => {\n      this.router.navigate(['/']);\n    });\n    return false;\n  }\n}\n\n/**\n * Prevent a user from accessing a route if they are authenticated.\n * \n * @export\n * @class PreventAuthGuardService\n * @implements {CanActivate}\n */\n@Injectable()\nexport class PreventAuthGuardService implements CanActivate {\n/**\n * Creates an instance of PreventAuthGuardService.\n * @param {GoogleService} google Declare the Google Service as google.\n * @param {Router} router Declare the Router as router\n * @param {NgZone} zone Declare NgZone as zone\n * @memberof PreventAuthGuardService\n */\nconstructor(public google: GoogleService, public router: Router, public zone: NgZone) { }\n  /**\n   * Determines whether the user can go to the page and handle it.\n   * \n   * @returns {boolean} Whether or not the user can access the route\n   * @memberof PreventAuthGuardService\n   */\n  canActivate(): boolean {\n    if (!this.google.getAuthStatus()) {\n      return true;\n    }\n    this.zone.run(() => {\n      this.router.navigate(['/app/home']);\n    });\n    return false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RuleInterface.html":{"url":"interfaces/RuleInterface.html","title":"interface - RuleInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RuleInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        classifier\n                                \n                                \n                                            Optional\n                                        constraint\n                                \n                                \n                                            Optional\n                                        data\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        classifier\n                                    \n                                \n                                \n                                    \n                                        classifier:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        constraint\n                                    \n                                \n                                \n                                    \n                                        constraint:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ConfigInterface {\n  activeConfig: string;\n}\n\nexport interface RuleInterface {\n  id: string;\n  name: string;\n  data?: any;\n  classifier?: string;\n  constraint?: string;\n}\n\nexport interface GroupFolderInterface {\n  name?: string;\n  renameUntitled?: boolean;\n  folderID?: string;\n}\n\nexport interface FolderCreation {\n  parent: {\n    folderID: string | undefined;\n    name: string | null;\n  };\n  prefix: {\n    type: string | null;\n    value: string;\n  };\n  name: {\n    type: string | null;\n    value: string;\n  };\n  suffix: {\n    type: string | null;\n    value: string;\n  };\n}\n\nexport interface GroupInterface {\n  id: string;\n  name: string;\n  rules: Array;\n  source: GroupFolderInterface;\n  destination?: GroupFolderInterface;\n  createFolder?: FolderCreation;\n}\n\nexport interface ConfigsInterface {\n  id: string;\n  name: string;\n  groups: Array;\n}\n\nexport interface JSONConfiguration {\n  configs: Array;\n  activeConfig: string\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tabs/settings/settings.component.ts\n\n\n    \n        Description\n    \n    \n        Declare the component to be shown when the settings tab is selected.\n\n    \n\n\n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n            \n                styleUrls\n                settings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearConfigs\n                            \n                            \n                                deleteAccount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(google: GoogleService, database: DatabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tabs/settings/settings.component.ts:21\n                            \n                        \n\n                \n                    \n                            Creates an instance of SettingsComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        google\n                                                  \n                                                        \n                                                                    GoogleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        database\n                                                  \n                                                        \n                                                                    DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clearConfigs\n                            \n                            \n                        \n                    \n                \n                \n                    \nclearConfigs()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/settings/settings.component.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteAccount()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/settings/settings.component.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { DatabaseService } from '../../../services/database/database.service';\nimport { GoogleService } from '../../../services/google/google.service';\n\n/**\n * Workaround for testing\n */\ndeclare var gapi: any;\n\n/**\n * Declare the component to be shown when the settings tab is selected.\n *\n * @export\n * @class SettingsComponent\n */\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent {\n  /**\n   * Creates an instance of SettingsComponent.\n   * @memberof SettingsComponent\n   */\n  constructor(\n    private google: GoogleService,\n    private database: DatabaseService\n  ) {}\n\n  clearConfigs() {\n    this.database.clearConfigs().catch(err => console.error);\n  }\n\n  deleteAccount() {\n    this.database.clearConfigs().then(() => {\n      this.google.signOut();\n    }, err => console.error);\n  }\n}\n\n    \n\n    \n        \n    \n        Clear Configurations\n    \n\n\n    \n        Delete Account\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Clear Configurations                Delete Account    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'ConfigListComponent', 'selector': 'app-config-list'},{'name': 'ConfigModalComponent', 'selector': 'app-config-modal'},{'name': 'EditConfigModalComponent', 'selector': 'app-edit-config-modal'},{'name': 'EditConfigPageComponent', 'selector': 'app-edit-config-page'},{'name': 'FolderCreationComponent', 'selector': 'app-folder-creation'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NewConfigPageComponent', 'selector': 'app-new-rule-page'},{'name': 'NewRuleStepperComponent', 'selector': 'app-new-rule-stepper'},{'name': 'PresetConfigComponent', 'selector': 'app-preset-config'},{'name': 'PresetConfigPageComponent', 'selector': 'app-preset-config-page'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'UnauthenticatedComponent', 'selector': 'app-unauthenticated'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SorterService.html":{"url":"injectables/SorterService.html","title":"injectable - SorterService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SorterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/sorter/sorter.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getDriveQuery\n                            \n                            \n                                    Private\n                                getUntitledFiles\n                            \n                            \n                                loadConfig\n                            \n                            \n                                sort\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(google: GoogleService, database: DatabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/sorter/sorter.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        google\n                                                  \n                                                        \n                                                                    GoogleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        database\n                                                  \n                                                        \n                                                                    DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getDriveQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getDriveQuery(group: GroupInterface)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/sorter/sorter.service.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        group\n                                                        \n                                                                    GroupInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getUntitledFiles\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getUntitledFiles(destination: GroupFolderInterface)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/sorter/sorter.service.ts:124\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        destination\n                                                        \n                                                                    GroupFolderInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadConfig(cb?: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/sorter/sorter.service.ts:130\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cb\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                            \n                        \n                    \n                \n                \n                    \nsort()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/sorter/sorter.service.ts:141\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     ConfigsInterface\n\n                    \n                \n                    \n                        \n                            Type :     ConfigsInterface\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/sorter/sorter.service.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n  ConfigsInterface,\n  GroupInterface,\n  GroupFolderInterface\n} from '../../../interfaces';\nimport { DatabaseService } from '../database/database.service';\nimport {\n  DriveMimeType,\n  DriveQueryBuilder\n} from '../../classes/drive-query-builder';\nimport { GoogleService } from '../google/google.service';\nimport { Injectable } from '@angular/core';\nimport { ConfigBuilder } from '../../classes/config-builder';\n\n/**\n * Workaround for testing\n */\ndeclare var gapi: any;\n\n@Injectable()\nexport class SorterService {\n  config: ConfigsInterface;\n\n  constructor(\n    private google: GoogleService,\n    private database: DatabaseService\n  ) {\n    this.loadConfig();\n    this.database.activeConfigChanged.subscribe(() => {\n      this.loadConfig();\n    });\n  }\n\n  private getDriveQuery(group: GroupInterface): string {\n    let driveQuery = new DriveQueryBuilder(group.source.folderID, true);\n    group.rules.forEach(rule => {\n      switch (rule.classifier) {\n        case 'fullText':\n          driveQuery = driveQuery.fullTextContains(rule.data.fullText);\n          break;\n        case 'title':\n          let title = rule.data.title;\n          switch (rule.constraint) {\n            case 'include':\n              driveQuery = driveQuery.nameContains(title);\n              break;\n            case 'exclude':\n              driveQuery = driveQuery.nameExcludes(title);\n              break;\n          }\n          break;\n        case 'type':\n          let type = rule.data.fileType;\n          switch (rule.constraint) {\n            case 'include':\n              driveQuery = driveQuery.requiresType(type);\n              break;\n            case 'exclude':\n              driveQuery = driveQuery.excludeType(type);\n              break;\n          }\n          break;\n        case 'owner':\n          let owner = rule.data.owner;\n          switch (rule.constraint) {\n            case 'include':\n              driveQuery = driveQuery.hasOwner(owner);\n              break;\n            case 'exclude':\n              driveQuery = driveQuery.excludesOwner(owner);\n              break;\n          }\n          break;\n        case 'creationDate':\n          switch (rule.constraint) {\n            case 'include':\n              driveQuery = driveQuery.createdAfter(rule.data.date);\n              break;\n            case 'exclude':\n              driveQuery = driveQuery.createdBefore(rule.data.date);\n              break;\n            case 'between':\n              driveQuery = driveQuery\n                .createdAfter(rule.data.firstDate)\n                .createdBefore(rule.data.secondDate);\n              break;\n          }\n          break;\n        case 'lastOpened':\n          switch (rule.constraint) {\n            case 'include':\n              driveQuery = driveQuery.openedAfter(rule.data.date);\n              break;\n            case 'exclude':\n              driveQuery = driveQuery.openedBefore(rule.data.date);\n              break;\n            case 'between':\n              driveQuery = driveQuery\n                .openedAfter(rule.data.firstDate)\n                .openedBefore(rule.data.secondDate);\n              break;\n          }\n          break;\n        case 'lastModified':\n          switch (rule.constraint) {\n            case 'include':\n              driveQuery = driveQuery.modifiedAfter(rule.data.date);\n              break;\n            case 'exclude':\n              driveQuery = driveQuery.modifiedBefore(rule.data.date);\n              break;\n            case 'between':\n              driveQuery = driveQuery\n                .modifiedAfter(rule.data.firstDate)\n                .modifiedBefore(rule.data.secondDate);\n              break;\n          }\n          break;\n      }\n    });\n    return driveQuery.get();\n  }\n\n  private getUntitledFiles(destination: GroupFolderInterface) {\n    return new DriveQueryBuilder(destination.folderID, true)\n      .nameContains('Untitled')\n      .get();\n  }\n\n  loadConfig(cb?: Function): void {\n    this.database.getActiveConfig().then(activeConfig => {\n      if (activeConfig) {\n        this.database.getConfig(activeConfig, config => {\n          this.config = config;\n          if (cb) cb();\n        });\n      }\n    }, err=>{});\n  }\n\n  sort() {\n    return new Promise((resolve, reject) => {\n      const drive = gapi.client.drive;\n      let success = true;\n      this.config.groups.forEach(group => {\n        if (group.destination) {\n          this.google.listFiles(this.getDriveQuery(group), resp => {\n            if (resp.error) {\n              reject(resp.error);\n            } else {\n              resp.files.forEach(file => {\n                this.google.moveFile(\n                  file.id,\n                  group.destination.folderID,\n                  success => {\n                    if (!success) {\n                      success = false;\n                    }\n                  }\n                );\n              }, this);\n            }\n          });\n          if (group.source.renameUntitled) {\n            this.google.listFiles(this.getUntitledFiles(group.source), resp => {\n              if (resp.error) {\n                reject(resp.error);\n              } else {\n                resp.files.forEach(file => {\n                  this.google.renameFile(file.id, Date());\n                });\n              }\n            });\n          }\n        } else {\n          let newFolderName = ConfigBuilder.folderNameBuilder(\n            group.createFolder\n          );\n          this.google\n            .createFolder(newFolderName, group.createFolder.parent.folderID)\n            .then(newFolderID => {\n              this.google.listFiles(this.getDriveQuery(group), resp => {\n                if (resp.error) {\n                  reject(resp.error);\n                } else {\n                  resp.files.forEach(file => {\n                    this.google.moveFile(file.id, newFolderID, success => {\n                      if (!success) {\n                        success = false;\n                      }\n                    });\n                  }, this);\n                }\n              });\n            }, err => console.error);\n        }\n      });\n      if (success) resolve();\n      else reject();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/UnNamedPipe.html":{"url":"pipes/UnNamedPipe.html","title":"pipe - UnNamedPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  UnNamedPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/un-named.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        unNamed\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: any, args?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/un-named.pipe.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        args\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'unNamed'\n})\nexport class UnNamedPipe implements PipeTransform {\n  transform(value: any, args?: any): any {\n    return (value.length > 0) ? value : 'No Name'\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UnauthenticatedComponent.html":{"url":"components/UnauthenticatedComponent.html","title":"component - UnauthenticatedComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UnauthenticatedComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/auth/unauthenticated/unauthenticated.component.ts\n\n\n    \n        Description\n    \n    \n        Declare the component to be shown when the user isn't authenticated.\n\n    \n\n\n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-unauthenticated\n            \n\n            \n                styleUrls\n                unauthenticated.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./unauthenticated.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                google\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(google: GoogleService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/auth/unauthenticated/unauthenticated.component.ts:15\n                            \n                        \n\n                \n                    \n                            Creates an instance of UnauthenticatedComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        google\n                                                  \n                                                        \n                                                                    GoogleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Declare the Google Service as google.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/auth/unauthenticated/unauthenticated.component.ts:28\n                            \n                        \n\n\n                \n                    \n                            Method to log the user in.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            google\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        google:     GoogleService\n\n                    \n                \n                    \n                        \n                            Type :     GoogleService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/auth/unauthenticated/unauthenticated.component.ts:21\n                            \n                        \n\n                \n                    \n                        Declare the Google Service as google.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { GoogleService } from '../../../services/google/google.service';\n\n/**\n * Declare the component to be shown when the user isn't authenticated.\n *\n * @export\n * @class UnauthenticatedComponent\n */\n@Component({\n  selector: 'app-unauthenticated',\n  templateUrl: './unauthenticated.component.html',\n  styleUrls: ['./unauthenticated.component.scss']\n})\nexport class UnauthenticatedComponent {\n  /**\n   * Creates an instance of UnauthenticatedComponent.\n   * @param {GoogleService} google Declare the Google Service as google.\n   * @memberof UnauthenticatedComponent\n   */\n  constructor(public google: GoogleService) {}\n\n  /**\n   * Method to log the user in.\n   *\n   * @memberof UnauthenticatedComponent\n   */\n  login() {\n    this.google.signIn();\n  }\n}\n\n    \n\n    \n        \n  \n    G-Drive Sorter\n    An organized Google Drive™ has never been easier\n    Get Organized\n  \n\n\n  \n    \n      view_list\n      Effectively Sort Files\n      Sorting your drive only requires a quick visit to this website. And we do the rest of the work for you!\n    \n    \n      accessibility\n      Simplistic Use\n      Preset configurations and a simplistic user interface makes the G-Drive sorter suitable for all Google Drive users.\n    \n    \n      art_track\n      Fully Customizable\n      Fully customizable configurations that sorts all Google Drive files based on type, creation date, name, current owner, and much more.\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      G-Drive Sorter    An organized Google Drive™ has never been easier    Get Organized              view_list      Effectively Sort Files      Sorting your drive only requires a quick visit to this website. And we do the rest of the work for you!              accessibility      Simplistic Use      Preset configurations and a simplistic user interface makes the G-Drive sorter suitable for all Google Drive users.              art_track      Fully Customizable      Fully customizable configurations that sorts all Google Drive files based on type, creation date, name, current owner, and much more.      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'ConfigListComponent', 'selector': 'app-config-list'},{'name': 'ConfigModalComponent', 'selector': 'app-config-modal'},{'name': 'EditConfigModalComponent', 'selector': 'app-edit-config-modal'},{'name': 'EditConfigPageComponent', 'selector': 'app-edit-config-page'},{'name': 'FolderCreationComponent', 'selector': 'app-folder-creation'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NewConfigPageComponent', 'selector': 'app-new-rule-page'},{'name': 'NewRuleStepperComponent', 'selector': 'app-new-rule-stepper'},{'name': 'PresetConfigComponent', 'selector': 'app-preset-config'},{'name': 'PresetConfigPageComponent', 'selector': 'app-preset-config-page'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'UnauthenticatedComponent', 'selector': 'app-unauthenticated'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UnauthenticatedComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/animations.ts\n            \n            \n                variable\n            \n            \n                fabAnimation\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/animations.ts\n            \n            \n                variable\n            \n            \n                fadeOutIn\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/animations.ts\n            \n            \n                variable\n            \n            \n                routerAnimation\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/animations.ts\n            \n            \n                variable\n            \n            \n                slideDown\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/animations.ts\n            \n            \n                variable\n            \n            \n                slideLeft\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/animations.ts\n            \n            \n                variable\n            \n            \n                slideRight\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                25 %\n                (4/16)\n            \n        \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                variable\n            \n            \n                gapi\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/classes/config-builder.ts\n            \n            \n                class\n            \n            \n                ConfigBuilder\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/app/classes/drive-query-builder.ts\n            \n            \n                class\n            \n            \n                DriveQueryBuilder\n            \n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                    src/app/components/auth/unauthenticated/unauthenticated.component.ts\n            \n            \n                component\n            \n            \n                UnauthenticatedComponent\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/components/shared/config-modal/config-modal.component.ts\n            \n            \n                component\n            \n            \n                ConfigModalComponent\n            \n            \n                0 %\n                (0/32)\n            \n        \n        \n            \n                \n                    src/app/components/shared/edit-config-modal/edit-config-modal.component.ts\n            \n            \n                component\n            \n            \n                EditConfigModalComponent\n            \n            \n                0 %\n                (0/31)\n            \n        \n        \n            \n                \n                    src/app/components/shared/edit-config-page/edit-config-page.component.ts\n            \n            \n                component\n            \n            \n                EditConfigPageComponent\n            \n            \n                0 %\n                (0/32)\n            \n        \n        \n            \n                \n                    src/app/components/shared/folder-creation/folder-creation.component.ts\n            \n            \n                component\n            \n            \n                FolderCreationComponent\n            \n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                    src/app/components/shared/new-config-page/new-config-page.component.ts\n            \n            \n                component\n            \n            \n                NewConfigPageComponent\n            \n            \n                0 %\n                (0/33)\n            \n        \n        \n            \n                \n                    src/app/components/shared/new-rule-stepper/new-rule-stepper.component.ts\n            \n            \n                component\n            \n            \n                NewRuleStepperComponent\n            \n            \n                0 %\n                (0/31)\n            \n        \n        \n            \n                \n                    src/app/components/shared/new-rule-stepper/new-rule-stepper.component.ts\n            \n            \n                variable\n            \n            \n                DEFAULT_VALUE_ACCESSOR\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/components/tabs/config/config-list/config-list.component.ts\n            \n            \n                component\n            \n            \n                ConfigListComponent\n            \n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                    src/app/components/tabs/config/config-list/config-list.component.ts\n            \n            \n                class\n            \n            \n                ConfigDataSource\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                    src/app/components/tabs/config/config-list/config-list.component.ts\n            \n            \n                interface\n            \n            \n                Config\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/components/tabs/config/config.component.ts\n            \n            \n                component\n            \n            \n                ConfigComponent\n            \n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                    src/app/components/tabs/config/preset-config-page/preset-config-page.component.ts\n            \n            \n                component\n            \n            \n                PresetConfigPageComponent\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                    src/app/components/tabs/config/preset-config/preset-config.component.ts\n            \n            \n                component\n            \n            \n                PresetConfigComponent\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                    src/app/components/tabs/config/presets.ts\n            \n            \n                variable\n            \n            \n                presets\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/components/tabs/config/presets.ts\n            \n            \n                variable\n            \n            \n                quartersArray\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/components/tabs/home/home.component.ts\n            \n            \n                component\n            \n            \n                HomeComponent\n            \n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                    src/app/components/tabs/settings/settings.component.ts\n            \n            \n                component\n            \n            \n                SettingsComponent\n            \n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                    src/app/components/tabs/settings/settings.component.ts\n            \n            \n                variable\n            \n            \n                gapi\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/pipes/un-named.pipe.ts\n            \n            \n                pipe\n            \n            \n                UnNamedPipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/services/auth/auth-guard.service.ts\n            \n            \n                injectable\n            \n            \n                AuthGuardService\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    src/app/services/auth/auth-guard.service.ts\n            \n            \n                injectable\n            \n            \n                PreventAuthGuardService\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    src/app/services/database/database.service.ts\n            \n            \n                injectable\n            \n            \n                DatabaseService\n            \n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                    src/app/services/database/database.service.ts\n            \n            \n                variable\n            \n            \n                gapi\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/services/database/database.service.ts\n            \n            \n                variable\n            \n            \n                google\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/services/google/google.service.ts\n            \n            \n                injectable\n            \n            \n                GoogleService\n            \n            \n                56 %\n                (9/16)\n            \n        \n        \n            \n                \n                    src/app/services/google/google.service.ts\n            \n            \n                function\n            \n            \n                folderPicked\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/services/google/google.service.ts\n            \n            \n                variable\n            \n            \n                _folderPicked\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/services/google/google.service.ts\n            \n            \n                variable\n            \n            \n                authInstance\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/services/google/google.service.ts\n            \n            \n                variable\n            \n            \n                folderPicker\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/services/google/google.service.ts\n            \n            \n                variable\n            \n            \n                gapi\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/services/google/google.service.ts\n            \n            \n                variable\n            \n            \n                google\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/services/sorter/sorter.service.ts\n            \n            \n                injectable\n            \n            \n                SorterService\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/app/services/sorter/sorter.service.ts\n            \n            \n                variable\n            \n            \n                gapi\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/interfaces.ts\n            \n            \n                interface\n            \n            \n                ConfigInterface\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/interfaces.ts\n            \n            \n                interface\n            \n            \n                ConfigsInterface\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/interfaces.ts\n            \n            \n                interface\n            \n            \n                FolderCreation\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/interfaces.ts\n            \n            \n                interface\n            \n            \n                GroupFolderInterface\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/interfaces.ts\n            \n            \n                interface\n            \n            \n                GroupInterface\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/interfaces.ts\n            \n            \n                interface\n            \n            \n                JSONConfiguration\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/interfaces.ts\n            \n            \n                interface\n            \n            \n                RuleInterface\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/jestGlobalMocks.ts\n            \n            \n                variable\n            \n            \n                mock\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.0\n        \n            @angular/cdk : 6.1.0\n        \n            @angular/common : ^6.0.0\n        \n            @angular/compiler : ^6.0.0\n        \n            @angular/core : ^6.0.0\n        \n            @angular/forms : ^6.0.0\n        \n            @angular/http : ^6.0.0\n        \n            @angular/material : 6.1.0\n        \n            @angular/platform-browser : ^6.0.0\n        \n            @angular/platform-browser-dynamic : ^6.0.0\n        \n            @angular/router : ^6.0.0\n        \n            @types/uuid : ^3.4.3\n        \n            core-js : ^2.5.4\n        \n            hammerjs : ^2.0.8\n        \n            jasmine : ^3.1.0\n        \n            rxjs : ^6.0.0\n        \n            rxjs-compat : 6\n        \n            uuid : ^3.2.1\n        \n            web-animations-js : ^2.3.1\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DriveMimeType   (src/.../drive-query-builder.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/classes/drive-query-builder.ts\n    \n        \n            \n                \n                    \n                        \n                        DriveMimeType\n                    \n                \n                    \n                        \n                            A enumerable of Google Drive file types\n\n                        \n                    \n                        \n                            \n                                 audio\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.audio\n                            \n                        \n                        \n                            \n                                 document\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.document\n                            \n                        \n                        \n                            \n                                 drawing\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.drawing\n                            \n                        \n                        \n                            \n                                 file\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.file\n                            \n                        \n                        \n                            \n                                 folder\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.folder\n                            \n                        \n                        \n                            \n                                 form\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.form\n                            \n                        \n                        \n                            \n                                 fustiontable\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.fusiontable\n                            \n                        \n                        \n                            \n                                 map\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.map\n                            \n                        \n                        \n                            \n                                 photo\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.photo\n                            \n                        \n                        \n                            \n                                 presentation\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.presentation\n                            \n                        \n                        \n                            \n                                 script\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.script\n                            \n                        \n                        \n                            \n                                 site\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.site\n                            \n                        \n                        \n                            \n                                 spreadsheet\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.spreadsheet\n                            \n                        \n                        \n                            \n                                 unknown\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.unknown\n                            \n                        \n                        \n                            \n                                 video\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.video\n                            \n                        \n                        \n                            \n                                 thirdParty\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.drive-sdk\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            folderPicked   (src/.../google.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/google/google.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            folderPicked\n                            \n                            \n                        \n                    \n                \n                \n                    \nfolderPicked(data: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nG-Drive-Sorter\n\n   \n\nMain Countributors\n\nBrandon Cravener (Project Manager/Developer)\nFernando Arredondo (Developer)\nLane Faccoldi (Software Tester)\nIvan Abreu-Cespedes (Public Relations)\n\n\nOther Contributors\n\nAshhad Hanafi, made the logo for the app\n\n\nDescription\nThis project solves the problem of constantly needing to organize Google Drive files, by organizing it your way whenever necessary.\n\nFeatures\n\nUser friendly interface.\nCustomizable configuration.\nCompatible with Google Drive and associated accounts.\nFree to use.\n\n\nInstallation\nInstall this project by running:\n\n$ git clone https://github.com/BrandonCravener/G-Drive-Sorter\n$ cd G-Drive-Sorter\n$ git checkout angularjs\n$ yarn global add @angular/cli\n$ yarn\n\nRun with $ ng serve\n\nDocumentation\nAfter installing you can open the documentation with $ yarn run doc:buildandserve. The documentation is auto generated by compdoc.\n\nContribution\n\nProject Management\nIssue Tracker\nRepository\nGitter\n\n\nSupport\nIf there are any major issues with this project, please report them at: contact@brandoncravener.com\n\nLicense\n  This project is licensed under the MIT license.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Brandon Cravener\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthenticatedModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_AppComponent_providers\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthenticatedModule\n\n\n\ncluster_AuthenticatedModule_declarations\n\n\n\ncluster_AuthenticatedModule_exports\n\n\n\ncluster_AuthenticatedModule_providers\n\n\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_declarations\n\n\n\ncluster_ConfigModule_imports\n\n\n\ncluster_ConfigModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nUnauthenticatedComponent\n\nUnauthenticatedComponent\n\nAppModule -->\n\nUnauthenticatedComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nGoogleService\n\nGoogleService\n\nAppComponent -->\n\nGoogleService->AppComponent\n\n\n\nAppModule -->\n\nGoogleService->AppModule\n\n\n\n\n\nAuthenticatedModule\n\nAuthenticatedModule\n\nAppModule -->\n\nAuthenticatedModule->AppModule\n\n\n\n\n\nConfigComponent \n\nConfigComponent \n\nConfigComponent  -->\n\nAuthenticatedModule->ConfigComponent \n\n\n\n\n\nConfigModule\n\nConfigModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\nAuthenticatedModule -->\n\nConfigModule->AuthenticatedModule\n\n\n\n\n\nConfigListComponent \n\nConfigListComponent \n\nConfigListComponent  -->\n\nConfigModule->ConfigListComponent \n\n\n\n\n\nAuthGuardService\n\nAuthGuardService\n\nAppModule -->\n\nAuthGuardService->AppModule\n\n\n\n\n\nDatabaseService\n\nDatabaseService\n\nAppModule -->\n\nDatabaseService->AppModule\n\n\n\n\n\nPreventAuthGuardService\n\nPreventAuthGuardService\n\nAppModule -->\n\nPreventAuthGuardService->AppModule\n\n\n\n\n\nConfigComponent\n\nConfigComponent\n\nAuthenticatedModule -->\n\nConfigComponent->AuthenticatedModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAuthenticatedModule -->\n\nHomeComponent->AuthenticatedModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nAuthenticatedModule -->\n\nSettingsComponent->AuthenticatedModule\n\n\n\n\n\nSorterService\n\nSorterService\n\nAuthenticatedModule -->\n\nSorterService->AuthenticatedModule\n\n\n\n\n\nConfigListComponent\n\nConfigListComponent\n\nConfigModule -->\n\nConfigListComponent->ConfigModule\n\n\n\n\n\nConfigModalComponent\n\nConfigModalComponent\n\nConfigModule -->\n\nConfigModalComponent->ConfigModule\n\n\n\n\n\nEditConfigModalComponent\n\nEditConfigModalComponent\n\nConfigModule -->\n\nEditConfigModalComponent->ConfigModule\n\n\n\n\n\nEditConfigPageComponent\n\nEditConfigPageComponent\n\nConfigModule -->\n\nEditConfigPageComponent->ConfigModule\n\n\n\n\n\nFolderCreationComponent\n\nFolderCreationComponent\n\nConfigModule -->\n\nFolderCreationComponent->ConfigModule\n\n\n\n\n\nNewConfigPageComponent\n\nNewConfigPageComponent\n\nConfigModule -->\n\nNewConfigPageComponent->ConfigModule\n\n\n\n\n\nNewRuleStepperComponent\n\nNewRuleStepperComponent\n\nConfigModule -->\n\nNewRuleStepperComponent->ConfigModule\n\n\n\n\n\nPresetConfigComponent\n\nPresetConfigComponent\n\nConfigModule -->\n\nPresetConfigComponent->ConfigModule\n\n\n\n\n\nPresetConfigPageComponent\n\nPresetConfigPageComponent\n\nConfigModule -->\n\nPresetConfigPageComponent->ConfigModule\n\n\n\n\n\nUnNamedPipe\n\nUnNamedPipe\n\nConfigModule -->\n\nUnNamedPipe->ConfigModule\n\n\n\n\n\nConfigRoutingModule\n\nConfigRoutingModule\n\nConfigModule -->\n\nConfigRoutingModule->ConfigModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            4 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        14 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        5 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 pipe\n                    \n                \n            \n            \n                \n                    \n                        \n                        3 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        8 interfaces\n                    \n                \n            \n            \n                \n                    \n                        \n                        \n                            4 routes\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTodo\n\nAdd untitled name renamer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            _folderPicked   (src/.../google.service.ts)\n                        \n                        \n                            authInstance   (src/.../google.service.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            DEFAULT_VALUE_ACCESSOR   (src/.../new-rule-stepper.component.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            fabAnimation   (src/.../animations.ts)\n                        \n                        \n                            fadeOutIn   (src/.../animations.ts)\n                        \n                        \n                            folderPicker   (src/.../google.service.ts)\n                        \n                        \n                            gapi   (src/.../app.component.ts)\n                        \n                        \n                            gapi   (src/.../sorter.service.ts)\n                        \n                        \n                            gapi   (src/.../settings.component.ts)\n                        \n                        \n                            gapi   (src/.../google.service.ts)\n                        \n                        \n                            gapi   (src/.../database.service.ts)\n                        \n                        \n                            google   (src/.../database.service.ts)\n                        \n                        \n                            google   (src/.../google.service.ts)\n                        \n                        \n                            mock   (src/.../jestGlobalMocks.ts)\n                        \n                        \n                            presets   (src/.../presets.ts)\n                        \n                        \n                            quartersArray   (src/.../presets.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            routerAnimation   (src/.../animations.ts)\n                        \n                        \n                            slideDown   (src/.../animations.ts)\n                        \n                        \n                            slideLeft   (src/.../animations.ts)\n                        \n                        \n                            slideRight   (src/.../animations.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/google/google.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            _folderPicked\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _folderPicked:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authInstance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authInstance:     \n\n                    \n                \n\n                \n                    \n                        Variable for easy reference to the authenitcation instance.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            folderPicker\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        folderPicker:     \n\n                    \n                \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gapi\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gapi:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n                \n                    \n                        Workaround for testing\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            google\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        google:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/app/components/shared/new-rule-stepper/new-rule-stepper.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_VALUE_ACCESSOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DEFAULT_VALUE_ACCESSOR:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NewRuleStepperComponent),\n  multi: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n                \n                    \n                        Environment for production builds\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n                \n                    \n                        Environment for development builds\n\n                    \n                \n\n            \n        \n\n    src/animations.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            fabAnimation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fabAnimation:     \n\n                    \n                \n                    \n                        \n                            Default value : trigger('createConfigFABState', [\n  state(\n    'inactive',\n    style({\n      transform: 'scale(0)'\n    })\n  ),\n  state(\n    'active',\n    style({\n      transform: 'scale(1)'\n    })\n  ),\n  transition('inactive => active', animate('0.1s')),\n  transition('active => inactive', animate('0.1s'))\n])\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fadeOutIn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fadeOutIn:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  query(\n    ':enter, :leave',\n    style({\n      position: 'fixed',\n      width: '100%'\n    }),\n    {\n      optional: true\n    }\n  ),\n  query(\n    ':enter',\n    style({\n      opacity: 0\n    })\n  ),\n  query(\n    ':leave',\n    [\n      style({\n        opacity: 1\n      }),\n      animate(\n        '0.5s ease-out',\n        style({\n          opacity: 0\n        })\n      )\n    ],\n    {\n      optional: true\n    }\n  ),\n  query(\n    ':enter',\n    animate(\n      '0.5s 0.5s ease-in',\n      style({\n        opacity: 1\n      })\n    ),\n    {\n      optional: true\n    }\n  )\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            routerAnimation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        routerAnimation:     \n\n                    \n                \n                    \n                        \n                            Default value : trigger('routerTransition', [\n  // Landing transitions\n  transition('* => landing', fadeOutIn),\n  transition('landing => appHome', fadeOutIn),\n  // Tabs transitions\n  transition('appHome => appConfig', slideLeft),\n  transition('appConfig => appHome', slideRight),\n  transition('appHome => appSettings', slideLeft),\n  transition('appSettings => appHome', slideRight),\n  transition('appConfig => appSettings', slideLeft),\n  transition('appSettings => appConfig', slideRight),\n  // Small screen pages\n  transition('appConfig => appConfigEdit', slideDown),\n  transition('appConfigEdit => appConfig', slideDown),\n  transition('appConfig => appConfigCreate', slideDown),\n  transition('appConfigCreate => appConfig', slideDown),\n  transition('appConfig => appConfigPresets', slideDown),\n  transition('appConfigPresets => appConfig', slideDown),\n  transition('appSettings => appConfigEdit', slideDown),\n  transition('appConfigEdit => appSettings', slideDown),\n  transition('appSettings => appConfigCreate', slideDown),\n  transition('appConfigCreate => appSettings', slideDown),\n  transition('appSettings => appConfigPresets', slideDown),\n  transition('appConfigPresets => appSettings', slideDown),\n  transition('appHome => appConfigEdit', slideDown),\n  transition('appConfigEdit => appHome', slideDown),\n  transition('appHome => appConfigCreate', slideDown),\n  transition('appConfigCreate => appHome', slideDown),\n  transition('appHome => appConfigPresets', slideDown),\n  transition('appConfigPresets => appHome', slideDown)\n])\n                        \n                    \n\n                \n                    \n                        Animation for switching between routes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slideDown\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        slideDown:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  query(\n    ':enter, :leave',\n    style({\n      position: 'fixed',\n      width: '100%',\n      height: '100%'\n    }),\n    {\n      optional: false\n    }\n  ),\n  group([\n    query(\n      ':enter',\n      [\n        style({\n          transform: 'translateY(100%)',\n          opacity: 0\n        }),\n        animate(\n          '0.5s',\n          style({\n            transform: 'translateY(0%)',\n            opacity: 1\n          })\n        )\n      ],\n      {\n        optional: false\n      }\n    ),\n    query(\n      ':leave',\n      [\n        style({\n          transform: 'translateY(0%)',\n          opacity: 1\n        }),\n        animate(\n          '0.5s',\n          style({\n            transform: 'translateY(100%)',\n            opacity: 0\n          })\n        )\n      ],\n      {\n        optional: false\n      }\n    )\n  ])\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slideLeft\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        slideLeft:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  query(\n    ':enter, :leave',\n    style({\n      position: 'fixed',\n      width: '100%'\n    }),\n    {\n      optional: false\n    }\n  ),\n  group([\n    query(\n      ':enter',\n      [\n        style({\n          transform: 'translateX(100%)'\n        }),\n        animate(\n          '0.5s',\n          style({\n            transform: 'translateX(0%)'\n          })\n        )\n      ],\n      {\n        optional: false\n      }\n    ),\n    query(\n      ':leave',\n      [\n        style({\n          transform: 'translateX(0%)'\n        }),\n        animate(\n          '0.5s',\n          style({\n            transform: 'translateX(-100%)'\n          })\n        )\n      ],\n      {\n        optional: false\n      }\n    )\n  ])\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slideRight\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        slideRight:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  query(\n    ':enter, :leave',\n    style({\n      position: 'fixed',\n      width: '100%'\n    }),\n    {\n      optional: false\n    }\n  ),\n  group([\n    query(\n      ':enter',\n      [\n        style({\n          transform: 'translateX(-100%)'\n        }),\n        animate(\n          '0.5s',\n          style({\n            transform: 'translateX(0%)'\n          })\n        )\n      ],\n      {\n        optional: false\n      }\n    ),\n    query(\n      ':leave',\n      [\n        style({\n          transform: 'translateX(0%)'\n        }),\n        animate(\n          '0.5s',\n          style({\n            transform: 'translateX(100%)'\n          })\n        )\n      ],\n      {\n        optional: false\n      }\n    )\n  ])\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/app.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            gapi\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gapi:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n                \n                    \n                        Workaround for testing\n\n                    \n                \n\n            \n        \n\n    src/app/services/sorter/sorter.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            gapi\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gapi:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n                \n                    \n                        Workaround for testing\n\n                    \n                \n\n            \n        \n\n    src/app/components/tabs/settings/settings.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            gapi\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gapi:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n                \n                    \n                        Workaround for testing\n\n                    \n                \n\n            \n        \n\n    src/app/services/database/database.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            gapi\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gapi:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n                \n                    \n                        Workaround for testing\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            google\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        google:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/jestGlobalMocks.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mock\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mock:     \n\n                    \n                \n                    \n                        \n                            Default value : () => {\n  let storage = {};\n  return {\n    getItem: key => key in storage ? storage[key] : null,\n    setItem: (key, value) => storage[key] = value || '',\n    removeItem: key => delete storage[key],\n    clear: () => storage = {},\n  };\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/components/tabs/config/presets.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            presets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        presets:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    id: 'istem',\n    name: 'I-STEM Geometry Preset',\n    category: 'School',\n    description:\n      'A preset configuration for the Wilson High School 9th Grade Geometry I-STEM classes(Periods 3-5).',\n    imageURL: 'assets/images/istem-logo.png',\n    data: {\n      createFolders: [\n        'Geometry',\n        'Physics',\n        'Integrated Engineering and Design'\n      ],\n      groups: [\n        {\n          destination: {\n            presetID: 'Geometry'\n          },\n          name: 'Geometry',\n          rules: [\n            {\n              classifier: 'title',\n              constraint: 'include',\n              data: {\n                title: 'Geo'\n              },\n              name: 'Name'\n            }\n          ],\n          source: {\n            folderID: 'root',\n            name: 'My Drive'\n          }\n        },\n        {\n          destination: {\n            presetID: 'Physics'\n          },\n          name: 'Physics',\n          rules: [\n            {\n              classifier: 'title',\n              constraint: 'include',\n              data: {\n                title: 'Phys'\n              },\n              name: 'Name'\n            }\n          ],\n          source: {\n            folderID: 'root',\n            name: 'My Drive'\n          }\n        },\n        {\n          destination: {\n            presetID: 'Integrated Engineering and Design'\n          },\n          name: 'Integrated Engineering and Design',\n          rules: [\n            {\n              classifier: 'title',\n              constraint: 'include',\n              data: {\n                title: 'IED'\n              },\n              name: 'Name'\n            }\n          ],\n          source: {\n            folderID: 'root',\n            name: 'My Drive'\n          }\n        }\n      ]\n    }\n  }\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            quartersArray\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        quartersArray:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['Quarter 1', 'Quarter 2', 'Quarter 3', 'Quarter 4']\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
