var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.557,1,1.173]],["body/components/AppComponent.html",[0,0.899,1,2.041,2,0.218,3,0.196,4,1.011,5,1.011,6,1.011,7,0.134,8,1.691,9,1.529,10,2.933,11,3.464,12,1.634,13,3.508,14,1.011,15,0.943,16,1.791,17,1.893,18,2.501,19,2.053,20,2.113,21,1.346,22,3.464,23,1.346,24,3.464,25,0.24,26,0.604,27,2.006,28,2.634,29,4.705,30,2.634,31,1.875,32,4.705,33,5.731,34,4.705,35,4.705,36,4.705,37,0.852,38,3.464,39,2.634,40,4.705,41,3.983,42,3.983,43,0.971,44,1.27,45,2.603,46,1.957,47,2.312,48,1.57,49,2.267,50,1.26,51,1.441,52,0.798,53,0.026,54,0.499,55,0.55,56,0.604,57,1.663,58,1.893,59,2.113,60,3.464,61,3.464,62,2.267,63,2.113,64,2.322,65,2.26,66,3.464,67,3.464,68,1.041,69,2.267,70,3.464,71,2.933,72,2.817,73,1.502,74,2.267,75,2.267,76,2.267,77,2.248,78,2.267,79,0.968,80,2.084,81,1.152,82,3.558,83,2.267,84,1.893,85,2.267,86,2.267,87,2.762,88,1.319,89,2.267,90,3.464,91,2.267,92,2.267,93,4.524,94,3.464,95,5.343,96,2.933,97,3.558,98,1.661,99,3.464,100,2.322,101,2.267,102,1.598,103,2.267,104,0.537,105,0.425,106,1.52,107,1.011,108,2.583,109,2.583,110,2.583,111,1.27,112,3.464,113,2.267,114,0.825,115,1.383,116,1.383,117,1.97,118,1.27,119,0.299,120,0.403,121,2.634,122,1.634,123,0.825,124,2.267,125,1.92,126,2.267,127,2.267,128,1.92,129,1.92,130,1.691,131,2.267,132,1.92,133,2.267,134,2.267,135,2.267,136,2.267,137,2.267,138,2.267,139,2.267,140,3.464,141,1.52,142,2.267,143,2.267,144,2.267,145,2.267,146,1.939,147,1.545,148,1.691,149,1.691,150,2.267,151,2.267,152,2.267,153,1.52,154,1.52,155,2.267,156,1.691,157,2.267,158,4.705,159,3.464,160,1.27,161,1.92,162,1.92,163,1.92,164,3.464,165,1.92,166,1.92,167,2.267,168,2.267,169,3.983,170,1.661,171,3.464,172,3.464,173,1.939,174,0.772,175,1.545,176,1.545,177,1.545,178,1.011,179,1.011,180,0.636,181,1.545,182,0.636,183,0.7,184,1.011,185,0.772,186,1.545,187,0.724,188,1.545,189,0.772,190,1.875,191,0.724,192,0.825,193,1.011,194,0.772,195,1.011,196,0.772,197,0.746,198,0.772,199,1.011,200,0.678,201,1.18,202,0.724,203,0.772,204,1.011,205,0.772,206,1.011,207,1.011,208,0.012,209,0.012]],["title/modules/AppModule.html",[210,1.252,211,2.308]],["body/modules/AppModule.html",[1,2.346,2,0.358,3,0.322,7,0.22,16,2.868,17,2.195,53,0.026,58,1.889,65,1.664,104,0.746,105,0.699,111,2.089,114,1.357,119,0.427,120,0.434,170,1.789,174,1.271,191,1.191,205,2.151,208,0.018,209,0.018,210,1.799,211,4.676,212,2.089,213,3.718,214,3.159,215,3.159,216,3.159,217,3.159,218,3.159,219,3.159,220,3.749,221,3.441,222,3.265,223,3.536,224,3.315,225,2.276,226,3.731,227,4.946,228,1.929,229,3.731,230,3.159,231,4.946,232,1.271,233,3.159,234,3.731,235,3.731,236,3.731,237,3.159,238,3.159,239,4.946,240,4.187,241,3.731,242,4.946,243,2.783,244,3.731,245,2.783,246,3.731,247,3.159,248,2.501,249,3.159,250,3.688,251,3.731,252,4.187,253,2.783,254,3.688,255,3.688,256,2.783,257,4.946,258,1.45,259,4.946,260,3.731,261,4.946,262,3.731,263,3.315,264,3.731,265,4.946,266,3.731,267,3.731,268,3.159,269,3.731,270,3.731,271,3.159,272,3.731,273,3.731]],["title/injectables/AuthGuardService.html",[222,1.78,274,1.252]],["body/injectables/AuthGuardService.html",[2,0.316,3,0.284,7,0.194,9,1.653,12,2.181,14,1.468,17,2.197,25,0.349,26,0.792,27,1.953,28,2.913,37,1.118,43,0.923,44,1.843,45,2.912,46,2.787,47,2.787,48,1.448,50,1.892,51,2.165,52,0.758,53,0.026,54,0.349,55,0.539,56,0.574,57,2.037,58,2.265,59,3.423,65,2.715,68,1.168,77,2.141,84,1.548,102,1.359,104,0.552,105,0.617,114,1.197,119,0.484,120,0.653,121,3.408,122,2.181,147,2.027,148,2.455,149,2.455,208,0.016,209,0.016,222,3.225,223,3.296,274,2.04,275,4.539,276,2.455,277,4.405,278,3.936,279,4.539,280,3.847,281,4.869,282,3.292,283,3.292,284,4.405,285,4.08,286,3.88,287,2.69,288,3.174,289,5.203,290,2.455,291,3.388,292,3.847]],["title/modules/AuthenticatedModule.html",[210,1.252,220,2.101]],["body/modules/AuthenticatedModule.html",[0,0.806,2,0.362,3,0.326,7,0.223,9,1.372,16,3.067,19,1.204,20,2.301,28,2.789,53,0.026,58,1.9,68,0.933,104,0.728,105,0.707,119,0.532,120,0.58,122,1.466,170,1.808,174,1.285,180,1.906,182,1.058,185,1.285,194,2.158,203,2.158,208,0.018,209,0.018,210,2.157,212,2.112,213,2.528,220,4.271,221,3.453,224,3.339,225,2.301,250,3.715,252,4.217,253,2.813,254,3.715,255,3.715,256,2.813,258,1.466,263,3.738,271,3.194,288,3.039,293,3.194,294,3.194,295,3.772,296,3.194,297,3.194,298,2.462,299,3.547,300,3.772,301,4.217,302,2.813,303,3.194,304,3.194,305,2.112,306,3.194,307,3.194,308,2.528,309,2.112,310,3.772,311,2.112,312,4.217,313,4.217,314,2.813,315,3.772,316,4.217,317,3.772,318,3.194,319,3.772,320,3.194,321,3.194,322,4.217,323,3.194,324,3.194,325,3.194,326,4.217,327,3.194,328,4.217,329,4.722,330,3.772,331,3.194,332,3.194,333,3.715,334,3.194]],["title/interfaces/Config.html",[183,0.476,335,0.476]],["body/interfaces/Config.html",[0,0.594,2,0.235,3,0.212,7,0.145,12,1.428,18,0.952,19,0.782,21,0.952,23,0.952,25,0.26,26,0.64,27,1.568,30,3.082,31,2.107,39,1.372,43,0.687,45,1.833,46,1.019,47,1.528,50,0.891,53,0.026,54,0.622,55,0.353,68,1.031,73,0.782,77,1.602,79,1.448,84,1.501,88,1.235,98,1.175,102,1.568,104,0.68,105,0.459,106,2.462,107,1.965,114,0.891,119,0.38,120,0.427,123,2.135,141,1.642,146,1.372,147,1.638,153,3.28,154,3.28,160,2.057,180,0.687,182,0.687,183,0.887,187,0.782,200,0.733,201,0.835,208,0.013,209,0.013,228,1.267,232,0.835,258,0.952,287,2.278,298,1.428,305,1.372,309,1.372,311,1.372,335,0.508,336,1.642,337,1.642,338,3.514,339,2.057,340,2.241,341,0.952,342,2.462,343,1.528,344,1.642,345,2.241,346,1.827,347,1.827,348,3.285,349,1.827,350,1.827,351,1.495,352,2.462,353,2.462,354,1.827,355,1.827,356,2.462,357,3.514,358,1.267,359,1.642,360,1.827,361,1.827,362,1.827,363,3.285,364,1.642,365,2.739,366,1.251,367,1.827,368,3.934,369,2.739,370,1.827,371,1.827,372,1.827,373,1.827,374,1.827,375,2.688,376,1.827,377,1.642,378,1.372,379,1.175,380,1.372,381,1.642,382,1.267,383,2.462,384,1.642,385,1.827,386,2.739,387,1.827,388,1.827,389,1.827,390,1.827,391,1.827,392,3.285,393,3.285,394,2.455,395,3.649,396,1.827,397,1.827,398,2.739,399,3.649,400,3.285,401,2.739,402,1.827,403,1.827,404,1.827,405,1.827,406,1.827,407,1.827,408,1.827,409,1.495,410,3.649,411,1.827,412,1.642,413,2.739,414,1.638,415,1.638,416,1.642,417,1.827,418,1.827,419,1.642,420,3.482,421,1.642,422,1.642,423,1.495,424,1.642,425,1.642,426,1.827,427,3.28,428,2.462,429,2.462,430,1.827,431,2.462,432,2.462,433,2.462,434,2.739,435,2.462,436,2.462,437,2.739,438,2.739,439,2.241,440,2.462,441,2.739,442,1.827,443,1.827,444,1.827,445,1.827,446,1.642,447,1.827,448,1.827,449,1.827,450,2.739,451,1.827,452,1.827,453,1.827,454,1.827,455,1.827,456,1.642,457,1.827,458,1.827,459,1.827,460,1.827,461,1.642,462,1.827,463,1.827,464,1.827,465,1.495,466,1.827,467,3.649,468,1.642,469,1.827,470,1.827,471,1.827,472,1.827,473,1.827,474,1.827,475,1.827,476,1.827,477,1.827,478,1.827,479,1.642,480,1.827,481,0.835,482,1.827,483,1.827,484,1.827,485,1.827,486,1.827]],["title/classes/ConfigBuilder.html",[120,0.401,487,1.928]],["body/classes/ConfigBuilder.html",[2,0.336,3,0.464,7,0.207,25,0.371,37,1.166,48,1.48,52,1.385,53,0.026,54,0.707,55,0.577,56,1.048,68,1.187,77,1.723,79,1.547,102,1.047,104,0.502,119,0.302,120,0.551,123,1.723,183,0.831,197,1.02,208,0.017,209,0.017,333,5.042,335,0.484,487,2.653,488,5.25,489,2.346,490,5.371,491,4.738,492,4.738,493,5.371,494,4.738,495,3.5,496,2.473,497,5.756,498,5.756,499,2.628,500,5.756,501,5.46,502,2.464,503,3.5,504,3.5,505,3.5,506,2.088,507,3.5,508,2.255,509,3.5,510,3.5,511,3.5,512,4.874,513,5.756,514,5.756,515,2.049,516,3.5,517,4.548,518,4.738,519,3.5,520,1.361,521,2.964,522,4.485,523,4.738,524,1.954,525,3.5,526,3.5,527,4.738,528,3.5,529,1.561,530,2.964,531,3.5,532,2.61,533,3.5,534,3.5,535,3.5,536,3.5,537,3.5,538,3.5,539,3.5,540,2.964,541,2.964,542,3.5,543,3.5,544,3.5,545,3.5]],["title/components/ConfigComponent.html",[0,0.557,180,0.965]],["body/components/ConfigComponent.html",[0,0.981,1,2.067,2,0.286,3,0.258,4,1.331,5,1.331,6,1.331,7,0.176,9,1.085,12,1.918,13,3.68,14,1.331,15,1.241,18,2.612,19,2.144,21,1.649,23,1.649,25,0.316,26,0.739,27,1.764,31,1.937,37,1.043,39,3.009,43,1.189,45,2.524,46,2.053,47,2.235,48,1.526,50,1.542,51,1.764,52,0.687,53,0.026,54,0.523,55,0.474,56,0.52,58,1.445,68,1.162,72,3.602,73,1.715,77,1.795,80,1.085,81,0.6,84,1.445,88,1.189,102,1.269,104,0.643,105,0.559,107,1.331,114,1.085,117,2.089,119,0.366,120,0.494,122,1.16,123,1.795,147,1.331,174,1.016,175,1.892,176,1.892,177,1.892,178,1.331,179,1.331,180,1.739,181,1.892,182,0.837,183,0.872,184,1.331,185,1.445,186,1.892,187,0.952,188,1.892,189,1.016,190,2.201,191,0.952,192,1.085,193,1.331,194,1.016,195,1.331,196,1.016,197,0.913,198,1.016,199,1.331,200,0.892,201,1.445,202,0.952,203,1.016,204,1.331,205,1.016,206,1.331,207,1.331,208,0.015,209,0.015,233,2.526,258,1.16,308,2,309,1.671,342,3.307,343,2.235,352,3.602,357,3.602,368,2.843,381,3.307,382,2.778,394,1.331,419,3.602,420,3.598,421,2,422,2,423,1.82,424,2,425,2,427,2.843,428,2,429,2,431,2,432,2,433,2,435,2.843,436,2,440,2,456,3.602,546,2.526,547,2.843,548,2.843,549,3.163,550,3.163,551,3.163,552,5.373,553,5.373,554,2.983,555,4.241,556,2.983,557,2.983,558,2.983,559,2.983,560,2.983,561,2.983,562,2.983,563,2.983,564,2.983,565,2.983,566,2.983,567,2,568,2.983,569,2.983,570,2.983,571,2.983,572,2.983,573,2.983,574,2.225,575,2.983,576,2.983,577,2.983]],["title/classes/ConfigDataSource.html",[120,0.401,375,2.101]],["body/classes/ConfigDataSource.html",[0,0.552,2,0.213,3,0.192,7,0.131,12,1.613,18,0.864,19,0.709,21,0.864,23,0.864,25,0.236,26,0.594,27,1.651,30,3.27,31,2.135,37,0.839,39,1.244,43,0.956,45,1.727,46,0.924,47,1.419,48,1.401,50,0.808,52,0.956,53,0.026,54,0.604,55,0.327,56,0.723,68,1.116,73,1.325,77,1.509,79,1.311,80,1.693,81,0.935,84,1.414,88,1.408,98,1.065,102,1.502,104,0.668,105,0.416,106,2.782,107,1.851,114,0.808,119,0.358,120,0.483,123,2.071,141,1.489,146,1.244,147,1.521,153,3.12,154,3.12,160,1.91,180,0.623,182,0.623,183,0.861,187,0.709,200,0.665,201,0.757,208,0.012,209,0.012,228,1.149,232,0.757,258,0.864,287,2.596,298,1.326,305,3.27,309,1.244,311,1.244,335,0.307,336,3.914,337,1.489,338,2.286,339,1.91,340,2.081,341,0.864,342,2.286,343,1.419,344,1.489,345,2.081,346,1.657,347,1.657,348,3.471,349,1.657,350,1.657,351,1.356,352,2.286,353,2.286,354,1.657,355,1.657,356,2.782,357,3.366,358,1.149,359,1.489,360,1.657,361,1.657,362,1.657,363,3.745,364,1.489,365,3.095,366,1.162,367,1.657,368,4.328,369,3.095,370,1.657,371,1.657,372,1.657,373,1.657,374,1.657,375,2.84,376,1.657,377,1.489,378,1.244,379,1.065,380,1.244,381,1.489,382,1.149,383,2.286,384,1.489,385,1.657,386,2.543,387,1.657,388,1.657,389,1.657,390,1.657,391,1.657,392,3.095,393,3.095,394,2.462,395,3.471,396,1.657,397,1.657,398,2.543,399,3.471,400,3.095,401,2.543,402,1.657,403,1.657,404,1.657,405,1.657,406,1.657,407,1.657,408,1.657,409,1.356,410,3.471,411,1.657,412,1.489,413,2.543,414,1.521,415,1.521,416,1.489,417,1.657,418,1.657,419,1.489,420,3.367,421,1.489,422,1.489,423,1.356,424,1.489,425,1.489,426,1.657,427,3.12,428,2.286,429,2.286,430,1.657,431,2.286,432,2.286,433,2.286,434,2.543,435,2.286,436,2.286,437,2.543,438,2.543,439,2.081,440,2.286,441,2.543,442,1.657,443,1.657,444,1.657,445,1.657,446,1.489,447,1.657,448,1.657,449,1.657,450,2.543,451,1.657,452,1.657,453,1.657,454,1.657,455,1.657,456,1.489,457,1.657,458,1.657,459,1.657,460,1.657,461,3.12,462,3.471,463,2.543,464,2.543,465,1.356,466,2.543,467,4.246,468,3.12,469,1.657,470,3.471,471,1.657,472,1.657,473,2.543,474,1.657,475,1.657,476,1.657,477,1.657,478,1.657,479,1.489,480,1.657,481,0.757,482,1.657,483,1.657,484,1.657,485,1.657,486,1.657,578,3.41,579,2.887,580,2.222,581,3.41,582,2.222,583,2.222,584,2.222,585,2.222,586,2.222,587,2.222]],["title/interfaces/ConfigInterface.html",[335,0.476,520,1.338]],["body/interfaces/ConfigInterface.html",[2,0.423,3,0.475,7,0.26,25,0.467,26,0.96,53,0.026,54,0.7,55,0.604,79,1.639,81,1.207,104,0.467,119,0.578,183,0.609,197,0.949,208,0.02,209,0.02,232,1.502,335,0.936,341,2.14,366,2.205,481,1.502,496,1.604,499,2.334,502,1.714,506,1.714,508,2.003,515,1.502,520,2.14,524,2.184,529,1.967,588,2.114,589,2.114,590,2.114,591,2.291,592,1.834,593,2.847,594,1.834,595,1.834,596,2.114,597,2.805,598,2.114,599,2.114]],["title/components/ConfigListComponent.html",[0,0.557,182,0.965]],["body/components/ConfigListComponent.html",[0,0.719,1,0.588,2,0.166,3,0.149,4,0.77,5,0.77,6,0.77,7,0.102,12,1.368,15,0.718,18,2.369,19,1.945,21,1.086,23,1.086,25,0.183,26,0.487,27,1.755,30,3.017,31,2.136,37,0.688,39,2.266,43,0.783,45,2.083,46,1.465,47,1.683,48,1.589,50,1.28,52,1.023,53,0.026,54,0.639,55,0.591,56,0.774,68,1.141,73,1.719,77,1.896,79,1.452,80,1.472,81,0.813,84,1.199,88,1.246,98,1.688,102,1.498,104,0.631,105,0.323,106,1.873,107,1.57,114,0.628,117,1.573,119,0.304,120,0.325,123,1.896,141,1.157,146,0.966,147,1.246,153,2.712,154,2.712,160,1.565,174,0.588,175,1.246,176,1.246,177,1.246,178,0.77,179,0.77,180,0.783,181,1.246,182,1.134,183,0.877,184,0.77,185,0.588,186,1.246,187,0.892,188,1.805,189,0.588,190,1.57,191,0.551,192,0.628,193,0.77,194,0.588,195,0.77,196,0.588,197,0.601,198,0.588,199,0.77,200,0.836,201,1.199,202,0.551,203,0.588,204,0.77,205,0.588,206,0.77,207,0.77,208,0.01,209,0.01,228,0.892,232,0.588,258,0.671,287,1.82,298,1.573,305,3.633,309,0.966,311,0.966,335,0.239,336,4.349,337,1.157,338,1.873,339,2.266,340,2.468,341,0.671,342,2.36,343,1.465,344,1.873,345,1.705,346,1.287,347,1.287,348,3.547,349,1.287,350,1.287,351,1.053,352,2.712,353,2.712,354,1.287,355,1.287,356,1.873,357,3.932,358,0.892,359,2.712,360,2.084,361,2.084,362,1.287,363,3.547,364,2.712,365,3.314,366,1.514,367,3.017,368,3.794,369,2.625,370,3.017,371,3.017,372,3.017,373,3.017,374,3.017,375,2.711,376,3.017,377,2.712,378,1.565,379,1.688,380,1.971,381,2.36,382,2.092,383,1.873,384,1.157,385,1.287,386,2.084,387,1.287,388,1.287,389,1.287,390,1.287,391,1.287,392,2.625,393,2.625,394,2.122,395,3.017,396,1.287,397,1.287,398,2.084,399,3.017,400,2.625,401,2.084,402,1.287,403,1.287,404,1.287,405,1.287,406,1.287,407,1.287,408,1.287,409,1.053,410,3.017,411,1.287,412,1.157,413,2.084,414,1.246,415,1.246,416,1.157,417,1.287,418,1.287,419,2.712,420,3.055,421,1.157,422,1.157,423,1.053,424,1.157,425,1.157,426,3.017,427,2.712,428,1.873,429,1.873,430,1.287,431,1.873,432,1.873,433,1.873,434,2.084,435,1.873,436,1.873,437,2.084,438,2.084,439,1.705,440,1.873,441,2.084,442,1.287,443,3.017,444,2.084,445,1.287,446,1.873,447,1.287,448,1.287,449,2.084,450,3.314,451,1.287,452,1.287,453,2.084,454,1.287,455,2.084,456,2.712,457,1.287,458,1.287,459,1.287,460,1.287,461,1.157,462,1.287,463,1.287,464,1.287,465,1.053,466,1.287,467,3.017,468,1.157,469,1.287,470,1.287,471,1.287,472,1.287,473,1.287,474,1.287,475,1.287,476,1.287,477,1.287,478,1.287,479,1.157,480,1.287,481,0.588,482,1.287,483,1.287,484,1.287,485,1.287,486,1.287,532,2.084,600,2.366,601,2.794,602,2.366,603,2.366,604,1.461,605,2.794,606,1.726,607,1.726,608,1.726,609,1.726,610,1.726,611,1.726,612,1.726,613,1.726,614,1.726,615,1.726,616,1.726,617,1.726,618,1.726,619,1.726,620,1.726,621,1.726,622,1.726,623,1.726,624,1.726,625,1.726,626,1.726,627,1.726,628,1.726,629,1.461,630,2.794,631,2.366,632,2.794,633,2.794,634,2.794,635,1.461]],["title/modules/ConfigModule.html",[210,1.252,221,1.928]],["body/modules/ConfigModule.html",[2,0.325,3,0.293,7,0.2,16,2.396,19,1.082,20,2.067,53,0.026,58,1.799,68,0.868,104,0.727,105,0.635,119,0.49,120,0.394,122,1.317,170,1.625,174,1.154,182,1.874,183,0.897,185,2.18,187,2.043,189,2.091,191,1.96,196,2.091,197,0.998,198,2.091,200,1.915,202,1.96,208,0.017,209,0.017,210,2.066,212,1.898,213,2.272,221,3.947,224,3.107,225,2.067,247,2.869,248,2.272,249,2.869,250,3.456,253,3.456,254,3.456,255,3.456,256,3.456,258,1.317,263,3.541,301,3.924,302,2.527,304,2.869,305,1.898,306,2.869,307,2.869,308,2.272,309,2.595,312,3.924,313,3.924,314,2.527,316,3.924,318,3.924,320,3.924,321,3.924,322,3.924,323,3.924,324,3.924,325,3.924,326,3.924,327,3.924,328,3.924,329,4.473,332,2.869,333,3.456,334,2.869,345,2.067,351,2.067,353,2.272,358,1.752,636,2.869,637,2.869,638,2.869,639,2.869,640,3.746,641,3.746,642,3.389,643,4.635,644,3.924,645,2.527,646,4.473,647,4.635,648,3.389,649,4.635,650,3.924,651,2.527,652,2.527,653,3.389,654,3.389,655,3.389,656,3.924,657,2.272,658,3.389]],["title/modules/ConfigRoutingModule.html",[210,1.252,641,2.101]],["body/modules/ConfigRoutingModule.html",[0,1.021,2,0.427,3,0.384,7,0.263,53,0.026,65,2.69,93,5.343,97,3.769,104,0.719,105,0.834,114,1.619,119,0.478,120,0.518,123,1.619,146,3.533,161,3.769,162,3.769,163,3.769,180,1.553,183,0.915,189,1.887,196,1.887,202,1.768,208,0.02,209,0.02,210,1.619,222,3.356,237,3.769,238,3.769,263,3.713,268,4.69,281,4.706,303,3.769,481,2.149,641,3.379,644,3.769,645,3.319,646,5.106,650,3.769,651,3.319,656,3.769,657,2.984,659,4.451,660,4.451,661,3.769,662,3.769,663,3.769,664,3.769,665,4.451]],["title/interfaces/ConfigsInterface.html",[335,0.476,496,1.252]],["body/interfaces/ConfigsInterface.html",[2,0.414,3,0.469,7,0.255,25,0.457,26,0.946,53,0.026,54,0.721,55,0.63,79,1.64,81,1.195,104,0.457,119,0.575,183,0.596,197,0.928,208,0.02,209,0.02,232,1.469,335,0.932,341,2.111,366,1.85,481,1.469,496,1.975,499,2.311,502,1.676,506,2.425,508,1.975,515,1.469,520,1.676,524,2.388,529,1.924,588,2.068,589,2.068,590,2.068,591,2.259,592,1.794,593,3.226,594,1.794,595,1.794,596,2.068,597,2.783,598,2.068,599,2.068]],["title/injectables/DatabaseService.html",[274,1.252,298,1.338]],["body/injectables/DatabaseService.html",[2,0.249,3,0.224,7,0.153,25,0.275,26,0.667,27,1.903,31,2.113,37,0.942,43,1.074,48,1.637,52,1.403,53,0.026,54,0.646,55,0.623,56,1.062,68,1.141,73,2.07,79,1.553,80,1.83,81,1.011,87,2.775,88,1.505,100,1.738,102,0.775,104,0.596,105,0.486,107,1.156,119,0.224,120,0.302,123,0.943,183,0.358,208,0.014,209,0.014,228,1.34,232,0.883,274,1.657,298,1.489,335,0.358,339,2.817,340,3.07,341,1.956,364,3.373,366,0.883,378,2.817,379,1.836,383,1.738,384,1.738,414,2.593,415,2.032,446,3.373,461,3.373,479,2.567,487,1.452,496,2.114,499,2.26,501,4.26,502,1.956,508,1.83,512,4.26,515,1.714,517,3.857,520,1.008,594,1.078,600,3.243,602,3.243,603,3.243,666,2.195,667,5.032,668,5.032,669,5.032,670,5.619,671,5.813,672,5.032,673,5.032,674,3.83,675,4.555,676,3.83,677,3.83,678,3.83,679,2.195,680,3.83,681,3.83,682,2.592,683,3.243,684,2.592,685,5.032,686,5.032,687,2.592,688,3.83,689,2.592,690,3.83,691,3.412,692,2.592,693,4.003,694,3.83,695,2.592,696,3.83,697,2.592,698,3.83,699,2.592,700,3.83,701,2.592,702,3.83,703,2.592,704,2.592,705,3.83,706,2.592,707,5.813,708,2.592,709,2.592,710,3.83,711,2.592,712,2.592,713,2.592,714,1.933,715,1.738,716,2.592,717,2.592,718,1.933,719,2.195,720,2.592,721,2.592,722,2.592,723,3.83,724,2.592,725,3.83,726,2.592,727,2.592,728,2.592,729,2.592,730,5.032,731,4.26,732,4.555,733,1.933,734,2.856,735,2.592,736,2.195,737,2.592,738,1.933,739,2.592,740,2.592,741,2.592,742,2.592,743,2.592,744,2.592,745,3.83,746,2.592,747,2.592,748,2.592,749,3.83,750,2.592,751,2.592]],["title/classes/DriveQueryBuilder.html",[120,0.401,752,2.308]],["body/classes/DriveQueryBuilder.html",[2,0.192,3,0.172,7,0.399,9,2.211,14,0.89,25,0.211,26,0.546,31,1.402,37,0.772,43,0.559,48,1.531,50,2.104,51,1.305,52,1.4,53,0.026,54,0.689,55,0.631,56,1.059,57,0.938,64,2.945,68,1.245,77,1.598,79,1.568,80,0.725,81,0.401,119,0.335,120,0.556,121,3.357,122,2.363,173,3.357,192,1.409,208,0.011,209,0.011,285,2.102,489,1.337,524,1.141,567,3.399,595,0.83,752,4.606,753,4.684,754,3.835,755,2.655,756,2.339,757,1.504,758,3.136,759,3.136,760,3.136,761,3.136,762,3.136,763,3.136,764,3.136,765,3.136,766,3.136,767,3.136,768,3.136,769,3.136,770,3.136,771,3.136,772,4.776,773,1.995,774,4.393,775,3.136,776,2.102,777,3.136,778,1.995,779,2.655,780,3.136,781,5.189,782,1.995,783,4.278,784,5.784,785,3.136,786,1.995,787,5.994,788,3.136,789,1.995,790,4.313,791,3.136,792,5.784,793,4.393,794,3.719,795,3.136,796,3.788,797,1.995,798,4.393,799,4.652,800,1.995,801,3.136,802,3.136,803,1.995,804,1.995,805,1.995,806,4.293,807,3.136,808,1.995,809,3.136,810,1.995,811,4.393,812,2.655,813,3.136,814,1.995,815,1.995,816,1.995,817,3.875,818,3.136,819,1.995,820,3.136,821,1.995,822,1.995,823,1.689,824,5.318,825,1.689,826,1.217,827,1.689,828,1.689,829,1.689,830,1.689,831,1.487,832,1.689,833,1.689,834,1.689,835,1.689,836,1.689,837,1.689,838,1.689,839,1.689,840,1.689,841,1.689,842,1.689,843,1.689,844,1.689,845,1.689,846,1.689,847,1.689,848,1.689,849,1.689,850,1.689,851,1.689,852,1.689,853,1.689,854,1.689,855,6.08,856,1.995,857,3.136,858,3.136,859,3.875,860,1.995,861,1.995]],["title/interfaces/FolderCreation.html",[335,0.476,508,1.252]],["body/interfaces/FolderCreation.html",[2,0.405,3,0.462,7,0.249,25,0.447,26,0.933,53,0.026,54,0.718,55,0.671,79,1.628,81,1.182,104,0.447,119,0.572,183,0.582,197,0.907,208,0.019,209,0.019,232,1.435,335,0.927,341,2.08,366,1.823,481,1.435,496,1.533,499,2.286,502,1.638,506,1.638,508,2.139,515,1.435,520,1.638,524,2.139,529,1.88,588,2.02,589,2.02,590,2.02,591,2.227,592,1.753,593,2.767,594,1.753,595,2.574,596,2.02,597,2.76,598,2.966,599,2.966,862,6.71]],["title/components/FolderCreationComponent.html",[0,0.557,191,1.099]],["body/components/FolderCreationComponent.html",[0,0.841,1,0.819,2,0.231,3,0.208,4,1.073,5,1.073,6,1.073,7,0.142,12,1.408,13,3.249,15,1.001,17,1.652,18,2.526,19,2.074,20,1.467,21,1.408,23,1.408,25,0.255,26,0.631,27,1.895,31,1.66,37,0.891,39,2.715,43,1.016,44,1.347,48,1.587,52,0.834,53,0.026,54,0.702,55,0.619,56,0.631,57,1.084,68,1.093,73,1.66,77,2.123,80,1.892,81,1.33,84,1.862,88,1.222,102,0.72,104,0.514,105,0.451,111,1.347,117,1.885,119,0.208,120,0.28,123,0.875,156,2.701,174,0.819,175,1.616,176,1.616,177,1.616,178,1.073,179,1.073,180,0.674,181,1.616,182,0.674,183,0.719,184,1.073,185,0.819,186,1.616,187,0.768,188,1.616,189,0.819,190,1.943,191,1.548,192,2.303,193,1.073,194,0.819,195,1.073,196,0.819,197,0.78,198,0.819,199,1.073,200,0.72,201,1.234,202,0.768,203,0.819,204,1.073,205,0.819,206,1.073,207,1.073,208,0.013,209,0.013,225,2.658,248,4.356,258,0.935,335,0.332,343,1.001,394,1.073,414,1.073,416,1.612,508,2.063,515,1.652,530,4.105,591,2.164,595,1.507,596,2.325,597,2.714,598,2.325,599,2.325,731,2.037,757,2.089,781,3.616,863,5.503,864,2.037,865,4.105,866,3.622,867,3.622,868,4.849,869,4.849,870,4.849,871,4.849,872,5.201,873,4.849,874,3.622,875,4.849,876,4.357,877,4.849,878,4.357,879,2.405,880,2.405,881,4.357,882,2.405,883,2.405,884,2.405,885,2.405,886,2.405,887,3.622,888,4.849,889,2.405,890,2.405,891,2.405,892,2.405,893,5.201,894,2.428,895,5.201,896,2.405,897,2.405,898,2.405,899,2.405,900,2.405,901,2.405,902,2.701,903,2.405,904,4.357,905,1.794,906,3.622,907,2.405,908,2.405,909,2.405,910,4.357,911,2.405,912,2.405,913,3.622,914,2.405,915,2.405,916,3.622,917,2.405,918,2.405,919,3.622,920,2.405,921,3.622,922,1.612,923,2.405,924,5.466]],["title/injectables/GoogleService.html",[17,1.173,274,1.252]],["body/injectables/GoogleService.html",[2,0.221,3,0.199,7,0.207,9,0.836,14,1.026,17,2.137,25,0.244,26,0.61,27,1.607,28,3.008,30,1.96,31,1.512,37,0.861,41,4.012,42,4.012,43,0.645,48,1.56,50,1.542,51,1.764,52,1.237,53,0.026,54,0.625,55,0.516,56,0.936,57,1.525,58,1.192,59,2.136,63,2.136,64,2.347,68,1.224,71,1.947,72,2.347,73,2.003,77,1.542,79,1.547,80,1.542,81,0.852,84,0.783,87,2.777,88,1.506,104,0.592,105,0.431,107,1.562,115,1.403,116,1.403,117,1.361,118,1.288,119,0.302,120,0.551,121,1.288,122,2.238,123,1.855,130,1.715,169,4.012,170,1.678,183,0.484,192,1.724,208,0.013,209,0.013,210,1.273,228,1.189,274,1.542,278,3.512,288,2.136,339,2.653,356,1.541,359,1.541,378,1.96,379,1.102,415,1.026,465,1.403,515,1.192,524,1.542,567,2.347,595,2.235,604,1.947,683,2.964,691,3.514,693,4.398,715,1.541,718,1.715,733,1.715,734,1.715,754,2.374,755,2.964,756,1.715,796,1.541,799,1.947,831,1.715,925,1.541,926,3.501,927,4.739,928,4.739,929,4.739,930,3.601,931,4.739,932,3.501,933,4.739,934,3.501,935,3.501,936,4.739,937,3.501,938,3.501,939,2.299,940,2.611,941,2.299,942,5.372,943,3.501,944,5.372,945,2.299,946,5.372,947,2.299,948,3.501,949,3.501,950,4.012,951,5.099,952,2.299,953,3.501,954,3.501,955,2.299,956,3.501,957,2.299,958,2.299,959,2.299,960,3.501,961,4.739,962,2.299,963,2.299,964,3.501,965,2.347,966,4.239,967,4.739,968,3.501,969,2.299,970,3.501,971,2.299,972,2.299,973,1.947,974,1.541,975,1.947,976,1.947,977,1.947,978,3.161,979,1.715,980,1.947,981,3.501,982,2.299,983,2.299,984,1.715,985,2.299,986,2.299,987,3.501,988,2.299,989,2.299,990,2.299,991,2.299,992,2.299,993,4.239,994,2.299,995,2.299,996,2.299,997,2.299,998,2.299,999,2.299,1000,2.299,1001,2.299,1002,2.299,1003,2.299,1004,2.299,1005,2.299,1006,2.299,1007,2.299,1008,2.299,1009,2.299,1010,2.299,1011,2.299,1012,2.299,1013,2.299,1014,2.299,1015,2.299,1016,2.299,1017,2.299,1018,2.299,1019,2.299,1020,2.299,1021,4.739,1022,2.299,1023,4.739,1024,3.501,1025,4.239,1026,3.501,1027,3.501,1028,2.299,1029,2.299,1030,2.299,1031,2.299,1032,2.299,1033,2.299,1034,3.501,1035,2.299,1036,2.299,1037,2.299,1038,2.299]],["title/interfaces/GroupFolderInterface.html",[335,0.476,499,1.338]],["body/interfaces/GroupFolderInterface.html",[2,0.416,3,0.47,7,0.256,25,0.459,26,0.949,53,0.026,54,0.722,55,0.618,56,1.089,79,1.641,81,1.197,104,0.459,119,0.576,183,0.599,197,0.933,208,0.02,209,0.02,232,1.476,335,0.933,341,2.117,366,1.855,481,1.476,496,1.576,499,2.429,502,1.684,506,1.684,508,1.981,515,1.476,520,1.684,524,2.167,529,1.933,588,2.077,589,2.077,590,2.077,591,2.679,592,1.803,593,2.816,594,1.803,595,1.803,596,2.077,597,2.788,598,2.077,599,2.077]],["title/interfaces/GroupInterface.html",[335,0.476,592,1.432]],["body/interfaces/GroupInterface.html",[2,0.399,3,0.549,7,0.245,25,0.44,26,0.924,53,0.026,54,0.716,55,0.649,56,1.072,79,1.636,81,1.174,104,0.44,119,0.57,183,0.574,197,1.324,208,0.019,209,0.019,232,1.414,335,0.925,341,2.06,366,1.805,481,1.414,496,1.51,499,2.569,502,1.614,506,1.614,508,2.238,515,2.096,520,1.614,524,2.364,529,2.744,588,1.99,589,1.99,590,1.99,591,2.205,592,2.205,593,3.181,594,1.727,595,1.727,596,1.99,597,2.744,598,1.99,599,1.99]],["title/components/HomeComponent.html",[0,0.557,194,1.173]],["body/components/HomeComponent.html",[0,1.023,1,1.028,2,0.29,3,0.261,4,1.347,5,1.347,6,1.347,7,0.178,9,1.098,12,1.931,14,1.347,15,1.256,18,2.616,19,2.148,21,1.663,23,1.663,25,0.32,26,0.745,27,1.771,30,2.395,31,1.82,37,1.052,43,1.199,45,2.533,46,1.779,47,2.247,48,1.457,50,1.556,51,1.779,52,0.695,53,0.026,54,0.527,55,0.477,56,0.526,57,1.279,58,1.457,68,0.93,72,2.867,73,1.585,77,1.806,79,1.144,80,1.556,81,0.859,84,1.692,88,1.199,96,4.574,98,1.448,100,2.867,102,0.903,104,0.605,105,0.566,114,1.098,117,2.1,119,0.369,120,0.498,122,1.663,147,1.347,160,2.781,174,1.028,175,1.908,176,1.908,177,1.908,178,1.347,179,1.347,180,0.847,181,1.908,182,0.847,183,0.86,184,1.347,185,1.028,186,1.908,187,0.964,188,1.908,189,1.028,190,2.215,191,0.964,192,1.098,193,1.347,194,2.155,195,1.347,196,1.028,197,0.921,198,1.028,199,1.347,200,0.903,201,1.457,202,0.964,203,1.028,204,1.347,205,1.028,206,1.347,207,1.347,208,0.015,209,0.015,258,1.174,286,3.189,288,2.609,298,2.1,299,3.409,311,1.691,331,2.556,343,2.247,366,1.028,380,2.781,382,2.793,409,1.842,414,1.347,415,1.347,532,2.252,547,2.867,548,2.867,549,3.189,629,4.205,631,3.621,635,4.205,757,2.381,894,4.241,902,4.029,905,3.704,1039,2.556,1040,4.277,1041,4.277,1042,5.921,1043,5.402,1044,5.402,1045,5.402,1046,2.556,1047,4.277,1048,3.019,1049,3.019,1050,3.019,1051,3.019,1052,3.019,1053,2.556,1054,4.277,1055,4.277,1056,3.019,1057,3.019,1058,3.019,1059,3.019,1060,3.019,1061,2.556,1062,4.277,1063,4.277]],["title/components/PresetConfigComponent.html",[0,0.557,200,1.03]],["body/components/PresetConfigComponent.html",[0,0.881,1,0.914,2,0.258,3,0.232,4,1.197,5,1.197,6,1.197,7,0.158,12,1.527,15,1.116,17,1.742,18,2.571,19,2.111,21,1.527,23,1.527,25,0.284,26,0.684,27,1.966,31,1.815,37,0.967,43,1.101,45,2.665,46,2.265,47,2.366,48,1.537,52,0.904,53,0.026,54,0.577,55,0.491,56,0.684,57,1.39,68,1.02,73,1.483,79,1.07,80,1.86,81,1.028,84,0.914,87,2.403,88,1.434,102,1.53,104,0.652,105,0.503,107,1.197,111,1.502,114,0.976,117,1.988,119,0.232,120,0.312,123,1.86,125,2.271,173,2.2,174,0.914,175,1.752,176,1.752,177,1.752,178,1.197,179,1.197,180,0.752,181,1.752,182,0.752,183,0.885,184,1.197,185,0.914,186,1.752,187,0.856,188,1.752,189,0.914,190,2.073,191,0.856,192,1.69,193,1.197,194,0.914,195,1.197,196,0.914,197,0.845,198,0.914,199,1.197,200,1.53,201,2.322,202,0.856,203,0.914,204,1.197,205,0.914,206,1.197,207,1.197,208,0.014,209,0.014,258,1.043,298,1.988,311,1.502,343,1.933,358,3.274,380,2.602,382,2.645,394,1.752,414,1.197,415,1.197,439,3.121,487,1.502,506,1.527,515,0.914,521,2.271,522,3.815,524,0.976,550,2.929,551,2.929,574,3.815,591,1.116,714,2.001,715,1.798,902,3.815,905,3.465,922,2.633,984,2.929,1046,2.271,1064,4.723,1065,2.271,1066,4.331,1067,4.331,1068,3.326,1069,3.928,1070,3.326,1071,2.683,1072,2.929,1073,2.683,1074,2.683,1075,2.683,1076,3.326,1077,2.683,1078,2.683,1079,2.683,1080,2.683,1081,2.683,1082,2.683,1083,2.683,1084,2.683,1085,2.683,1086,2.683,1087,4.647,1088,4.647,1089,4.647,1090,2.683,1091,2.271,1092,2.683,1093,2.683,1094,2.683,1095,2.683,1096,2.271,1097,2.683,1098,2.683,1099,2.683,1100,2.683,1101,2.683,1102,2.271,1103,2.683,1104,2.683,1105,2.683,1106,2.271,1107,2.683,1108,2.683,1109,2.271,1110,2.683,1111,2.001,1112,3.326,1113,3.326,1114,3.326]],["title/components/PresetConfigPageComponent.html",[0,0.557,202,1.099]],["body/components/PresetConfigPageComponent.html",[0,0.95,1,1.115,2,0.314,3,0.283,4,1.46,5,1.46,6,1.46,7,0.193,15,1.362,18,2.645,19,2.171,21,1.759,23,1.759,25,0.347,26,0.789,27,1.951,31,1.444,37,1.113,45,2.444,46,2.158,47,1.883,48,1.621,52,0.754,53,0.026,54,0.55,55,0.498,56,0.57,68,1.048,73,1.786,79,1.042,80,2.136,81,1.18,87,1.692,88,1.454,102,1.552,104,0.48,105,0.613,117,2.175,119,0.283,120,0.381,147,1.46,173,2.534,174,1.115,175,2.019,176,2.019,177,2.019,178,1.46,179,1.46,180,0.918,181,2.019,182,0.918,183,0.944,184,1.46,185,1.115,186,2.019,187,1.045,188,2.019,189,1.115,190,2.314,191,1.045,192,1.19,193,1.46,194,1.115,195,1.46,196,1.115,197,0.974,198,1.115,199,1.46,200,2.002,201,2.344,202,1.786,203,1.115,204,1.46,205,1.115,206,1.46,207,1.46,208,0.016,209,0.016,287,2.34,343,1.362,345,1.997,358,3.037,382,2.682,439,3.799,550,3.375,551,3.375,574,3.868,657,3.477,984,3.375,1061,2.771,1064,3.868,1066,4.392,1067,4.392,1068,3.831,1070,2.771,1072,2.44,1076,2.771,1112,3.831,1113,3.831,1114,3.831,1115,2.771,1116,4.525,1117,5.596,1118,3.273,1119,6.443,1120,3.273,1121,3.273,1122,3.273,1123,3.273,1124,3.273,1125,3.273,1126,3.273,1127,3.273,1128,3.273,1129,3.273]],["title/injectables/PreventAuthGuardService.html",[223,1.928,274,1.252]],["body/injectables/PreventAuthGuardService.html",[2,0.316,3,0.285,7,0.195,9,1.654,12,2.182,14,1.47,17,2.198,25,0.349,26,0.792,27,1.954,28,2.915,37,1.119,43,0.924,44,1.846,45,2.913,46,2.787,47,2.787,48,1.449,50,1.894,51,2.166,52,0.759,53,0.026,54,0.349,55,0.539,56,0.574,57,2.037,58,2.266,59,3.424,65,2.716,68,1.169,77,2.142,84,1.549,102,1.36,104,0.552,105,0.617,114,1.199,119,0.485,120,0.653,121,3.409,122,2.182,147,2.028,148,2.458,149,2.458,208,0.016,209,0.016,222,3.045,223,3.494,274,2.041,275,4.54,276,2.458,277,4.408,278,3.937,279,4.54,280,2.791,281,4.871,284,4.408,285,4.081,286,3.883,287,2.692,288,3.176,290,2.458,291,3.391,292,3.85,1130,3.296,1131,3.296,1132,5.206]],["title/interfaces/RuleInterface.html",[335,0.476,502,1.338]],["body/interfaces/RuleInterface.html",[2,0.403,3,0.461,7,0.248,25,0.445,26,0.93,53,0.026,54,0.718,55,0.644,56,1.136,79,1.644,81,1.179,104,0.445,119,0.572,183,0.58,197,0.903,208,0.019,209,0.019,232,1.429,335,0.927,341,2.074,366,1.818,481,2.104,496,1.526,499,2.281,502,2.074,506,1.631,508,1.941,515,1.429,520,1.631,524,2.371,529,1.871,588,2.011,589,2.961,590,2.961,591,2.22,592,1.745,593,2.759,594,1.745,595,1.745,596,2.011,597,2.755,598,2.011,599,2.011]],["title/components/SettingsComponent.html",[0,0.557,203,1.173]],["body/components/SettingsComponent.html",[0,1.04,1,1.262,2,0.356,3,0.32,4,1.653,5,1.653,6,1.653,7,0.219,9,1.348,14,1.653,15,1.542,17,2.006,18,2.686,19,2.205,21,1.914,23,1.914,25,0.393,31,1.571,37,1.211,43,1.039,48,1.211,50,1.791,51,2.048,52,0.853,53,0.026,54,0.586,55,0.356,56,0.646,57,1.654,58,1.883,68,0.694,73,1.183,88,1.38,100,3.949,104,0.625,105,0.694,111,2.075,115,2.261,116,2.261,117,2.384,118,2.075,119,0.425,120,0.573,122,1.441,165,3.138,174,1.262,175,2.196,176,2.196,177,2.196,178,1.653,179,1.653,180,1.039,181,2.196,182,1.039,183,0.847,184,1.653,185,1.262,186,2.196,187,1.183,188,2.196,189,1.262,190,2.466,191,1.183,192,1.348,193,1.653,194,1.262,195,1.653,196,1.262,197,1.06,198,1.262,199,1.653,200,1.109,201,1.677,202,1.183,203,2.225,204,1.653,205,1.262,206,1.653,207,1.653,208,0.018,209,0.018,228,1.916,232,1.262,339,3.299,340,3.594,343,1.542,378,3.299,379,2.361,414,1.653,415,1.653,465,2.261,547,3.3,548,3.3,549,3.672,679,3.138,718,2.764,719,3.138,738,4.123,1133,2.764,1134,4.924,1135,4.924,1136,5.891,1137,3.706,1138,3.706,1139,4.169]],["title/injectables/SorterService.html",[274,1.252,299,1.928]],["body/injectables/SorterService.html",[2,0.285,3,0.256,7,0.175,17,1.827,25,0.315,26,0.737,31,1.809,37,1.04,43,1.185,44,1.663,48,1.394,52,1.133,53,0.026,54,0.522,55,0.566,56,0.858,57,1.265,58,1.012,68,1.062,73,1.349,79,0.974,84,1.44,88,1.185,102,1.265,104,0.624,105,0.556,115,1.812,116,1.812,117,1.155,118,1.663,119,0.256,120,0.346,123,1.08,183,0.814,208,0.015,209,0.015,274,1.79,290,2.215,298,2.085,299,2.367,335,0.411,366,1.012,380,2.756,409,1.812,412,1.991,414,1.325,415,1.325,487,1.663,496,1.951,506,1.155,540,2.515,541,4.987,579,3.58,592,2.231,691,2.756,693,3.671,714,2.215,715,2.834,733,2.215,734,3.153,736,2.515,752,1.991,754,1.663,757,1.424,776,3.948,790,3.153,794,4.987,796,1.991,894,3.595,940,2.215,973,2.515,1053,2.515,1091,2.515,1096,2.515,1102,2.515,1140,2.215,1141,4.228,1142,4.228,1143,4.228,1144,2.971,1145,4.228,1146,2.971,1147,2.971,1148,2.971,1149,4.228,1150,6.805,1151,2.971,1152,5.131,1153,6.852,1154,3.58,1155,2.971,1156,2.971,1157,6.852,1158,2.971,1159,2.971,1160,2.971,1161,2.971,1162,2.971,1163,2.971,1164,2.971,1165,2.971,1166,2.971,1167,2.971,1168,4.168,1169,2.971,1170,2.971,1171,2.971,1172,2.971,1173,2.971,1174,2.971,1175,2.971,1176,2.971,1177,2.971,1178,2.971,1179,2.971,1180,2.971,1181,2.971,1182,2.971,1183,2.971,1184,6.194,1185,2.971,1186,4.228,1187,4.228,1188,4.228,1189,4.228,1190,4.228,1191,2.971,1192,2.971,1193,2.971,1194,2.971,1195,2.971,1196,2.971,1197,2.971,1198,2.971,1199,2.971,1200,2.971,1201,2.971]],["title/pipes/UnNamedPipe.html",[640,2.101,1202,2.308]],["body/pipes/UnNamedPipe.html",[2,0.481,3,0.432,7,0.296,12,1.946,15,2.083,37,1.232,48,1.232,52,1.153,53,0.026,54,0.696,55,0.481,56,0.872,68,1.114,81,1.196,104,0.531,105,0.938,119,0.432,120,0.583,208,0.021,209,0.021,394,2.233,640,3.63,940,3.734,1202,4.255,1203,5.038,1204,4.239,1205,5.95,1206,4.239,1207,5.95,1208,6.349,1209,5.007,1210,5.95,1211,5.007]],["title/components/UnauthenticatedComponent.html",[0,0.557,205,1.173]],["body/components/UnauthenticatedComponent.html",[0,1.004,1,1.102,2,0.311,3,0.279,4,1.443,5,1.443,6,1.443,7,0.345,9,1.632,10,3.8,14,1.443,15,1.346,17,2.114,18,2.641,19,2.168,21,1.745,23,1.745,25,0.343,26,0.782,27,1.343,28,2.513,37,1.37,43,0.907,44,1.811,48,1.268,50,1.632,51,1.867,52,0.745,53,0.025,54,0.62,55,0.535,56,0.564,57,2.049,58,1.992,59,3.145,64,3.009,68,0.606,73,1.032,88,1.259,98,2.669,104,0.476,105,0.606,111,1.811,117,2.164,119,0.388,120,0.522,121,1.811,122,1.745,166,2.739,174,1.102,175,2.002,176,2.002,177,2.002,178,1.443,179,1.443,180,0.907,181,2.002,182,0.907,183,0.808,184,1.443,185,1.102,186,2.002,187,1.032,188,2.002,189,1.102,190,2.299,191,1.032,192,1.176,193,1.443,194,1.102,195,1.443,196,1.102,197,0.966,198,1.102,199,1.443,200,0.968,201,1.896,202,1.032,203,1.102,204,1.443,205,2.189,206,2.299,207,1.443,208,0.016,209,0.016,278,3.861,279,3.347,291,2.412,335,0.62,343,1.346,344,2.168,547,3.009,757,3.179,781,3.347,783,3.009,790,3.347,865,3.8,894,4.057,965,3.009,1212,2.739,1213,4.488,1214,4.488,1215,4.488,1216,5.568,1217,3.234,1218,3.234,1219,4.488,1220,3.234,1221,4.152,1222,4.152,1223,4.714,1224,4.488,1225,4.488,1226,4.488,1227,4.488,1228,4.488,1229,4.488,1230,4.488,1231,4.488,1232,4.488,1233,5.568,1234,4.488,1235,4.488,1236,4.488,1237,5.568,1238,4.714,1239,4.488,1240,4.488]],["title/interfaces/UserDocument.html",[335,0.476,594,1.432]],["body/interfaces/UserDocument.html",[2,0.419,3,0.472,7,0.257,25,0.462,26,0.953,53,0.026,54,0.698,55,0.619,79,1.637,81,1.201,104,0.462,119,0.577,183,0.866,197,0.939,208,0.02,209,0.02,232,1.485,335,0.934,341,2.435,366,2.198,481,1.485,496,1.586,499,2.322,502,1.695,506,1.695,508,1.989,515,1.485,520,1.695,524,2.173,529,1.945,588,2.09,589,2.09,590,2.09,591,2.275,592,1.814,593,2.827,594,2.275,595,1.814,596,2.09,597,2.794,598,2.09,599,2.09]],["title/coverage.html",[1241,3.967]],["body/coverage.html",[0,1.084,1,1.081,7,0.187,8,3.304,17,1.081,53,0.026,55,0.305,57,0.95,88,0.89,108,2.368,109,2.368,118,3.093,120,0.594,180,0.89,182,0.89,183,0.885,185,1.081,187,1.013,189,1.081,191,1.013,194,1.081,196,1.081,197,1.189,198,1.081,200,0.95,201,1.081,202,1.013,203,1.081,205,1.081,208,0.016,209,0.016,222,1.642,223,1.778,245,3.304,248,2.128,274,2.113,275,3.304,276,3.304,298,1.234,299,1.778,305,2.858,308,2.128,335,0.871,336,3.421,337,3.421,351,1.937,358,1.642,375,1.937,394,3.158,487,1.778,488,2.688,489,2.97,496,1.155,499,1.234,502,1.234,508,1.155,520,1.234,546,2.688,588,2.961,592,1.321,594,1.321,640,1.937,645,2.368,651,2.368,652,3.304,657,2.128,666,2.688,691,1.778,752,2.128,753,2.368,754,1.778,783,2.128,826,1.937,863,2.688,864,2.688,925,4.14,930,2.97,974,4.638,978,2.368,979,2.368,1039,2.688,1064,3.304,1065,2.688,1111,4.929,1115,4.322,1133,3.304,1140,3.304,1202,2.128,1203,2.688,1204,2.688,1212,2.688,1241,2.688,1242,3.175,1243,3.175,1244,5.095,1245,6.776,1246,2.688,1247,6.3,1248,2.688,1249,2.688,1250,2.688,1251,3.175,1252,3.175,1253,5.104,1254,3.175,1255,3.175,1256,3.175,1257,4.431,1258,4.431,1259,4.431,1260,4.431,1261,3.175,1262,4.322,1263,3.175,1264,3.752,1265,2.688,1266,3.175,1267,3.175,1268,5.104,1269,3.175,1270,3.175,1271,3.175,1272,3.175,1273,3.752,1274,2.688,1275,3.175,1276,3.175,1277,3.175,1278,3.175,1279,4.431,1280,3.175,1281,3.175,1282,3.175,1283,2.688,1284,2.688,1285,3.175,1286,3.175,1287,3.175,1288,3.175,1289,2.688,1290,2.688,1291,3.752,1292,2.688,1293,3.175,1294,3.175]],["title/dependencies.html",[212,2.317,1295,2.882]],["body/dependencies.html",[53,0.026,105,0.905,107,2.598,110,3.603,114,1.757,208,0.021,209,0.021,212,2.706,230,4.091,240,4.932,243,4.344,258,1.878,302,3.603,314,3.603,379,2.317,522,3.603,1296,4.832,1297,7.028,1298,4.832,1299,4.832,1300,4.832,1301,4.832,1302,4.832,1303,4.832,1304,4.832,1305,4.832,1306,4.832,1307,4.832,1308,5.825,1309,4.832,1310,4.832,1311,4.832,1312,4.832,1313,4.832,1314,4.832,1315,4.091,1316,4.832,1317,4.832,1318,4.832,1319,4.832,1320,4.832,1321,4.832]],["title/miscellaneous/enumerations.html",[1322,1.614,1323,3.503]],["body/miscellaneous/enumerations.html",[7,0.342,25,0.508,53,0.021,55,0.46,57,1.433,81,1.426,192,1.742,208,0.021,209,0.021,489,3.884,753,3.572,754,3.245,757,2.297,796,3.884,823,4.056,824,6.008,825,4.056,826,2.922,827,4.056,828,4.056,829,4.056,830,4.056,831,3.572,832,4.056,833,4.056,834,4.056,835,4.056,836,4.056,837,4.056,838,4.056,839,4.056,840,4.056,841,4.056,842,4.056,843,4.056,844,4.056,845,4.056,846,4.056,847,4.056,848,4.056,849,4.056,850,4.056,851,4.056,852,4.056,853,4.056,854,4.056,1322,2.682,1323,4.906,1324,4.79]],["title/miscellaneous/functions.html",[691,2.317,1322,1.614]],["body/miscellaneous/functions.html",[25,0.574,52,1.248,53,0.024,54,0.574,55,0.52,56,0.944,208,0.022,209,0.022,481,1.846,691,3.034,925,3.632,930,4.177,980,4.588,1322,3.034,1325,4.588]],["title/index.html",[25,0.306,63,1.758,1326,2.149]],["body/index.html",[7,0.267,9,1.643,19,1.442,27,1.351,53,0.025,57,1.672,98,2.165,173,2.529,208,0.02,209,0.02,278,2.756,335,0.624,567,3.028,757,3.125,779,3.824,812,3.824,826,3.703,965,3.028,1109,3.824,1139,3.824,1221,4.168,1222,4.527,1223,4.733,1238,3.824,1315,3.824,1327,4.517,1328,4.517,1329,3.824,1330,3.824,1331,6.641,1332,4.517,1333,4.517,1334,4.517,1335,3.824,1336,4.517,1337,4.517,1338,3.824,1339,4.517,1340,4.517,1341,4.517,1342,4.517,1343,4.517,1344,4.517,1345,4.517,1346,4.517,1347,4.517,1348,4.517,1349,4.517,1350,4.517,1351,4.517,1352,4.517,1353,4.517,1354,4.517,1355,4.517,1356,3.824,1357,3.824,1358,6.07,1359,6.07,1360,5.59,1361,4.517,1362,4.517,1363,4.517,1364,4.517,1365,4.517,1366,6.07,1367,4.517,1368,4.517,1369,4.517,1370,4.517,1371,4.517,1372,4.517,1373,4.517,1374,4.517,1375,4.517,1376,5.59,1377,4.517,1378,4.517,1379,4.517,1380,3.824,1381,4.517,1382,4.517,1383,4.517,1384,4.517,1385,4.527,1386,4.517,1387,3.824]],["title/license.html",[63,1.758,1326,2.149,1385,2.149]],["body/license.html",[7,0.277,16,2.426,53,0.021,87,2.426,156,3.5,170,2.25,208,0.021,209,0.021,285,3.146,377,3.146,468,3.146,776,4.138,806,3.973,826,2.863,965,3.836,1329,3.973,1330,3.973,1338,5.842,1356,3.973,1357,3.973,1385,3.5,1387,3.973,1388,6.174,1389,4.693,1390,4.693,1391,5.722,1392,4.693,1393,4.693,1394,4.693,1395,5.722,1396,4.693,1397,6.428,1398,5.722,1399,6.174,1400,4.693,1401,5.722,1402,4.693,1403,4.693,1404,4.693,1405,4.693,1406,4.693,1407,4.693,1408,4.693,1409,4.693,1410,4.693,1411,4.693,1412,4.693,1413,4.693,1414,5.722,1415,5.722,1416,4.693,1417,4.693,1418,5.722,1419,4.693,1420,4.693,1421,4.693,1422,4.693,1423,4.693,1424,4.693,1425,4.693,1426,4.693,1427,4.693,1428,4.693,1429,4.693,1430,4.693,1431,4.693,1432,4.693,1433,4.693,1434,4.693,1435,4.693,1436,4.693]],["title/modules.html",[210,1.704]],["body/modules.html",[53,0.022,208,0.022,209,0.022,210,1.948,211,3.59,220,3.267,221,2.999,243,4.868,641,3.267,1380,5.527,1437,6.528,1438,6.712,1439,5.355,1440,5.355]],["title/overview.html",[1441,3.967]],["body/overview.html",[0,0.637,1,2.279,16,2.036,17,2.055,53,0.026,58,1.341,65,1.757,119,0.34,120,0.458,170,1.888,174,1.341,180,1.83,182,1.83,185,1.94,187,1.818,189,1.94,191,1.818,194,1.94,196,1.94,198,1.94,200,1.704,202,1.818,203,1.94,205,1.94,208,0.018,209,0.018,210,1.864,211,4.677,212,2.205,213,2.64,214,3.335,215,3.335,216,3.335,217,3.335,218,3.335,219,3.335,220,4.244,221,3.978,222,2.945,223,3.189,224,3.435,225,2.403,274,1.432,293,3.335,294,3.335,296,3.335,297,3.335,298,2.214,299,3.189,335,0.544,636,3.335,637,3.335,638,3.335,639,3.335,640,3.475,641,3.475,922,2.64,1202,2.64,1441,3.335,1442,4.338,1443,3.938,1444,3.335,1445,3.335,1446,3.938]],["title/routes.html",[65,2.09]],["body/routes.html",[53,0.023,65,2.48,208,0.023,209,0.023]],["title/todo.html",[63,1.758,1326,2.149,1447,2.44]],["body/todo.html",[53,0.023,54,0.585,173,3.088,208,0.023,209,0.023,1447,4.67,1448,5.516,1449,5.516]],["title/miscellaneous/variables.html",[974,2.773,1322,1.614]],["body/miscellaneous/variables.html",[3,0.337,8,1.506,9,0.734,16,1.044,20,2.383,25,0.214,51,0.84,53,0.026,54,0.646,55,0.599,56,1.048,57,1.169,65,0.901,68,0.378,80,2.245,81,1.265,82,2.681,84,1.977,87,1.044,88,0.566,98,0.968,102,1.525,108,2.913,109,2.913,110,4.23,115,2.698,116,2.698,118,3.367,128,2.681,129,2.681,130,2.361,132,2.681,146,1.773,160,1.773,170,0.968,197,1.097,198,0.688,201,1.636,208,0.011,209,0.011,245,4.114,287,1.044,338,2.965,379,1.518,394,1.973,420,2.698,423,2.383,481,1.506,506,1.719,515,0.688,524,0.734,529,1.742,548,1.354,589,1.873,590,1.873,591,1.625,597,0.901,652,1.506,661,4.067,662,3.307,663,3.307,664,3.307,738,1.506,754,3.414,756,2.361,757,2.836,776,2.618,783,2.618,922,3.22,925,1.354,930,2.618,950,3.745,974,2.123,975,1.71,976,1.71,977,1.71,978,2.913,979,2.913,1072,2.913,1106,2.681,1111,3.974,1133,1.506,1140,1.506,1152,1.71,1154,4.315,1168,1.71,1206,5.225,1221,3.801,1222,4.114,1244,1.71,1246,4.067,1248,5.516,1249,4.315,1250,4.315,1262,1.71,1264,2.681,1265,3.307,1273,1.71,1274,3.307,1283,1.71,1284,1.71,1289,1.71,1290,3.307,1291,1.71,1292,3.307,1322,1.131,1325,4.067,1335,1.71,1442,1.71,1444,1.71,1445,2.681,1450,3.167,1451,2.019,1452,2.019,1453,2.019,1454,5.097,1455,2.019,1456,2.019,1457,2.019,1458,2.019,1459,3.167,1460,2.019,1461,2.019,1462,2.019,1463,2.019,1464,2.019,1465,2.019,1466,3.906,1467,3.167,1468,3.167,1469,3.167,1470,3.167,1471,3.167,1472,3.167,1473,3.167,1474,3.167,1475,3.167,1476,2.019,1477,6.548,1478,2.019,1479,2.019,1480,2.019,1481,3.167,1482,2.019,1483,5.673,1484,5.517,1485,4.423,1486,4.423,1487,5.517,1488,5.673,1489,3.167,1490,2.019,1491,3.167,1492,3.906,1493,2.019,1494,5.097,1495,4.804,1496,4.804,1497,4.804,1498,4.804,1499,2.019,1500,2.019,1501,3.906,1502,3.906,1503,3.906,1504,2.019,1505,3.167,1506,3.167,1507,3.167,1508,4.423,1509,3.167,1510,3.906,1511,2.019,1512,3.906,1513,2.019,1514,2.019,1515,2.019,1516,2.019,1517,4.804,1518,2.019,1519,3.167,1520,2.019,1521,2.019,1522,2.019,1523,2.019,1524,2.019,1525,2.019,1526,2.019,1527,2.019,1528,3.906,1529,3.906,1530,3.906,1531,3.906,1532,2.019,1533,2.019,1534,2.019,1535,4.423]]],"invertedIndex":[["",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"interfaces/UserDocument.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":394,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/PresetConfigComponent.html":{},"pipes/UnNamedPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.5",{"_index":1488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.8.26",{"_index":1321,"title":{},"body":{"dependencies.html":{}}}],["0.9}px",{"_index":434,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["0/1",{"_index":1245,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1272,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1271,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1261,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1280,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1285,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":1266,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1268,"title":{},"body":{"coverage.html":{}}}],["0/30",{"_index":1260,"title":{},"body":{"coverage.html":{}}}],["0/31",{"_index":1258,"title":{},"body":{"coverage.html":{}}}],["0/32",{"_index":1263,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1286,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1287,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1253,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1288,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1267,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":922,"title":{},"body":{"components/FolderCreationComponent.html":{},"components/PresetConfigComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.5",{"_index":425,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["1/1",{"_index":1247,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":369,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["100",{"_index":1111,"title":{},"body":{"components/PresetConfigComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["1280",{"_index":422,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["14",{"_index":1443,"title":{},"body":{"overview.html":{}}}],["16/16",{"_index":1254,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":423,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"miscellaneous/variables.html":{}}}],["2.0.8",{"_index":1312,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":1319,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1309,"title":{},"body":{"dependencies.html":{}}}],["2.appspot.com",{"_index":1474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.firebaseapp.com",{"_index":1468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.firebaseio.com",{"_index":1471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2/3",{"_index":1278,"title":{},"body":{"coverage.html":{}}}],["2/9",{"_index":1270,"title":{},"body":{"coverage.html":{}}}],["2018",{"_index":1390,"title":{},"body":{"license.html":{}}}],["22",{"_index":1269,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":1251,"title":{},"body":{"coverage.html":{}}}],["250",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["3",{"_index":1445,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["3.1.0",{"_index":1314,"title":{},"body":{"dependencies.html":{}}}],["3.2.1",{"_index":1317,"title":{},"body":{"dependencies.html":{}}}],["3.4.3",{"_index":1303,"title":{},"body":{"dependencies.html":{}}}],["3/7",{"_index":1276,"title":{},"body":{"coverage.html":{}}}],["362606538820",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["4",{"_index":1442,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["4.13.1",{"_index":1310,"title":{},"body":{"dependencies.html":{}}}],["4/16",{"_index":1252,"title":{},"body":{"coverage.html":{}}}],["4/4",{"_index":1255,"title":{},"body":{"coverage.html":{}}}],["42",{"_index":1275,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":1444,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["5.0.0",{"_index":1304,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["5000",{"_index":1060,"title":{},"body":{"components/HomeComponent.html":{}}}],["6",{"_index":1316,"title":{},"body":{"dependencies.html":{}}}],["6.0.0",{"_index":1297,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1279,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1281,"title":{},"body":{"coverage.html":{}}}],["640",{"_index":424,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["66",{"_index":1277,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1446,"title":{},"body":{"overview.html":{}}}],["9/15",{"_index":1282,"title":{},"body":{"coverage.html":{}}}],["9th",{"_index":1522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9}px",{"_index":572,"title":{},"body":{"components/ConfigComponent.html":{}}}],["_activeconfigchang",{"_index":667,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["_authstat",{"_index":928,"title":{},"body":{"injectables/GoogleService.html":{}}}],["_closecommand",{"_index":1066,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["_configsubject",{"_index":668,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["_folderpick",{"_index":979,"title":{},"body":{"injectables/GoogleService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["_folderpicked.asobserv",{"_index":970,"title":{},"body":{"injectables/GoogleService.html":{}}}],["_folderpicked.error(tru",{"_index":985,"title":{},"body":{"injectables/GoogleService.html":{}}}],["_folderpicked.next(data.docs[0",{"_index":983,"title":{},"body":{"injectables/GoogleService.html":{}}}],["abov",{"_index":1413,"title":{},"body":{"license.html":{}}}],["abreu",{"_index":1341,"title":{},"body":{"index.html":{}}}],["access",{"_index":279,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{},"components/UnauthenticatedComponent.html":{}}}],["accessor",{"_index":899,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["account",{"_index":1139,"title":{},"body":{"components/SettingsComponent.html":{},"index.html":{}}}],["action",{"_index":377,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"license.html":{}}}],["activ",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["activeconfig",{"_index":366,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"interfaces/RuleInterface.html":{},"injectables/SorterService.html":{},"interfaces/UserDocument.html":{}}}],["activeconfigchang",{"_index":669,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["activeconfigchangesubscript",{"_index":373,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["activeconfignam",{"_index":1042,"title":{},"body":{"components/HomeComponent.html":{}}}],["actual_compon",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["ad",{"_index":1110,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["add",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"classes/DriveQueryBuilder.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"index.html":{},"todo.html":{}}}],["add(newconfig",{"_index":729,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["addconfig",{"_index":674,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["addconfig(config",{"_index":681,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["addconfig(configbuilder.configfromgroup(group",{"_index":1105,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["addgroup",{"_index":490,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["addgroup(config",{"_index":495,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["addpar",{"_index":1036,"title":{},"body":{"injectables/GoogleService.html":{}}}],["addpreset",{"_index":1068,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["addpreset(presetid",{"_index":1070,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["address",{"_index":793,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["addview(view",{"_index":1014,"title":{},"body":{"injectables/GoogleService.html":{}}}],["afterviewinit",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/FolderCreationComponent.html":{}}}],["aizasyb",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["allow",{"_index":961,"title":{},"body":{"injectables/GoogleService.html":{}}}],["and/or",{"_index":1407,"title":{},"body":{"license.html":{}}}],["angular/anim",{"_index":1296,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1298,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/collect",{"_index":349,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["angular/cdk/overlay",{"_index":564,"title":{},"body":{"components/ConfigComponent.html":{}}}],["angular/cli",{"_index":1368,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":302,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"dependencies.html":{}}}],["angular/compil",{"_index":1299,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler/src/cor",{"_index":347,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["angular/cor",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":314,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1300,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"dependencies.html":{}}}],["angular/material/button",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/menu",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/tab",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigRoutingModule.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"injectables/PreventAuthGuardService.html":{},"dependencies.html":{}}}],["angularfire2",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angularfire2/auth",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"components/SettingsComponent.html":{}}}],["angularfire2/firestor",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"interfaces/UserDocument.html":{}}}],["angularfireauth",{"_index":339,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"components/SettingsComponent.html":{}}}],["angularfireauthmodul",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodul",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule.initializeapp(environment.firebas",{"_index":273,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirestor",{"_index":340,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"components/SettingsComponent.html":{}}}],["angularfirestorecollect",{"_index":341,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/RuleInterface.html":{},"interfaces/UserDocument.html":{}}}],["angularfirestoredocu",{"_index":707,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["angularfirestoremodul",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["angularj",{"_index":1365,"title":{},"body":{"index.html":{}}}],["anim",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["animate('0.1",{"_index":1481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["anyinvalid",{"_index":918,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["api",{"_index":927,"title":{},"body":{"injectables/GoogleService.html":{}}}],["apikey",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"index.html":{}}}],["app.compon",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"components/ConfigComponent.html":{}}}],["app.component.html",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["app.rout",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["app/config",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"modules/ConfigRoutingModule.html":{}}}],["app/config/cr",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"modules/ConfigRoutingModule.html":{}}}],["app/config/edit",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"modules/ConfigRoutingModule.html":{}}}],["app/config/preset",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"modules/ConfigRoutingModule.html":{}}}],["app/hom",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["app/set",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appconfig",{"_index":661,"title":{},"body":{"modules/ConfigRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["appconfigcr",{"_index":662,"title":{},"body":{"modules/ConfigRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["appconfigedit",{"_index":664,"title":{},"body":{"modules/ConfigRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["appconfigpreset",{"_index":663,"title":{},"body":{"modules/ConfigRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["apphom",{"_index":1494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applic",{"_index":11,"title":{},"body":{"components/AppComponent.html":{}}}],["application/vnd.googl",{"_index":824,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["appmodul",{"_index":211,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approut",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["apps.audio",{"_index":825,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.docu",{"_index":827,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.draw",{"_index":829,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.driv",{"_index":853,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.fil",{"_index":830,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.fold",{"_index":831,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"miscellaneous/enumerations.html":{}}}],["apps.form",{"_index":833,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.fusiont",{"_index":835,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.map",{"_index":837,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.photo",{"_index":839,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.present",{"_index":841,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.script",{"_index":843,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.sit",{"_index":845,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.spreadsheet",{"_index":847,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.unknown",{"_index":849,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.video",{"_index":851,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["appset",{"_index":1497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aren't",{"_index":280,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{}}}],["arg",{"_index":1208,"title":{},"body":{"pipes/UnNamedPipe.html":{}}}],["aris",{"_index":1436,"title":{},"body":{"license.html":{}}}],["array",{"_index":593,"title":{},"body":{"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/RuleInterface.html":{},"interfaces/UserDocument.html":{}}}],["arredondo",{"_index":1334,"title":{},"body":{"index.html":{}}}],["art_track",{"_index":1236,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["ashhad",{"_index":1345,"title":{},"body":{"index.html":{}}}],["assets/images/istem",{"_index":1526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["associ",{"_index":1356,"title":{},"body":{"index.html":{},"license.html":{}}}],["audio",{"_index":823,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["auth",{"_index":718,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"components/SettingsComponent.html":{}}}],["authdomain",{"_index":1467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authenitc",{"_index":977,"title":{},"body":{"injectables/GoogleService.html":{},"miscellaneous/variables.html":{}}}],["authent",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"injectables/GoogleService.html":{},"injectables/PreventAuthGuardService.html":{},"components/UnauthenticatedComponent.html":{}}}],["authenticatedmodul",{"_index":220,"title":{"modules/AuthenticatedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules.html":{},"overview.html":{}}}],["authenticatedmodule.forroot",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["authguardservic",{"_index":222,"title":{"injectables/AuthGuardService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/ConfigRoutingModule.html":{},"injectables/PreventAuthGuardService.html":{},"coverage.html":{},"overview.html":{}}}],["authinst",{"_index":978,"title":{},"body":{"injectables/GoogleService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authinstance.currentuser.get().getauthresponse().access_token",{"_index":1011,"title":{},"body":{"injectables/GoogleService.html":{}}}],["authinstance.currentuser.get().getauthresponse().id_token",{"_index":1020,"title":{},"body":{"injectables/GoogleService.html":{}}}],["authinstance.issignedin.get",{"_index":993,"title":{},"body":{"injectables/GoogleService.html":{}}}],["authinstance.issignedin.listen",{"_index":991,"title":{},"body":{"injectables/GoogleService.html":{}}}],["authinstance.signin",{"_index":1017,"title":{},"body":{"injectables/GoogleService.html":{}}}],["authinstance.signout",{"_index":1018,"title":{},"body":{"injectables/GoogleService.html":{}}}],["author",{"_index":1427,"title":{},"body":{"license.html":{}}}],["authstat",{"_index":929,"title":{},"body":{"injectables/GoogleService.html":{}}}],["authstatu",{"_index":998,"title":{},"body":{"injectables/GoogleService.html":{}}}],["auto",{"_index":1372,"title":{},"body":{"index.html":{}}}],["avail",{"_index":1440,"title":{},"body":{"modules.html":{}}}],["base",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["beed",{"_index":817,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["befor",{"_index":787,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["behaviorsubject",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["behaviorsubject(tru",{"_index":463,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["between",{"_index":1168,"title":{},"body":{"injectables/SorterService.html":{},"miscellaneous/variables.html":{}}}],["boolean",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"injectables/PreventAuthGuardService.html":{}}}],["bootstrap",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"overview.html":{}}}],["brandon",{"_index":1329,"title":{},"body":{"index.html":{},"license.html":{}}}],["break",{"_index":1157,"title":{},"body":{"injectables/SorterService.html":{}}}],["brows",{"_index":1438,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":756,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"miscellaneous/variables.html":{}}}],["builder",{"_index":715,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"components/PresetConfigComponent.html":{},"injectables/SorterService.html":{}}}],["builder.t",{"_index":489,"title":{},"body":{"classes/ConfigBuilder.html":{},"classes/DriveQueryBuilder.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["builder.ts:106",{"_index":814,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:11",{"_index":516,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["builder.ts:117",{"_index":803,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:121",{"_index":505,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["builder.ts:128",{"_index":789,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:139",{"_index":782,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:150",{"_index":786,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:161",{"_index":805,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:172",{"_index":808,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:183",{"_index":816,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:196",{"_index":819,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:39",{"_index":503,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["builder.ts:40",{"_index":778,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:48",{"_index":800,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:50",{"_index":773,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:57",{"_index":519,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["builder.ts:73",{"_index":797,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:84",{"_index":821,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:92",{"_index":509,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["builder.ts:95",{"_index":810,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["built",{"_index":801,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["c",{"_index":1389,"title":{},"body":{"license.html":{}}}],["calculatestart",{"_index":578,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["calculatestart(pag",{"_index":466,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["call",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["callback",{"_index":951,"title":{},"body":{"injectables/GoogleService.html":{}}}],["canactiv",{"_index":281,"title":{},"body":{"injectables/AuthGuardService.html":{},"modules/ConfigRoutingModule.html":{},"injectables/PreventAuthGuardService.html":{}}}],["cancel",{"_index":984,"title":{},"body":{"injectables/GoogleService.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["case",{"_index":1153,"title":{},"body":{"injectables/SorterService.html":{}}}],["catch(err",{"_index":1097,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["categori",{"_index":1518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cb",{"_index":693,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"injectables/SorterService.html":{}}}],["cb(0",{"_index":751,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["cb(null",{"_index":749,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["cb(resp",{"_index":1024,"title":{},"body":{"injectables/GoogleService.html":{}}}],["cb(snapshot.data",{"_index":744,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["cb(snapshot.data()['activeconfig",{"_index":748,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["cb(snapshot.docs.length",{"_index":750,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["cb(true",{"_index":1038,"title":{},"body":{"injectables/GoogleService.html":{}}}],["cd",{"_index":1363,"title":{},"body":{"index.html":{}}}],["cesped",{"_index":1342,"title":{},"body":{"index.html":{}}}],["chang",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["charg",{"_index":1394,"title":{},"body":{"license.html":{}}}],["check",{"_index":531,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["checkinterv",{"_index":1098,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["checkout",{"_index":1364,"title":{},"body":{"index.html":{}}}],["claim",{"_index":1430,"title":{},"body":{"license.html":{}}}],["class",{"_index":120,"title":{"classes/ConfigBuilder.html":{},"classes/ConfigDataSource.html":{},"classes/DriveQueryBuilder.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["classes(period",{"_index":1524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["classes/config",{"_index":714,"title":{},"body":{"injectables/DatabaseService.html":{},"components/PresetConfigComponent.html":{},"injectables/SorterService.html":{}}}],["classes/dr",{"_index":973,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/SorterService.html":{}}}],["classifi",{"_index":589,"title":{},"body":{"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/RuleInterface.html":{},"interfaces/UserDocument.html":{},"miscellaneous/variables.html":{}}}],["clear",{"_index":1515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clearinterval(checkinterv",{"_index":1099,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["clearinterval(googleinitinterv",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["client",{"_index":988,"title":{},"body":{"injectables/GoogleService.html":{}}}],["clientid",{"_index":131,"title":{},"body":{"components/AppComponent.html":{}}}],["clone",{"_index":1361,"title":{},"body":{"index.html":{}}}],["close",{"_index":439,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["closecommand",{"_index":574,"title":{},"body":{"components/ConfigComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["closesubscript",{"_index":437,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["closesubscription.unsubscrib",{"_index":441,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["cluster_appmodul",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_appcomponent_provid",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authenticatedmodul",{"_index":293,"title":{},"body":{"modules/AuthenticatedModule.html":{},"overview.html":{}}}],["cluster_authenticatedmodule_declar",{"_index":294,"title":{},"body":{"modules/AuthenticatedModule.html":{},"overview.html":{}}}],["cluster_authenticatedmodule_export",{"_index":296,"title":{},"body":{"modules/AuthenticatedModule.html":{},"overview.html":{}}}],["cluster_authenticatedmodule_import",{"_index":295,"title":{},"body":{"modules/AuthenticatedModule.html":{}}}],["cluster_authenticatedmodule_provid",{"_index":297,"title":{},"body":{"modules/AuthenticatedModule.html":{},"overview.html":{}}}],["cluster_configmodul",{"_index":636,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_declar",{"_index":637,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_export",{"_index":639,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_import",{"_index":638,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["collection('config",{"_index":389,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["commonmodul",{"_index":301,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["compat",{"_index":1315,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["compdoc",{"_index":1373,"title":{},"body":{"index.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigRoutingModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component_templ",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["componentinst",{"_index":435,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["componentinstance.closecommand.subscrib",{"_index":438,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["components/auth/unauthenticated/unauthenticated.compon",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["components/shared/config",{"_index":307,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["components/shared/edit",{"_index":644,"title":{},"body":{"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{}}}],["components/shared/fold",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{}}}],["components/shared/new",{"_index":650,"title":{},"body":{"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{}}}],["components/tabs/config/config",{"_index":304,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["components/tabs/config/config.compon",{"_index":303,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigRoutingModule.html":{}}}],["components/tabs/config/preset",{"_index":656,"title":{},"body":{"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{}}}],["components/tabs/home/home.compon",{"_index":315,"title":{},"body":{"modules/AuthenticatedModule.html":{}}}],["components/tabs/settings/settings.compon",{"_index":330,"title":{},"body":{"modules/AuthenticatedModule.html":{}}}],["condit",{"_index":1412,"title":{},"body":{"license.html":{}}}],["config",{"_index":183,"title":{"interfaces/Config.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{},"interfaces/UserDocument.html":{},"coverage.html":{}}}],["config'},{'nam",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["config.compon",{"_index":345,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/PresetConfigPageComponent.html":{}}}],["config.component.html",{"_index":551,"title":{},"body":{"components/ConfigComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["config.component.scss",{"_index":550,"title":{},"body":{"components/ConfigComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["config.component.t",{"_index":1065,"title":{},"body":{"components/PresetConfigComponent.html":{},"coverage.html":{}}}],["config.component.ts:17",{"_index":1075,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.component.ts:19",{"_index":1077,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.component.ts:21",{"_index":1078,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.component.ts:22",{"_index":1069,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.component.ts:25",{"_index":1080,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.component.ts:26",{"_index":1079,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.component.ts:32",{"_index":1074,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.component.ts:34",{"_index":1073,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.component.ts:38",{"_index":1071,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.data.createfold",{"_index":1084,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.data.group",{"_index":1085,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.group",{"_index":533,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["config.nam",{"_index":532,"title":{},"body":{"classes/ConfigBuilder.html":{},"components/ConfigListComponent.html":{},"components/HomeComponent.html":{}}}],["config.name.length",{"_index":534,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["config/config.modul",{"_index":310,"title":{},"body":{"modules/AuthenticatedModule.html":{}}}],["config/preset",{"_index":358,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"coverage.html":{}}}],["configbuild",{"_index":487,"title":{"classes/ConfigBuilder.html":{}},"body":{"classes/ConfigBuilder.html":{},"injectables/DatabaseService.html":{},"components/PresetConfigComponent.html":{},"injectables/SorterService.html":{},"coverage.html":{}}}],["configbuilder.foldernamebuild",{"_index":1195,"title":{},"body":{"injectables/SorterService.html":{}}}],["configbuilder.generatenewconfig",{"_index":727,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["configchangesubscript",{"_index":372,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["configcollect",{"_index":365,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["configcompon",{"_index":180,"title":{"components/ConfigComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigRoutingModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["configdatasourc",{"_index":375,"title":{"classes/ConfigDataSource.html":{}},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"coverage.html":{}}}],["configdocu",{"_index":670,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["configfromgroup",{"_index":491,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["configfromgroup(group",{"_index":504,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["confighold",{"_index":523,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["configholder.groups[0].createfold",{"_index":525,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["configholder.groups[0].destin",{"_index":526,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["configid",{"_index":446,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{}}}],["configinterfac",{"_index":520,"title":{"interfaces/ConfigInterface.html":{}},"body":{"classes/ConfigBuilder.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/RuleInterface.html":{},"interfaces/UserDocument.html":{},"coverage.html":{}}}],["configkey",{"_index":450,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["configlistcompon",{"_index":182,"title":{"components/ConfigListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["configmodalcompon",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"modules/AuthenticatedModule.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["configmodul",{"_index":221,"title":{"modules/ConfigModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"modules.html":{},"overview.html":{}}}],["configmodule.forroot",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{}}}],["confignam",{"_index":517,"title":{},"body":{"classes/ConfigBuilder.html":{},"injectables/DatabaseService.html":{}}}],["configroutingmodul",{"_index":641,"title":{"modules/ConfigRoutingModule.html":{}},"body":{"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["configs[config].data()['nam",{"_index":482,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["configs[config].id",{"_index":484,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["configscollect",{"_index":671,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["configsinterfac",{"_index":496,"title":{"interfaces/ConfigsInterface.html":{}},"body":{"classes/ConfigBuilder.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/RuleInterface.html":{},"injectables/SorterService.html":{},"interfaces/UserDocument.html":{},"coverage.html":{}}}],["configsubject",{"_index":461,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{}}}],["configur",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/HomeComponent.html":{},"components/UnauthenticatedComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["configuration'",{"_index":629,"title":{},"body":{"components/ConfigListComponent.html":{},"components/HomeComponent.html":{}}}],["configuration\\'",{"_index":635,"title":{},"body":{"components/ConfigListComponent.html":{},"components/HomeComponent.html":{}}}],["connect",{"_index":468,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"license.html":{}}}],["console.debug('gapi",{"_index":987,"title":{},"body":{"injectables/GoogleService.html":{}}}],["console.debug('googl",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["console.error",{"_index":415,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{}}}],["console.error(err",{"_index":731,"title":{},"body":{"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{}}}],["console.error(resp.err",{"_index":1026,"title":{},"body":{"injectables/GoogleService.html":{}}}],["console.log(newconfig",{"_index":728,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["const",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigRoutingModule.html":{},"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/PresetConfigComponent.html":{},"injectables/SorterService.html":{}}}],["constantli",{"_index":1350,"title":{},"body":{"index.html":{}}}],["constraint",{"_index":590,"title":{},"body":{"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/RuleInterface.html":{},"interfaces/UserDocument.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{}}}],["constructor(appcompon",{"_index":554,"title":{},"body":{"components/ConfigComponent.html":{}}}],["constructor(configcollect",{"_index":580,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["constructor(firebas",{"_index":679,"title":{},"body":{"injectables/DatabaseService.html":{},"components/SettingsComponent.html":{}}}],["constructor(firebaseauth",{"_index":604,"title":{},"body":{"components/ConfigListComponent.html":{},"injectables/GoogleService.html":{}}}],["constructor(googl",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/FolderCreationComponent.html":{},"injectables/PreventAuthGuardService.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{}}}],["constructor(parentfolderid",{"_index":771,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["constructor(priv",{"_index":465,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/GoogleService.html":{},"components/SettingsComponent.html":{}}}],["constructor(publ",{"_index":291,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{},"components/UnauthenticatedComponent.html":{}}}],["constructor(zon",{"_index":1046,"title":{},"body":{"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{}}}],["contact@brandoncravener.com",{"_index":1384,"title":{},"body":{"index.html":{}}}],["contain",{"_index":857,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["content'",{"_index":811,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["context",{"_index":1292,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contract",{"_index":1433,"title":{},"body":{"license.html":{}}}],["contribut",{"_index":1374,"title":{},"body":{"index.html":{}}}],["contributor",{"_index":1344,"title":{},"body":{"index.html":{}}}],["control",{"_index":1063,"title":{},"body":{"components/HomeComponent.html":{}}}],["copi",{"_index":1397,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1388,"title":{},"body":{"license.html":{}}}],["core",{"_index":1307,"title":{},"body":{"dependencies.html":{}}}],["countributor",{"_index":1328,"title":{},"body":{"index.html":{}}}],["coverag",{"_index":1241,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["craven",{"_index":1330,"title":{},"body":{"index.html":{},"license.html":{}}}],["creat",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["createconfig",{"_index":675,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["createconfig(confignam",{"_index":684,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["createconfigbuttonst",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["createdaft",{"_index":759,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["createdafter(d",{"_index":780,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["createdafter(rule.data.firstd",{"_index":1169,"title":{},"body":{"injectables/SorterService.html":{}}}],["createdbefor",{"_index":760,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["createdbefore(d",{"_index":785,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["createdbefore(rule.data.secondd",{"_index":1170,"title":{},"body":{"injectables/SorterService.html":{}}}],["createdfold",{"_index":1086,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["createdirect",{"_index":346,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["createdtim",{"_index":858,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["createfold",{"_index":515,"title":{},"body":{"classes/ConfigBuilder.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/PresetConfigComponent.html":{},"interfaces/RuleInterface.html":{},"interfaces/UserDocument.html":{},"miscellaneous/variables.html":{}}}],["createfolder(fold",{"_index":1092,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["createfolder(nam",{"_index":938,"title":{},"body":{"injectables/GoogleService.html":{}}}],["createfolder(newfoldernam",{"_index":1197,"title":{},"body":{"injectables/SorterService.html":{}}}],["createfolderconfig",{"_index":510,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["createfolders.foreach(fold",{"_index":1090,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["creation",{"_index":865,"title":{},"body":{"components/FolderCreationComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["creation'},{'nam",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["creation.compon",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{}}}],["creation.component.html",{"_index":867,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.scss",{"_index":866,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.t",{"_index":864,"title":{},"body":{"components/FolderCreationComponent.html":{},"coverage.html":{}}}],["creation.component.ts:114",{"_index":890,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:143",{"_index":883,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:150",{"_index":886,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:19",{"_index":880,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:21",{"_index":882,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:23",{"_index":898,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:25",{"_index":896,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:39",{"_index":891,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:57",{"_index":897,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:59",{"_index":892,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:61",{"_index":901,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:67",{"_index":879,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:73",{"_index":884,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:81",{"_index":885,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:98",{"_index":889,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation/fold",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"coverage.html":{}}}],["creationd",{"_index":1165,"title":{},"body":{"injectables/SorterService.html":{}}}],["creationen",{"_index":1067,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["credenti",{"_index":994,"title":{},"body":{"injectables/GoogleService.html":{}}}],["current",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"components/UnauthenticatedComponent.html":{}}}],["currentus",{"_index":719,"title":{},"body":{"injectables/DatabaseService.html":{},"components/SettingsComponent.html":{}}}],["customiz",{"_index":1238,"title":{},"body":{"components/UnauthenticatedComponent.html":{},"index.html":{}}}],["damag",{"_index":1431,"title":{},"body":{"license.html":{}}}],["data",{"_index":481,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigRoutingModule.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/RuleInterface.html":{},"interfaces/UserDocument.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["data.act",{"_index":981,"title":{},"body":{"injectables/GoogleService.html":{}}}],["data.push",{"_index":483,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["databas",{"_index":380,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"injectables/SorterService.html":{}}}],["databaseservic",{"_index":298,"title":{"injectables/DatabaseService.html":{}},"body":{"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"injectables/SorterService.html":{},"coverage.html":{},"overview.html":{}}}],["databaseurl",{"_index":1469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasourc",{"_index":348,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["date",{"_index":781,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["date.toisostring().split('.')[0",{"_index":859,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["deal",{"_index":1398,"title":{},"body":{"license.html":{}}}],["declar",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"components/ConfigComponent.html":{},"modules/ConfigModule.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{},"overview.html":{}}}],["decor",{"_index":625,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["default",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"miscellaneous/variables.html":{}}}],["default_value_accessor",{"_index":1265,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{}}}],["delet",{"_index":738,"title":{},"body":{"injectables/DatabaseService.html":{},"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["delete_forev",{"_index":632,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["deleteaccount",{"_index":1136,"title":{},"body":{"components/SettingsComponent.html":{}}}],["deleteconfig",{"_index":600,"title":{},"body":{"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{}}}],["deleteconfig(configid",{"_index":688,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["deleteconfig(configkey",{"_index":449,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["depend",{"_index":212,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"components/ConfigComponent.html":{},"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["design",{"_index":1531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["destin",{"_index":529,"title":{},"body":{"classes/ConfigBuilder.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/RuleInterface.html":{},"interfaces/UserDocument.html":{},"miscellaneous/variables.html":{}}}],["destinationfold",{"_index":514,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["destinationloc",{"_index":686,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["determin",{"_index":284,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{}}}],["develop",{"_index":1335,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["dialog",{"_index":381,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["dialoginst",{"_index":429,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["dialoginstance.clos",{"_index":440,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["dialoginstance.componentinst",{"_index":436,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["dialogsubscript",{"_index":573,"title":{},"body":{"components/ConfigComponent.html":{}}}],["dialogsubscription.unsubscrib",{"_index":576,"title":{},"body":{"components/ConfigComponent.html":{}}}],["dialogwidth",{"_index":427,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["dialogwidth}px",{"_index":431,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["direct",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["disablefeature(google.picker.feature.support_team_dr",{"_index":1008,"title":{},"body":{"injectables/GoogleService.html":{}}}],["disabletrash",{"_index":772,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["disconnect",{"_index":470,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["discoverydoc",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["distribut",{"_index":1405,"title":{},"body":{"license.html":{}}}],["doc(`users/${this.userid",{"_index":388,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["doc(configid",{"_index":737,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["doc:buildandserv",{"_index":1371,"title":{},"body":{"index.html":{}}}],["document",{"_index":826,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{}}}],["document.body.clientheight",{"_index":433,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["document.body.clientwidth",{"_index":421,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["document.getelementbyid('loader').remov",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["done",{"_index":872,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["draw",{"_index":828,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["drive",{"_index":757,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["drivemimetyp",{"_index":796,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"injectables/SorterService.html":{},"miscellaneous/enumerations.html":{}}}],["drivemimetype.fold",{"_index":1028,"title":{},"body":{"injectables/GoogleService.html":{}}}],["drivequeri",{"_index":1150,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.createdafter(rule.data.d",{"_index":1166,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.createdbefore(rule.data.d",{"_index":1167,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.excludesowner(own",{"_index":1164,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.excludetype(typ",{"_index":1161,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.get",{"_index":1181,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.hasowner(own",{"_index":1163,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.modifiedafter(rule.data.d",{"_index":1177,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.modifiedbefore(rule.data.d",{"_index":1178,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.namecontains(titl",{"_index":1156,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.nameexcludes(titl",{"_index":1158,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.openedafter(rule.data.d",{"_index":1172,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.openedbefore(rule.data.d",{"_index":1173,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.requirestype(typ",{"_index":1160,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequerybuild",{"_index":752,"title":{"classes/DriveQueryBuilder.html":{}},"body":{"classes/DriveQueryBuilder.html":{},"injectables/SorterService.html":{},"coverage.html":{}}}],["drivequerybuilder(group.source.folderid",{"_index":1151,"title":{},"body":{"injectables/SorterService.html":{}}}],["durat",{"_index":1059,"title":{},"body":{"components/HomeComponent.html":{}}}],["dynam",{"_index":1301,"title":{},"body":{"dependencies.html":{}}}],["eas",{"_index":1489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["easi",{"_index":975,"title":{},"body":{"injectables/GoogleService.html":{},"miscellaneous/variables.html":{}}}],["easier",{"_index":1225,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["edit",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["editconfig",{"_index":601,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["editconfig(configid",{"_index":444,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["editconfigmodalcompon",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editconfigpagecompon",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editingconfig",{"_index":672,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["effect",{"_index":1227,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["element",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["element.id",{"_index":1083,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["email",{"_index":792,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["engin",{"_index":1530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enter",{"_index":1483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entrycompon",{"_index":643,"title":{},"body":{"modules/ConfigModule.html":{}}}],["enum",{"_index":822,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["enumer",{"_index":1323,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environments/environment.prod",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":414,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{}}}],["event",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"components/FolderCreationComponent.html":{},"license.html":{}}}],["event.check",{"_index":915,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["event.url",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["eventemitt",{"_index":881,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["exampl",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/ConfigComponent.html":{},"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["exclud",{"_index":794,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"injectables/SorterService.html":{}}}],["excludesown",{"_index":761,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["excludesowner(email",{"_index":788,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["excludetyp",{"_index":762,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["excludetype(mimetyp",{"_index":795,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["exclus",{"_index":791,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["execute(resp",{"_index":1023,"title":{},"body":{"injectables/GoogleService.html":{}}}],["export",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"interfaces/UserDocument.html":{},"overview.html":{}}}],["express",{"_index":1420,"title":{},"body":{"license.html":{}}}],["extend",{"_index":1116,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["fabanim",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["faccoldi",{"_index":1337,"title":{},"body":{"index.html":{}}}],["fadeoutin",{"_index":1246,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["fals",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"injectables/PreventAuthGuardService.html":{},"injectables/SorterService.html":{},"miscellaneous/variables.html":{}}}],["featur",{"_index":1354,"title":{},"body":{"index.html":{}}}],["fernando",{"_index":1333,"title":{},"body":{"index.html":{}}}],["field",{"_index":944,"title":{},"body":{"injectables/GoogleService.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"interfaces/UserDocument.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{}}}],["file.id",{"_index":1192,"title":{},"body":{"injectables/SorterService.html":{}}}],["file.parents.join",{"_index":1035,"title":{},"body":{"injectables/GoogleService.html":{}}}],["fileid",{"_index":946,"title":{},"body":{"injectables/GoogleService.html":{}}}],["fileresourc",{"_index":1027,"title":{},"body":{"injectables/GoogleService.html":{}}}],["fileresource['par",{"_index":1029,"title":{},"body":{"injectables/GoogleService.html":{}}}],["finish",{"_index":868,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["firebas",{"_index":379,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"components/SettingsComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["firebase.auth.googleauthprovider.credenti",{"_index":995,"title":{},"body":{"injectables/GoogleService.html":{}}}],["firebase.doc(`users/${this.userid",{"_index":722,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["firebase.doc(`users/${this.userid}/userdata/config",{"_index":724,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["firebase.firestore.set",{"_index":716,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["firebase/app",{"_index":971,"title":{},"body":{"injectables/GoogleService.html":{}}}],["firebase/auth",{"_index":972,"title":{},"body":{"injectables/GoogleService.html":{}}}],["firebase/database.servic",{"_index":1148,"title":{},"body":{"injectables/SorterService.html":{}}}],["firebaseauth",{"_index":378,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"components/SettingsComponent.html":{}}}],["firstgroupnam",{"_index":512,"title":{},"body":{"classes/ConfigBuilder.html":{},"injectables/DatabaseService.html":{}}}],["firstgrouprul",{"_index":501,"title":{},"body":{"classes/ConfigBuilder.html":{},"injectables/DatabaseService.html":{}}}],["fit",{"_index":1423,"title":{},"body":{"license.html":{}}}],["fix",{"_index":1486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["folder",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"miscellaneous/enumerations.html":{}}}],["folder.parent.folderid",{"_index":917,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["folder[attribute].typ",{"_index":921,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["folder[attribute].value.length",{"_index":923,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["foldercr",{"_index":508,"title":{"interfaces/FolderCreation.html":{}},"body":{"classes/ConfigBuilder.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/RuleInterface.html":{},"interfaces/UserDocument.html":{},"coverage.html":{}}}],["foldercreationcompon",{"_index":191,"title":{"components/FolderCreationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["folderid",{"_index":591,"title":{},"body":{"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/PresetConfigComponent.html":{},"interfaces/RuleInterface.html":{},"interfaces/UserDocument.html":{},"miscellaneous/variables.html":{}}}],["foldernamebuild",{"_index":492,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["foldernamebuilder(createfolderconfig",{"_index":507,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["folderpick",{"_index":930,"title":{},"body":{"injectables/GoogleService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["folderpicked(data",{"_index":980,"title":{},"body":{"injectables/GoogleService.html":{},"miscellaneous/functions.html":{}}}],["folderpickedlisten",{"_index":907,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["folderpickedlistener.unsubscrib",{"_index":913,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["folderpicker.setvisible(tru",{"_index":1016,"title":{},"body":{"injectables/GoogleService.html":{}}}],["follow",{"_index":1411,"title":{},"body":{"license.html":{}}}],["form",{"_index":832,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["formsmodul",{"_index":312,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["forroot",{"_index":334,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["forwardref",{"_index":1464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["free",{"_index":1357,"title":{},"body":{"index.html":{},"license.html":{}}}],["friendli",{"_index":1355,"title":{},"body":{"index.html":{}}}],["fulli",{"_index":1237,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["function",{"_index":691,"title":{"miscellaneous/functions.html":{}},"body":{"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"injectables/SorterService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["furnish",{"_index":1410,"title":{},"body":{"license.html":{}}}],["fustiont",{"_index":834,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["g",{"_index":1221,"title":{},"body":{"components/UnauthenticatedComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["gapi",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gapi.auth2.getauthinst",{"_index":990,"title":{},"body":{"injectables/GoogleService.html":{}}}],["gapi.client.dr",{"_index":1183,"title":{},"body":{"injectables/SorterService.html":{}}}],["gapi.client.drive.fil",{"_index":1021,"title":{},"body":{"injectables/GoogleService.html":{}}}],["gapi.client.init(config).then",{"_index":989,"title":{},"body":{"injectables/GoogleService.html":{}}}],["gapi.load('client:auth2",{"_index":986,"title":{},"body":{"injectables/GoogleService.html":{}}}],["gapi.load('pick",{"_index":1000,"title":{},"body":{"injectables/GoogleService.html":{}}}],["gener",{"_index":779,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"index.html":{}}}],["generatenewconfig",{"_index":493,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["generatenewconfig(confignam",{"_index":511,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["geo",{"_index":1532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["geometri",{"_index":1517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get",{"_index":63,"title":{"index.html":{},"license.html":{},"todo.html":{}},"body":{"components/AppComponent.html":{},"injectables/GoogleService.html":{}}}],["getactiveconfig",{"_index":602,"title":{},"body":{"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{}}}],["getactiveconfig(cb",{"_index":690,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["getactiveconfig(configkey",{"_index":455,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["getauthstatu",{"_index":931,"title":{},"body":{"injectables/GoogleService.html":{}}}],["getconfig",{"_index":676,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["getconfig(configid",{"_index":694,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["getdialogwidth",{"_index":419,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["getdrivequeri",{"_index":1141,"title":{},"body":{"injectables/SorterService.html":{}}}],["getdrivequery(group",{"_index":1143,"title":{},"body":{"injectables/SorterService.html":{}}}],["getfileinfo",{"_index":932,"title":{},"body":{"injectables/GoogleService.html":{}}}],["getfileinfo(fileid",{"_index":943,"title":{},"body":{"injectables/GoogleService.html":{}}}],["getitem",{"_index":1511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getroutest",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["getroutestate(outlet",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["gettoken",{"_index":933,"title":{},"body":{"injectables/GoogleService.html":{}}}],["getvalu",{"_index":900,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["git",{"_index":1360,"title":{},"body":{"index.html":{}}}],["gitter",{"_index":1379,"title":{},"body":{"index.html":{}}}],["global",{"_index":1367,"title":{},"body":{"index.html":{}}}],["go",{"_index":286,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/HomeComponent.html":{},"injectables/PreventAuthGuardService.html":{}}}],["googl",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["google.picker.docsview(google.picker.viewid.fold",{"_index":1002,"title":{},"body":{"injectables/GoogleService.html":{}}}],["google.picker.pickerbuild",{"_index":1007,"title":{},"body":{"injectables/GoogleService.html":{}}}],["google/google.servic",{"_index":290,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{},"injectables/SorterService.html":{}}}],["googleinitinterv",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["googleservic",{"_index":17,"title":{"injectables/GoogleService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/PresetConfigComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gotoconfigpag",{"_index":1044,"title":{},"body":{"components/HomeComponent.html":{}}}],["grade",{"_index":1523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grant",{"_index":1393,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1439,"title":{},"body":{"modules.html":{}}}],["group",{"_index":506,"title":{},"body":{"classes/ConfigBuilder.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/PresetConfigComponent.html":{},"interfaces/RuleInterface.html":{},"injectables/SorterService.html":{},"interfaces/UserDocument.html":{},"miscellaneous/variables.html":{}}}],["group.createfold",{"_index":1196,"title":{},"body":{"injectables/SorterService.html":{}}}],["group.createfolder.parent.folderid",{"_index":1198,"title":{},"body":{"injectables/SorterService.html":{}}}],["group.destin",{"_index":1096,"title":{},"body":{"components/PresetConfigComponent.html":{},"injectables/SorterService.html":{}}}],["group.destination.folderid",{"_index":1193,"title":{},"body":{"injectables/SorterService.html":{}}}],["group.destination.presetid",{"_index":1095,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["group.id",{"_index":535,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["group.nam",{"_index":537,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["group.name.length",{"_index":539,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["group.rul",{"_index":538,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["group.rules.foreach(rul",{"_index":1102,"title":{},"body":{"components/PresetConfigComponent.html":{},"injectables/SorterService.html":{}}}],["group.source.folderid",{"_index":536,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["group['id",{"_index":1101,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["groupfolderinterfac",{"_index":499,"title":{"interfaces/GroupFolderInterface.html":{}},"body":{"classes/ConfigBuilder.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/RuleInterface.html":{},"interfaces/UserDocument.html":{},"coverage.html":{}}}],["groupinterfac",{"_index":592,"title":{"interfaces/GroupInterface.html":{}},"body":{"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/RuleInterface.html":{},"injectables/SorterService.html":{},"interfaces/UserDocument.html":{},"coverage.html":{}}}],["groups.find(group",{"_index":1094,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["groups.foreach(group",{"_index":1100,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["guard.servic",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigRoutingModule.html":{}}}],["guard.service.t",{"_index":276,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{},"coverage.html":{}}}],["guard.service.ts:13",{"_index":282,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["guard.service.ts:21",{"_index":289,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["guard.service.ts:28",{"_index":283,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["guard.service.ts:47",{"_index":1130,"title":{},"body":{"injectables/PreventAuthGuardService.html":{}}}],["guard.service.ts:55",{"_index":1132,"title":{},"body":{"injectables/PreventAuthGuardService.html":{}}}],["guard.service.ts:62",{"_index":1131,"title":{},"body":{"injectables/PreventAuthGuardService.html":{}}}],["hammerj",{"_index":1311,"title":{},"body":{"dependencies.html":{}}}],["hanafi",{"_index":1346,"title":{},"body":{"index.html":{}}}],["handl",{"_index":288,"title":{},"body":{"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"injectables/PreventAuthGuardService.html":{}}}],["hasown",{"_index":763,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["hasowner(email",{"_index":802,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["height",{"_index":1504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["herebi",{"_index":1392,"title":{},"body":{"license.html":{}}}],["high",{"_index":1521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hold",{"_index":964,"title":{},"body":{"injectables/GoogleService.html":{}}}],["holder",{"_index":1428,"title":{},"body":{"license.html":{}}}],["home",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["home'},{'nam",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["home.component.html",{"_index":1041,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":1040,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecompon",{"_index":194,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthenticatedModule.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["html",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["https://g",{"_index":1470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://github.com/brandoncravener/g",{"_index":1362,"title":{},"body":{"index.html":{}}}],["https://www.googleapis.com/auth/dr",{"_index":137,"title":{},"body":{"components/AppComponent.html":{}}}],["https://www.googleapis.com/discovery/v1/apis/drive/v3/rest",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["i",{"_index":1534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":524,"title":{},"body":{"classes/ConfigBuilder.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/PresetConfigComponent.html":{},"interfaces/RuleInterface.html":{},"interfaces/UserDocument.html":{},"miscellaneous/variables.html":{}}}],["ident",{"_index":1448,"title":{},"body":{"todo.html":{}}}],["identifi",{"_index":1242,"title":{},"body":{"coverage.html":{}}}],["ignor",{"_index":798,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["imageurl",{"_index":1525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implement",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"injectables/PreventAuthGuardService.html":{},"pipes/UnNamedPipe.html":{}}}],["impli",{"_index":1421,"title":{},"body":{"license.html":{}}}],["import",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"interfaces/UserDocument.html":{}}}],["inact",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["includ",{"_index":776,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"injectables/SorterService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["index",{"_index":25,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{},"interfaces/UserDocument.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"interfaces/UserDocument.html":{}}}],["inform",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["inherit",{"_index":1119,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["init",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{}}}],["init(config",{"_index":949,"title":{},"body":{"injectables/GoogleService.html":{}}}],["initi",{"_index":953,"title":{},"body":{"injectables/GoogleService.html":{}}}],["inject",{"_index":274,"title":{"injectables/AuthGuardService.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"injectables/PreventAuthGuardService.html":{},"injectables/SorterService.html":{}},"body":{"injectables/AuthGuardService.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"injectables/PreventAuthGuardService.html":{},"injectables/SorterService.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":875,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["inputfold",{"_index":876,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["instal",{"_index":1358,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/ConfigComponent.html":{},"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"miscellaneous/variables.html":{}}}],["instanceof",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["integr",{"_index":1529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["interact",{"_index":926,"title":{},"body":{"injectables/GoogleService.html":{}}}],["interfac",{"_index":335,"title":{"interfaces/Config.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/RuleInterface.html":{},"interfaces/UserDocument.html":{}},"body":{"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/RuleInterface.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{},"interfaces/UserDocument.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["isactiveconfig",{"_index":1043,"title":{},"body":{"components/HomeComponent.html":{}}}],["isn't",{"_index":1213,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["ispag",{"_index":1117,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["issu",{"_index":1376,"title":{},"body":{"index.html":{}}}],["istem",{"_index":1516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ivan",{"_index":1340,"title":{},"body":{"index.html":{}}}],["jasmin",{"_index":1313,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":1308,"title":{},"body":{"dependencies.html":{}}}],["key",{"_index":338,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":1419,"title":{},"body":{"license.html":{}}}],["label",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["land",{"_index":1491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lane",{"_index":1336,"title":{},"body":{"index.html":{}}}],["lastmodifi",{"_index":1176,"title":{},"body":{"injectables/SorterService.html":{}}}],["lastopen",{"_index":1171,"title":{},"body":{"injectables/SorterService.html":{}}}],["leav",{"_index":1484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legend",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"overview.html":{}}}],["liabil",{"_index":1432,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":1429,"title":{},"body":{"license.html":{}}}],["licens",{"_index":1385,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["limit",{"_index":1401,"title":{},"body":{"license.html":{}}}],["limit(pages",{"_index":478,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["link.label",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["list",{"_index":359,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/GoogleService.html":{}}}],["list'},{'nam",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["list.compon",{"_index":306,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["list.component.html",{"_index":360,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["list.component.scss",{"_index":361,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["list.component.t",{"_index":337,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"coverage.html":{}}}],["list.component.ts:129",{"_index":609,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:140",{"_index":613,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:161",{"_index":614,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:172",{"_index":607,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:194",{"_index":606,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:201",{"_index":615,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:205",{"_index":608,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:209",{"_index":611,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:218",{"_index":582,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["list.component.ts:220",{"_index":583,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["list.component.ts:221",{"_index":581,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["list.component.ts:225",{"_index":584,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["list.component.ts:229",{"_index":585,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["list.component.ts:233",{"_index":586,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["list.component.ts:238",{"_index":587,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["list.component.ts:35",{"_index":626,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:37",{"_index":628,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:38",{"_index":619,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:39",{"_index":616,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:40",{"_index":624,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:41",{"_index":622,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:42",{"_index":627,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:43",{"_index":618,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:44",{"_index":617,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:46",{"_index":621,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:47",{"_index":623,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:48",{"_index":620,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:49",{"_index":605,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:60",{"_index":612,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:80",{"_index":610,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list/config",{"_index":305,"title":{},"body":{"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"coverage.html":{}}}],["listen",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["listfil",{"_index":934,"title":{},"body":{"injectables/GoogleService.html":{}}}],["listfiles(queri",{"_index":954,"title":{},"body":{"injectables/GoogleService.html":{}}}],["liter",{"_index":862,"title":{},"body":{"interfaces/FolderCreation.html":{}}}],["load",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{}}}],["loadconfig",{"_index":579,"title":{},"body":{"classes/ConfigDataSource.html":{},"injectables/SorterService.html":{}}}],["loadconfig(cb",{"_index":1145,"title":{},"body":{"injectables/SorterService.html":{}}}],["loadconfigs(pag",{"_index":473,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["loaderremov",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["loadingsubject",{"_index":462,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["loadingsubscript",{"_index":370,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["localconfig",{"_index":527,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["localconfig.groups.push",{"_index":528,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["log",{"_index":1219,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["login",{"_index":1216,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["logo",{"_index":1348,"title":{},"body":{"index.html":{}}}],["logo.png",{"_index":1527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["made",{"_index":1347,"title":{},"body":{"index.html":{}}}],["main",{"_index":1327,"title":{},"body":{"index.html":{}}}],["major",{"_index":1381,"title":{},"body":{"index.html":{}}}],["make",{"_index":1234,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["manag",{"_index":1375,"title":{},"body":{"index.html":{}}}],["manager/develop",{"_index":1332,"title":{},"body":{"index.html":{}}}],["map",{"_index":836,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["matbuttonmodul",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["matcardmodul",{"_index":316,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["match",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"interfaces/UserDocument.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["matdatepick",{"_index":317,"title":{},"body":{"modules/AuthenticatedModule.html":{}}}],["matdatepickermodul",{"_index":318,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["matdialog",{"_index":352,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["matdialogcont",{"_index":319,"title":{},"body":{"modules/AuthenticatedModule.html":{}}}],["matdialogmodul",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{}}}],["matexpansionmodul",{"_index":320,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["matformfieldmodul",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["matgridlistmodul",{"_index":321,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["maticonmodul",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["matinputmodul",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["matlistmodul",{"_index":322,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["matmenumodul",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["matnativedatemodul",{"_index":323,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["matpagin",{"_index":353,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{}}}],["matpaginatormodul",{"_index":324,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["matprogressbarmodul",{"_index":647,"title":{},"body":{"modules/ConfigModule.html":{}}}],["matprogressspinnermodul",{"_index":648,"title":{},"body":{"modules/ConfigModule.html":{}}}],["matselectmodul",{"_index":325,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["matslidetogglechang",{"_index":888,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["matslidetogglemodul",{"_index":649,"title":{},"body":{"modules/ConfigModule.html":{}}}],["matsnackbar",{"_index":902,"title":{},"body":{"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{}}}],["matsnackbarmodul",{"_index":326,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["matsteppermodul",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["mattabl",{"_index":354,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["mattabledatasourc",{"_index":355,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["mattablemodul",{"_index":327,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["mattabsmodul",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodul",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["mattooltipmodul",{"_index":328,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["maxheight",{"_index":432,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["memberof",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"components/ConfigComponent.html":{},"modules/ConfigModule.html":{},"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["merchant",{"_index":1422,"title":{},"body":{"license.html":{}}}],["merg",{"_index":1403,"title":{},"body":{"license.html":{}}}],["messagingsenderid",{"_index":1475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{}}}],["method",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{}}}],["mimetyp",{"_index":799,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{}}}],["miscellan",{"_index":1322,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1387,"title":{},"body":{"index.html":{},"license.html":{}}}],["mock",{"_index":1290,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["modal'},{'nam",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["modal.compon",{"_index":309,"title":{},"body":{"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{}}}],["modal.component.t",{"_index":1257,"title":{},"body":{"coverage.html":{}}}],["modal/config",{"_index":308,"title":{},"body":{"modules/AuthenticatedModule.html":{},"components/ConfigComponent.html":{},"modules/ConfigModule.html":{},"coverage.html":{}}}],["modal/edit",{"_index":351,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"coverage.html":{}}}],["modifi",{"_index":806,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"license.html":{}}}],["modifiedaft",{"_index":764,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["modifiedafter(d",{"_index":804,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["modifiedafter(rule.data.firstd",{"_index":1179,"title":{},"body":{"injectables/SorterService.html":{}}}],["modifiedbefor",{"_index":765,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["modifiedbefore(d",{"_index":807,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["modifiedbefore(rule.data.secondd",{"_index":1180,"title":{},"body":{"injectables/SorterService.html":{}}}],["modifiedtim",{"_index":860,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["modul",{"_index":210,"title":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"injectables/GoogleService.html":{},"modules.html":{},"overview.html":{}}}],["modules/authenticated/authenticated.modul",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/config/config.modul",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["modulewithprovid",{"_index":329,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["more",{"_index":1240,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["more_vert",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["movefil",{"_index":935,"title":{},"body":{"injectables/GoogleService.html":{}}}],["movefile(fileid",{"_index":956,"title":{},"body":{"injectables/GoogleService.html":{}}}],["much",{"_index":1239,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["multi",{"_index":1465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"interfaces/UserDocument.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["namecontain",{"_index":766,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["namecontains(str",{"_index":809,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["named.pip",{"_index":655,"title":{},"body":{"modules/ConfigModule.html":{}}}],["named.pipe.t",{"_index":1204,"title":{},"body":{"pipes/UnNamedPipe.html":{},"coverage.html":{}}}],["named.pipe.ts:7",{"_index":1209,"title":{},"body":{"pipes/UnNamedPipe.html":{}}}],["nameexclud",{"_index":767,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["nameexcludes(str",{"_index":813,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["namingopt",{"_index":869,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["navigationend",{"_index":112,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationstart",{"_index":113,"title":{},"body":{"components/AppComponent.html":{}}}],["necessari",{"_index":1353,"title":{},"body":{"index.html":{}}}],["need",{"_index":812,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"index.html":{}}}],["never",{"_index":1224,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["new",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newconfig",{"_index":702,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["newconfigid",{"_index":413,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["newconfigpagecompon",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["newfolderid",{"_index":1201,"title":{},"body":{"injectables/SorterService.html":{}}}],["newfoldernam",{"_index":1194,"title":{},"body":{"injectables/SorterService.html":{}}}],["newgroupdestin",{"_index":498,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["newgroupnam",{"_index":497,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["newgroupsourc",{"_index":500,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["newrulesteppercompon",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":1306,"title":{},"body":{"dependencies.html":{}}}],["ng",{"_index":1369,"title":{},"body":{"index.html":{}}}],["ng_value_accessor",{"_index":1462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngafterviewinit",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{}}}],["ngmodul",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{}}}],["ngondestroy",{"_index":456,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["ngoninit",{"_index":382,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["ngx",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["ngzone",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{}}}],["noconfig",{"_index":374,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["none",{"_index":895,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["noninfring",{"_index":1426,"title":{},"body":{"license.html":{}}}],["notic",{"_index":1414,"title":{},"body":{"license.html":{}}}],["now",{"_index":1062,"title":{},"body":{"components/HomeComponent.html":{}}}],["null",{"_index":597,"title":{},"body":{"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/RuleInterface.html":{},"interfaces/UserDocument.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":368,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["numberconfig",{"_index":677,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["numberconfigs(cb",{"_index":696,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["numconfig",{"_index":393,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["numnon",{"_index":919,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["object",{"_index":950,"title":{},"body":{"injectables/GoogleService.html":{},"miscellaneous/variables.html":{}}}],["observ",{"_index":356,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/GoogleService.html":{}}}],["obtain",{"_index":1396,"title":{},"body":{"license.html":{}}}],["ok",{"_index":1058,"title":{},"body":{"components/HomeComponent.html":{}}}],["oldpages",{"_index":367,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["om1dhhvv5d9npas7jj02mbtvi5mjksmo.apps.googleusercontent.com",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["on",{"_index":634,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["ondestroy",{"_index":342,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["oninit",{"_index":343,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["opac",{"_index":1487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["open",{"_index":567,"title":{},"body":{"components/ConfigComponent.html":{},"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"index.html":{}}}],["openconfigmod",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["openconfigmodalfunc",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["openconfigmodallisten",{"_index":552,"title":{},"body":{"components/ConfigComponent.html":{}}}],["openedaft",{"_index":768,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["openedafter(d",{"_index":815,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["openedafter(rule.data.firstd",{"_index":1174,"title":{},"body":{"injectables/SorterService.html":{}}}],["openedbefor",{"_index":769,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["openedbefore(d",{"_index":818,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["openedbefore(rule.data.secondd",{"_index":1175,"title":{},"body":{"injectables/SorterService.html":{}}}],["openfilepick",{"_index":936,"title":{},"body":{"injectables/GoogleService.html":{}}}],["openfolderpick",{"_index":873,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["opennewconfigdialog",{"_index":553,"title":{},"body":{"components/ConfigComponent.html":{}}}],["openpreset",{"_index":426,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["option",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["option.nam",{"_index":924,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["orderby('nam",{"_index":476,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["organ",{"_index":1223,"title":{},"body":{"components/UnauthenticatedComponent.html":{},"index.html":{}}}],["otherwis",{"_index":1435,"title":{},"body":{"license.html":{}}}],["out",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"injectables/GoogleService.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["outlet",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["outlet.activatedroutedata.st",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["output",{"_index":877,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["overview",{"_index":1441,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":790,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{}}}],["packag",{"_index":1295,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":287,"title":{},"body":{"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"miscellaneous/variables.html":{}}}],["page'},{'nam",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["page.compon",{"_index":646,"title":{},"body":{"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{}}}],["page.component.t",{"_index":1115,"title":{},"body":{"components/PresetConfigPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:10",{"_index":1123,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["page.component.ts:12",{"_index":1118,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["page/edit",{"_index":645,"title":{},"body":{"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"coverage.html":{}}}],["page/new",{"_index":651,"title":{},"body":{"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"coverage.html":{}}}],["page/preset",{"_index":657,"title":{},"body":{"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"components/PresetConfigPageComponent.html":{},"coverage.html":{}}}],["pages",{"_index":467,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["pagin",{"_index":363,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["paginatorsubscript",{"_index":371,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["parallax",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["parallaxconfig",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["parallaxmodul",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["param",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"injectables/PreventAuthGuardService.html":{},"components/UnauthenticatedComponent.html":{}}}],["paramet",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":595,"title":{},"body":{"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/RuleInterface.html":{},"interfaces/UserDocument.html":{}}}],["parentfolderid",{"_index":774,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["parentfolderisroot",{"_index":870,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["particular",{"_index":1424,"title":{},"body":{"license.html":{}}}],["pass",{"_index":403,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["path",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"modules/ConfigRoutingModule.html":{}}}],["permiss",{"_index":1391,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1409,"title":{},"body":{"license.html":{}}}],["person",{"_index":1395,"title":{},"body":{"license.html":{}}}],["phi",{"_index":1533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["photo",{"_index":838,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["physic",{"_index":1528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pick",{"_index":982,"title":{},"body":{"injectables/GoogleService.html":{}}}],["pickedfold",{"_index":909,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["pickedfolder.id",{"_index":911,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["pickedfolder.nam",{"_index":912,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["picker",{"_index":1001,"title":{},"body":{"injectables/GoogleService.html":{}}}],["pipe",{"_index":1202,"title":{"pipes/UnNamedPipe.html":{}},"body":{"pipes/UnNamedPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipes/un",{"_index":654,"title":{},"body":{"modules/ConfigModule.html":{}}}],["pipetransform",{"_index":1210,"title":{},"body":{"pipes/UnNamedPipe.html":{}}}],["pleas",{"_index":1382,"title":{},"body":{"index.html":{}}}],["popup",{"_index":960,"title":{},"body":{"injectables/GoogleService.html":{}}}],["portion",{"_index":1417,"title":{},"body":{"license.html":{}}}],["posit",{"_index":1485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix",{"_index":598,"title":{},"body":{"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/RuleInterface.html":{},"interfaces/UserDocument.html":{}}}],["present",{"_index":840,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["preset",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["preset.categori",{"_index":1113,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["preset.descript",{"_index":1114,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["preset.nam",{"_index":1112,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["presetconfigcompon",{"_index":200,"title":{"components/PresetConfigComponent.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["presetconfigcomponent:17",{"_index":1124,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["presetconfigcomponent:19",{"_index":1125,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["presetconfigcomponent:21",{"_index":1127,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["presetconfigcomponent:22",{"_index":1126,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["presetconfigcomponent:25",{"_index":1129,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["presetconfigcomponent:26",{"_index":1128,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["presetconfigcomponent:32",{"_index":1122,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["presetconfigcomponent:34",{"_index":1121,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["presetconfigcomponent:38",{"_index":1120,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["presetconfigpagecompon",{"_index":202,"title":{"components/PresetConfigPageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["presetid",{"_index":1072,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"miscellaneous/variables.html":{}}}],["presets.find(el",{"_index":1082,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["prevent",{"_index":277,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{}}}],["preventauthguardservic",{"_index":223,"title":{"injectables/PreventAuthGuardService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{},"coverage.html":{},"overview.html":{}}}],["prevpar",{"_index":1034,"title":{},"body":{"injectables/GoogleService.html":{}}}],["privat",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{}}}],["problem",{"_index":1109,"title":{},"body":{"components/PresetConfigComponent.html":{},"index.html":{}}}],["product",{"_index":1466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":1331,"title":{},"body":{"index.html":{}}}],["projectid",{"_index":1472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promis",{"_index":683,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{}}}],["promise((resolv",{"_index":733,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"injectables/SorterService.html":{}}}],["properti",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{},"interfaces/UserDocument.html":{}}}],["provid",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/UnauthenticatedComponent.html":{},"index.html":{}}}],["publish",{"_index":1404,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":1425,"title":{},"body":{"license.html":{}}}],["q",{"_index":1022,"title":{},"body":{"injectables/GoogleService.html":{}}}],["quarter",{"_index":1535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["quartersarray",{"_index":1274,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["queri",{"_index":754,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"injectables/SorterService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["query'",{"_index":758,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["quick",{"_index":1228,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["rc.5",{"_index":1305,"title":{},"body":{"dependencies.html":{}}}],["reactiveformsmodul",{"_index":313,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["ref",{"_index":745,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["refer",{"_index":976,"title":{},"body":{"injectables/GoogleService.html":{},"miscellaneous/variables.html":{}}}],["refresh",{"_index":630,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["refreshconfig",{"_index":443,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["regist",{"_index":332,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["reject",{"_index":734,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"injectables/SorterService.html":{}}}],["reject(resp.err",{"_index":1031,"title":{},"body":{"injectables/GoogleService.html":{}}}],["reject(resp.error",{"_index":1189,"title":{},"body":{"injectables/SorterService.html":{}}}],["relat",{"_index":1343,"title":{},"body":{"index.html":{}}}],["removeitem",{"_index":1514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["removepar",{"_index":1037,"title":{},"body":{"injectables/GoogleService.html":{}}}],["renam",{"_index":1449,"title":{},"body":{"todo.html":{}}}],["report",{"_index":1383,"title":{},"body":{"index.html":{}}}],["repositionscrollstrategi",{"_index":563,"title":{},"body":{"components/ConfigComponent.html":{}}}],["repositori",{"_index":1378,"title":{},"body":{"index.html":{}}}],["requestsreciv",{"_index":1088,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["requestss",{"_index":1087,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["requir",{"_index":783,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requirestyp",{"_index":770,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["requirestype(mimetyp",{"_index":820,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["reset",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"overview.html":{}}}],["resolv",{"_index":736,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/SorterService.html":{}}}],["resolve(resp.id",{"_index":1032,"title":{},"body":{"injectables/GoogleService.html":{}}}],["resourc",{"_index":1030,"title":{},"body":{"injectables/GoogleService.html":{}}}],["resp",{"_index":1187,"title":{},"body":{"injectables/SorterService.html":{}}}],["resp.err",{"_index":1025,"title":{},"body":{"injectables/GoogleService.html":{}}}],["resp.error",{"_index":1188,"title":{},"body":{"injectables/SorterService.html":{}}}],["resp.files.foreach(fil",{"_index":1190,"title":{},"body":{"injectables/SorterService.html":{}}}],["rest",{"_index":1231,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["restrict",{"_index":1400,"title":{},"body":{"license.html":{}}}],["result",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"interfaces/UserDocument.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["retriv",{"_index":408,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["return",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"miscellaneous/variables.html":{}}}],["right",{"_index":1402,"title":{},"body":{"license.html":{}}}],["rlasaf",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["root",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"miscellaneous/variables.html":{}}}],["root'},{'nam",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["roottogglechang",{"_index":874,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["roottogglechange(ev",{"_index":887,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["rout",{"_index":65,"title":{"routes.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/ConfigRoutingModule.html":{},"injectables/PreventAuthGuardService.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{}}}],["routeranim",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routermodul",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigRoutingModule.html":{}}}],["routermodule.forchild(rout",{"_index":665,"title":{},"body":{"modules/ConfigRoutingModule.html":{}}}],["routermodule.forroot(approut",{"_index":270,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.modul",{"_index":658,"title":{},"body":{"modules/ConfigModule.html":{}}}],["routing.module.t",{"_index":660,"title":{},"body":{"modules/ConfigRoutingModule.html":{}}}],["rule",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"interfaces/UserDocument.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rule.classifi",{"_index":540,"title":{},"body":{"classes/ConfigBuilder.html":{},"injectables/SorterService.html":{}}}],["rule.constraint",{"_index":541,"title":{},"body":{"classes/ConfigBuilder.html":{},"injectables/SorterService.html":{}}}],["rule.data",{"_index":542,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["rule.data.filetyp",{"_index":1159,"title":{},"body":{"injectables/SorterService.html":{}}}],["rule.data.own",{"_index":1162,"title":{},"body":{"injectables/SorterService.html":{}}}],["rule.data.titl",{"_index":1155,"title":{},"body":{"injectables/SorterService.html":{}}}],["rule.data['id",{"_index":1103,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["rule.id",{"_index":543,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["rule.nam",{"_index":544,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["rule.name.length",{"_index":545,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["ruleinterfac",{"_index":502,"title":{"interfaces/RuleInterface.html":{}},"body":{"classes/ConfigBuilder.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/RuleInterface.html":{},"interfaces/UserDocument.html":{},"coverage.html":{}}}],["run",{"_index":1359,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"components/PresetConfigComponent.html":{},"dependencies.html":{}}}],["scale(0",{"_index":1478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scale(1",{"_index":1479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["school",{"_index":1519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scope",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["screen",{"_index":1500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["script",{"_index":842,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["sdk",{"_index":854,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["search",{"_index":775,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["select",{"_index":549,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"components/SettingsComponent.html":{}}}],["selector",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["sell",{"_index":1408,"title":{},"body":{"license.html":{}}}],["serv",{"_index":1370,"title":{},"body":{"index.html":{}}}],["servic",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/GoogleService.html":{},"injectables/PreventAuthGuardService.html":{},"components/UnauthenticatedComponent.html":{}}}],["services/auth/auth",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigRoutingModule.html":{}}}],["services/firebase/database.servic",{"_index":311,"title":{},"body":{"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{}}}],["services/google/google.servic",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FolderCreationComponent.html":{},"components/PresetConfigComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["services/sorter/sorter.servic",{"_index":331,"title":{},"body":{"modules/AuthenticatedModule.html":{},"components/HomeComponent.html":{}}}],["set",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"components/HomeComponent.html":{},"components/SettingsComponent.html":{}}}],["setactiveconfig",{"_index":603,"title":{},"body":{"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{}}}],["setactiveconfig(configid",{"_index":698,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["setactiveconfig(configkey",{"_index":453,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["setappid(362606538820",{"_index":1009,"title":{},"body":{"injectables/GoogleService.html":{}}}],["setcallback(folderpick",{"_index":1015,"title":{},"body":{"injectables/GoogleService.html":{}}}],["setdeveloperkey('aizasyb",{"_index":1012,"title":{},"body":{"injectables/GoogleService.html":{}}}],["setincludefolders(tru",{"_index":1003,"title":{},"body":{"injectables/GoogleService.html":{}}}],["setinterv",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/PresetConfigComponent.html":{}}}],["setitem",{"_index":1513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setoauthtoken",{"_index":1010,"title":{},"body":{"injectables/GoogleService.html":{}}}],["setownedbyme(tru",{"_index":1006,"title":{},"body":{"injectables/GoogleService.html":{}}}],["setparent('root",{"_index":1005,"title":{},"body":{"injectables/GoogleService.html":{}}}],["setselectablemimetypes('application/vnd.googl",{"_index":1013,"title":{},"body":{"injectables/GoogleService.html":{}}}],["setselectfolderenabled(tru",{"_index":1004,"title":{},"body":{"injectables/GoogleService.html":{}}}],["settimeout",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["settimeout(_",{"_index":416,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{}}}],["settings'},{'nam",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["settings.component.html",{"_index":1135,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.scss",{"_index":1134,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings_pow",{"_index":631,"title":{},"body":{"components/ConfigListComponent.html":{},"components/HomeComponent.html":{}}}],["settingscompon",{"_index":203,"title":{"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthenticatedModule.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["shall",{"_index":1415,"title":{},"body":{"license.html":{}}}],["shared/config",{"_index":562,"title":{},"body":{"components/ConfigComponent.html":{}}}],["shared/edit",{"_index":350,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["shown",{"_index":547,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["sign",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleService.html":{}}}],["signin",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleService.html":{}}}],["signout",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleService.html":{}}}],["simplist",{"_index":1233,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["site",{"_index":844,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["slidedown",{"_index":1248,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["slideleft",{"_index":1249,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["slideright",{"_index":1250,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["small",{"_index":1499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["snackbar",{"_index":905,"title":{},"body":{"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{}}}],["snapshot",{"_index":746,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["snapshot.data",{"_index":747,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["snapshot.doc",{"_index":480,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["softwar",{"_index":1338,"title":{},"body":{"index.html":{},"license.html":{}}}],["solv",{"_index":1349,"title":{},"body":{"index.html":{}}}],["sort",{"_index":894,"title":{},"body":{"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{}}}],["sorter",{"_index":1222,"title":{},"body":{"components/UnauthenticatedComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["sorterservic",{"_index":299,"title":{"injectables/SorterService.html":{}},"body":{"modules/AuthenticatedModule.html":{},"components/HomeComponent.html":{},"injectables/SorterService.html":{},"coverage.html":{},"overview.html":{}}}],["sortusersdr",{"_index":1045,"title":{},"body":{"components/HomeComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"interfaces/UserDocument.html":{},"miscellaneous/variables.html":{}}}],["sourcefold",{"_index":513,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["sourceloc",{"_index":685,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["spec\\.t",{"_index":1461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spreadsheet",{"_index":846,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["src/.../animations.t",{"_index":1454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.component.t",{"_index":1457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../drive",{"_index":1324,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.prod.t",{"_index":1453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":1452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../google.service.t",{"_index":1325,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../jestglobalmocks.t",{"_index":1458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../new",{"_index":1451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../presets.t",{"_index":1459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../settings.component.t",{"_index":1455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../sorter.service.t",{"_index":1456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.t",{"_index":1450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/animations.t",{"_index":1244,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.ts:108",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:131",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:135",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:139",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:150",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:27",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:31",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:32",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:33",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:34",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:35",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:36",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:49",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/classes/config",{"_index":488,"title":{},"body":{"classes/ConfigBuilder.html":{},"coverage.html":{}}}],["src/app/classes/dr",{"_index":753,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/components/auth/unauthenticated/unauthenticated.component.t",{"_index":1212,"title":{},"body":{"components/UnauthenticatedComponent.html":{},"coverage.html":{}}}],["src/app/components/auth/unauthenticated/unauthenticated.component.ts:15",{"_index":1217,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["src/app/components/auth/unauthenticated/unauthenticated.component.ts:21",{"_index":1220,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["src/app/components/auth/unauthenticated/unauthenticated.component.ts:28",{"_index":1218,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["src/app/components/shared/config",{"_index":1256,"title":{},"body":{"coverage.html":{}}}],["src/app/components/shared/edit",{"_index":1259,"title":{},"body":{"coverage.html":{}}}],["src/app/components/shared/fold",{"_index":863,"title":{},"body":{"components/FolderCreationComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/new",{"_index":1262,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/tabs/config/config",{"_index":336,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"coverage.html":{}}}],["src/app/components/tabs/config/config.component.t",{"_index":546,"title":{},"body":{"components/ConfigComponent.html":{},"coverage.html":{}}}],["src/app/components/tabs/config/config.component.ts:22",{"_index":561,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/components/tabs/config/config.component.ts:24",{"_index":555,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/components/tabs/config/config.component.ts:37",{"_index":559,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/components/tabs/config/config.component.ts:46",{"_index":557,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/components/tabs/config/config.component.ts:50",{"_index":558,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/components/tabs/config/config.component.ts:54",{"_index":556,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/components/tabs/config/config.component.ts:65",{"_index":560,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/components/tabs/config/preset",{"_index":1064,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"coverage.html":{}}}],["src/app/components/tabs/config/presets.t",{"_index":1273,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/tabs/home/home.component.t",{"_index":1039,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/components/tabs/home/home.component.ts:20",{"_index":1051,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/tabs/home/home.component.ts:21",{"_index":1047,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/tabs/home/home.component.ts:40",{"_index":1049,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/tabs/home/home.component.ts:56",{"_index":1050,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/tabs/home/home.component.ts:64",{"_index":1048,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/tabs/settings/settings.component.t",{"_index":1133,"title":{},"body":{"components/SettingsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/tabs/settings/settings.component.ts:22",{"_index":1137,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/components/tabs/settings/settings.component.ts:29",{"_index":1138,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/authenticated/authenticated.module.t",{"_index":300,"title":{},"body":{"modules/AuthenticatedModule.html":{}}}],["src/app/modules/config/config",{"_index":659,"title":{},"body":{"modules/ConfigRoutingModule.html":{}}}],["src/app/modules/config/config.module.t",{"_index":642,"title":{},"body":{"modules/ConfigModule.html":{}}}],["src/app/pipes/un",{"_index":1203,"title":{},"body":{"pipes/UnNamedPipe.html":{},"coverage.html":{}}}],["src/app/services/auth/auth",{"_index":275,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{},"coverage.html":{}}}],["src/app/services/firebase/database.service.t",{"_index":666,"title":{},"body":{"injectables/DatabaseService.html":{},"coverage.html":{}}}],["src/app/services/firebase/database.service.ts:105",{"_index":699,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/firebase/database.service.ts:119",{"_index":701,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/firebase/database.service.ts:127",{"_index":695,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/firebase/database.service.ts:133",{"_index":692,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/firebase/database.service.ts:151",{"_index":697,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/firebase/database.service.ts:18",{"_index":704,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/firebase/database.service.ts:19",{"_index":711,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/firebase/database.service.ts:21",{"_index":703,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/firebase/database.service.ts:22",{"_index":706,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/firebase/database.service.ts:24",{"_index":713,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/firebase/database.service.ts:26",{"_index":708,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/firebase/database.service.ts:27",{"_index":709,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/firebase/database.service.ts:28",{"_index":712,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/firebase/database.service.ts:30",{"_index":680,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/firebase/database.service.ts:51",{"_index":687,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/firebase/database.service.ts:79",{"_index":682,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/firebase/database.service.ts:92",{"_index":689,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/google/google.service.t",{"_index":925,"title":{},"body":{"injectables/GoogleService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/google/google.service.ts:112",{"_index":958,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:122",{"_index":941,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:135",{"_index":959,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:144",{"_index":962,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:155",{"_index":947,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:159",{"_index":955,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:169",{"_index":945,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:184",{"_index":939,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:203",{"_index":957,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:46",{"_index":963,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:53",{"_index":969,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:55",{"_index":937,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:69",{"_index":952,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/sorter/sorter.service.t",{"_index":1140,"title":{},"body":{"injectables/SorterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/sorter/sorter.service.ts:117",{"_index":1146,"title":{},"body":{"injectables/SorterService.html":{}}}],["src/app/services/sorter/sorter.service.ts:128",{"_index":1147,"title":{},"body":{"injectables/SorterService.html":{}}}],["src/app/services/sorter/sorter.service.ts:18",{"_index":1142,"title":{},"body":{"injectables/SorterService.html":{}}}],["src/app/services/sorter/sorter.service.ts:30",{"_index":1144,"title":{},"body":{"injectables/SorterService.html":{}}}],["src/environments/environment.prod.t",{"_index":1283,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":1284,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/interfaces.t",{"_index":588,"title":{},"body":{"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/RuleInterface.html":{},"interfaces/UserDocument.html":{},"coverage.html":{}}}],["src/jestglobalmocks.t",{"_index":1289,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.t",{"_index":1291,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":1326,"title":{"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["startat(this.calculatestart(pag",{"_index":477,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["state",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["statement",{"_index":1243,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":333,"title":{},"body":{"modules/AuthenticatedModule.html":{},"classes/ConfigBuilder.html":{},"modules/ConfigModule.html":{}}}],["statu",{"_index":942,"title":{},"body":{"injectables/GoogleService.html":{}}}],["stem",{"_index":1106,"title":{},"body":{"components/PresetConfigComponent.html":{},"miscellaneous/variables.html":{}}}],["stepper'},{'nam",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["stepper.compon",{"_index":653,"title":{},"body":{"modules/ConfigModule.html":{}}}],["stepper.component.t",{"_index":1264,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stepper/new",{"_index":652,"title":{},"body":{"modules/ConfigModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storag",{"_index":1510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storage[key",{"_index":1512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storagebucket",{"_index":1473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"interfaces/RuleInterface.html":{},"injectables/SorterService.html":{},"interfaces/UserDocument.html":{}}}],["style",{"_index":1477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["styleurl",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["subject",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["sublicens",{"_index":1406,"title":{},"body":{"license.html":{}}}],["subscrib",{"_index":967,"title":{},"body":{"injectables/GoogleService.html":{}}}],["subscribe(clos",{"_index":575,"title":{},"body":{"components/ConfigComponent.html":{}}}],["subscript",{"_index":357,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["substanti",{"_index":1416,"title":{},"body":{"license.html":{}}}],["success",{"_index":1184,"title":{},"body":{"injectables/SorterService.html":{}}}],["suffix",{"_index":599,"title":{},"body":{"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/RuleInterface.html":{},"interfaces/UserDocument.html":{}}}],["suitabl",{"_index":1235,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["suppli",{"_index":784,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["support",{"_index":1380,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1437,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1152,"title":{},"body":{"injectables/SorterService.html":{},"miscellaneous/variables.html":{}}}],["tab",{"_index":548,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["tabl",{"_index":1294,"title":{},"body":{"coverage.html":{}}}],["tablecolumn",{"_index":376,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1293,"title":{},"body":{"coverage.html":{}}}],["tablink",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["tabsen",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["templateurl",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["test",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"miscellaneous/variables.html":{}}}],["tester",{"_index":1339,"title":{},"body":{"index.html":{}}}],["text",{"_index":893,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["then(id",{"_index":1093,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["then(newfolderid",{"_index":1199,"title":{},"body":{"injectables/SorterService.html":{}}}],["then(snapshot",{"_index":479,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{}}}],["thirdparti",{"_index":852,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["this._activeconfigchanged.asobserv",{"_index":705,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this._activeconfigchanged.error(err",{"_index":740,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this._activeconfigchanged.next(configid",{"_index":739,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this._authstate.asobserv",{"_index":968,"title":{},"body":{"injectables/GoogleService.html":{}}}],["this._authstate.next(authinstance.issignedin.get",{"_index":992,"title":{},"body":{"injectables/GoogleService.html":{}}}],["this._authstate.next(authstatu",{"_index":999,"title":{},"body":{"injectables/GoogleService.html":{}}}],["this._closecommand.asobserv",{"_index":1076,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["this._closecommand.next(tru",{"_index":1081,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["this._configsubject.asobserv",{"_index":710,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this._configsubject.next(fals",{"_index":732,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this._configsubject.next(tru",{"_index":730,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.activeconfig",{"_index":410,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.activeconfigchangesubscript",{"_index":411,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.activeconfigchangesubscription.unsubscrib",{"_index":460,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.activeconfignam",{"_index":1054,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.appcomponent.openconfigmodal$.subscribe(open",{"_index":566,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.authent",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["this.clos",{"_index":1107,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["this.config",{"_index":1182,"title":{},"body":{"injectables/SorterService.html":{}}}],["this.config.groups.foreach(group",{"_index":1185,"title":{},"body":{"injectables/SorterService.html":{}}}],["this.configchangesubscript",{"_index":405,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.configchangesubscription.unsubscrib",{"_index":459,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.configcollect",{"_index":386,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.configcollection.ref",{"_index":475,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.configdocu",{"_index":723,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.configscollect",{"_index":725,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.configscollection.add(config).then",{"_index":735,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.configscollection.doc(configid).ref.get().then(snapshot",{"_index":743,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.configscollection.doc(this.editingconfig).ref.set(newconfig",{"_index":741,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.configsubject.asobserv",{"_index":469,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.configsubject.complet",{"_index":471,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.configsubject.next(data",{"_index":485,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.createconfigbuttonst",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["this.createfold",{"_index":904,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["this.createfolder.par",{"_index":910,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["this.creationen",{"_index":1089,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["this.databas",{"_index":1104,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["this.database.activeconfigchanged.subscrib",{"_index":412,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/SorterService.html":{}}}],["this.database.configsubject.subscrib",{"_index":406,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.database.deleteconfig(configkey",{"_index":452,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.database.editingconfig",{"_index":445,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.database.getactiveconfig(activeconfig",{"_index":409,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/HomeComponent.html":{},"injectables/SorterService.html":{}}}],["this.database.getconfig(activeconfig",{"_index":1053,"title":{},"body":{"components/HomeComponent.html":{},"injectables/SorterService.html":{}}}],["this.database.numberconfigs(numconfig",{"_index":392,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.database.setactiveconfig(configkey",{"_index":454,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.database.userid",{"_index":1052,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.datasourc",{"_index":390,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.datasource.loadconfig",{"_index":400,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.datasource.loadconfigs(0",{"_index":402,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.datasource.loading$.subscrib",{"_index":418,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.dialog.open(configmodalcompon",{"_index":571,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.dialog.open(editconfigmodalcompon",{"_index":447,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.dialog.open(presetconfigcompon",{"_index":430,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.editingconfig",{"_index":742,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.firebas",{"_index":387,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.firebaseauth.auth.currentus",{"_index":383,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{}}}],["this.firebaseauth.auth.currentuser.uid",{"_index":385,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.firebaseauth.auth.signinwithcredential(credenti",{"_index":997,"title":{},"body":{"injectables/GoogleService.html":{}}}],["this.firebaseauth.auth.signout",{"_index":1019,"title":{},"body":{"injectables/GoogleService.html":{}}}],["this.getdialogwidth",{"_index":428,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.getfileinfo(fileid",{"_index":1033,"title":{},"body":{"injectables/GoogleService.html":{}}}],["this.gettoken",{"_index":996,"title":{},"body":{"injectables/GoogleService.html":{}}}],["this.googl",{"_index":1091,"title":{},"body":{"components/PresetConfigComponent.html":{},"injectables/SorterService.html":{}}}],["this.google.authstate$.subscribe(st",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["this.google.folderpicked$.subscrib",{"_index":908,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["this.google.getauthstatu",{"_index":292,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{}}}],["this.google.init",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["this.google.listfiles(this.getdrivequery(group",{"_index":1186,"title":{},"body":{"injectables/SorterService.html":{}}}],["this.google.movefil",{"_index":1191,"title":{},"body":{"injectables/SorterService.html":{}}}],["this.google.movefile(file.id",{"_index":1200,"title":{},"body":{"injectables/SorterService.html":{}}}],["this.google.openfilepick",{"_index":914,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["this.google.signin",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["this.google.signout",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"components/SettingsComponent.html":{}}}],["this.init",{"_index":569,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.inputfold",{"_index":906,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["this.isactiveconfig",{"_index":1055,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.load",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.loadconfig",{"_index":1149,"title":{},"body":{"injectables/SorterService.html":{}}}],["this.loaderremov",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadingsubject.asobserv",{"_index":464,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.loadingsubject.complet",{"_index":472,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.loadingsubject.next(fals",{"_index":486,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.loadingsubject.next(tru",{"_index":474,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.loadingsubscript",{"_index":417,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.loadingsubscription.unsubscrib",{"_index":457,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.noconfig",{"_index":395,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.oldpages",{"_index":398,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.openconfigmodal.asobserv",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["this.openconfigmodal.next(tru",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["this.openconfigmodallisten",{"_index":565,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.openconfigmodallistener.unsubscrib",{"_index":570,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.opennewconfigdialog",{"_index":568,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.pagin",{"_index":391,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.paginator.length",{"_index":404,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.paginator.page.subscrib",{"_index":397,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.paginator.pageindex",{"_index":401,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.paginator.pages",{"_index":399,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.paginatorsubscript",{"_index":396,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.paginatorsubscription.unsubscrib",{"_index":458,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.parentfolderisroot",{"_index":916,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["this.queri",{"_index":855,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["this.refreshconfig",{"_index":407,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.rlasaf",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.events.subscribe(ev",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navig",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{}}}],["this.router.navigate(['/app/config/cr",{"_index":577,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.router.navigate(['/app/config/edit",{"_index":448,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.router.navigate(['/app/config/preset",{"_index":442,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.router.navigate(['/app/hom",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{}}}],["this.router.navigatebyurl('/app/config",{"_index":1061,"title":{},"body":{"components/HomeComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["this.setactiveconfig",{"_index":451,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["this.snackbar.open('googl",{"_index":1057,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.snackbar.open('ther",{"_index":1108,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["this.sorterservice.sort().then",{"_index":1056,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.tabsen",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["this.userdoc",{"_index":721,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.userdoc.collection('config",{"_index":726,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.userid",{"_index":384,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{}}}],["this.valid",{"_index":903,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["this.valueattributes.foreach(attribut",{"_index":920,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["this.zone.run",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{}}}],["timestampsinsnapshot",{"_index":717,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["titl",{"_index":1154,"title":{},"body":{"injectables/SorterService.html":{},"miscellaneous/variables.html":{}}}],["todo",{"_index":1447,"title":{"todo.html":{}},"body":{"todo.html":{}}}],["token",{"_index":948,"title":{},"body":{"injectables/GoogleService.html":{}}}],["tort",{"_index":1434,"title":{},"body":{"license.html":{}}}],["tracker",{"_index":1377,"title":{},"body":{"index.html":{}}}],["transform",{"_index":1206,"title":{},"body":{"pipes/UnNamedPipe.html":{},"miscellaneous/variables.html":{}}}],["transform(valu",{"_index":1207,"title":{},"body":{"pipes/UnNamedPipe.html":{}}}],["transit",{"_index":1492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('act",{"_index":1482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('appconfig",{"_index":1496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('appconfigcr",{"_index":1502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('appconfigedit",{"_index":1501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('appconfigpreset",{"_index":1503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('apphom",{"_index":1495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('appset",{"_index":1498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('inact",{"_index":1480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('land",{"_index":1493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatex",{"_index":1509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatex(0",{"_index":1508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatex(100",{"_index":1507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatey(0",{"_index":1506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatey(100",{"_index":1505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trash",{"_index":777,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["trashed=fals",{"_index":856,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["tri",{"_index":633,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["trigger('createconfigfabst",{"_index":1476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigger('routertransit",{"_index":1490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"injectables/SorterService.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"interfaces/UserDocument.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["types/uuid",{"_index":1302,"title":{},"body":{"dependencies.html":{}}}],["uid",{"_index":720,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["unauthent",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["unauthenticated.component.html",{"_index":1215,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["unauthenticated.component.scss",{"_index":1214,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["unauthenticatedcompon",{"_index":205,"title":{"components/UnauthenticatedComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["undefin",{"_index":596,"title":{},"body":{"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/RuleInterface.html":{},"interfaces/UserDocument.html":{}}}],["under",{"_index":1386,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":848,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["unnam",{"_index":1205,"title":{},"body":{"pipes/UnNamedPipe.html":{}}}],["unnamedpip",{"_index":640,"title":{"pipes/UnNamedPipe.html":{}},"body":{"modules/ConfigModule.html":{},"pipes/UnNamedPipe.html":{},"coverage.html":{},"overview.html":{}}}],["updat",{"_index":966,"title":{},"body":{"injectables/GoogleService.html":{}}}],["updateconfig",{"_index":678,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["updateconfig(newconfig",{"_index":700,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["us",{"_index":965,"title":{},"body":{"injectables/GoogleService.html":{},"components/UnauthenticatedComponent.html":{},"index.html":{},"license.html":{}}}],["useexist",{"_index":1463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":278,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/GoogleService.html":{},"injectables/PreventAuthGuardService.html":{},"components/UnauthenticatedComponent.html":{},"index.html":{}}}],["userdoc",{"_index":673,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["userdocu",{"_index":594,"title":{"interfaces/UserDocument.html":{}},"body":{"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/RuleInterface.html":{},"interfaces/UserDocument.html":{},"coverage.html":{}}}],["userid",{"_index":364,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{}}}],["util",{"_index":755,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{}}}],["uuid",{"_index":522,"title":{},"body":{"classes/ConfigBuilder.html":{},"components/PresetConfigComponent.html":{},"dependencies.html":{}}}],["v4",{"_index":521,"title":{},"body":{"classes/ConfigBuilder.html":{},"components/PresetConfigComponent.html":{}}}],["valid",{"_index":530,"title":{},"body":{"classes/ConfigBuilder.html":{},"components/FolderCreationComponent.html":{}}}],["valu",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"interfaces/RuleInterface.html":{},"pipes/UnNamedPipe.html":{},"interfaces/UserDocument.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":1211,"title":{},"body":{"pipes/UnNamedPipe.html":{}}}],["valueattribut",{"_index":871,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["valuechang",{"_index":878,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["var",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{}}}],["variabl",{"_index":974,"title":{"miscellaneous/variables.html":{}},"body":{"injectables/GoogleService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["verifyconfig",{"_index":494,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["verifyconfig(config",{"_index":518,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["video",{"_index":850,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["view",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleService.html":{}}}],["view_list",{"_index":1226,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["viewchild",{"_index":344,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["viewchild(matpagin",{"_index":362,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["viewedbymetim",{"_index":861,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["visit",{"_index":1229,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["void",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{}}}],["warranti",{"_index":1418,"title":{},"body":{"license.html":{}}}],["way",{"_index":1351,"title":{},"body":{"index.html":{}}}],["web",{"_index":1318,"title":{},"body":{"dependencies.html":{}}}],["websit",{"_index":1230,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["whenev",{"_index":1352,"title":{},"body":{"index.html":{}}}],["whether",{"_index":285,"title":{},"body":{"injectables/AuthGuardService.html":{},"classes/DriveQueryBuilder.html":{},"injectables/PreventAuthGuardService.html":{},"license.html":{}}}],["width",{"_index":420,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"miscellaneous/variables.html":{}}}],["wilson",{"_index":1520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["window['gapi",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["without",{"_index":1399,"title":{},"body":{"license.html":{}}}],["work",{"_index":1232,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["workaround",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"miscellaneous/variables.html":{}}}],["yarn",{"_index":1366,"title":{},"body":{"index.html":{}}}],["ye",{"_index":940,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{}}}],["ye9ixt29vl_eau7bzvzv5qe17flfpzm",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleService.html":{},"miscellaneous/variables.html":{}}}],["zon",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["zone",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{}}}],["zone.j",{"_index":1320,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Base application component.\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            GoogleService\n                \n            \n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authenticated\n                            \n                            \n                                    Public\n                                createConfigButtonState\n                            \n                            \n                                    Public\n                                loaded\n                            \n                            \n                                    Private\n                                loaderRemoved\n                            \n                            \n                                    Private\n                                openConfigModal\n                            \n                            \n                                    Public\n                                openConfigModal$\n                            \n                            \n                                    Public\n                                rlaSafe\n                            \n                            \n                                    Public\n                                tabLinks\n                            \n                            \n                                    Public\n                                tabsEnabled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRouteState\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                openConfigModalFunc\n                            \n                            \n                                signIn\n                            \n                            \n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(google: GoogleService, router: Router, zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:49\n                            \n                        \n\n                \n                    \n                            Creates an instance of AppComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        google\n                                                  \n                                                        \n                                                                    GoogleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Declare the Google Service as google\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Declare the Router as router\n\n                                                        \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Declare NgZone as zon\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRouteState\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRouteState(outlet: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:150\n                            \n                        \n\n\n                \n                    \n                            Gets the current route information.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        outlet\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The route\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:108\n                            \n                        \n\n\n                \n                    \n                            Called after the view is initalized.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openConfigModalFunc\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenConfigModalFunc()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:139\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signIn\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignIn()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:135\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:131\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authenticated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authenticated:     Boolean\n\n                    \n                \n                    \n                        \n                            Type :     Boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            createConfigButtonState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        createConfigButtonState:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'inactive'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loaded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loaded:     Boolean\n\n                    \n                \n                    \n                        \n                            Type :     Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loaderRemoved\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loaderRemoved:     Boolean\n\n                    \n                \n                    \n                        \n                            Type :     Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            openConfigModal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        openConfigModal:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            openConfigModal$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        openConfigModal$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.openConfigModal.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rlaSafe\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rlaSafe:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tabLinks\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tabLinks:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      path: 'app/home',\n      label: 'Home'\n    },\n    {\n      path: 'app/config',\n      label: 'Configuration'\n    },\n    {\n      path: 'app/settings',\n      label: 'Settings'\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tabsEnabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tabsEnabled:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { AfterViewInit, Component, NgZone } from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { fabAnimation, routerAnimation } from '../animations';\nimport { GoogleService } from './services/google/google.service';\nimport { NavigationEnd, NavigationStart, Router } from '@angular/router';\n\n/**\n * Workaround for testing\n */\ndeclare var gapi: any;\n\n/**\n * Base application component.\n *\n * @export\n * @class AppComponent\n * @implements {AfterViewInit}\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  providers: [GoogleService],\n  animations: [routerAnimation, fabAnimation]\n})\nexport class AppComponent implements AfterViewInit {\n  private openConfigModal: Subject = new Subject();\n  private loaderRemoved: Boolean = false;\n\n  public tabsEnabled = true;\n  public loaded: Boolean = false;\n  public authenticated: Boolean;\n  public rlaSafe: boolean = false;\n  public createConfigButtonState: string = 'inactive';\n  public openConfigModal$ = this.openConfigModal.asObservable();\n  public tabLinks = [\n    {\n      path: 'app/home',\n      label: 'Home'\n    },\n    {\n      path: 'app/config',\n      label: 'Configuration'\n    },\n    {\n      path: 'app/settings',\n      label: 'Settings'\n    }\n  ];\n\n  /**\n   * Creates an instance of AppComponent.\n   * @param {GoogleService} google Declare the Google Service as google\n   * @param {Router} router Declare the Router as router\n   * @param {NgZone} zone  Declare NgZone as zon\n   * @memberof AppComponent\n   */\n  constructor(\n    private google: GoogleService,\n    private router: Router,\n    private zone: NgZone\n  ) {\n    const googleInitInterval = setInterval(() => {\n      if (window['gapi']) {\n        this.google.init(\n          {\n            apiKey: 'AIzaSyB-yE9IXT29Vl_eAU7bzvzv5Qe17flfpzM',\n            clientId:\n              '362606538820-om1dhhvv5d9npas7jj02mbtvi5mjksmo.apps.googleusercontent.com',\n            discoveryDocs: [\n              'https://www.googleapis.com/discovery/v1/apis/drive/v3/rest'\n            ],\n            scope: 'https://www.googleapis.com/auth/drive'\n          },\n          () => {\n            console.debug('Google initalized.');\n          }\n        );\n        this.google.authState$.subscribe(state => {\n          if (!this.loaderRemoved) {\n            this.loaded = true;\n            setTimeout(() => {\n              document.getElementById('loader').remove();\n              this.loaderRemoved = true;\n            }, 500);\n          }\n          this.authenticated = state;\n          if (state) {\n            this.zone.run(() => {\n              this.router.navigate(['/app/home']);\n            });\n          } else {\n            this.zone.run(() => {\n              this.router.navigate(['/']);\n            });\n          }\n        });\n        clearInterval(googleInitInterval);\n      }\n    }, 250);\n  }\n\n  /**\n   * Called after the view is initalized.\n   *\n   * @memberof AppComponent\n   */\n  public ngAfterViewInit() {\n    this.rlaSafe = true;\n    // Listen for route changes\n    this.router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        if (event.url === '/app/config') {\n          this.createConfigButtonState = 'active';\n        } else {\n          this.createConfigButtonState = 'inactive';\n        }\n        if (\n          event.url === '/app/config/create' ||\n          event.url === '/app/config/presets' ||\n          event.url === '/app/config/edit'\n        ) {\n          this.tabsEnabled = false;\n        } else {\n          this.tabsEnabled = true;\n        }\n      }\n    });\n  }\n\n  signOut() {\n    this.google.signOut();\n  }\n\n  signIn() {\n    this.google.signIn();\n  }\n\n  openConfigModalFunc() {\n    this.openConfigModal.next(true);\n  }\n\n  /**\n   * Gets the current route information.\n   *\n   * @param {any} outlet The route\n   * @returns\n   * @memberof AppComponent\n   */\n  getRouteState(outlet) {\n    return outlet.activatedRouteData.state;\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n    \n    \n  \n\n\n  \n    \n    \n      \n    \n    \n      \n        Sign Out\n      \n      \n        more_vert\n      \n      \n        Sign In\n      \n    \n  \n  \n    \n      \n        {{ link.label }}\n      \n    \n  \n\n\n  \n\n\n  add\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                          Sign Out                    more_vert                    Sign In                                {{ link.label }}                add'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'ConfigListComponent', 'selector': 'app-config-list'},{'name': 'ConfigModalComponent', 'selector': 'app-config-modal'},{'name': 'EditConfigModalComponent', 'selector': 'app-edit-config-modal'},{'name': 'EditConfigPageComponent', 'selector': 'app-edit-config-page'},{'name': 'FolderCreationComponent', 'selector': 'app-folder-creation'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NewConfigPageComponent', 'selector': 'app-new-rule-page'},{'name': 'NewRuleStepperComponent', 'selector': 'app-new-rule-stepper'},{'name': 'PresetConfigComponent', 'selector': 'app-preset-config'},{'name': 'PresetConfigPageComponent', 'selector': 'app-preset-config-page'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'UnauthenticatedComponent', 'selector': 'app-unauthenticated'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_AppComponent_providers\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nUnauthenticatedComponent\n\nUnauthenticatedComponent\n\nAppModule -->\n\nUnauthenticatedComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nGoogleService\n\nGoogleService\n\nAppComponent -->\n\nGoogleService->AppComponent\n\n\n\nAppModule -->\n\nGoogleService->AppModule\n\n\n\n\n\nAuthenticatedModule\n\nAuthenticatedModule\n\nAppModule -->\n\nAuthenticatedModule->AppModule\n\n\n\n\n\nConfigModule\n\nConfigModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nAuthGuardService\n\nAuthGuardService\n\nAppModule -->\n\nAuthGuardService->AppModule\n\n\n\n\n\nPreventAuthGuardService\n\nPreventAuthGuardService\n\nAppModule -->\n\nPreventAuthGuardService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                UnauthenticatedComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthGuardService\n                            \n                            \n                                     GoogleService\n                            \n                            \n                                     PreventAuthGuardService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AuthenticatedModule\n                            \n                            \n                                    ConfigModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { AngularFireAuthModule } from 'angularfire2/auth';\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\nimport { AppComponent } from './app.component';\nimport { appRoutes } from './app.routes';\nimport { AuthenticatedModule } from './modules/authenticated/authenticated.module';\nimport { AuthGuardService, PreventAuthGuardService } from './services/auth/auth-guard.service';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ConfigModule } from './modules/config/config.module';\nimport { environment } from '../environments/environment.prod';\nimport { FolderCreationComponent } from './components/shared/folder-creation/folder-creation.component';\nimport { GoogleService } from './services/google/google.service';\nimport { MatButtonModule } from '@angular/material/button';\nimport {\n  MatDialogModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatInputModule,\n  MatStepperModule,\n  MatToolbarModule\n  } from '@angular/material';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { NgModule } from '@angular/core';\nimport { ParallaxConfig, ParallaxModule } from 'ngx-parallax';\nimport { RouterModule, Routes } from '@angular/router';\nimport { UnauthenticatedComponent } from './components/auth/unauthenticated/unauthenticated.component';\n\n@NgModule({\n  declarations: [AppComponent, UnauthenticatedComponent],\n  imports: [\n    BrowserModule,\n    MatMenuModule,\n    MatIconModule,\n    MatTabsModule,\n    ParallaxModule,\n    MatInputModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatToolbarModule,\n    RouterModule.forRoot(appRoutes),\n    AngularFireAuthModule,\n    AngularFirestoreModule,\n    ConfigModule.forRoot(),\n    BrowserAnimationsModule,\n    AuthenticatedModule.forRoot(),\n    AngularFireModule.initializeApp(environment.firebase)\n  ],\n  providers: [\n    GoogleService,\n    AuthGuardService,\n    PreventAuthGuardService,\n    AppComponent\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuardService.html":{"url":"injectables/AuthGuardService.html","title":"injectable - AuthGuardService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth/auth-guard.service.ts\n        \n\n            \n                Description\n            \n            \n                Prevent a user from accessing a route if they aren't authenticated.\n\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                google\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                zone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(google: GoogleService, router: Router, zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth/auth-guard.service.ts:13\n                            \n                        \n\n                \n                    \n                            Creates an instance of AuthGuardService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        google\n                                                  \n                                                        \n                                                                    GoogleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Declare the Google Service as google.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Declare the Router as router\n\n                                                        \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Declare NgZone as zone\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth/auth-guard.service.ts:28\n                            \n                        \n\n\n                \n                    \n                            Determines whether the user can go to the page and handle it.\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Whether or not the user can access the route\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            google\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        google:     GoogleService\n\n                    \n                \n                    \n                        \n                            Type :     GoogleService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth/auth-guard.service.ts:21\n                            \n                        \n\n                \n                    \n                        Declare the Google Service as google.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth/auth-guard.service.ts:21\n                            \n                        \n\n                \n                    \n                        Declare the Router as router\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            zone\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zone:     NgZone\n\n                    \n                \n                    \n                        \n                            Type :     NgZone\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth/auth-guard.service.ts:21\n                            \n                        \n\n                \n                    \n                        Declare NgZone as zone\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { CanActivate, Router } from '@angular/router';\nimport { GoogleService } from '../google/google.service';\nimport { Injectable, NgZone } from '@angular/core';\n\n/**\n * Prevent a user from accessing a route if they aren't authenticated.\n * \n * @export\n * @class AuthGuardService\n * @implements {CanActivate}\n */\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n/**\n * Creates an instance of AuthGuardService.\n * @param {GoogleService} google Declare the Google Service as google.\n * @param {Router} router Declare the Router as router\n * @param {NgZone} zone Declare NgZone as zone\n * @memberof AuthGuardService\n */\nconstructor(public google: GoogleService, public router: Router, public zone: NgZone) { }\n  /**\n   * Determines whether the user can go to the page and handle it.\n   * \n   * @returns {boolean} Whether or not the user can access the route\n   * @memberof AuthGuardService\n   */\n  canActivate(): boolean {\n    if (this.google.getAuthStatus()) {\n      return true;\n    }\n    this.zone.run(() => {\n      this.router.navigate(['/']);\n    });\n    return false;\n  }\n}\n\n/**\n * Prevent a user from accessing a route if they are authenticated.\n * \n * @export\n * @class PreventAuthGuardService\n * @implements {CanActivate}\n */\n@Injectable()\nexport class PreventAuthGuardService implements CanActivate {\n/**\n * Creates an instance of PreventAuthGuardService.\n * @param {GoogleService} google Declare the Google Service as google.\n * @param {Router} router Declare the Router as router\n * @param {NgZone} zone Declare NgZone as zone\n * @memberof PreventAuthGuardService\n */\nconstructor(public google: GoogleService, public router: Router, public zone: NgZone) { }\n  /**\n   * Determines whether the user can go to the page and handle it.\n   * \n   * @returns {boolean} Whether or not the user can access the route\n   * @memberof PreventAuthGuardService\n   */\n  canActivate(): boolean {\n    if (!this.google.getAuthStatus()) {\n      return true;\n    }\n    this.zone.run(() => {\n      this.router.navigate(['/app/home']);\n    });\n    return false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthenticatedModule.html":{"url":"modules/AuthenticatedModule.html","title":"module - AuthenticatedModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthenticatedModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthenticatedModule\n\n\n\ncluster_AuthenticatedModule_declarations\n\n\n\ncluster_AuthenticatedModule_imports\n\n\n\ncluster_AuthenticatedModule_exports\n\n\n\ncluster_AuthenticatedModule_providers\n\n\n\n\nConfigComponent\n\nConfigComponent\n\n\n\nAuthenticatedModule\n\nAuthenticatedModule\n\nAuthenticatedModule -->\n\nConfigComponent->AuthenticatedModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAuthenticatedModule -->\n\nHomeComponent->AuthenticatedModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nAuthenticatedModule -->\n\nSettingsComponent->AuthenticatedModule\n\n\n\n\n\nConfigComponent \n\nConfigComponent \n\nConfigComponent  -->\n\nAuthenticatedModule->ConfigComponent \n\n\n\n\n\nConfigModule\n\nConfigModule\n\nAuthenticatedModule -->\n\nConfigModule->AuthenticatedModule\n\n\n\n\n\nDatabaseService\n\nDatabaseService\n\nAuthenticatedModule -->\n\nDatabaseService->AuthenticatedModule\n\n\n\n\n\nSorterService\n\nSorterService\n\nAuthenticatedModule -->\n\nSorterService->AuthenticatedModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/authenticated/authenticated.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Handles all authenticated components\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ConfigComponent\n                            \n                            \n                                HomeComponent\n                            \n                            \n                                SettingsComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     DatabaseService\n                            \n                            \n                                     SorterService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ConfigModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ConfigComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ConfigComponent } from '../../components/tabs/config/config.component';\nimport { ConfigListComponent } from '../../components/tabs/config/config-list/config-list.component';\nimport { ConfigModalComponent } from '../../components/shared/config-modal/config-modal.component';\nimport { ConfigModule } from '../config/config.module';\nimport { DatabaseService } from '../../services/firebase/database.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HomeComponent } from '../../components/tabs/home/home.component';\nimport {\n  MatButtonModule,\n  MatCardModule,\n  MatDatepicker,\n  MatDatepickerModule,\n  MatDialogContent,\n  MatDialogModule,\n  MatExpansionModule,\n  MatFormFieldModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatSelectModule,\n  MatSnackBarModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTooltipModule\n  } from '@angular/material';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { SettingsComponent } from '../../components/tabs/settings/settings.component';\nimport { SorterService } from '../../services/sorter/sorter.service';\n\n/**\n * Handles all authenticated components\n *\n * @export\n * @class AuthenticatedModule\n */\n@NgModule({\n  declarations: [HomeComponent, ConfigComponent, SettingsComponent],\n  imports: [\n    FormsModule,\n    CommonModule,\n    MatIconModule,\n    MatListModule,\n    MatCardModule,\n    MatInputModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    ReactiveFormsModule,\n    ConfigModule.forRoot()\n  ],\n  providers: [DatabaseService, SorterService],\n  exports: [ConfigComponent]\n})\nexport class AuthenticatedModule {\n  /**\n   * Register with the root module of the app\n   *\n   * @static\n   * @returns {ModuleWithProviders} This module\n   * @memberof AuthenticatedModule\n   */\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: AuthenticatedModule,\n      providers: []\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Config.html":{"url":"interfaces/Config.html","title":"interface - Config","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Config\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/tabs/config/config-list/config-list.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        key\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AngularFireAuth } from 'angularfire2/auth';\nimport {\n  AngularFirestore,\n  AngularFirestoreCollection\n} from 'angularfire2/firestore';\nimport { BehaviorSubject } from 'rxjs';\nimport { Component, NgZone, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ConfigComponent } from '../config.component';\nimport { createDirective } from '@angular/compiler/src/core';\nimport { DatabaseService } from '../../../../services/firebase/database.service';\nimport { DataSource } from '@angular/cdk/collections';\nimport { EditConfigModalComponent } from '../../../shared/edit-config-modal/edit-config-modal.component';\nimport {\n  MatDialog,\n  MatPaginator,\n  MatTable,\n  MatTableDataSource\n} from '@angular/material';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { PresetConfigComponent } from '../preset-config/preset-config.component';\n\nexport interface Config {\n  name: String;\n  key: String;\n}\n\n@Component({\n  selector: 'app-config-list',\n  templateUrl: './config-list.component.html',\n  styleUrls: ['./config-list.component.scss']\n})\nexport class ConfigListComponent implements OnInit, OnDestroy {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  private userID: string;\n  private configCollection;\n  private activeConfig: string;\n  private oldPageSize: number = 10;\n  private loadingSubscription: Subscription;\n  private paginatorSubscription: Subscription;\n  private configChangeSubscription: Subscription;\n  private activeConfigChangeSubscription: Subscription;\n\n  public loading: boolean = true;\n  public noConfigs: boolean = true;\n  public dataSource: ConfigDataSource;\n  public tableColumns = ['name', 'actions'];\n\n  constructor(\n    private firebaseAuth: AngularFireAuth,\n    private firebase: AngularFirestore,\n    private database: DatabaseService,\n    private dialog: MatDialog,\n    private router: Router,\n    private zone: NgZone\n  ) {}\n\n  ngOnInit() {\n    if (this.firebaseAuth.auth.currentUser) {\n      this.userID = this.firebaseAuth.auth.currentUser.uid;\n      this.configCollection = this.firebase\n        .doc(`users/${this.userID}`)\n        .collection('configs');\n      this.dataSource = new ConfigDataSource(\n        this.configCollection,\n        this.paginator\n      );\n      this.database.numberConfigs(numConfigs => {\n        if (numConfigs === 0) {\n          this.noConfigs = true;\n        } else {\n          this.noConfigs = false;\n        }\n      });\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.firebaseAuth.auth.currentUser) {\n      // Listen for page changes\n      this.paginatorSubscription = this.paginator.page.subscribe(() => {\n        if (this.oldPageSize == this.paginator.pageSize) {\n          this.dataSource.loadConfigs(\n            this.paginator.pageIndex,\n            this.paginator.pageSize\n          );\n        } else {\n          this.dataSource.loadConfigs(0, this.paginator.pageSize);\n          this.oldPageSize = this.paginator.pageSize;\n          this.paginator.pageIndex = 0;\n        }\n      });\n      // Load the configurations\n      this.dataSource.loadConfigs();\n      // Pass the number of configs to the paginator\n      this.database.numberConfigs(numConfigs => {\n        this.paginator.length = numConfigs;\n      });\n      // Listen for config changes\n      this.configChangeSubscription = this.database.configSubject.subscribe(\n        created => {\n          this.refreshConfigs();\n        }\n      );\n      // Retrive the active config\n      this.database.getActiveConfig(activeConfig => {\n        this.activeConfig = activeConfig;\n      });\n      // Listen for active config changes\n      this.activeConfigChangeSubscription = this.database.activeConfigChanged.subscribe(\n        newConfigID => {\n          this.activeConfig = newConfigID;\n        },\n        err => console.error\n      );\n      setTimeout(_ => {\n        // Listen for loading state changes\n        this.loadingSubscription = this.dataSource.loading$.subscribe(\n          loading => {\n            this.loading = loading;\n          }\n        );\n      });\n    }\n  }\n\n  getDialogWidth() {\n    const width: number = document.body.clientWidth;\n    if (width >= 1280) {\n      return width / 2;\n    } else if (width >= 640) {\n      return width / 1.5;\n    } else {\n      return 0;\n    }\n  }\n\n  openPresets() {\n    let dialogWidth = this.getDialogWidth();\n    if (dialogWidth) {\n      const dialogInstance = this.dialog.open(PresetConfigComponent, {\n        width: `${dialogWidth}px`,\n        maxHeight: `${document.body.clientHeight * 0.9}px`\n      });\n      const componentInstance = dialogInstance.componentInstance;\n      let closeSubscription = componentInstance.closeCommand.subscribe(\n        close => {\n          dialogInstance.close();\n          closeSubscription.unsubscribe();\n        }\n      );\n    } else {\n      this.zone.run(() => {\n        this.router.navigate(['/app/config/presets']);\n      });\n    }\n  }\n\n  refreshConfigs() {\n    this.dataSource.loadConfigs();\n    this.database.numberConfigs(numConfigs => {\n      if (numConfigs === 0) {\n        this.noConfigs = true;\n      } else {\n        this.noConfigs = false;\n      }\n    });\n  }\n\n  editConfig(configID: string) {\n    this.database.editingConfig = configID;\n    let dialogWidth = this.getDialogWidth();\n    if (dialogWidth) {\n      const dialogInstance = this.dialog.open(EditConfigModalComponent, {\n        width: `${dialogWidth}px`,\n        maxHeight: `${document.body.clientHeight * 0.9}px`\n      });\n      const componentInstance = dialogInstance.componentInstance;\n      let closeSubscription = componentInstance.closeCommand.subscribe(\n        close => {\n          dialogInstance.close();\n          closeSubscription.unsubscribe();\n        }\n      );\n    } else {\n      this.zone.run(() => {\n        this.router.navigate(['/app/config/edit']);\n      });\n    }\n  }\n\n  deleteConfig(configKey: string) {\n    if (configKey === this.activeConfig) {\n      this.setActiveConfig('');\n    }\n    this.database.deleteConfig(configKey);\n  }\n\n  setActiveConfig(configKey: string) {\n    this.database.setActiveConfig(configKey);\n  }\n\n  getActiveConfig(configKey: string): boolean {\n    return this.activeConfig === configKey ? true : false;\n  }\n\n  ngOnDestroy() {\n    this.loadingSubscription.unsubscribe();\n    this.paginatorSubscription.unsubscribe();\n    this.configChangeSubscription.unsubscribe();\n    this.activeConfigChangeSubscription.unsubscribe();\n  }\n}\n\nexport class ConfigDataSource implements DataSource {\n  private configSubject = new BehaviorSubject([]);\n\n  private loadingSubject = new BehaviorSubject(true);\n  public loading$ = this.loadingSubject.asObservable();\n\n  constructor(private configCollection, private paginator) {}\n\n  private calculateStart(page: number, pageSize: number): number {\n    return page ? page * pageSize : 0;\n  }\n\n  connect(): Observable {\n    return this.configSubject.asObservable();\n  }\n\n  disconnect(): void {\n    this.configSubject.complete();\n    this.loadingSubject.complete();\n  }\n\n  loadConfigs(page: number = 0, pageSize: number = 10) {\n    this.loadingSubject.next(true);\n    this.configCollection.ref\n      .orderBy('name')\n      .startAt(this.calculateStart(page, pageSize))\n      .limit(pageSize)\n      .get()\n      .then(snapshot => {\n        const configs = snapshot.docs;\n        let data = [];\n        for (const config in configs) {\n          const name = configs[config].data()['name'];\n          data.push({\n            name: name,\n            key: configs[config].id\n          });\n        }\n        this.configSubject.next(data);\n        this.loadingSubject.next(false);\n      }, err => console.error);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigBuilder.html":{"url":"classes/ConfigBuilder.html","title":"class - ConfigBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/config-builder.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                addGroup\n                            \n                            \n                                    Static\n                                configFromGroup\n                            \n                            \n                                    Static\n                                folderNameBuilder\n                            \n                            \n                                    Static\n                                generateNewConfig\n                            \n                            \n                                    Static\n                                verifyConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            addGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addGroup(config: ConfigsInterface, newGroupName: string, newGroupDestination: GroupFolderInterface, newGroupSource: GroupFolderInterface, firstGroupRule: RuleInterface)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/config-builder.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    ConfigsInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        newGroupName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        newGroupDestination\n                                                        \n                                                                    GroupFolderInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        newGroupSource\n                                                        \n                                                                    GroupFolderInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        firstGroupRule\n                                                        \n                                                                    RuleInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ConfigsInterface\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            configFromGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        configFromGroup(groups: , name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/config-builder.ts:121\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        groups\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ConfigsInterface\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            folderNameBuilder\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        folderNameBuilder(createFolderConfig: FolderCreation)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/config-builder.ts:92\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createFolderConfig\n                                                        \n                                                                    FolderCreation\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            generateNewConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        generateNewConfig(configName: string, firstGroupName: string, sourceFolder: GroupFolderInterface, destinationFolder: GroupFolderInterface, createFolder: FolderCreation, firstGroupRule: RuleInterface)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/config-builder.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        firstGroupName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        sourceFolder\n                                                        \n                                                                    GroupFolderInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        destinationFolder\n                                                        \n                                                                    GroupFolderInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        createFolder\n                                                        \n                                                                    FolderCreation\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        firstGroupRule\n                                                        \n                                                                    RuleInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ConfigsInterface\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            verifyConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        verifyConfig(config: ConfigsInterface)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/config-builder.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    ConfigsInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ConfigInterface,\n  ConfigsInterface,\n  GroupFolderInterface,\n  RuleInterface,\n  FolderCreation\n} from '../../interfaces';\nimport { v4 as uuid } from 'uuid';\n\nexport class ConfigBuilder {\n  static generateNewConfig(\n    configName: string,\n    firstGroupName: string,\n    sourceFolder: GroupFolderInterface,\n    destinationFolder: GroupFolderInterface,\n    createFolder: FolderCreation,\n    firstGroupRule: RuleInterface\n  ): ConfigsInterface {\n    const configHolder: ConfigsInterface = {\n      name: configName,\n      groups: [\n        {\n          id: uuid(),\n          name: firstGroupName,\n          source: sourceFolder,\n          rules: [firstGroupRule]\n        }\n      ],\n      id: uuid()\n    };\n    if (createFolder) {\n      configHolder.groups[0].createFolder = createFolder;\n    } else {\n      configHolder.groups[0].destination = destinationFolder;\n    }\n    return configHolder;\n  }\n\n  static addGroup(\n    config: ConfigsInterface,\n    newGroupName: string,\n    newGroupDestination: GroupFolderInterface,\n    newGroupSource: GroupFolderInterface,\n    firstGroupRule: RuleInterface\n  ): ConfigsInterface {\n    const localConfig: ConfigsInterface = config;\n    localConfig.groups.push({\n      id: uuid(),\n      name: newGroupName,\n      source: newGroupSource,\n      destination: newGroupDestination,\n      rules: [firstGroupRule]\n    });\n    return localConfig;\n  }\n\n  static verifyConfig(config: ConfigsInterface): boolean {\n    let valid = true;\n    // Check if config has name and groups\n    if (!config.name || !config.groups || config.name.length  {\n      if (\n        !group.id ||\n        !group.source.folderID ||\n        !group.name ||\n        !group.rules ||\n        group.name.length  {\n        if (\n          !rule.classifier ||\n          !rule.constraint ||\n          !rule.data ||\n          !rule.id ||\n          !rule.name ||\n          rule.name.length \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfigComponent.html":{"url":"components/ConfigComponent.html","title":"component - ConfigComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfigComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tabs/config/config.component.ts\n\n\n    \n        Description\n    \n    \n        Declare component to be shown when the config tab is selected.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-config\n            \n\n            \n                styleUrls\n                config.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./config.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                initalized\n                            \n                            \n                                    Private\n                                openConfigModalListener\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getDialogWidth\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openNewConfigDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(appComponent: AppComponent, dialog: MatDialog, router: Router, zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tabs/config/config.component.ts:24\n                            \n                        \n\n                \n                    \n                            Creates an instance of ConfigComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appComponent\n                                                  \n                                                        \n                                                                    AppComponent\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getDialogWidth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getDialogWidth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openNewConfigDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenNewConfigDialog()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config.component.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            initalized\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        initalized:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            openConfigModalListener\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        openConfigModalListener:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, NgZone, OnInit, AfterViewInit, OnDestroy } from '@angular/core';\nimport { ConfigModalComponent } from '../../shared/config-modal/config-modal.component';\nimport { MatDialog } from '@angular/material';\nimport { RepositionScrollStrategy } from '@angular/cdk/overlay';\nimport { Router } from '@angular/router';\nimport { AppComponent } from '../../../app.component';\nimport { Subscription } from 'rxjs';\n/**\n * Declare component to be shown when the config tab is selected.\n * \n * @export\n * @class ConfigComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-config',\n  templateUrl: './config.component.html',\n  styleUrls: ['./config.component.scss'],\n})\nexport class ConfigComponent implements OnInit, AfterViewInit, OnDestroy {\n\n  public initalized: boolean = false;\n\n  private openConfigModalListener: Subscription;\n  \n  /**\n   * Creates an instance of ConfigComponent.\n   * @memberof ConfigComponent\n   */\n  constructor(\n    private appComponent: AppComponent,\n    private dialog: MatDialog, \n    private router: Router, \n    private zone: NgZone\n  ) { }\n\n  ngOnInit() {\n    this.openConfigModalListener = \n      this.appComponent.openConfigModal$.subscribe(open => {\n        if (open === true) {\n          this.openNewConfigDialog();\n        }\n      });\n  }\n\n  ngAfterViewInit() {\n    this.initalized = true;\n  }\n\n  ngOnDestroy() {\n    this.openConfigModalListener.unsubscribe();\n  }\n\n  public getDialogWidth() {\n    const width: number = document.body.clientWidth;\n    if (width >= 1280) {\n      return (width / 2);\n    } else if (width >= 640) {\n      return (width / 1.5);\n    } else {\n      return 0;\n    }\n  }\n\n  openNewConfigDialog() {\n    let dialogWidth = this.getDialogWidth();\n    if (dialogWidth) {\n      const dialogInstance = this.dialog.open(ConfigModalComponent, {\n        width: `${dialogWidth}px`,\n        maxHeight: `${document.body.clientHeight * .9}px`\n      });\n      const componentInstance = dialogInstance.componentInstance;\n      let dialogSubscription = \n        componentInstance\n          .closeCommand\n          .subscribe(close => {\n            dialogInstance.close();\n            dialogSubscription.unsubscribe();\n          });\n    } else {\n      this.zone.run(() => {\n        this.router.navigate(['/app/config/create']);\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'ConfigListComponent', 'selector': 'app-config-list'},{'name': 'ConfigModalComponent', 'selector': 'app-config-modal'},{'name': 'EditConfigModalComponent', 'selector': 'app-edit-config-modal'},{'name': 'EditConfigPageComponent', 'selector': 'app-edit-config-page'},{'name': 'FolderCreationComponent', 'selector': 'app-folder-creation'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NewConfigPageComponent', 'selector': 'app-new-rule-page'},{'name': 'NewRuleStepperComponent', 'selector': 'app-new-rule-stepper'},{'name': 'PresetConfigComponent', 'selector': 'app-preset-config'},{'name': 'PresetConfigPageComponent', 'selector': 'app-preset-config-page'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'UnauthenticatedComponent', 'selector': 'app-unauthenticated'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfigComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigDataSource.html":{"url":"classes/ConfigDataSource.html","title":"class - ConfigDataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigDataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/tabs/config/config-list/config-list.component.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        DataSource\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                configSubject\n                            \n                            \n                                    Public\n                                loading$\n                            \n                            \n                                    Private\n                                loadingSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                calculateStart\n                            \n                            \n                                connect\n                            \n                            \n                                disconnect\n                            \n                            \n                                loadConfigs\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configCollection: , paginator: )\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tabs/config/config-list/config-list.component.ts:221\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configCollection\n                                                  \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        paginator\n                                                  \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            configSubject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        configSubject:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject([])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:218\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loading$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loading$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.loadingSubject.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:221\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadingSubject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadingSubject:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(true)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:220\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            calculateStart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        calculateStart(page: number, pageSize: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:225\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        pageSize\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            connect\n                            \n                            \n                        \n                    \n                \n                \n                    \nconnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:229\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disconnect\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisconnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:233\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadConfigs\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadConfigs(page: number, pageSize: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:238\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                0\n                                                        \n\n                                                \n                                                \n                                                        pageSize\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                10\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { AngularFireAuth } from 'angularfire2/auth';\nimport {\n  AngularFirestore,\n  AngularFirestoreCollection\n} from 'angularfire2/firestore';\nimport { BehaviorSubject } from 'rxjs';\nimport { Component, NgZone, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ConfigComponent } from '../config.component';\nimport { createDirective } from '@angular/compiler/src/core';\nimport { DatabaseService } from '../../../../services/firebase/database.service';\nimport { DataSource } from '@angular/cdk/collections';\nimport { EditConfigModalComponent } from '../../../shared/edit-config-modal/edit-config-modal.component';\nimport {\n  MatDialog,\n  MatPaginator,\n  MatTable,\n  MatTableDataSource\n} from '@angular/material';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { PresetConfigComponent } from '../preset-config/preset-config.component';\n\nexport interface Config {\n  name: String;\n  key: String;\n}\n\n@Component({\n  selector: 'app-config-list',\n  templateUrl: './config-list.component.html',\n  styleUrls: ['./config-list.component.scss']\n})\nexport class ConfigListComponent implements OnInit, OnDestroy {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  private userID: string;\n  private configCollection;\n  private activeConfig: string;\n  private oldPageSize: number = 10;\n  private loadingSubscription: Subscription;\n  private paginatorSubscription: Subscription;\n  private configChangeSubscription: Subscription;\n  private activeConfigChangeSubscription: Subscription;\n\n  public loading: boolean = true;\n  public noConfigs: boolean = true;\n  public dataSource: ConfigDataSource;\n  public tableColumns = ['name', 'actions'];\n\n  constructor(\n    private firebaseAuth: AngularFireAuth,\n    private firebase: AngularFirestore,\n    private database: DatabaseService,\n    private dialog: MatDialog,\n    private router: Router,\n    private zone: NgZone\n  ) {}\n\n  ngOnInit() {\n    if (this.firebaseAuth.auth.currentUser) {\n      this.userID = this.firebaseAuth.auth.currentUser.uid;\n      this.configCollection = this.firebase\n        .doc(`users/${this.userID}`)\n        .collection('configs');\n      this.dataSource = new ConfigDataSource(\n        this.configCollection,\n        this.paginator\n      );\n      this.database.numberConfigs(numConfigs => {\n        if (numConfigs === 0) {\n          this.noConfigs = true;\n        } else {\n          this.noConfigs = false;\n        }\n      });\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.firebaseAuth.auth.currentUser) {\n      // Listen for page changes\n      this.paginatorSubscription = this.paginator.page.subscribe(() => {\n        if (this.oldPageSize == this.paginator.pageSize) {\n          this.dataSource.loadConfigs(\n            this.paginator.pageIndex,\n            this.paginator.pageSize\n          );\n        } else {\n          this.dataSource.loadConfigs(0, this.paginator.pageSize);\n          this.oldPageSize = this.paginator.pageSize;\n          this.paginator.pageIndex = 0;\n        }\n      });\n      // Load the configurations\n      this.dataSource.loadConfigs();\n      // Pass the number of configs to the paginator\n      this.database.numberConfigs(numConfigs => {\n        this.paginator.length = numConfigs;\n      });\n      // Listen for config changes\n      this.configChangeSubscription = this.database.configSubject.subscribe(\n        created => {\n          this.refreshConfigs();\n        }\n      );\n      // Retrive the active config\n      this.database.getActiveConfig(activeConfig => {\n        this.activeConfig = activeConfig;\n      });\n      // Listen for active config changes\n      this.activeConfigChangeSubscription = this.database.activeConfigChanged.subscribe(\n        newConfigID => {\n          this.activeConfig = newConfigID;\n        },\n        err => console.error\n      );\n      setTimeout(_ => {\n        // Listen for loading state changes\n        this.loadingSubscription = this.dataSource.loading$.subscribe(\n          loading => {\n            this.loading = loading;\n          }\n        );\n      });\n    }\n  }\n\n  getDialogWidth() {\n    const width: number = document.body.clientWidth;\n    if (width >= 1280) {\n      return width / 2;\n    } else if (width >= 640) {\n      return width / 1.5;\n    } else {\n      return 0;\n    }\n  }\n\n  openPresets() {\n    let dialogWidth = this.getDialogWidth();\n    if (dialogWidth) {\n      const dialogInstance = this.dialog.open(PresetConfigComponent, {\n        width: `${dialogWidth}px`,\n        maxHeight: `${document.body.clientHeight * 0.9}px`\n      });\n      const componentInstance = dialogInstance.componentInstance;\n      let closeSubscription = componentInstance.closeCommand.subscribe(\n        close => {\n          dialogInstance.close();\n          closeSubscription.unsubscribe();\n        }\n      );\n    } else {\n      this.zone.run(() => {\n        this.router.navigate(['/app/config/presets']);\n      });\n    }\n  }\n\n  refreshConfigs() {\n    this.dataSource.loadConfigs();\n    this.database.numberConfigs(numConfigs => {\n      if (numConfigs === 0) {\n        this.noConfigs = true;\n      } else {\n        this.noConfigs = false;\n      }\n    });\n  }\n\n  editConfig(configID: string) {\n    this.database.editingConfig = configID;\n    let dialogWidth = this.getDialogWidth();\n    if (dialogWidth) {\n      const dialogInstance = this.dialog.open(EditConfigModalComponent, {\n        width: `${dialogWidth}px`,\n        maxHeight: `${document.body.clientHeight * 0.9}px`\n      });\n      const componentInstance = dialogInstance.componentInstance;\n      let closeSubscription = componentInstance.closeCommand.subscribe(\n        close => {\n          dialogInstance.close();\n          closeSubscription.unsubscribe();\n        }\n      );\n    } else {\n      this.zone.run(() => {\n        this.router.navigate(['/app/config/edit']);\n      });\n    }\n  }\n\n  deleteConfig(configKey: string) {\n    if (configKey === this.activeConfig) {\n      this.setActiveConfig('');\n    }\n    this.database.deleteConfig(configKey);\n  }\n\n  setActiveConfig(configKey: string) {\n    this.database.setActiveConfig(configKey);\n  }\n\n  getActiveConfig(configKey: string): boolean {\n    return this.activeConfig === configKey ? true : false;\n  }\n\n  ngOnDestroy() {\n    this.loadingSubscription.unsubscribe();\n    this.paginatorSubscription.unsubscribe();\n    this.configChangeSubscription.unsubscribe();\n    this.activeConfigChangeSubscription.unsubscribe();\n  }\n}\n\nexport class ConfigDataSource implements DataSource {\n  private configSubject = new BehaviorSubject([]);\n\n  private loadingSubject = new BehaviorSubject(true);\n  public loading$ = this.loadingSubject.asObservable();\n\n  constructor(private configCollection, private paginator) {}\n\n  private calculateStart(page: number, pageSize: number): number {\n    return page ? page * pageSize : 0;\n  }\n\n  connect(): Observable {\n    return this.configSubject.asObservable();\n  }\n\n  disconnect(): void {\n    this.configSubject.complete();\n    this.loadingSubject.complete();\n  }\n\n  loadConfigs(page: number = 0, pageSize: number = 10) {\n    this.loadingSubject.next(true);\n    this.configCollection.ref\n      .orderBy('name')\n      .startAt(this.calculateStart(page, pageSize))\n      .limit(pageSize)\n      .get()\n      .then(snapshot => {\n        const configs = snapshot.docs;\n        let data = [];\n        for (const config in configs) {\n          const name = configs[config].data()['name'];\n          data.push({\n            name: name,\n            key: configs[config].id\n          });\n        }\n        this.configSubject.next(data);\n        this.loadingSubject.next(false);\n      }, err => console.error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfigInterface.html":{"url":"interfaces/ConfigInterface.html","title":"interface - ConfigInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ConfigInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        activeConfig\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activeConfig\n                                    \n                                \n                                \n                                    \n                                        activeConfig:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AngularFirestoreCollection } from 'angularfire2/firestore';\n\nexport interface ConfigInterface {\n  activeConfig: string;\n}\n\nexport interface RuleInterface {\n  id: string;\n  name: string;\n  data?: any;\n  classifier?: string;\n  constraint?: string;\n}\n\nexport interface GroupFolderInterface {\n  name?: string;\n  folderID?: string;\n}\n\nexport interface GroupInterface {\n  id: string;\n  name: string;\n  rules: Array;\n  source: GroupFolderInterface;\n  destination?: GroupFolderInterface;\n  createFolder?: FolderCreation;\n}\n\nexport interface ConfigsInterface {\n  id: string;\n  name: string;\n  groups: Array;\n}\n\nexport interface UserDocument {\n  activeConfig: string;\n  configs: AngularFirestoreCollection;\n}\n\nexport interface FolderCreation {\n  parent: {\n    folderID: string | undefined;\n    name: string | null;\n  };\n  prefix: {\n    type: string | null;\n    value: string;\n  };\n  name: {\n    type: string | null;\n    value: string;\n  };\n  suffix: {\n    type: string | null;\n    value: string;\n  };\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfigListComponent.html":{"url":"components/ConfigListComponent.html","title":"component - ConfigListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfigListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tabs/config/config-list/config-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-config-list\n            \n\n            \n                styleUrls\n                config-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./config-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activeConfig\n                            \n                            \n                                    Private\n                                activeConfigChangeSubscription\n                            \n                            \n                                    Private\n                                configChangeSubscription\n                            \n                            \n                                    Private\n                                configCollection\n                            \n                            \n                                    Public\n                                dataSource\n                            \n                            \n                                    Public\n                                loading\n                            \n                            \n                                    Private\n                                loadingSubscription\n                            \n                            \n                                    Public\n                                noConfigs\n                            \n                            \n                                    Private\n                                oldPageSize\n                            \n                            \n                                paginator\n                            \n                            \n                                    Private\n                                paginatorSubscription\n                            \n                            \n                                    Public\n                                tableColumns\n                            \n                            \n                                    Private\n                                userID\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteConfig\n                            \n                            \n                                editConfig\n                            \n                            \n                                getActiveConfig\n                            \n                            \n                                getDialogWidth\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openPresets\n                            \n                            \n                                refreshConfigs\n                            \n                            \n                                setActiveConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseAuth: AngularFireAuth, firebase: AngularFirestore, database: DatabaseService, dialog: MatDialog, router: Router, zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tabs/config/config-list/config-list.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebase\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        database\n                                                  \n                                                        \n                                                                    DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteConfig(configKey: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:194\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configKey\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \neditConfig(configID: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:172\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getActiveConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetActiveConfig(configKey: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:205\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configKey\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDialogWidth\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDialogWidth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:129\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:209\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openPresets\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenPresets()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:140\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refreshConfigs\n                            \n                            \n                        \n                    \n                \n                \n                    \nrefreshConfigs()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:161\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setActiveConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetActiveConfig(configKey: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:201\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configKey\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            activeConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeConfig:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            activeConfigChangeSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeConfigChangeSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            configChangeSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        configChangeSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            configCollection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        configCollection:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dataSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dataSource:     ConfigDataSource\n\n                    \n                \n                    \n                        \n                            Type :     ConfigDataSource\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loading:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadingSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadingSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            noConfigs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        noConfigs:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            oldPageSize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        oldPageSize:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        paginator:     MatPaginator\n\n                    \n                \n                    \n                        \n                            Type :     MatPaginator\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            paginatorSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        paginatorSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tableColumns\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tableColumns:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['name', 'actions']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userID\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userID:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { AngularFireAuth } from 'angularfire2/auth';\nimport {\n  AngularFirestore,\n  AngularFirestoreCollection\n} from 'angularfire2/firestore';\nimport { BehaviorSubject } from 'rxjs';\nimport { Component, NgZone, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ConfigComponent } from '../config.component';\nimport { createDirective } from '@angular/compiler/src/core';\nimport { DatabaseService } from '../../../../services/firebase/database.service';\nimport { DataSource } from '@angular/cdk/collections';\nimport { EditConfigModalComponent } from '../../../shared/edit-config-modal/edit-config-modal.component';\nimport {\n  MatDialog,\n  MatPaginator,\n  MatTable,\n  MatTableDataSource\n} from '@angular/material';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { PresetConfigComponent } from '../preset-config/preset-config.component';\n\nexport interface Config {\n  name: String;\n  key: String;\n}\n\n@Component({\n  selector: 'app-config-list',\n  templateUrl: './config-list.component.html',\n  styleUrls: ['./config-list.component.scss']\n})\nexport class ConfigListComponent implements OnInit, OnDestroy {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  private userID: string;\n  private configCollection;\n  private activeConfig: string;\n  private oldPageSize: number = 10;\n  private loadingSubscription: Subscription;\n  private paginatorSubscription: Subscription;\n  private configChangeSubscription: Subscription;\n  private activeConfigChangeSubscription: Subscription;\n\n  public loading: boolean = true;\n  public noConfigs: boolean = true;\n  public dataSource: ConfigDataSource;\n  public tableColumns = ['name', 'actions'];\n\n  constructor(\n    private firebaseAuth: AngularFireAuth,\n    private firebase: AngularFirestore,\n    private database: DatabaseService,\n    private dialog: MatDialog,\n    private router: Router,\n    private zone: NgZone\n  ) {}\n\n  ngOnInit() {\n    if (this.firebaseAuth.auth.currentUser) {\n      this.userID = this.firebaseAuth.auth.currentUser.uid;\n      this.configCollection = this.firebase\n        .doc(`users/${this.userID}`)\n        .collection('configs');\n      this.dataSource = new ConfigDataSource(\n        this.configCollection,\n        this.paginator\n      );\n      this.database.numberConfigs(numConfigs => {\n        if (numConfigs === 0) {\n          this.noConfigs = true;\n        } else {\n          this.noConfigs = false;\n        }\n      });\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.firebaseAuth.auth.currentUser) {\n      // Listen for page changes\n      this.paginatorSubscription = this.paginator.page.subscribe(() => {\n        if (this.oldPageSize == this.paginator.pageSize) {\n          this.dataSource.loadConfigs(\n            this.paginator.pageIndex,\n            this.paginator.pageSize\n          );\n        } else {\n          this.dataSource.loadConfigs(0, this.paginator.pageSize);\n          this.oldPageSize = this.paginator.pageSize;\n          this.paginator.pageIndex = 0;\n        }\n      });\n      // Load the configurations\n      this.dataSource.loadConfigs();\n      // Pass the number of configs to the paginator\n      this.database.numberConfigs(numConfigs => {\n        this.paginator.length = numConfigs;\n      });\n      // Listen for config changes\n      this.configChangeSubscription = this.database.configSubject.subscribe(\n        created => {\n          this.refreshConfigs();\n        }\n      );\n      // Retrive the active config\n      this.database.getActiveConfig(activeConfig => {\n        this.activeConfig = activeConfig;\n      });\n      // Listen for active config changes\n      this.activeConfigChangeSubscription = this.database.activeConfigChanged.subscribe(\n        newConfigID => {\n          this.activeConfig = newConfigID;\n        },\n        err => console.error\n      );\n      setTimeout(_ => {\n        // Listen for loading state changes\n        this.loadingSubscription = this.dataSource.loading$.subscribe(\n          loading => {\n            this.loading = loading;\n          }\n        );\n      });\n    }\n  }\n\n  getDialogWidth() {\n    const width: number = document.body.clientWidth;\n    if (width >= 1280) {\n      return width / 2;\n    } else if (width >= 640) {\n      return width / 1.5;\n    } else {\n      return 0;\n    }\n  }\n\n  openPresets() {\n    let dialogWidth = this.getDialogWidth();\n    if (dialogWidth) {\n      const dialogInstance = this.dialog.open(PresetConfigComponent, {\n        width: `${dialogWidth}px`,\n        maxHeight: `${document.body.clientHeight * 0.9}px`\n      });\n      const componentInstance = dialogInstance.componentInstance;\n      let closeSubscription = componentInstance.closeCommand.subscribe(\n        close => {\n          dialogInstance.close();\n          closeSubscription.unsubscribe();\n        }\n      );\n    } else {\n      this.zone.run(() => {\n        this.router.navigate(['/app/config/presets']);\n      });\n    }\n  }\n\n  refreshConfigs() {\n    this.dataSource.loadConfigs();\n    this.database.numberConfigs(numConfigs => {\n      if (numConfigs === 0) {\n        this.noConfigs = true;\n      } else {\n        this.noConfigs = false;\n      }\n    });\n  }\n\n  editConfig(configID: string) {\n    this.database.editingConfig = configID;\n    let dialogWidth = this.getDialogWidth();\n    if (dialogWidth) {\n      const dialogInstance = this.dialog.open(EditConfigModalComponent, {\n        width: `${dialogWidth}px`,\n        maxHeight: `${document.body.clientHeight * 0.9}px`\n      });\n      const componentInstance = dialogInstance.componentInstance;\n      let closeSubscription = componentInstance.closeCommand.subscribe(\n        close => {\n          dialogInstance.close();\n          closeSubscription.unsubscribe();\n        }\n      );\n    } else {\n      this.zone.run(() => {\n        this.router.navigate(['/app/config/edit']);\n      });\n    }\n  }\n\n  deleteConfig(configKey: string) {\n    if (configKey === this.activeConfig) {\n      this.setActiveConfig('');\n    }\n    this.database.deleteConfig(configKey);\n  }\n\n  setActiveConfig(configKey: string) {\n    this.database.setActiveConfig(configKey);\n  }\n\n  getActiveConfig(configKey: string): boolean {\n    return this.activeConfig === configKey ? true : false;\n  }\n\n  ngOnDestroy() {\n    this.loadingSubscription.unsubscribe();\n    this.paginatorSubscription.unsubscribe();\n    this.configChangeSubscription.unsubscribe();\n    this.activeConfigChangeSubscription.unsubscribe();\n  }\n}\n\nexport class ConfigDataSource implements DataSource {\n  private configSubject = new BehaviorSubject([]);\n\n  private loadingSubject = new BehaviorSubject(true);\n  public loading$ = this.loadingSubject.asObservable();\n\n  constructor(private configCollection, private paginator) {}\n\n  private calculateStart(page: number, pageSize: number): number {\n    return page ? page * pageSize : 0;\n  }\n\n  connect(): Observable {\n    return this.configSubject.asObservable();\n  }\n\n  disconnect(): void {\n    this.configSubject.complete();\n    this.loadingSubject.complete();\n  }\n\n  loadConfigs(page: number = 0, pageSize: number = 10) {\n    this.loadingSubject.next(true);\n    this.configCollection.ref\n      .orderBy('name')\n      .startAt(this.calculateStart(page, pageSize))\n      .limit(pageSize)\n      .get()\n      .then(snapshot => {\n        const configs = snapshot.docs;\n        let data = [];\n        for (const config in configs) {\n          const name = configs[config].data()['name'];\n          data.push({\n            name: name,\n            key: configs[config].id\n          });\n        }\n        this.configSubject.next(data);\n        this.loadingSubject.next(false);\n      }, err => console.error);\n  }\n}\n\n    \n\n    \n        \n  Configuration's\n  \n    \n      list\n    \n    \n      refresh\n    \n  \n\n\n  \n\n\n  \n    \n    \n      Name\n      {{config.name}}\n    \n    \n      Actions\n      \n        \n          edit\n        \n        \n          settings_power\n        \n        \n          delete_forever\n        \n      \n    \n    \n    \n  \n  \n  \n  \n\nYou have no configurations try creating one!\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Configuration\\'s            list              refresh                        Name      {{config.name}}              Actions                        edit                          settings_power                          delete_forever                                  You have no configurations try creating one!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'ConfigListComponent', 'selector': 'app-config-list'},{'name': 'ConfigModalComponent', 'selector': 'app-config-modal'},{'name': 'EditConfigModalComponent', 'selector': 'app-edit-config-modal'},{'name': 'EditConfigPageComponent', 'selector': 'app-edit-config-page'},{'name': 'FolderCreationComponent', 'selector': 'app-folder-creation'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NewConfigPageComponent', 'selector': 'app-new-rule-page'},{'name': 'NewRuleStepperComponent', 'selector': 'app-new-rule-stepper'},{'name': 'PresetConfigComponent', 'selector': 'app-preset-config'},{'name': 'PresetConfigPageComponent', 'selector': 'app-preset-config-page'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'UnauthenticatedComponent', 'selector': 'app-unauthenticated'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfigListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigModule.html":{"url":"modules/ConfigModule.html","title":"module - ConfigModule","body":"\n                   \n\n\n\n\n  Modules\n  ConfigModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_declarations\n\n\n\ncluster_ConfigModule_imports\n\n\n\ncluster_ConfigModule_exports\n\n\n\n\nConfigListComponent\n\nConfigListComponent\n\n\n\nConfigModule\n\nConfigModule\n\nConfigModule -->\n\nConfigListComponent->ConfigModule\n\n\n\n\n\nConfigModalComponent\n\nConfigModalComponent\n\nConfigModule -->\n\nConfigModalComponent->ConfigModule\n\n\n\n\n\nEditConfigModalComponent\n\nEditConfigModalComponent\n\nConfigModule -->\n\nEditConfigModalComponent->ConfigModule\n\n\n\n\n\nEditConfigPageComponent\n\nEditConfigPageComponent\n\nConfigModule -->\n\nEditConfigPageComponent->ConfigModule\n\n\n\n\n\nFolderCreationComponent\n\nFolderCreationComponent\n\nConfigModule -->\n\nFolderCreationComponent->ConfigModule\n\n\n\n\n\nNewConfigPageComponent\n\nNewConfigPageComponent\n\nConfigModule -->\n\nNewConfigPageComponent->ConfigModule\n\n\n\n\n\nNewRuleStepperComponent\n\nNewRuleStepperComponent\n\nConfigModule -->\n\nNewRuleStepperComponent->ConfigModule\n\n\n\n\n\nPresetConfigComponent\n\nPresetConfigComponent\n\nConfigModule -->\n\nPresetConfigComponent->ConfigModule\n\n\n\n\n\nPresetConfigPageComponent\n\nPresetConfigPageComponent\n\nConfigModule -->\n\nPresetConfigPageComponent->ConfigModule\n\n\n\n\n\nUnNamedPipe\n\nUnNamedPipe\n\nConfigModule -->\n\nUnNamedPipe->ConfigModule\n\n\n\n\n\nConfigListComponent \n\nConfigListComponent \n\nConfigListComponent  -->\n\nConfigModule->ConfigListComponent \n\n\n\n\n\nConfigRoutingModule\n\nConfigRoutingModule\n\nConfigModule -->\n\nConfigRoutingModule->ConfigModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/config/config.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ConfigListComponent\n                            \n                            \n                                ConfigModalComponent\n                            \n                            \n                                EditConfigModalComponent\n                            \n                            \n                                EditConfigPageComponent\n                            \n                            \n                                FolderCreationComponent\n                            \n                            \n                                NewConfigPageComponent\n                            \n                            \n                                NewRuleStepperComponent\n                            \n                            \n                                PresetConfigComponent\n                            \n                            \n                                PresetConfigPageComponent\n                            \n                            \n                                UnNamedPipe\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                ConfigModalComponent\n                            \n                            \n                                EditConfigModalComponent\n                            \n                            \n                                PresetConfigComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ConfigRoutingModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ConfigListComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ConfigListComponent } from '../../components/tabs/config/config-list/config-list.component';\nimport { ConfigModalComponent } from '../../components/shared/config-modal/config-modal.component';\nimport { EditConfigModalComponent } from '../../components/shared/edit-config-modal/edit-config-modal.component';\nimport { EditConfigPageComponent } from '../../components/shared/edit-config-page/edit-config-page.component';\nimport { FolderCreationComponent } from '../../components/shared/folder-creation/folder-creation.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  MatButtonModule,\n  MatDatepickerModule,\n  MatExpansionModule,\n  MatFormFieldModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatNativeDateModule,\n  MatPaginator,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatSelectModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTooltipModule,\n  MatCardModule\n  } from '@angular/material';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { NewConfigPageComponent } from '../../components/shared/new-config-page/new-config-page.component';\nimport { NewRuleStepperComponent } from '../../components/shared/new-rule-stepper/new-rule-stepper.component';\nimport { UnNamedPipe } from '../../pipes/un-named.pipe';\nimport { PresetConfigComponent } from '../../components/tabs/config/preset-config/preset-config.component';\nimport { PresetConfigPageComponent } from '../../components/tabs/config/preset-config-page/preset-config-page.component';\nimport { ConfigRoutingModule } from './config-routing.module';\n\n@NgModule({\n  declarations: [\n    ConfigListComponent,\n    NewConfigPageComponent,\n    ConfigModalComponent,\n    NewRuleStepperComponent,\n    EditConfigModalComponent,\n    EditConfigPageComponent,\n    FolderCreationComponent,\n    PresetConfigComponent,\n    PresetConfigPageComponent,\n    UnNamedPipe\n  ],\n  imports: [\n    FormsModule,\n    CommonModule,\n    MatIconModule,\n    MatListModule,\n    MatCardModule,\n    MatInputModule,\n    MatTableModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatTooltipModule,\n    MatStepperModule,\n    MatGridListModule,\n    MatSnackBarModule,\n    MatPaginatorModule,\n    MatFormFieldModule,\n    MatExpansionModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    ReactiveFormsModule,\n    MatProgressBarModule,\n    MatSlideToggleModule,\n    ConfigRoutingModule\n  ],\n  entryComponents: [ConfigModalComponent, EditConfigModalComponent, PresetConfigComponent],\n  exports: [ConfigListComponent]\n})\nexport class ConfigModule {\n  /**\n   * Register with the root module of the app\n   *\n   * @static\n   * @returns {ModuleWithProviders} This module\n   * @memberof ConfigModule\n   */\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: ConfigModule,\n      providers: []\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigRoutingModule.html":{"url":"modules/ConfigRoutingModule.html","title":"module - ConfigRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  ConfigRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/config/config-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ConfigComponent } from '../../components/tabs/config/config.component';\nimport { NewConfigPageComponent } from '../../components/shared/new-config-page/new-config-page.component';\nimport { AuthGuardService } from '../../services/auth/auth-guard.service';\nimport { PresetConfigPageComponent } from '../../components/tabs/config/preset-config-page/preset-config-page.component';\nimport { EditConfigPageComponent } from '../../components/shared/edit-config-page/edit-config-page.component';\n\n\nconst routes: Routes = [\n  {\n    path: 'app/config',\n    component: ConfigComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      state: 'appConfig'\n    }\n  },\n  {\n    path: 'app/config/create',\n    component: NewConfigPageComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      state: 'appConfigCreate'\n    }\n  },\n  {\n    path: 'app/config/presets',\n    component: PresetConfigPageComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      state: 'appConfigPresets'\n    }\n  },\n  {\n    path: 'app/config/edit',\n    component: EditConfigPageComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      state: 'appConfigEdit'\n    }\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ConfigRoutingModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfigsInterface.html":{"url":"interfaces/ConfigsInterface.html","title":"interface - ConfigsInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ConfigsInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        groups\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        groups\n                                    \n                                \n                                \n                                    \n                                        groups:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AngularFirestoreCollection } from 'angularfire2/firestore';\n\nexport interface ConfigInterface {\n  activeConfig: string;\n}\n\nexport interface RuleInterface {\n  id: string;\n  name: string;\n  data?: any;\n  classifier?: string;\n  constraint?: string;\n}\n\nexport interface GroupFolderInterface {\n  name?: string;\n  folderID?: string;\n}\n\nexport interface GroupInterface {\n  id: string;\n  name: string;\n  rules: Array;\n  source: GroupFolderInterface;\n  destination?: GroupFolderInterface;\n  createFolder?: FolderCreation;\n}\n\nexport interface ConfigsInterface {\n  id: string;\n  name: string;\n  groups: Array;\n}\n\nexport interface UserDocument {\n  activeConfig: string;\n  configs: AngularFirestoreCollection;\n}\n\nexport interface FolderCreation {\n  parent: {\n    folderID: string | undefined;\n    name: string | null;\n  };\n  prefix: {\n    type: string | null;\n    value: string;\n  };\n  name: {\n    type: string | null;\n    value: string;\n  };\n  suffix: {\n    type: string | null;\n    value: string;\n  };\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseService.html":{"url":"injectables/DatabaseService.html","title":"injectable - DatabaseService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  DatabaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/firebase/database.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _activeConfigChanged\n                            \n                            \n                                    Private\n                                _configSubject\n                            \n                            \n                                    Public\n                                activeConfigChanged\n                            \n                            \n                                    Private\n                                configDocument\n                            \n                            \n                                    Private\n                                configsCollection\n                            \n                            \n                                    Public\n                                configSubject\n                            \n                            \n                                    Public\n                                editingConfig\n                            \n                            \n                                    Private\n                                userDoc\n                            \n                            \n                                    Public\n                                userID\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addConfig\n                            \n                            \n                                createConfig\n                            \n                            \n                                deleteConfig\n                            \n                            \n                                getActiveConfig\n                            \n                            \n                                getConfig\n                            \n                            \n                                numberConfigs\n                            \n                            \n                                setActiveConfig\n                            \n                            \n                                updateConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebase: AngularFirestore, firebaseAuth: AngularFireAuth)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/firebase/database.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebase\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \naddConfig(config: ConfigsInterface)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/firebase/database.service.ts:79\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    ConfigsInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateConfig(configName: string, firstGroupName: string, sourceLocation: GroupFolderInterface, destinationLocation: GroupFolderInterface, createFolder: FolderCreation, firstGroupRule: RuleInterface)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/firebase/database.service.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        firstGroupName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        sourceLocation\n                                                        \n                                                                    GroupFolderInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        destinationLocation\n                                                        \n                                                                    GroupFolderInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        createFolder\n                                                        \n                                                                    FolderCreation\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        firstGroupRule\n                                                        \n                                                                    RuleInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteConfig(configID: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/firebase/database.service.ts:92\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getActiveConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetActiveConfig(cb: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/firebase/database.service.ts:133\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cb\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetConfig(configID: string, cb: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/firebase/database.service.ts:127\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        cb\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            numberConfigs\n                            \n                            \n                        \n                    \n                \n                \n                    \nnumberConfigs(cb: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/firebase/database.service.ts:151\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cb\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setActiveConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetActiveConfig(configID: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/firebase/database.service.ts:105\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateConfig(newConfig: ConfigsInterface)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/firebase/database.service.ts:119\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newConfig\n                                                        \n                                                                    ConfigsInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _activeConfigChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _activeConfigChanged:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/firebase/database.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _configSubject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _configSubject:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/firebase/database.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            activeConfigChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeConfigChanged:     \n\n                    \n                \n                    \n                        \n                            Default value : this._activeConfigChanged.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/firebase/database.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            configDocument\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        configDocument:     AngularFirestoreDocument\n\n                    \n                \n                    \n                        \n                            Type :     AngularFirestoreDocument\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/firebase/database.service.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            configsCollection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        configsCollection:     AngularFirestoreCollection\n\n                    \n                \n                    \n                        \n                            Type :     AngularFirestoreCollection\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/firebase/database.service.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            configSubject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        configSubject:     \n\n                    \n                \n                    \n                        \n                            Default value : this._configSubject.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/firebase/database.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editingConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editingConfig:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/firebase/database.service.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userDoc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userDoc:     AngularFirestoreDocument\n\n                    \n                \n                    \n                        \n                            Type :     AngularFirestoreDocument\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/firebase/database.service.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userID\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userID:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/firebase/database.service.ts:24\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { AngularFireAuth } from 'angularfire2/auth';\nimport { AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument } from 'angularfire2/firestore';\nimport { ConfigBuilder } from '../../classes/config-builder';\nimport {\n  ConfigInterface,\n  ConfigsInterface,\n  GroupFolderInterface,\n  RuleInterface,\n  UserDocument,\n  FolderCreation\n} from '../../../interfaces';\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class DatabaseService {\n\n  private _configSubject = new Subject();\n  public configSubject = this._configSubject.asObservable();\n\n  private _activeConfigChanged = new Subject();\n  public activeConfigChanged = this._activeConfigChanged.asObservable();\n\n  public userID: string;\n\n  private configDocument: AngularFirestoreDocument;\n  private configsCollection: AngularFirestoreCollection;\n  private userDoc: AngularFirestoreDocument;\n\n  public editingConfig: string;\n  \n\n  constructor(\n    private firebase: AngularFirestore,\n    private firebaseAuth: AngularFireAuth\n  ) {\n    firebase.firestore.settings({\n      timestampsInSnapshots: true\n    });\n    if (this.firebaseAuth.auth.currentUser) {\n      this.userID = firebaseAuth\n        .auth\n        .currentUser\n        .uid;\n      this.userDoc = firebase.doc(`users/${this.userID}`);\n      this.configDocument = firebase.doc(`users/${this.userID}/userData/config`);\n      this.configsCollection = this.userDoc.collection('configs');\n    }\n  }\n\n  createConfig(\n    configName: string,\n    firstGroupName: string,\n    sourceLocation: GroupFolderInterface,\n    destinationLocation: GroupFolderInterface,\n    createFolder: FolderCreation,\n    firstGroupRule: RuleInterface\n  ): void {\n    const newConfig = ConfigBuilder.generateNewConfig(\n      configName,\n      firstGroupName,\n      sourceLocation,\n      destinationLocation,\n      createFolder,\n      firstGroupRule\n    );\n    console.log(newConfig);\n    this\n      .configsCollection\n      .add(newConfig)\n      .then(() => {\n        this._configSubject.next(true);\n      }, err => {\n        console.error(err);\n        this._configSubject.next(false);\n      });\n  }\n\n  addConfig(config: ConfigsInterface): Promise {\n    return new Promise((resolve, reject) => {\n      this.configsCollection.add(config).then(() => {\n        this._configSubject.next(true);\n        resolve();\n      }, err => {\n        console.error(err);\n        this._configSubject.next(false);\n        reject();\n      })\n    });\n  }\n\n  deleteConfig(configID: string): void {\n    this\n      .configsCollection\n      .doc(configID)\n      .delete()\n      .then(() => {\n        this._configSubject.next(true);\n      }, err => {\n        console.error(err);\n        this._configSubject.next(false);\n      })\n  }\n\n  setActiveConfig(configID: string): void {\n    this\n      .configDocument\n      .set({\n        activeConfig: configID\n      })\n      .then(() => {\n        this._activeConfigChanged.next(configID);\n      }, err => {\n        console.error(err);\n        this._activeConfigChanged.error(err);\n      })\n  }\n\n  updateConfig(newConfig: ConfigsInterface): void {\n    this.configsCollection.doc(this.editingConfig).ref.set(newConfig)\n      .then(() => {\n        this.editingConfig = '';\n        this._configSubject.next(true);\n      }, err => console.error);\n  }\n\n  getConfig(configID: string, cb: Function): void {\n    this.configsCollection.doc(configID).ref.get().then(snapshot => {\n      cb(snapshot.data());\n    }, err => console.error);\n  }\n\n  getActiveConfig(cb: Function): void {\n    if (this.configDocument) {\n      this\n      .configDocument\n      .ref\n      .get()\n      .then(snapshot => {\n        if (snapshot && snapshot.data()) {\n          cb(snapshot.data()['activeConfig']);\n        } else {\n          cb(null);\n        }\n      }, err => console.error);\n    } else {\n      cb(null);\n    }\n  }\n\n  numberConfigs(cb: Function): void {\n    if (this.configsCollection) {\n      this\n      .configsCollection\n      .ref\n      .get()\n      .then(snapshot => {\n        cb(snapshot.docs.length);\n      });\n    } else {\n      cb(0);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DriveQueryBuilder.html":{"url":"classes/DriveQueryBuilder.html","title":"class - DriveQueryBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DriveQueryBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/drive-query-builder.ts\n        \n\n            \n                Description\n            \n            \n                A utility class to build Google Drive query's\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                query\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createdAfter\n                            \n                            \n                                createdBefore\n                            \n                            \n                                excludesOwner\n                            \n                            \n                                excludeType\n                            \n                            \n                                get\n                            \n                            \n                                hasOwner\n                            \n                            \n                                modifiedAfter\n                            \n                            \n                                modifiedBefore\n                            \n                            \n                                nameContains\n                            \n                            \n                                nameExcludes\n                            \n                            \n                                openedAfter\n                            \n                            \n                                openedBefore\n                            \n                            \n                                requiresType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(parentFolderID: string, disableTrashed: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/drive-query-builder.ts:50\n                            \n                        \n\n                \n                    \n                            Creates an instance of DriveQueryBuilder.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        parentFolderID\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The ID of the folder to search in\n\n                                                        \n                                                \n                                                \n                                                        disableTrashed\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Whether or not to include file in trash\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            query\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        query:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:40\n                            \n                        \n\n                \n                    \n                        The current generated query\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAfter\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreatedAfter(date: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:139\n                            \n                        \n\n\n                \n                    \n                            Require the file to be created after the supplied date\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The date the file should be created after\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdBefore\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreatedBefore(date: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:150\n                            \n                        \n\n\n                \n                    \n                            Require the file to be created before the supplied date\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The date the file should be created before\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            excludesOwner\n                            \n                            \n                        \n                    \n                \n                \n                    \nexcludesOwner(email: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:128\n                            \n                        \n\n\n                \n                    \n                            Adds a owner exclusion to the query\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The owners email address to exclude\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            excludeType\n                            \n                            \n                        \n                    \n                \n                \n                    \nexcludeType(mimeType: DriveMimeType)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:73\n                            \n                        \n\n\n                \n                    \n                            Add a file type to ignore to the query\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        mimeType\n                                                        \n                                                                    DriveMimeType\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The file type to ignore\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:48\n                            \n                        \n\n\n                \n                    \n                            Returns the current query\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The built query\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasOwner\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasOwner(email: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:117\n                            \n                        \n\n\n                \n                    \n                            Adds a owner requirement to the query\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The owners email address\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modifiedAfter\n                            \n                            \n                        \n                    \n                \n                \n                    \nmodifiedAfter(date: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:161\n                            \n                        \n\n\n                \n                    \n                            Require the file to be modified after the supplied date\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The date the file should be modified after\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modifiedBefore\n                            \n                            \n                        \n                    \n                \n                \n                    \nmodifiedBefore(date: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:172\n                            \n                        \n\n\n                \n                    \n                            Require the file to be modified before the supplied date\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The date the file should be modified before\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nameContains\n                            \n                            \n                        \n                    \n                \n                \n                    \nnameContains(string: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:95\n                            \n                        \n\n\n                \n                    \n                            Add a name content's requirement to the query\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        string\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The string the name needs\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nameExcludes\n                            \n                            \n                        \n                    \n                \n                \n                    \nnameExcludes(string: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:106\n                            \n                        \n\n\n                \n                    \n                            Add a name content's to exclude from the query\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        string\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openedAfter\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenedAfter(date: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:183\n                            \n                        \n\n\n                \n                    \n                            Require the file to be opened after the supplied date\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The date the file beeds to be opened after\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openedBefore\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenedBefore(date: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:196\n                            \n                        \n\n\n                \n                    \n                            Require the file to be opened before the supplied date\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The date the file beeds to be opened before\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requiresType\n                            \n                            \n                        \n                    \n                \n                \n                    \nrequiresType(mimeType: DriveMimeType)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:84\n                            \n                        \n\n\n                \n                    \n                            Add a file type to require to the query\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        mimeType\n                                                        \n                                                                    DriveMimeType\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The file type to require\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export enum DriveMimeType {\n  audio = 'application/vnd.google-apps.audio',\n  document = 'application/vnd.google-apps.document',\n  drawing = 'application/vnd.google-apps.drawing',\n  file = 'application/vnd.google-apps.file',\n  folder = 'application/vnd.google-apps.folder',\n  form = 'application/vnd.google-apps.form',\n  fustiontable = 'application/vnd.google-apps.fusiontable',\n  map = 'application/vnd.google-apps.map',\n  photo = 'application/vnd.google-apps.photo',\n  presentation = 'application/vnd.google-apps.presentation',\n  script = 'application/vnd.google-apps.script',\n  site = 'application/vnd.google-apps.site',\n  spreadsheet = 'application/vnd.google-apps.spreadsheet',\n  unknown = 'application/vnd.google-apps.unknown',\n  video = 'application/vnd.google-apps.video',\n  thirdParty = 'application/vnd.google-apps.drive-sdk'\n}\n\n/**\n * A utility class to build Google Drive query's\n *\n * @export\n * @class DriveQueryBuilder\n */\nexport class DriveQueryBuilder {\n  /**\n   * The current generated query\n   *\n   * @private\n   * @type {string}\n   * @memberof DriveQueryBuilder\n   */\n  private query: string = '';\n\n  /**\n   * Returns the current query\n   *\n   * @returns {string} The built query\n   * @memberof DriveQueryBuilder\n   */\n  get(): string {\n    return this.query;\n  }\n\n  /**\n   * Creates an instance of DriveQueryBuilder.\n   * @param {string} parentFolderID The ID of the folder to search in\n   * @param {boolean} disableTrashed Whether or not to include file in trash\n   * @memberof DriveQueryBuilder\n   */\n  constructor(parentFolderID: string, disableTrashed: boolean) {\n    if (parentFolderID) {\n      this.query += `'${parentFolderID}' in parents`;\n    }\n    if (disableTrashed) {\n      this.query += ' and trashed=false';\n    }\n  }\n\n  /**\n   * Add a file type to ignore to the query\n   *\n   * @param {DriveMimeType} mimeType The file type to ignore\n   * @memberof DriveQueryBuilder\n   */\n  excludeType(mimeType: DriveMimeType): DriveQueryBuilder {\n    this.query += ` and mimeType != '${mimeType}'`;\n    return this;\n  }\n\n  /**\n   * Add a file type to require to the query\n   *\n   * @param {DriveMimeType} mimeType The file type to require\n   * @memberof DriveQueryBuilder\n   */\n  requiresType(mimeType: DriveMimeType): DriveQueryBuilder {\n    this.query += ` and mimeType = '${mimeType}'`;\n    return this;\n  }\n\n  /**\n   * Add a name content's requirement to the query\n   *\n   * @param {string} string The string the name needs\n   * @memberof DriveQueryBuilder\n   */\n  nameContains(string: string): DriveQueryBuilder {\n    this.query += ` and name contains '${string}'`;\n    return this;\n  }\n\n  /**\n   * Add a name content's to exclude from the query\n   *\n   * @param {string} string\n   * @memberof DriveQueryBuilder\n   */\n  nameExcludes(string: string): DriveQueryBuilder {\n    this.query += ` and not name contains '${string}'`;\n    return this;\n  }\n\n  /**\n   * Adds a owner requirement to the query\n   *\n   * @param {string} email The owners email address\n   * @memberof DriveQueryBuilder\n   */\n  hasOwner(email: string): DriveQueryBuilder {\n    this.query += ` and ${email} in owners`;\n    return this;\n  }\n\n  /**\n   * Adds a owner exclusion to the query\n   *\n   * @param {string} email The owners email address to exclude\n   * @memberof DriveQueryBuilder\n   */\n  excludesOwner(email: string): DriveQueryBuilder {\n    this.query += ` and not ${email} in  owners`;\n    return this;\n  }\n\n  /**\n   * Require the file to be created after the supplied date\n   *\n   * @param {Date} date The date the file should be created after\n   * @memberof DriveQueryBuilder\n   */\n  createdAfter(date: Date): DriveQueryBuilder {\n    this.query += ` and createdTime >= '${date.toISOString().split('.')[0]}'`;\n    return this;\n  }\n\n  /**\n   * Require the file to be created before the supplied date\n   *\n   * @param {Date} date The date the file should be created before\n   * @memberof DriveQueryBuilder\n   */\n  createdBefore(date: Date): DriveQueryBuilder {\n    this.query += ` and createdTime = '${date.toISOString().split('.')[0]}'`;\n    return this;\n  }\n\n  /**\n   * Require the file to be modified before the supplied date\n   *\n   * @param {Date} date The date the file should be modified before\n   * @memberof DriveQueryBuilder\n   */\n  modifiedBefore(date: Date): DriveQueryBuilder {\n    this.query += ` and modifiedTime = '${\n      date.toISOString().split('.')[0]\n    }'`;\n    return this;\n  }\n\n  /**\n   * Require the file to be opened before the supplied date\n   *\n   * @param {Date} date The date the file beeds to be opened before\n   * @memberof DriveQueryBuilder\n   */\n  openedBefore(date: Date): DriveQueryBuilder {\n    this.query += ` and viewedByMeTime \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FolderCreation.html":{"url":"interfaces/FolderCreation.html","title":"interface - FolderCreation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FolderCreation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        parent\n                                \n                                \n                                        prefix\n                                \n                                \n                                        suffix\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                    \n                                \n                                \n                                    \n                                        parent:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prefix\n                                    \n                                \n                                \n                                    \n                                        prefix:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        suffix\n                                    \n                                \n                                \n                                    \n                                        suffix:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AngularFirestoreCollection } from 'angularfire2/firestore';\n\nexport interface ConfigInterface {\n  activeConfig: string;\n}\n\nexport interface RuleInterface {\n  id: string;\n  name: string;\n  data?: any;\n  classifier?: string;\n  constraint?: string;\n}\n\nexport interface GroupFolderInterface {\n  name?: string;\n  folderID?: string;\n}\n\nexport interface GroupInterface {\n  id: string;\n  name: string;\n  rules: Array;\n  source: GroupFolderInterface;\n  destination?: GroupFolderInterface;\n  createFolder?: FolderCreation;\n}\n\nexport interface ConfigsInterface {\n  id: string;\n  name: string;\n  groups: Array;\n}\n\nexport interface UserDocument {\n  activeConfig: string;\n  configs: AngularFirestoreCollection;\n}\n\nexport interface FolderCreation {\n  parent: {\n    folderID: string | undefined;\n    name: string | null;\n  };\n  prefix: {\n    type: string | null;\n    value: string;\n  };\n  name: {\n    type: string | null;\n    value: string;\n  };\n  suffix: {\n    type: string | null;\n    value: string;\n  };\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FolderCreationComponent.html":{"url":"components/FolderCreationComponent.html","title":"component - FolderCreationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FolderCreationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/folder-creation/folder-creation.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-folder-creation\n            \n\n            \n                styleUrls\n                folder-creation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./folder-creation.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createFolder\n                            \n                            \n                                    Public\n                                finished\n                            \n                            \n                                    Public\n                                namingOptions\n                            \n                            \n                                    Public\n                                parentFolderIsRoot\n                            \n                            \n                                    Private\n                                valueAttributes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                done\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                openFolderPicker\n                            \n                            \n                                reset\n                            \n                            \n                                rootToggleChange\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                inputFolder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(google: GoogleService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:67\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        google\n                                                  \n                                                        \n                                                                    GoogleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        inputFolder\n                    \n                    \n                            \n                            Type:    FolderCreation\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:19\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:21\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            done\n                            \n                            \n                        \n                    \n                \n                \n                    \ndone()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:143\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openFolderPicker\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenFolderPicker()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:150\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rootToggleChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nrootToggleChange(event: MatSlideToggleChange)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:98\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    MatSlideToggleChange\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validate\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalidate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:114\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            createFolder\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        createFolder:     FolderCreation\n\n                    \n                \n                    \n                        \n                            Type :     FolderCreation\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    parent: {\n      folderID: undefined,\n      name: null\n    },\n    prefix: {\n      type: null,\n      value: ''\n    },\n    name: {\n      type: null,\n      value: ''\n    },\n    suffix: {\n      type: null,\n      value: ''\n    }\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            finished\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        finished:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            namingOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        namingOptions:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      name: 'Text',\n      value: 'text'\n    },\n    {\n      name: 'Sorting Date',\n      value: 'date'\n    },\n    {\n      name: 'None',\n      value: 'none'\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            parentFolderIsRoot\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parentFolderIsRoot:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            valueAttributes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        valueAttributes:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['prefix', 'name', 'suffix']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:61\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  AfterViewInit,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output\n  } from '@angular/core';\nimport { FolderCreation } from '../../../../interfaces';\nimport { GoogleService } from '../../../services/google/google.service';\nimport { MatSlideToggleChange, MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-folder-creation',\n  templateUrl: './folder-creation.component.html',\n  styleUrls: ['./folder-creation.component.scss']\n})\nexport class FolderCreationComponent implements AfterViewInit {\n  @Input() inputFolder: FolderCreation;\n\n  @Output() valueChange = new EventEmitter();\n\n  private valueAttributes = ['prefix', 'name', 'suffix'];\n\n  public namingOptions = [\n    {\n      name: 'Text',\n      value: 'text'\n    },\n    {\n      name: 'Sorting Date',\n      value: 'date'\n    },\n    {\n      name: 'None',\n      value: 'none'\n    }\n  ];\n  public createFolder: FolderCreation = {\n    parent: {\n      folderID: undefined,\n      name: null\n    },\n    prefix: {\n      type: null,\n      value: ''\n    },\n    name: {\n      type: null,\n      value: ''\n    },\n    suffix: {\n      type: null,\n      value: ''\n    }\n  };\n  public parentFolderIsRoot: boolean = false;\n\n  public finished: boolean = false;\n\n  public get value(): FolderCreation {\n    if (this.validate()) {\n      return this.createFolder;\n    } else {\n      return null;\n    }\n  }\n\n  constructor(\n    private google: GoogleService // private snackbar: MatSnackBar\n  ) {}\n\n  ngAfterViewInit() {\n    if (this.inputFolder) {\n      setTimeout(_ => {\n        this.createFolder = this.inputFolder;\n      });\n    }\n  }\n\n  openFolderPicker() {\n    let folderPickedListener = this.google.folderPicked$.subscribe(\n      pickedFolder => {\n        this.createFolder.parent = {\n          folderID: pickedFolder.id,\n          name: pickedFolder.name\n        };\n        folderPickedListener.unsubscribe();\n      },\n      err => {\n        console.error(err);\n        folderPickedListener.unsubscribe();\n      }\n    );\n    this.google.openFilePicker();\n  }\n\n  rootToggleChange(event: MatSlideToggleChange) {\n    if (event.checked) {\n      this.parentFolderIsRoot = true;\n      this.createFolder.parent = {\n        folderID: 'root',\n        name: 'My Drive'\n      };\n    } else {\n      this.parentFolderIsRoot = false;\n      this.createFolder.parent = {\n        folderID: undefined,\n        name: null\n      };\n    }\n  }\n\n  validate(): boolean {\n    const folder = this.createFolder;\n    if (folder) {\n      if (folder.parent.folderID !== undefined) {\n        let anyInvalid = false;\n        let numNone = 0;\n        this.valueAttributes.forEach(attribute => {\n          if (folder[attribute].type === 'none') {\n            numNone += 1;\n          }\n          if (folder[attribute].type === 'text') {\n            if (folder[attribute].value.length \n    \n\n    \n        \n  \n    \n      Folder Creation\n    \n  \n  \n    \n      \n        \n        \n          folder\n        \n      \n      My Drive\n    \n    \n      \n        \n          {{ option.name }}\n        \n      \n      \n        \n          {{ option.name }}\n        \n      \n      \n        \n          {{ option.name }}\n        \n      \n    \n    \n      \n        \n      \n      \n        \n      \n      \n        \n      \n    \n  \n  \n    Done\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Folder Creation                                            folder                    My Drive                                {{ option.name }}                                      {{ option.name }}                                      {{ option.name }}                                                                                              Done  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'ConfigListComponent', 'selector': 'app-config-list'},{'name': 'ConfigModalComponent', 'selector': 'app-config-modal'},{'name': 'EditConfigModalComponent', 'selector': 'app-edit-config-modal'},{'name': 'EditConfigPageComponent', 'selector': 'app-edit-config-page'},{'name': 'FolderCreationComponent', 'selector': 'app-folder-creation'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NewConfigPageComponent', 'selector': 'app-new-rule-page'},{'name': 'NewRuleStepperComponent', 'selector': 'app-new-rule-stepper'},{'name': 'PresetConfigComponent', 'selector': 'app-preset-config'},{'name': 'PresetConfigPageComponent', 'selector': 'app-preset-config-page'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'UnauthenticatedComponent', 'selector': 'app-unauthenticated'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FolderCreationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleService.html":{"url":"injectables/GoogleService.html","title":"injectable - GoogleService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  GoogleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/google/google.service.ts\n        \n\n            \n                Description\n            \n            \n                Utility class to handle all interacting with the Google API\n\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _authState\n                            \n                            \n                                    Public\n                                authState$\n                            \n                            \n                                    Public\n                                folderPicked$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createFolder\n                            \n                            \n                                getAuthStatus\n                            \n                            \n                                getFileInfo\n                            \n                            \n                                getToken\n                            \n                            \n                                init\n                            \n                            \n                                listFiles\n                            \n                            \n                                moveFile\n                            \n                            \n                                openFilePicker\n                            \n                            \n                                signIn\n                            \n                            \n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseAuth: AngularFireAuth)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/google/google.service.ts:55\n                            \n                        \n\n                \n                    \n                            Creates an instance of GoogleService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createFolder\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateFolder(name: string, parent?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:184\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        parent\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAuthStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAuthStatus()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:122\n                            \n                        \n\n\n                \n                    \n                            Returns the users current authentication status.\n\n\n                            \n                            \n                            \n                                Returns :     Boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFileInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFileInfo(fileID: string, fields: string, cb: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:169\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        fields\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        cb\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getToken\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:155\n                            \n                        \n\n\n                \n                    \n                            Gets the users id token\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit(config: Object, callback?: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:69\n                            \n                        \n\n\n                \n                    \n                            Initialize the Google API\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        callback\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listFiles\n                            \n                            \n                        \n                    \n                \n                \n                    \nlistFiles(query: string, cb: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:159\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        cb\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moveFile\n                            \n                            \n                        \n                    \n                \n                \n                    \nmoveFile(fileID: string, folder: string, cb: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:203\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        folder\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        cb\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openFilePicker\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenFilePicker()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:112\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signIn\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignIn()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:135\n                            \n                        \n\n\n                \n                    \n                            Opens a popup allowing the user to sign in.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:144\n                            \n                        \n\n\n                \n                    \n                            Signs a user out\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _authState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _authState:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:46\n                            \n                        \n\n                \n                    \n                        Holds a subject that is used to update subscribers with the authentication status.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authState$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authState$:     \n\n                    \n                \n                    \n                        \n                            Default value : this._authState.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:53\n                            \n                        \n\n                \n                    \n                        Allows other modules / services to subscribe to the authentication status.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            folderPicked$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        folderPicked$:     \n\n                    \n                \n                    \n                        \n                            Default value : _folderPicked.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:55\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import * as firebase from 'firebase/app';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport 'firebase/auth';\nimport { DriveMimeType } from '../../classes/drive-query-builder';\n\n/**\n * Workaround for testing\n */\ndeclare var gapi: any;\ndeclare var google: any;\n\n/**\n * Variable for easy reference to the authenitcation instance.\n */\nlet authInstance;\n\nlet folderPicker;\n\nlet _folderPicked = new Subject();\n\nfunction folderPicked(data: any): void {\n  if (data.action === 'picked') {\n    _folderPicked.next(data.docs[0]);\n  } else if (data.action === 'cancel') {\n    _folderPicked.error(true);\n  }\n}\n\n/**\n * Utility class to handle all interacting with the Google API\n *\n * @export\n * @class GoogleService\n */\n@Injectable()\nexport class GoogleService {\n  /**\n   * Holds a subject that is used to update subscribers with the authentication status.\n   *\n   * @private\n   * @memberof GoogleService\n   */\n  private _authState = new Subject();\n\n  /**\n   * Allows other modules / services to subscribe to the authentication status.\n   *\n   * @memberof GoogleService\n   */\n  public authState$ = this._authState.asObservable();\n\n  public folderPicked$ = _folderPicked.asObservable();\n\n  /**\n   * Creates an instance of GoogleService.\n   * @memberof GoogleService\n   */\n  constructor(private firebaseAuth: AngularFireAuth) {}\n\n  /**\n   * Initialize the Google API\n   *\n   * @param {Object} config\n   * @memberof GoogleService\n   */\n  init(config: Object, callback?: Function) {\n    gapi.load('client:auth2', () => {\n      console.debug('GAPI: Client & Auth Loaded');\n      gapi.client.init(config).then(() => {\n        authInstance = gapi.auth2.getAuthInstance();\n        authInstance.isSignedIn.listen(() => {\n          this._authState.next(authInstance.isSignedIn.get());\n          if (authInstance.isSignedIn.get()) {\n            const credential = firebase.auth.GoogleAuthProvider.credential(\n              this.getToken()\n            );\n            this.firebaseAuth.auth.signInWithCredential(credential);\n          }\n        });\n        const authStatus = authInstance.isSignedIn.get();\n        this._authState.next(authStatus);\n        gapi.load('picker', () => {\n          console.debug('GAPI: Picker Loaded');\n          const view = new google.picker.DocsView(google.picker.ViewId.FOLDERS)\n            .setIncludeFolders(true)\n            .setSelectFolderEnabled(true)\n            .setParent('root')\n            .setOwnedByMe(true);\n\n          folderPicker = new google.picker.PickerBuilder()\n            .disableFeature(google.picker.Feature.SUPPORT_TEAM_DRIVES)\n            .setAppId(362606538820)\n            .setOAuthToken(\n              authInstance.currentUser.get().getAuthResponse().access_token\n            )\n            .setDeveloperKey('AIzaSyB-yE9IXT29Vl_eAU7bzvzv5Qe17flfpzM')\n            .setSelectableMimeTypes('application/vnd.google-apps.folder')\n            .addView(view)\n            .setCallback(folderPicked)\n            .build();\n          if (callback) {\n            callback();\n          }\n        });\n      }, console.error);\n    });\n  }\n\n  openFilePicker() {\n    folderPicker.setVisible(true);\n  }\n\n  /**\n   * Returns the users current authentication status.\n   *\n   * @returns {Boolean}\n   * @memberof GoogleService\n   */\n  getAuthStatus(): Boolean {\n    if (authInstance) {\n      return authInstance.isSignedIn.get();\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Opens a popup allowing the user to sign in.\n   *\n   * @memberof GoogleService\n   */\n  signIn(): void {\n    authInstance.signIn();\n  }\n\n  /**\n   * Signs a user out\n   *\n   * @memberof GoogleService\n   */\n  signOut(): void {\n    authInstance.signOut();\n    this.firebaseAuth.auth.signOut();\n  }\n\n  /**\n   * Gets the users id token\n   *\n   * @returns {string}\n   * @memberof GoogleService\n   */\n  getToken(): string {\n    return authInstance.currentUser.get().getAuthResponse().id_token;\n  }\n\n  listFiles(query: string, cb: Function): void {\n    gapi.client.drive.files\n      .list({\n        q: query\n      })\n      .execute(resp => {\n        cb(resp);\n      });\n  }\n\n  getFileInfo(fileID: string, fields: string, cb: Function): void {\n    gapi.client.drive.files\n      .get({\n        fileId: fileID,\n        fields: fields\n      })\n      .execute(resp => {\n        if (resp.err) {\n          console.error(resp.err);\n        } else {\n          cb(resp);\n        }\n      });\n  }\n\n  createFolder(name: string, parent?: string): Promise {\n    const fileResource = {\n      name: name,\n      mimeType: DriveMimeType.folder\n    }\n    if (parent) fileResource['parents'] = [parent];\n    return new Promise((resolve, reject) => {\n      gapi.client.drive.files\n        .create({\n          resource: fileResource,\n          fields: 'id'\n        })\n        .execute(resp => {\n          if (resp.err) reject(resp.err);\n          else resolve(resp.id);\n        });\n    });\n  }\n\n  moveFile(fileID: string, folder: string, cb: Function): void {\n    this.getFileInfo(fileID, 'parents', file => {\n      const prevParents = file.parents.join(',');\n      gapi.client.drive.files\n        .update({\n          fileId: fileID,\n          addParents: folder,\n          removeParents: prevParents\n        })\n        .execute(resp => {\n          if (resp.err) {\n            console.error(resp.err);\n          } else {\n            cb(true);\n          }\n        });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GroupFolderInterface.html":{"url":"interfaces/GroupFolderInterface.html","title":"interface - GroupFolderInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GroupFolderInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        folderID\n                                \n                                \n                                            Optional\n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        folderID\n                                    \n                                \n                                \n                                    \n                                        folderID:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AngularFirestoreCollection } from 'angularfire2/firestore';\n\nexport interface ConfigInterface {\n  activeConfig: string;\n}\n\nexport interface RuleInterface {\n  id: string;\n  name: string;\n  data?: any;\n  classifier?: string;\n  constraint?: string;\n}\n\nexport interface GroupFolderInterface {\n  name?: string;\n  folderID?: string;\n}\n\nexport interface GroupInterface {\n  id: string;\n  name: string;\n  rules: Array;\n  source: GroupFolderInterface;\n  destination?: GroupFolderInterface;\n  createFolder?: FolderCreation;\n}\n\nexport interface ConfigsInterface {\n  id: string;\n  name: string;\n  groups: Array;\n}\n\nexport interface UserDocument {\n  activeConfig: string;\n  configs: AngularFirestoreCollection;\n}\n\nexport interface FolderCreation {\n  parent: {\n    folderID: string | undefined;\n    name: string | null;\n  };\n  prefix: {\n    type: string | null;\n    value: string;\n  };\n  name: {\n    type: string | null;\n    value: string;\n  };\n  suffix: {\n    type: string | null;\n    value: string;\n  };\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GroupInterface.html":{"url":"interfaces/GroupInterface.html","title":"interface - GroupInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GroupInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        createFolder\n                                \n                                \n                                            Optional\n                                        destination\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        rules\n                                \n                                \n                                        source\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createFolder\n                                    \n                                \n                                \n                                    \n                                        createFolder:     FolderCreation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FolderCreation\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                    \n                                \n                                \n                                    \n                                        destination:     GroupFolderInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     GroupFolderInterface\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rules\n                                    \n                                \n                                \n                                    \n                                        rules:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:     GroupFolderInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     GroupFolderInterface\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AngularFirestoreCollection } from 'angularfire2/firestore';\n\nexport interface ConfigInterface {\n  activeConfig: string;\n}\n\nexport interface RuleInterface {\n  id: string;\n  name: string;\n  data?: any;\n  classifier?: string;\n  constraint?: string;\n}\n\nexport interface GroupFolderInterface {\n  name?: string;\n  folderID?: string;\n}\n\nexport interface GroupInterface {\n  id: string;\n  name: string;\n  rules: Array;\n  source: GroupFolderInterface;\n  destination?: GroupFolderInterface;\n  createFolder?: FolderCreation;\n}\n\nexport interface ConfigsInterface {\n  id: string;\n  name: string;\n  groups: Array;\n}\n\nexport interface UserDocument {\n  activeConfig: string;\n  configs: AngularFirestoreCollection;\n}\n\nexport interface FolderCreation {\n  parent: {\n    folderID: string | undefined;\n    name: string | null;\n  };\n  prefix: {\n    type: string | null;\n    value: string;\n  };\n  name: {\n    type: string | null;\n    value: string;\n  };\n  suffix: {\n    type: string | null;\n    value: string;\n  };\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tabs/home/home.component.ts\n\n\n    \n        Description\n    \n    \n        Declare a component to be shown when the home tab is selected.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeConfigName\n                            \n                            \n                                    Public\n                                isActiveConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToConfigPage\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                sortUsersDrive\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(zone: NgZone, router: Router, snackBar: MatSnackBar, database: DatabaseService, sorterService: SorterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tabs/home/home.component.ts:21\n                            \n                        \n\n                \n                    \n                            Creates an instance of HomeComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        database\n                                                  \n                                                        \n                                                                    DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        sorterService\n                                                  \n                                                        \n                                                                    SorterService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToConfigPage\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToConfigPage()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/home/home.component.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/home/home.component.ts:40\n                            \n                        \n\n\n                \n                    \n                            Handle component initalization\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortUsersDrive\n                            \n                            \n                        \n                    \n                \n                \n                    \nsortUsersDrive()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/home/home.component.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            activeConfigName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeConfigName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Loading...'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/home/home.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isActiveConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isActiveConfig:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/home/home.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, NgZone } from '@angular/core';\nimport { DatabaseService } from '../../../services/firebase/database.service';\nimport { MatSnackBar } from '@angular/material';\nimport { SorterService } from '../../../services/sorter/sorter.service';\nimport { Router } from '@angular/router';\n\n/**\n * Declare a component to be shown when the home tab is selected.\n *\n * @export\n * @class HomeComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  public isActiveConfig: boolean = false;\n  public activeConfigName: string = 'Loading...';\n\n  /**\n   * Creates an instance of HomeComponent.\n   * @memberof HomeComponent\n   */\n  constructor(\n    private zone: NgZone,\n    private router: Router,\n    private snackBar: MatSnackBar,\n    private database: DatabaseService,\n    private sorterService: SorterService\n  ) {}\n\n  /**\n   * Handle component initalization\n   *\n   * @memberof HomeComponent\n   */\n  ngOnInit() {\n    if (this.database.userID) {\n      this.database.getActiveConfig(activeConfig => {\n        if (activeConfig) {\n          this.database.getConfig(activeConfig, config => {\n            this.activeConfigName = config.name;\n          });\n          this.isActiveConfig = true;\n        } else {\n          this.activeConfigName = 'No active configuration!';\n          this.isActiveConfig = false;\n        }\n      });\n    }\n  }\n\n  sortUsersDrive() {\n    this.sorterService.sort().then(() => {\n      this.snackBar.open('Google Drive sorted!', 'OK', {\n        duration: 5000\n      });\n    }, err => console.error);\n  }\n\n  goToConfigPage() {\n    this.zone.run(() => {\n      this.router.navigateByUrl('/app/config');\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      settings_power\n      Active Config\n    \n    \n      {{ activeConfigName }}\n    \n  \n  \n    \n      sort\n      Sorting\n    \n    \n      Sort Now\n    \n  \n\n\n  \n    \n      settings\n      Configuration's\n    \n    \n      Configuration's control how your Google Drive is sorted!\n    \n    \n      Go to Configuration's\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            settings_power      Active Config              {{ activeConfigName }}                  sort      Sorting              Sort Now                  settings      Configuration\\'s              Configuration\\'s control how your Google Drive is sorted!              Go to Configuration\\'s      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'ConfigListComponent', 'selector': 'app-config-list'},{'name': 'ConfigModalComponent', 'selector': 'app-config-modal'},{'name': 'EditConfigModalComponent', 'selector': 'app-edit-config-modal'},{'name': 'EditConfigPageComponent', 'selector': 'app-edit-config-page'},{'name': 'FolderCreationComponent', 'selector': 'app-folder-creation'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NewConfigPageComponent', 'selector': 'app-new-rule-page'},{'name': 'NewRuleStepperComponent', 'selector': 'app-new-rule-stepper'},{'name': 'PresetConfigComponent', 'selector': 'app-preset-config'},{'name': 'PresetConfigPageComponent', 'selector': 'app-preset-config-page'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'UnauthenticatedComponent', 'selector': 'app-unauthenticated'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PresetConfigComponent.html":{"url":"components/PresetConfigComponent.html","title":"component - PresetConfigComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PresetConfigComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tabs/config/preset-config/preset-config.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-preset-config\n            \n\n            \n                styleUrls\n                preset-config.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./preset-config.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _closeCommand\n                            \n                            \n                                    Public\n                                closeCommand\n                            \n                            \n                                    Public\n                                creationEnabled\n                            \n                            \n                                    Public\n                                presets\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                zone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addPreset\n                            \n                            \n                                close\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(zone: NgZone, router: Router, snackbar: MatSnackBar, google: GoogleService, database: DatabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        google\n                                                  \n                                                        \n                                                                    GoogleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        database\n                                                  \n                                                        \n                                                                    DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addPreset\n                            \n                            \n                        \n                    \n                \n                \n                    \naddPreset(presetID: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        presetID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \nclose()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _closeCommand\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _closeCommand:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            closeCommand\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        closeCommand:     \n\n                    \n                \n                    \n                        \n                            Default value : this._closeCommand.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            creationEnabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        creationEnabled:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            presets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        presets:     \n\n                    \n                \n                    \n                        \n                            Default value : presets\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            zone\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zone:     NgZone\n\n                    \n                \n                    \n                        \n                            Type :     NgZone\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, NgZone } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { presets } from '../presets';\nimport { GoogleService } from '../../../../services/google/google.service';\nimport { v4 as uuid } from 'uuid';\nimport { ConfigBuilder } from '../../../../classes/config-builder';\nimport { DatabaseService } from '../../../../services/firebase/database.service';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-preset-config',\n  templateUrl: './preset-config.component.html',\n  styleUrls: ['./preset-config.component.scss']\n})\nexport class PresetConfigComponent implements OnInit {\n  private _closeCommand = new Subject();\n\n  public closeCommand = this._closeCommand.asObservable();\n\n  public presets = presets;\n  public creationEnabled = true;\n\n  constructor(\n    public zone: NgZone,\n    public router: Router,\n    private snackbar: MatSnackBar,\n    private google: GoogleService,\n    private database: DatabaseService\n  ) {}\n\n  ngOnInit() {}\n\n  close() {\n    this._closeCommand.next(true);\n  }\n\n  addPreset(presetID: string) {\n    const config = presets.find(element => {\n      return element.id === presetID;\n    });\n    const createFolders = config.data.createFolders;\n    const groups = config.data.groups;\n    const createdFolders = [];\n    let requestsSent = 0;\n    let requestsRecived = 0;\n    this.creationEnabled = false;\n    createFolders.forEach(folder => {\n      requestsSent += 1;\n      this.google\n        .createFolder(folder)\n        .then(id => {\n          requestsRecived += 1;\n          let group = groups.find(group => {\n            return group.destination.presetID === folder;\n          });\n          group.destination = {\n            folderID: id,\n            name: folder\n          };\n        })\n        .catch(err => console.error);\n    });\n    let checkInterval = setInterval(() => {\n      if (requestsSent === requestsRecived) {\n        clearInterval(checkInterval);\n        groups.forEach(group => {\n          group['id'] = uuid();\n          group.rules.forEach(rule => {\n            rule.data['id'] = uuid();\n          });\n        });\n        this.database\n          .addConfig(ConfigBuilder.configFromGroup(groups, 'I-STEM'))\n          .then(\n            () => {\n              this.close();\n              this.creationEnabled = true;\n            },\n            err => {\n              this.snackbar.open('There was a problem adding your preset!');\n              this.creationEnabled = true;\n            }\n          );\n      }\n    }, 100);\n  }\n}\n\n    \n\n    \n        \n  Preset Configs\n  Preset Configs\n  \n    \n      \n          \n        {{ preset.name }}\n        {{ preset.category }}\n      \n      \n        {{ preset.description }}\n      \n      \n        Add Preset\n      \n    \n    \n      Cancel\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Preset Configs  Preset Configs                              {{ preset.name }}        {{ preset.category }}                    {{ preset.description }}                    Add Preset                    Cancel      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'ConfigListComponent', 'selector': 'app-config-list'},{'name': 'ConfigModalComponent', 'selector': 'app-config-modal'},{'name': 'EditConfigModalComponent', 'selector': 'app-edit-config-modal'},{'name': 'EditConfigPageComponent', 'selector': 'app-edit-config-page'},{'name': 'FolderCreationComponent', 'selector': 'app-folder-creation'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NewConfigPageComponent', 'selector': 'app-new-rule-page'},{'name': 'NewRuleStepperComponent', 'selector': 'app-new-rule-stepper'},{'name': 'PresetConfigComponent', 'selector': 'app-preset-config'},{'name': 'PresetConfigPageComponent', 'selector': 'app-preset-config-page'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'UnauthenticatedComponent', 'selector': 'app-unauthenticated'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PresetConfigComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PresetConfigPageComponent.html":{"url":"components/PresetConfigPageComponent.html","title":"component - PresetConfigPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PresetConfigPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tabs/config/preset-config-page/preset-config-page.component.ts\n\n\n\n    \n        Extends\n    \n    \n            PresetConfigComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-preset-config-page\n            \n\n            \n                styleUrls\n                .preset-config/preset-config.component.scss\n            \n\n\n\n            \n                templateUrl\n                ../preset-config/preset-config.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isPage\n                            \n                            \n                                    Private\n                                _closeCommand\n                            \n                            \n                                    Public\n                                closeCommand\n                            \n                            \n                                    Public\n                                creationEnabled\n                            \n                            \n                                    Public\n                                presets\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                zone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                addPreset\n                            \n                            \n                                close\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \nclose()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config-page/preset-config-page.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addPreset\n                            \n                            \n                        \n                    \n                \n                \n                    \naddPreset(presetID: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PresetConfigComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PresetConfigComponent:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        presetID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \nclose()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PresetConfigComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PresetConfigComponent:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PresetConfigComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PresetConfigComponent:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isPage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isPage:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config-page/preset-config-page.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _closeCommand\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _closeCommand:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from     PresetConfigComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PresetConfigComponent:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            closeCommand\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        closeCommand:     \n\n                    \n                \n                    \n                        \n                            Default value : this._closeCommand.asObservable()\n                        \n                    \n                            \n                                \n                                    Inherited from     PresetConfigComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PresetConfigComponent:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            creationEnabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        creationEnabled:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                            \n                                \n                                    Inherited from     PresetConfigComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PresetConfigComponent:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            presets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        presets:     \n\n                    \n                \n                    \n                        \n                            Default value : presets\n                        \n                    \n                            \n                                \n                                    Inherited from     PresetConfigComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PresetConfigComponent:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                            \n                                \n                                    Inherited from     PresetConfigComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PresetConfigComponent:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            zone\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zone:     NgZone\n\n                    \n                \n                    \n                        \n                            Type :     NgZone\n\n                        \n                    \n                            \n                                \n                                    Inherited from     PresetConfigComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PresetConfigComponent:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { PresetConfigComponent } from '../preset-config/preset-config.component';\n\n@Component({\n  selector: 'app-preset-config-page',\n  templateUrl: '../preset-config/preset-config.component.html',\n  styleUrls: ['../preset-config/preset-config.component.scss']\n})\nexport class PresetConfigPageComponent extends PresetConfigComponent {\n  isPage = true;\n\n  close() {\n    this.zone.run(() => {\n      this.router.navigateByUrl('/app/config');\n    });\n  }\n}\n\n    \n\n    \n        \n  Preset Configs\n  Preset Configs\n  \n    \n      \n          \n        {{ preset.name }}\n        {{ preset.category }}\n      \n      \n        {{ preset.description }}\n      \n      \n        Add Preset\n      \n    \n    \n      Cancel\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Preset Configs  Preset Configs                              {{ preset.name }}        {{ preset.category }}                    {{ preset.description }}                    Add Preset                    Cancel      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'ConfigListComponent', 'selector': 'app-config-list'},{'name': 'ConfigModalComponent', 'selector': 'app-config-modal'},{'name': 'EditConfigModalComponent', 'selector': 'app-edit-config-modal'},{'name': 'EditConfigPageComponent', 'selector': 'app-edit-config-page'},{'name': 'FolderCreationComponent', 'selector': 'app-folder-creation'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NewConfigPageComponent', 'selector': 'app-new-rule-page'},{'name': 'NewRuleStepperComponent', 'selector': 'app-new-rule-stepper'},{'name': 'PresetConfigComponent', 'selector': 'app-preset-config'},{'name': 'PresetConfigPageComponent', 'selector': 'app-preset-config-page'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'UnauthenticatedComponent', 'selector': 'app-unauthenticated'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PresetConfigPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PreventAuthGuardService.html":{"url":"injectables/PreventAuthGuardService.html","title":"injectable - PreventAuthGuardService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  PreventAuthGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth/auth-guard.service.ts\n        \n\n            \n                Description\n            \n            \n                Prevent a user from accessing a route if they are authenticated.\n\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                google\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                zone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(google: GoogleService, router: Router, zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth/auth-guard.service.ts:47\n                            \n                        \n\n                \n                    \n                            Creates an instance of PreventAuthGuardService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        google\n                                                  \n                                                        \n                                                                    GoogleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Declare the Google Service as google.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Declare the Router as router\n\n                                                        \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Declare NgZone as zone\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth/auth-guard.service.ts:62\n                            \n                        \n\n\n                \n                    \n                            Determines whether the user can go to the page and handle it.\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Whether or not the user can access the route\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            google\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        google:     GoogleService\n\n                    \n                \n                    \n                        \n                            Type :     GoogleService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth/auth-guard.service.ts:55\n                            \n                        \n\n                \n                    \n                        Declare the Google Service as google.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth/auth-guard.service.ts:55\n                            \n                        \n\n                \n                    \n                        Declare the Router as router\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            zone\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zone:     NgZone\n\n                    \n                \n                    \n                        \n                            Type :     NgZone\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth/auth-guard.service.ts:55\n                            \n                        \n\n                \n                    \n                        Declare NgZone as zone\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { CanActivate, Router } from '@angular/router';\nimport { GoogleService } from '../google/google.service';\nimport { Injectable, NgZone } from '@angular/core';\n\n/**\n * Prevent a user from accessing a route if they aren't authenticated.\n * \n * @export\n * @class AuthGuardService\n * @implements {CanActivate}\n */\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n/**\n * Creates an instance of AuthGuardService.\n * @param {GoogleService} google Declare the Google Service as google.\n * @param {Router} router Declare the Router as router\n * @param {NgZone} zone Declare NgZone as zone\n * @memberof AuthGuardService\n */\nconstructor(public google: GoogleService, public router: Router, public zone: NgZone) { }\n  /**\n   * Determines whether the user can go to the page and handle it.\n   * \n   * @returns {boolean} Whether or not the user can access the route\n   * @memberof AuthGuardService\n   */\n  canActivate(): boolean {\n    if (this.google.getAuthStatus()) {\n      return true;\n    }\n    this.zone.run(() => {\n      this.router.navigate(['/']);\n    });\n    return false;\n  }\n}\n\n/**\n * Prevent a user from accessing a route if they are authenticated.\n * \n * @export\n * @class PreventAuthGuardService\n * @implements {CanActivate}\n */\n@Injectable()\nexport class PreventAuthGuardService implements CanActivate {\n/**\n * Creates an instance of PreventAuthGuardService.\n * @param {GoogleService} google Declare the Google Service as google.\n * @param {Router} router Declare the Router as router\n * @param {NgZone} zone Declare NgZone as zone\n * @memberof PreventAuthGuardService\n */\nconstructor(public google: GoogleService, public router: Router, public zone: NgZone) { }\n  /**\n   * Determines whether the user can go to the page and handle it.\n   * \n   * @returns {boolean} Whether or not the user can access the route\n   * @memberof PreventAuthGuardService\n   */\n  canActivate(): boolean {\n    if (!this.google.getAuthStatus()) {\n      return true;\n    }\n    this.zone.run(() => {\n      this.router.navigate(['/app/home']);\n    });\n    return false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RuleInterface.html":{"url":"interfaces/RuleInterface.html","title":"interface - RuleInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RuleInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        classifier\n                                \n                                \n                                            Optional\n                                        constraint\n                                \n                                \n                                            Optional\n                                        data\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        classifier\n                                    \n                                \n                                \n                                    \n                                        classifier:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        constraint\n                                    \n                                \n                                \n                                    \n                                        constraint:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AngularFirestoreCollection } from 'angularfire2/firestore';\n\nexport interface ConfigInterface {\n  activeConfig: string;\n}\n\nexport interface RuleInterface {\n  id: string;\n  name: string;\n  data?: any;\n  classifier?: string;\n  constraint?: string;\n}\n\nexport interface GroupFolderInterface {\n  name?: string;\n  folderID?: string;\n}\n\nexport interface GroupInterface {\n  id: string;\n  name: string;\n  rules: Array;\n  source: GroupFolderInterface;\n  destination?: GroupFolderInterface;\n  createFolder?: FolderCreation;\n}\n\nexport interface ConfigsInterface {\n  id: string;\n  name: string;\n  groups: Array;\n}\n\nexport interface UserDocument {\n  activeConfig: string;\n  configs: AngularFirestoreCollection;\n}\n\nexport interface FolderCreation {\n  parent: {\n    folderID: string | undefined;\n    name: string | null;\n  };\n  prefix: {\n    type: string | null;\n    value: string;\n  };\n  name: {\n    type: string | null;\n    value: string;\n  };\n  suffix: {\n    type: string | null;\n    value: string;\n  };\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tabs/settings/settings.component.ts\n\n\n    \n        Description\n    \n    \n        Declare the component to be shown when the settings tab is selected.\n\n    \n\n\n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n            \n                styleUrls\n                settings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteAccount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(firebase: AngularFirestore, firebaseAuth: AngularFireAuth, google: GoogleService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tabs/settings/settings.component.ts:22\n                            \n                        \n\n                \n                    \n                            Creates an instance of SettingsComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebase\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        google\n                                                  \n                                                        \n                                                                    GoogleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteAccount()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/settings/settings.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { AngularFireAuth } from 'angularfire2/auth';\nimport { AngularFirestore } from 'angularfire2/firestore';\nimport { Component, OnInit } from '@angular/core';\nimport { GoogleService } from '../../../services/google/google.service';\n\n/**\n * Workaround for testing\n */\ndeclare var gapi: any;\n\n/**\n * Declare the component to be shown when the settings tab is selected.\n * \n * @export\n * @class SettingsComponent\n */\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent {\n  /**\n   * Creates an instance of SettingsComponent.\n   * @memberof SettingsComponent\n   */\n  constructor(private firebase: AngularFirestore, private firebaseAuth: AngularFireAuth, private google: GoogleService) { }\n\n  deleteAccount() {\n    this\n      .firebaseAuth\n      .auth\n      .currentUser\n      .delete()\n      .then(() => {\n        this.google.signOut();\n    }, err => console.error)\n  }\n\n}\n\n    \n\n    \n        \n    \n        Delete Account\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Delete Account    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'ConfigListComponent', 'selector': 'app-config-list'},{'name': 'ConfigModalComponent', 'selector': 'app-config-modal'},{'name': 'EditConfigModalComponent', 'selector': 'app-edit-config-modal'},{'name': 'EditConfigPageComponent', 'selector': 'app-edit-config-page'},{'name': 'FolderCreationComponent', 'selector': 'app-folder-creation'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NewConfigPageComponent', 'selector': 'app-new-rule-page'},{'name': 'NewRuleStepperComponent', 'selector': 'app-new-rule-stepper'},{'name': 'PresetConfigComponent', 'selector': 'app-preset-config'},{'name': 'PresetConfigPageComponent', 'selector': 'app-preset-config-page'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'UnauthenticatedComponent', 'selector': 'app-unauthenticated'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SorterService.html":{"url":"injectables/SorterService.html","title":"injectable - SorterService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SorterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/sorter/sorter.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getDriveQuery\n                            \n                            \n                                loadConfig\n                            \n                            \n                                sort\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(google: GoogleService, database: DatabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/sorter/sorter.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        google\n                                                  \n                                                        \n                                                                    GoogleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        database\n                                                  \n                                                        \n                                                                    DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getDriveQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getDriveQuery(group: GroupInterface)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/sorter/sorter.service.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        group\n                                                        \n                                                                    GroupInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadConfig(cb?: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/sorter/sorter.service.ts:117\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cb\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                            \n                        \n                    \n                \n                \n                    \nsort()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/sorter/sorter.service.ts:128\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     ConfigsInterface\n\n                    \n                \n                    \n                        \n                            Type :     ConfigsInterface\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/sorter/sorter.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { ConfigsInterface, GroupInterface } from '../../../interfaces';\nimport { DatabaseService } from '../firebase/database.service';\nimport {\n  DriveMimeType,\n  DriveQueryBuilder\n} from '../../classes/drive-query-builder';\nimport { GoogleService } from '../google/google.service';\nimport { Injectable } from '@angular/core';\nimport { ConfigBuilder } from '../../classes/config-builder';\n\n/**\n * Workaround for testing\n */\ndeclare var gapi: any;\n\n@Injectable()\nexport class SorterService {\n  config: ConfigsInterface;\n\n  constructor(\n    private google: GoogleService,\n    private database: DatabaseService\n  ) {\n    this.loadConfig();\n    this.database.activeConfigChanged.subscribe(() => {\n      this.loadConfig();\n    });\n  }\n\n  private getDriveQuery(group: GroupInterface): string {\n    let driveQuery = new DriveQueryBuilder(group.source.folderID, true);\n    group.rules.forEach(rule => {\n      switch (rule.classifier) {\n        case 'title':\n          let title = rule.data.title;\n          switch (rule.constraint) {\n            case 'include':\n              driveQuery = driveQuery.nameContains(title);\n              break;\n            case 'exclude':\n              driveQuery = driveQuery.nameExcludes(title);\n              break;\n          }\n          break;\n        case 'type':\n          let type = rule.data.fileType;\n          switch (rule.constraint) {\n            case 'include':\n              driveQuery = driveQuery.requiresType(type);\n              break;\n            case 'exclude':\n              driveQuery = driveQuery.excludeType(type);\n              break;\n          }\n          break;\n        case 'owner':\n          let owner = rule.data.owner;\n          switch (rule.constraint) {\n            case 'include':\n              driveQuery = driveQuery.hasOwner(owner);\n              break;\n            case 'exclude':\n              driveQuery = driveQuery.excludesOwner(owner);\n              break;\n          }\n          break;\n        case 'creationDate':\n          switch (rule.constraint) {\n            case 'include':\n              driveQuery = driveQuery.createdAfter(rule.data.date);\n              break;\n            case 'exclude':\n              driveQuery = driveQuery.createdBefore(rule.data.date);\n              break;\n            case 'between':\n              driveQuery = driveQuery\n                .createdAfter(rule.data.firstDate)\n                .createdBefore(rule.data.secondDate);\n              break;\n          }\n          break;\n        case 'lastOpened':\n          switch (rule.constraint) {\n            case 'include':\n              driveQuery = driveQuery.openedAfter(rule.data.date);\n              break;\n            case 'exclude':\n              driveQuery = driveQuery.openedBefore(rule.data.date);\n              break;\n            case 'between':\n              driveQuery = driveQuery\n                .openedAfter(rule.data.firstDate)\n                .openedBefore(rule.data.secondDate);\n              break;\n          }\n          break;\n        case 'lastModified':\n          switch (rule.constraint) {\n            case 'include':\n              driveQuery = driveQuery.modifiedAfter(rule.data.date);\n              break;\n            case 'exclude':\n              driveQuery = driveQuery.modifiedBefore(rule.data.date);\n              break;\n            case 'between':\n              driveQuery = driveQuery\n                .modifiedAfter(rule.data.firstDate)\n                .modifiedBefore(rule.data.secondDate);\n              break;\n          }\n          break;\n      }\n    });\n    return driveQuery.get();\n  }\n\n  loadConfig(cb?: Function): void {\n    this.database.getActiveConfig(activeConfig => {\n      if (activeConfig) {\n        this.database.getConfig(activeConfig, config => {\n          this.config = config;\n          if (cb) cb();\n        });\n      }\n    });\n  }\n\n  sort() {\n    return new Promise((resolve, reject) => {\n      const drive = gapi.client.drive;\n      let success = true;\n      this.config.groups.forEach(group => {\n        if (group.destination) {\n          this.google.listFiles(this.getDriveQuery(group), resp => {\n            if (resp.error) {\n              reject(resp.error);\n            } else {\n              resp.files.forEach(file => {\n                this.google.moveFile(\n                  file.id,\n                  group.destination.folderID,\n                  success => {\n                    if (!success) {\n                      success = false;\n                    }\n                  }\n                );\n              }, this);\n            }\n          });\n        } else {\n          let newFolderName = ConfigBuilder.folderNameBuilder(\n            group.createFolder\n          );\n          this.google\n            .createFolder(newFolderName, group.createFolder.parent.folderID)\n            .then(newFolderID => {\n              this.google.listFiles(this.getDriveQuery(group), resp => {\n                if (resp.error) {\n                  reject(resp.error);\n                } else {\n                  resp.files.forEach(file => {\n                    this.google.moveFile(file.id, newFolderID, success => {\n                      if (!success) {\n                        success = false;\n                      }\n                    });\n                  }, this);\n                }\n              });\n            }, err => console.error);\n        }\n      });\n      if (success) resolve();\n      else reject();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/UnNamedPipe.html":{"url":"pipes/UnNamedPipe.html","title":"pipe - UnNamedPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  UnNamedPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/un-named.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        unNamed\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: any, args?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/un-named.pipe.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        args\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'unNamed'\n})\nexport class UnNamedPipe implements PipeTransform {\n  transform(value: any, args?: any): any {\n    return (value.length > 0) ? value : 'No Name'\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UnauthenticatedComponent.html":{"url":"components/UnauthenticatedComponent.html","title":"component - UnauthenticatedComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UnauthenticatedComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/auth/unauthenticated/unauthenticated.component.ts\n\n\n    \n        Description\n    \n    \n        Declare the component to be shown when the user isn't authenticated.\n\n    \n\n\n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-unauthenticated\n            \n\n            \n                styleUrls\n                unauthenticated.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./unauthenticated.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                google\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(google: GoogleService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/auth/unauthenticated/unauthenticated.component.ts:15\n                            \n                        \n\n                \n                    \n                            Creates an instance of UnauthenticatedComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        google\n                                                  \n                                                        \n                                                                    GoogleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Declare the Google Service as google.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/auth/unauthenticated/unauthenticated.component.ts:28\n                            \n                        \n\n\n                \n                    \n                            Method to log the user in.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            google\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        google:     GoogleService\n\n                    \n                \n                    \n                        \n                            Type :     GoogleService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/auth/unauthenticated/unauthenticated.component.ts:21\n                            \n                        \n\n                \n                    \n                        Declare the Google Service as google.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { GoogleService } from '../../../services/google/google.service';\n\n/**\n * Declare the component to be shown when the user isn't authenticated.\n *\n * @export\n * @class UnauthenticatedComponent\n */\n@Component({\n  selector: 'app-unauthenticated',\n  templateUrl: './unauthenticated.component.html',\n  styleUrls: ['./unauthenticated.component.scss']\n})\nexport class UnauthenticatedComponent {\n  /**\n   * Creates an instance of UnauthenticatedComponent.\n   * @param {GoogleService} google Declare the Google Service as google.\n   * @memberof UnauthenticatedComponent\n   */\n  constructor(public google: GoogleService) {}\n\n  /**\n   * Method to log the user in.\n   *\n   * @memberof UnauthenticatedComponent\n   */\n  login() {\n    this.google.signIn();\n  }\n}\n\n    \n\n    \n        \n  \n    G-Drive Sorter\n    An organized Google Drive™ has never been easier\n    Get Organized\n  \n\n\n  \n    \n      view_list\n      Effectively Sort Files\n      Sorting your drive only requires a quick visit to this website. And we do the rest of the work for you!\n    \n    \n      accessibility\n      Simplistic Use\n      Preset configurations and a simplistic user interface makes the G-Drive sorter suitable for all Google Drive users.\n    \n    \n      art_track\n      Fully Customizable\n      Fully customizable configurations that sorts all Google Drive files based on type, creation date, name, current owner, and much more.\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      G-Drive Sorter    An organized Google Drive™ has never been easier    Get Organized              view_list      Effectively Sort Files      Sorting your drive only requires a quick visit to this website. And we do the rest of the work for you!              accessibility      Simplistic Use      Preset configurations and a simplistic user interface makes the G-Drive sorter suitable for all Google Drive users.              art_track      Fully Customizable      Fully customizable configurations that sorts all Google Drive files based on type, creation date, name, current owner, and much more.      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'ConfigListComponent', 'selector': 'app-config-list'},{'name': 'ConfigModalComponent', 'selector': 'app-config-modal'},{'name': 'EditConfigModalComponent', 'selector': 'app-edit-config-modal'},{'name': 'EditConfigPageComponent', 'selector': 'app-edit-config-page'},{'name': 'FolderCreationComponent', 'selector': 'app-folder-creation'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NewConfigPageComponent', 'selector': 'app-new-rule-page'},{'name': 'NewRuleStepperComponent', 'selector': 'app-new-rule-stepper'},{'name': 'PresetConfigComponent', 'selector': 'app-preset-config'},{'name': 'PresetConfigPageComponent', 'selector': 'app-preset-config-page'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'UnauthenticatedComponent', 'selector': 'app-unauthenticated'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UnauthenticatedComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserDocument.html":{"url":"interfaces/UserDocument.html","title":"interface - UserDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        activeConfig\n                                \n                                \n                                        configs\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activeConfig\n                                    \n                                \n                                \n                                    \n                                        activeConfig:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        configs\n                                    \n                                \n                                \n                                    \n                                        configs:     AngularFirestoreCollection\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AngularFirestoreCollection\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AngularFirestoreCollection } from 'angularfire2/firestore';\n\nexport interface ConfigInterface {\n  activeConfig: string;\n}\n\nexport interface RuleInterface {\n  id: string;\n  name: string;\n  data?: any;\n  classifier?: string;\n  constraint?: string;\n}\n\nexport interface GroupFolderInterface {\n  name?: string;\n  folderID?: string;\n}\n\nexport interface GroupInterface {\n  id: string;\n  name: string;\n  rules: Array;\n  source: GroupFolderInterface;\n  destination?: GroupFolderInterface;\n  createFolder?: FolderCreation;\n}\n\nexport interface ConfigsInterface {\n  id: string;\n  name: string;\n  groups: Array;\n}\n\nexport interface UserDocument {\n  activeConfig: string;\n  configs: AngularFirestoreCollection;\n}\n\nexport interface FolderCreation {\n  parent: {\n    folderID: string | undefined;\n    name: string | null;\n  };\n  prefix: {\n    type: string | null;\n    value: string;\n  };\n  name: {\n    type: string | null;\n    value: string;\n  };\n  suffix: {\n    type: string | null;\n    value: string;\n  };\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/animations.ts\n            \n            \n                variable\n            \n            \n                fabAnimation\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/animations.ts\n            \n            \n                variable\n            \n            \n                fadeOutIn\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/animations.ts\n            \n            \n                variable\n            \n            \n                routerAnimation\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/animations.ts\n            \n            \n                variable\n            \n            \n                slideDown\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/animations.ts\n            \n            \n                variable\n            \n            \n                slideLeft\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/animations.ts\n            \n            \n                variable\n            \n            \n                slideRight\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                25 %\n                (4/16)\n            \n        \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                variable\n            \n            \n                gapi\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/classes/config-builder.ts\n            \n            \n                class\n            \n            \n                ConfigBuilder\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/app/classes/drive-query-builder.ts\n            \n            \n                class\n            \n            \n                DriveQueryBuilder\n            \n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                    src/app/components/auth/unauthenticated/unauthenticated.component.ts\n            \n            \n                component\n            \n            \n                UnauthenticatedComponent\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/components/shared/config-modal/config-modal.component.ts\n            \n            \n                component\n            \n            \n                ConfigModalComponent\n            \n            \n                0 %\n                (0/31)\n            \n        \n        \n            \n                \n                    src/app/components/shared/edit-config-modal/edit-config-modal.component.ts\n            \n            \n                component\n            \n            \n                EditConfigModalComponent\n            \n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                    src/app/components/shared/edit-config-page/edit-config-page.component.ts\n            \n            \n                component\n            \n            \n                EditConfigPageComponent\n            \n            \n                0 %\n                (0/31)\n            \n        \n        \n            \n                \n                    src/app/components/shared/folder-creation/folder-creation.component.ts\n            \n            \n                component\n            \n            \n                FolderCreationComponent\n            \n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                    src/app/components/shared/new-config-page/new-config-page.component.ts\n            \n            \n                component\n            \n            \n                NewConfigPageComponent\n            \n            \n                0 %\n                (0/32)\n            \n        \n        \n            \n                \n                    src/app/components/shared/new-rule-stepper/new-rule-stepper.component.ts\n            \n            \n                component\n            \n            \n                NewRuleStepperComponent\n            \n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                    src/app/components/shared/new-rule-stepper/new-rule-stepper.component.ts\n            \n            \n                variable\n            \n            \n                DEFAULT_VALUE_ACCESSOR\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/components/tabs/config/config-list/config-list.component.ts\n            \n            \n                component\n            \n            \n                ConfigListComponent\n            \n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                    src/app/components/tabs/config/config-list/config-list.component.ts\n            \n            \n                class\n            \n            \n                ConfigDataSource\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                    src/app/components/tabs/config/config-list/config-list.component.ts\n            \n            \n                interface\n            \n            \n                Config\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/components/tabs/config/config.component.ts\n            \n            \n                component\n            \n            \n                ConfigComponent\n            \n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                    src/app/components/tabs/config/preset-config-page/preset-config-page.component.ts\n            \n            \n                component\n            \n            \n                PresetConfigPageComponent\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                    src/app/components/tabs/config/preset-config/preset-config.component.ts\n            \n            \n                component\n            \n            \n                PresetConfigComponent\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                    src/app/components/tabs/config/presets.ts\n            \n            \n                variable\n            \n            \n                presets\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/components/tabs/config/presets.ts\n            \n            \n                variable\n            \n            \n                quartersArray\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/components/tabs/home/home.component.ts\n            \n            \n                component\n            \n            \n                HomeComponent\n            \n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                    src/app/components/tabs/settings/settings.component.ts\n            \n            \n                component\n            \n            \n                SettingsComponent\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    src/app/components/tabs/settings/settings.component.ts\n            \n            \n                variable\n            \n            \n                gapi\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/pipes/un-named.pipe.ts\n            \n            \n                pipe\n            \n            \n                UnNamedPipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/services/auth/auth-guard.service.ts\n            \n            \n                injectable\n            \n            \n                AuthGuardService\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    src/app/services/auth/auth-guard.service.ts\n            \n            \n                injectable\n            \n            \n                PreventAuthGuardService\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    src/app/services/firebase/database.service.ts\n            \n            \n                injectable\n            \n            \n                DatabaseService\n            \n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                    src/app/services/google/google.service.ts\n            \n            \n                injectable\n            \n            \n                GoogleService\n            \n            \n                60 %\n                (9/15)\n            \n        \n        \n            \n                \n                    src/app/services/google/google.service.ts\n            \n            \n                function\n            \n            \n                folderPicked\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/services/google/google.service.ts\n            \n            \n                variable\n            \n            \n                _folderPicked\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/services/google/google.service.ts\n            \n            \n                variable\n            \n            \n                authInstance\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/services/google/google.service.ts\n            \n            \n                variable\n            \n            \n                folderPicker\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/services/google/google.service.ts\n            \n            \n                variable\n            \n            \n                gapi\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/services/google/google.service.ts\n            \n            \n                variable\n            \n            \n                google\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/services/sorter/sorter.service.ts\n            \n            \n                injectable\n            \n            \n                SorterService\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/app/services/sorter/sorter.service.ts\n            \n            \n                variable\n            \n            \n                gapi\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/interfaces.ts\n            \n            \n                interface\n            \n            \n                ConfigInterface\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/interfaces.ts\n            \n            \n                interface\n            \n            \n                ConfigsInterface\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/interfaces.ts\n            \n            \n                interface\n            \n            \n                FolderCreation\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/interfaces.ts\n            \n            \n                interface\n            \n            \n                GroupFolderInterface\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/interfaces.ts\n            \n            \n                interface\n            \n            \n                GroupInterface\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/interfaces.ts\n            \n            \n                interface\n            \n            \n                RuleInterface\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/interfaces.ts\n            \n            \n                interface\n            \n            \n                UserDocument\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/jestGlobalMocks.ts\n            \n            \n                variable\n            \n            \n                mock\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.0\n        \n            @angular/cdk : 6.0.0\n        \n            @angular/common : ^6.0.0\n        \n            @angular/compiler : ^6.0.0\n        \n            @angular/core : ^6.0.0\n        \n            @angular/forms : ^6.0.0\n        \n            @angular/http : ^6.0.0\n        \n            @angular/material : ^6.0.0\n        \n            @angular/platform-browser : ^6.0.0\n        \n            @angular/platform-browser-dynamic : ^6.0.0\n        \n            @angular/router : ^6.0.0\n        \n            @types/uuid : ^3.4.3\n        \n            angularfire2 : 5.0.0-rc.5-next\n        \n            core-js : ^2.5.4\n        \n            firebase : ^4.13.1\n        \n            hammerjs : ^2.0.8\n        \n            jasmine : ^3.1.0\n        \n            rxjs : ^6.0.0\n        \n            rxjs-compat : 6\n        \n            uuid : ^3.2.1\n        \n            web-animations-js : ^2.3.1\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DriveMimeType   (src/.../drive-query-builder.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/classes/drive-query-builder.ts\n    \n        \n            \n                \n                    \n                        \n                        DriveMimeType\n                    \n                \n                    \n                        \n                            A enumerable of Google Drive file types\n\n                        \n                    \n                        \n                            \n                                 audio\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.audio\n                            \n                        \n                        \n                            \n                                 document\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.document\n                            \n                        \n                        \n                            \n                                 drawing\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.drawing\n                            \n                        \n                        \n                            \n                                 file\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.file\n                            \n                        \n                        \n                            \n                                 folder\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.folder\n                            \n                        \n                        \n                            \n                                 form\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.form\n                            \n                        \n                        \n                            \n                                 fustiontable\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.fusiontable\n                            \n                        \n                        \n                            \n                                 map\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.map\n                            \n                        \n                        \n                            \n                                 photo\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.photo\n                            \n                        \n                        \n                            \n                                 presentation\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.presentation\n                            \n                        \n                        \n                            \n                                 script\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.script\n                            \n                        \n                        \n                            \n                                 site\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.site\n                            \n                        \n                        \n                            \n                                 spreadsheet\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.spreadsheet\n                            \n                        \n                        \n                            \n                                 unknown\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.unknown\n                            \n                        \n                        \n                            \n                                 video\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.video\n                            \n                        \n                        \n                            \n                                 thirdParty\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.drive-sdk\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            folderPicked   (src/.../google.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/google/google.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            folderPicked\n                            \n                            \n                        \n                    \n                \n                \n                    \nfolderPicked(data: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nG-Drive-Sorter   \n\nMain Countributors\n\nBrandon Cravener (Project Manager/Developer)\nFernando Arredondo (Developer)\nLane Faccoldi (Software Tester)\nIvan Abreu-Cespedes (Public Relations)\n\n\nOther Contributors\n\nAshhad Hanafi, made the logo for the app\n\n\nDescription\nThis project solves the problem of constantly needing to organize Google Drive files, by organizing it your way whenever necessary.\n\nFeatures\n\nUser friendly interface.\nCustomizable configuration.\nCompatible with Google Drive and associated accounts.\nFree to use.\n\n\nInstallation\nInstall this project by running:\n\n$ git clone https://github.com/BrandonCravener/G-Drive-Sorter\n$ cd G-Drive-Sorter\n$ git checkout angularjs\n$ yarn global add @angular/cli\n$ yarn\n\nRun with $ ng serve\n\nDocumentation\nAfter installing you can open the documentation with $ yarn run doc:buildandserve. The documentation is auto generated by compdoc.\n\nContribution\n\nProject Management\nIssue Tracker\nRepository\nGitter\n\n\nSupport\nIf there are any major issues with this project, please report them at: contact@brandoncravener.com\n\nLicense\n  This project is licensed under the MIT license.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Brandon Cravener\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthenticatedModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_AppComponent_providers\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthenticatedModule\n\n\n\ncluster_AuthenticatedModule_declarations\n\n\n\ncluster_AuthenticatedModule_exports\n\n\n\ncluster_AuthenticatedModule_providers\n\n\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_declarations\n\n\n\ncluster_ConfigModule_imports\n\n\n\ncluster_ConfigModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nUnauthenticatedComponent\n\nUnauthenticatedComponent\n\nAppModule -->\n\nUnauthenticatedComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nGoogleService\n\nGoogleService\n\nAppComponent -->\n\nGoogleService->AppComponent\n\n\n\nAppModule -->\n\nGoogleService->AppModule\n\n\n\n\n\nAuthenticatedModule\n\nAuthenticatedModule\n\nAppModule -->\n\nAuthenticatedModule->AppModule\n\n\n\n\n\nConfigComponent \n\nConfigComponent \n\nConfigComponent  -->\n\nAuthenticatedModule->ConfigComponent \n\n\n\n\n\nConfigModule\n\nConfigModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\nAuthenticatedModule -->\n\nConfigModule->AuthenticatedModule\n\n\n\n\n\nConfigListComponent \n\nConfigListComponent \n\nConfigListComponent  -->\n\nConfigModule->ConfigListComponent \n\n\n\n\n\nAuthGuardService\n\nAuthGuardService\n\nAppModule -->\n\nAuthGuardService->AppModule\n\n\n\n\n\nPreventAuthGuardService\n\nPreventAuthGuardService\n\nAppModule -->\n\nPreventAuthGuardService->AppModule\n\n\n\n\n\nConfigComponent\n\nConfigComponent\n\nAuthenticatedModule -->\n\nConfigComponent->AuthenticatedModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAuthenticatedModule -->\n\nHomeComponent->AuthenticatedModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nAuthenticatedModule -->\n\nSettingsComponent->AuthenticatedModule\n\n\n\n\n\nDatabaseService\n\nDatabaseService\n\nAuthenticatedModule -->\n\nDatabaseService->AuthenticatedModule\n\n\n\n\n\nSorterService\n\nSorterService\n\nAuthenticatedModule -->\n\nSorterService->AuthenticatedModule\n\n\n\n\n\nConfigListComponent\n\nConfigListComponent\n\nConfigModule -->\n\nConfigListComponent->ConfigModule\n\n\n\n\n\nConfigModalComponent\n\nConfigModalComponent\n\nConfigModule -->\n\nConfigModalComponent->ConfigModule\n\n\n\n\n\nEditConfigModalComponent\n\nEditConfigModalComponent\n\nConfigModule -->\n\nEditConfigModalComponent->ConfigModule\n\n\n\n\n\nEditConfigPageComponent\n\nEditConfigPageComponent\n\nConfigModule -->\n\nEditConfigPageComponent->ConfigModule\n\n\n\n\n\nFolderCreationComponent\n\nFolderCreationComponent\n\nConfigModule -->\n\nFolderCreationComponent->ConfigModule\n\n\n\n\n\nNewConfigPageComponent\n\nNewConfigPageComponent\n\nConfigModule -->\n\nNewConfigPageComponent->ConfigModule\n\n\n\n\n\nNewRuleStepperComponent\n\nNewRuleStepperComponent\n\nConfigModule -->\n\nNewRuleStepperComponent->ConfigModule\n\n\n\n\n\nPresetConfigComponent\n\nPresetConfigComponent\n\nConfigModule -->\n\nPresetConfigComponent->ConfigModule\n\n\n\n\n\nPresetConfigPageComponent\n\nPresetConfigPageComponent\n\nConfigModule -->\n\nPresetConfigPageComponent->ConfigModule\n\n\n\n\n\nUnNamedPipe\n\nUnNamedPipe\n\nConfigModule -->\n\nUnNamedPipe->ConfigModule\n\n\n\n\n\nConfigRoutingModule\n\nConfigRoutingModule\n\nConfigModule -->\n\nConfigRoutingModule->ConfigModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            4 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        14 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        5 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 pipe\n                    \n                \n            \n            \n                \n                    \n                        \n                        3 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        8 interfaces\n                    \n                \n            \n            \n                \n                    \n                        \n                        \n                            4 routes\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTodo\n\nAdd identical name renamer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            _folderPicked   (src/.../google.service.ts)\n                        \n                        \n                            authInstance   (src/.../google.service.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            DEFAULT_VALUE_ACCESSOR   (src/.../new-rule-stepper.component.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            fabAnimation   (src/.../animations.ts)\n                        \n                        \n                            fadeOutIn   (src/.../animations.ts)\n                        \n                        \n                            folderPicker   (src/.../google.service.ts)\n                        \n                        \n                            gapi   (src/.../settings.component.ts)\n                        \n                        \n                            gapi   (src/.../sorter.service.ts)\n                        \n                        \n                            gapi   (src/.../app.component.ts)\n                        \n                        \n                            gapi   (src/.../google.service.ts)\n                        \n                        \n                            google   (src/.../google.service.ts)\n                        \n                        \n                            mock   (src/.../jestGlobalMocks.ts)\n                        \n                        \n                            presets   (src/.../presets.ts)\n                        \n                        \n                            quartersArray   (src/.../presets.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            routerAnimation   (src/.../animations.ts)\n                        \n                        \n                            slideDown   (src/.../animations.ts)\n                        \n                        \n                            slideLeft   (src/.../animations.ts)\n                        \n                        \n                            slideRight   (src/.../animations.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/google/google.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            _folderPicked\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _folderPicked:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authInstance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authInstance:     \n\n                    \n                \n\n                \n                    \n                        Variable for easy reference to the authenitcation instance.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            folderPicker\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        folderPicker:     \n\n                    \n                \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gapi\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gapi:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n                \n                    \n                        Workaround for testing\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            google\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        google:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/app/components/shared/new-rule-stepper/new-rule-stepper.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_VALUE_ACCESSOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DEFAULT_VALUE_ACCESSOR:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NewRuleStepperComponent),\n  multi: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyB-yE9IXT29Vl_eAU7bzvzv5Qe17flfpzM\",\n    authDomain: \"g-drive-sorter-2.firebaseapp.com\",\n    databaseURL: \"https://g-drive-sorter-2.firebaseio.com\",\n    projectId: \"g-drive-sorter-2\",\n    storageBucket: \"g-drive-sorter-2.appspot.com\",\n    messagingSenderId: \"362606538820\"\n  }\n}\n                        \n                    \n\n                \n                    \n                        Environment for development builds\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  firebase: {\n    apiKey: \"AIzaSyB-yE9IXT29Vl_eAU7bzvzv5Qe17flfpzM\",\n    authDomain: \"g-drive-sorter-2.firebaseapp.com\",\n    databaseURL: \"https://g-drive-sorter-2.firebaseio.com\",\n    projectId: \"g-drive-sorter-2\",\n    storageBucket: \"g-drive-sorter-2.appspot.com\",\n    messagingSenderId: \"362606538820\"\n  }\n}\n                        \n                    \n\n                \n                    \n                        Environment for production builds\n\n                    \n                \n\n            \n        \n\n    src/animations.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            fabAnimation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fabAnimation:     \n\n                    \n                \n                    \n                        \n                            Default value : trigger('createConfigFABState', [\n  state(\n    'inactive',\n    style({\n      transform: 'scale(0)'\n    })\n  ),\n  state(\n    'active',\n    style({\n      transform: 'scale(1)'\n    })\n  ),\n  transition('inactive => active', animate('0.1s')),\n  transition('active => inactive', animate('0.1s'))\n])\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fadeOutIn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fadeOutIn:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  query(\n    ':enter, :leave',\n    style({\n      position: 'fixed',\n      width: '100%'\n    }),\n    {\n      optional: true\n    }\n  ),\n  query(\n    ':enter',\n    style({\n      opacity: 0\n    })\n  ),\n  query(\n    ':leave',\n    [\n      style({\n        opacity: 1\n      }),\n      animate(\n        '0.5s ease-out',\n        style({\n          opacity: 0\n        })\n      )\n    ],\n    {\n      optional: true\n    }\n  ),\n  query(\n    ':enter',\n    animate(\n      '0.5s 0.5s ease-in',\n      style({\n        opacity: 1\n      })\n    ),\n    {\n      optional: true\n    }\n  )\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            routerAnimation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        routerAnimation:     \n\n                    \n                \n                    \n                        \n                            Default value : trigger('routerTransition', [\n  // Landing transitions\n  transition('* => landing', fadeOutIn),\n  transition('landing => appHome', fadeOutIn),\n  // Tabs transitions\n  transition('appHome => appConfig', slideLeft),\n  transition('appConfig => appHome', slideRight),\n  transition('appHome => appSettings', slideLeft),\n  transition('appSettings => appHome', slideRight),\n  transition('appConfig => appSettings', slideLeft),\n  transition('appSettings => appConfig', slideRight),\n  // Small screen pages\n  transition('appConfig => appConfigEdit', slideDown),\n  transition('appConfigEdit => appConfig', slideDown),\n  transition('appConfig => appConfigCreate', slideDown),\n  transition('appConfigCreate => appConfig', slideDown),\n  transition('appConfig => appConfigPresets', slideDown),\n  transition('appConfigPresets => appConfig', slideDown),\n  transition('appSettings => appConfigEdit', slideDown),\n  transition('appConfigEdit => appSettings', slideDown),\n  transition('appSettings => appConfigCreate', slideDown),\n  transition('appConfigCreate => appSettings', slideDown),\n  transition('appSettings => appConfigPresets', slideDown),\n  transition('appConfigPresets => appSettings', slideDown),\n  transition('appHome => appConfigEdit', slideDown),\n  transition('appConfigEdit => appHome', slideDown),\n  transition('appHome => appConfigCreate', slideDown),\n  transition('appConfigCreate => appHome', slideDown),\n  transition('appHome => appConfigPresets', slideDown),\n  transition('appConfigPresets => appHome', slideDown)\n])\n                        \n                    \n\n                \n                    \n                        Animation for switching between routes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slideDown\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        slideDown:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  query(\n    ':enter, :leave',\n    style({\n      position: 'fixed',\n      width: '100%',\n      height: '100%'\n    }),\n    {\n      optional: false\n    }\n  ),\n  group([\n    query(\n      ':enter',\n      [\n        style({\n          transform: 'translateY(100%)',\n          opacity: 0\n        }),\n        animate(\n          '0.5s',\n          style({\n            transform: 'translateY(0%)',\n            opacity: 1\n          })\n        )\n      ],\n      {\n        optional: false\n      }\n    ),\n    query(\n      ':leave',\n      [\n        style({\n          transform: 'translateY(0%)',\n          opacity: 1\n        }),\n        animate(\n          '0.5s',\n          style({\n            transform: 'translateY(100%)',\n            opacity: 0\n          })\n        )\n      ],\n      {\n        optional: false\n      }\n    )\n  ])\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slideLeft\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        slideLeft:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  query(\n    ':enter, :leave',\n    style({\n      position: 'fixed',\n      width: '100%'\n    }),\n    {\n      optional: false\n    }\n  ),\n  group([\n    query(\n      ':enter',\n      [\n        style({\n          transform: 'translateX(100%)'\n        }),\n        animate(\n          '0.5s',\n          style({\n            transform: 'translateX(0%)'\n          })\n        )\n      ],\n      {\n        optional: false\n      }\n    ),\n    query(\n      ':leave',\n      [\n        style({\n          transform: 'translateX(0%)'\n        }),\n        animate(\n          '0.5s',\n          style({\n            transform: 'translateX(-100%)'\n          })\n        )\n      ],\n      {\n        optional: false\n      }\n    )\n  ])\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slideRight\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        slideRight:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  query(\n    ':enter, :leave',\n    style({\n      position: 'fixed',\n      width: '100%'\n    }),\n    {\n      optional: false\n    }\n  ),\n  group([\n    query(\n      ':enter',\n      [\n        style({\n          transform: 'translateX(-100%)'\n        }),\n        animate(\n          '0.5s',\n          style({\n            transform: 'translateX(0%)'\n          })\n        )\n      ],\n      {\n        optional: false\n      }\n    ),\n    query(\n      ':leave',\n      [\n        style({\n          transform: 'translateX(0%)'\n        }),\n        animate(\n          '0.5s',\n          style({\n            transform: 'translateX(100%)'\n          })\n        )\n      ],\n      {\n        optional: false\n      }\n    )\n  ])\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/components/tabs/settings/settings.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            gapi\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gapi:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n                \n                    \n                        Workaround for testing\n\n                    \n                \n\n            \n        \n\n    src/app/services/sorter/sorter.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            gapi\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gapi:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n                \n                    \n                        Workaround for testing\n\n                    \n                \n\n            \n        \n\n    src/app/app.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            gapi\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gapi:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n                \n                    \n                        Workaround for testing\n\n                    \n                \n\n            \n        \n\n    src/jestGlobalMocks.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mock\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mock:     \n\n                    \n                \n                    \n                        \n                            Default value : () => {\n  let storage = {};\n  return {\n    getItem: key => key in storage ? storage[key] : null,\n    setItem: (key, value) => storage[key] = value || '',\n    removeItem: key => delete storage[key],\n    clear: () => storage = {},\n  };\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/components/tabs/config/presets.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            presets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        presets:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    id: 'istem',\n    name: 'I-STEM Geometry Preset',\n    category: 'School',\n    description:\n      'A preset configuration for the Wilson High School 9th Grade Geometry I-STEM classes(Periods 3-5).',\n    imageURL: 'assets/images/istem-logo.png',\n    data: {\n      createFolders: [\n        'Geometry',\n        'Physics',\n        'Integrated Engineering and Design'\n      ],\n      groups: [\n        {\n          destination: {\n            presetID: 'Geometry'\n          },\n          name: 'Geometry',\n          rules: [\n            {\n              classifier: 'title',\n              constraint: 'include',\n              data: {\n                title: 'Geo'\n              },\n              name: 'Name'\n            }\n          ],\n          source: {\n            folderID: 'root',\n            name: 'My Drive'\n          }\n        },\n        {\n          destination: {\n            presetID: 'Physics'\n          },\n          name: 'Physics',\n          rules: [\n            {\n              classifier: 'title',\n              constraint: 'include',\n              data: {\n                title: 'Phys'\n              },\n              name: 'Name'\n            }\n          ],\n          source: {\n            folderID: 'root',\n            name: 'My Drive'\n          }\n        },\n        {\n          destination: {\n            presetID: 'Integrated Engineering and Design'\n          },\n          name: 'Integrated Engineering and Design',\n          rules: [\n            {\n              classifier: 'title',\n              constraint: 'include',\n              data: {\n                title: 'IED'\n              },\n              name: 'Name'\n            }\n          ],\n          source: {\n            folderID: 'root',\n            name: 'My Drive'\n          }\n        }\n      ]\n    }\n  }\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            quartersArray\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        quartersArray:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['Quarter 1', 'Quarter 2', 'Quarter 3', 'Quarter 4']\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
