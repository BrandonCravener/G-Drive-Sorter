var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.695,1,1.224]],["body/components/AppComponent.html",[0,1.074,1,2.06,2,0.203,3,0.184,4,0.932,5,0.932,6,0.932,7,0.114,8,1.538,9,1.478,10,2.411,11,3.218,12,1.683,13,2.764,14,0.932,15,0.871,16,1.685,17,1.777,18,2.898,19,2.379,20,1.98,21,1.46,22,3.218,23,1.46,24,3.218,25,0.223,26,0.558,27,2.246,28,4.877,29,2.542,30,4.491,31,3.031,32,2.06,33,4.491,34,5.599,35,4.491,36,4.491,37,4.491,38,4.491,39,4.491,40,0.825,41,4.491,42,4.491,43,3.218,44,2.764,45,4.491,46,3.812,47,3.812,48,0.994,49,2.053,50,5.174,51,1.8,52,1.571,53,1.528,54,3.01,55,2.185,56,2.632,57,1.685,58,2.053,59,1.198,60,1.365,61,0.775,62,0.025,63,0.487,64,0.554,65,0.597,66,1.777,67,1.98,68,3.218,69,2.053,70,1.22,71,1.809,72,2.053,73,3.218,74,2.053,75,1.98,76,2.171,77,2.373,78,2.731,79,3.218,80,2.053,81,3.218,82,2.411,83,1.98,84,2.053,85,2.053,86,2.053,87,2.053,88,1.412,89,2.053,90,0.775,91,2.144,92,1.069,93,3.368,94,2.053,95,1.891,96,2.053,97,2.053,98,2.709,99,1.387,100,2.053,101,3.218,102,2.053,103,2.053,104,4.877,105,1.743,106,2.731,107,2.053,108,1.84,109,2.053,110,3.492,111,2.731,112,5.174,113,2.411,114,2.973,115,1.685,116,2.731,117,2.171,118,2.053,119,2.053,120,1.146,121,0.464,122,3.218,123,0.871,124,1.386,125,1.386,126,0.999,127,2.411,128,2.411,129,2.411,130,1.075,131,1.075,132,1.162,133,1.162,134,1.817,135,1.075,136,0.289,137,0.448,138,2.053,139,2.053,140,2.352,141,1.576,142,0.718,143,2.053,144,1.538,145,2.053,146,2.053,147,2.053,148,2.053,149,2.053,150,2.053,151,1.743,152,2.053,153,2.053,154,2.053,155,2.053,156,2.053,157,2.053,158,2.053,159,2.053,160,2.053,161,3.218,162,1.743,163,2.053,164,2.053,165,2.053,166,2.053,167,2.411,168,1.538,169,1.685,170,1.538,171,1.538,172,2.053,173,2.053,174,2.053,175,1.743,176,1.538,177,2.053,178,1.538,179,2.053,180,4.491,181,3.218,182,1.264,183,1.743,184,1.743,185,1.743,186,3.218,187,1.743,188,1.743,189,2.053,190,2.053,191,3.218,192,2.053,193,2.053,194,3.812,195,1.566,196,3.218,197,3.218,198,1.821,199,3.218,200,2.731,201,3.218,202,3.218,203,0.718,204,1.46,205,1.46,206,1.46,207,0.932,208,0.932,209,0.675,210,1.46,211,0.718,212,0.627,213,0.932,214,0.765,215,1.46,216,0.765,217,1.365,218,0.718,219,1.8,220,0.718,221,0.765,222,0.932,223,0.718,224,0.932,225,0.718,226,0.639,227,0.765,228,0.932,229,0.718,230,1.278,231,0.675,232,0.718,233,0.932,234,0.718,235,0.932,236,0.932,237,0.011,238,0.011]],["title/modules/AppModule.html",[239,1.304,240,2.362]],["body/modules/AppModule.html",[1,2.443,2,0.375,3,0.34,7,0.21,16,2.949,17,2.148,52,2.241,62,0.025,66,1.85,120,1.503,121,0.858,123,1.609,124,2.56,125,2.56,130,1.987,131,1.987,136,0.45,137,0.528,142,1.327,195,1.846,203,1.327,234,2.241,237,0.017,238,0.017,239,1.871,240,4.797,241,2.147,242,3.801,243,3.22,244,3.22,245,3.22,246,3.22,247,3.22,248,3.22,249,3.838,250,3.53,251,3.356,252,3.627,253,3.39,254,2.147,255,3.794,256,3.39,257,4.264,258,3.764,259,3.764,260,5.024,261,1.721,262,3.764,263,3.794,264,5.024,265,3.794,266,5.024,267,3.794,268,5.024,269,4.264,270,2.842,271,5.024,272,3.794,273,3.22,274,2.842,275,2.842,276,2.842,277,3.794,278,3.794,279,3.794,280,3.794,281,3.794,282,3.22,283,3.22,284,3.22,285,3.794,286,3.794,287,3.794]],["title/injectables/AuthGuardService.html",[251,1.833,288,1.304]],["body/injectables/AuthGuardService.html",[2,0.322,3,0.292,7,0.18,9,1.687,12,2.387,14,1.478,17,2.138,25,0.353,26,0.785,27,2.165,29,2.948,40,1.162,48,1.006,53,1.878,54,3.447,55,3.292,56,3.292,57,1.517,59,1.94,60,2.208,61,0.785,62,0.025,63,0.353,64,0.557,65,0.605,66,2.206,67,3.464,70,1.332,77,2.98,88,1.614,95,1.488,108,1.488,120,1.104,121,0.736,123,1.381,136,0.505,137,0.783,140,3.207,141,2.236,169,2.372,170,2.441,171,2.441,237,0.015,238,0.015,251,3.29,252,3.349,288,2.097,289,4.589,290,2.441,291,4.42,292,4.004,293,4.589,294,3.845,295,4.936,296,2.005,297,3.257,298,3.257,299,4.42,300,4.133,301,3.902,302,2.948,303,3.205,304,5.208,305,2.441,306,3.394,307,3.394]],["title/modules/AuthenticatedModule.html",[239,1.304,249,2.154]],["body/modules/AuthenticatedModule.html",[0,1.019,2,0.388,3,0.352,7,0.217,9,1.461,16,3.181,19,1.461,20,2.414,29,2.907,62,0.025,66,1.881,70,1.089,120,1.466,121,0.887,124,2.647,125,2.647,136,0.565,137,0.714,141,1.558,195,1.909,203,1.372,209,2.273,223,2.262,232,2.262,237,0.017,238,0.017,239,2.263,241,2.22,242,2.647,249,4.358,250,3.569,253,3.466,254,2.22,256,3.864,257,4.359,258,3.848,259,3.848,261,1.78,262,3.848,274,3.848,284,3.33,303,3.161,308,3.33,309,3.33,310,3.923,311,3.33,312,3.33,313,3.661,314,3.923,315,4.359,316,2.939,317,4.86,318,4.359,319,4.359,320,2.939,321,4.359,322,4.359,323,4.359,324,4.359,325,3.33,326,3.923,327,3.923,328,3.33,329,3.923,330,3.33,331,3.848,332,3.33]],["title/interfaces/Config.html",[212,0.45,333,0.525]],["body/interfaces/Config.html",[2,0.42,3,0.484,7,0.235,25,0.46,26,0.936,62,0.025,63,0.75,64,0.639,88,1.474,90,1.74,92,1.103,136,0.615,212,0.764,226,0.842,237,0.018,238,0.018,333,1.038,334,1.8,335,2.485,336,1.685,337,1.889,338,1.484,339,1.835,340,1.31,341,1.8,342,1.8,343,1.953,344,1.925,345,2.012,346,1.775,347,1.484,348,1.685,349,2.485,350,1.8,351,1.8,352,1.581,353,2.361,354,1.581,355,1.31,356,1.31,357,1.484,358,2.012,359,1.8,360,1.8,361,1.581,362,1.581,363,1.8]],["title/classes/ConfigBuilder.html",[137,0.487,364,1.981]],["body/classes/ConfigBuilder.html",[2,0.307,3,0.455,7,0.172,25,0.337,40,1.123,57,1.491,61,1.4,62,0.025,63,0.728,64,0.575,65,1.079,70,1.383,88,1.195,90,1.628,95,1.02,108,1.02,120,0.928,136,0.278,137,0.609,142,1.532,212,0.708,226,0.869,237,0.015,238,0.015,331,5.096,333,0.466,338,2.168,339,1.702,343,2.206,346,2.036,354,1.156,355,1.795,356,2.1,357,1.927,364,2.479,365,4.519,366,2.095,367,5.075,368,4.38,369,4.38,370,5.075,371,4.38,372,3.105,373,5.512,374,5.512,375,5.512,376,5.373,377,3.105,378,4.38,379,3.105,380,4.38,381,3.105,382,3.105,383,3.105,384,4.679,385,5.512,386,5.512,387,3.105,388,4.308,389,4.38,390,3.105,391,2.635,392,4.519,393,4.38,394,3.105,395,3.105,396,4.38,397,3.105,398,4.308,399,3.105,400,2.635,401,2.326,402,3.105,403,2.635,404,3.105,405,3.105,406,3.105,407,3.105,408,3.105,409,3.105,410,3.105,411,3.105,412,2.635,413,2.635,414,6.33,415,3.802,416,3.105,417,5.12,418,3.425,419,3.105,420,5.12,421,3.712,422,3.105,423,3.105,424,3.105,425,3.105]],["title/components/ConfigComponent.html",[0,0.695,209,1.15]],["body/components/ConfigComponent.html",[0,1.214,1,2.139,2,0.293,3,0.266,4,1.346,5,1.346,6,1.346,7,0.164,9,1.105,12,2.098,13,3.046,14,1.346,15,1.258,18,3.082,19,2.53,21,1.924,23,1.924,25,0.322,26,0.735,27,1.952,32,2.139,40,1.087,44,3.323,48,1.309,54,2.977,55,2.408,56,2.628,57,1.604,59,1.579,60,1.798,61,0.714,62,0.025,63,0.537,64,0.419,65,0.551,66,1.393,70,1.326,71,1.888,83,3.323,91,1.105,92,0.551,95,1.393,99,1.309,108,1.393,120,1.259,121,0.67,123,1.258,126,1.443,134,2.011,136,0.38,137,0.59,141,1.178,142,1.997,169,1.553,203,1.037,204,1.924,205,1.924,206,1.924,207,1.346,208,1.346,209,2.055,210,1.924,211,1.037,212,0.818,213,1.346,214,1.579,215,1.924,216,1.105,217,1.798,218,1.037,219,2.245,220,1.037,221,1.105,222,1.346,223,1.037,224,1.346,225,1.037,226,0.842,227,1.105,228,1.346,229,1.037,230,1.684,231,0.974,232,1.037,233,1.346,234,1.037,235,1.346,236,1.346,237,0.014,238,0.014,261,1.346,276,2.222,361,1.579,426,2.517,427,2.861,428,2.861,429,3.177,430,3.644,431,4.2,432,3.177,433,3.177,434,5.4,435,4.583,436,4.583,437,3.644,438,5.4,439,2.966,440,4.2,441,4.583,442,4.24,443,2.966,444,2.966,445,2.966,446,2.966,447,2.966,448,2.966,449,4.583,450,2.966,451,2.222,452,2.222,453,2.966,454,2.966,455,1.825,456,2.966,457,2.517,458,2.966,459,4.452,460,2.517,461,2.517,462,2.222,463,2.517,464,2.517,465,1.346,466,3.599,467,2.517,468,2.517,469,2.966,470,2.517,471,2.517,472,2.517,473,2.966,474,3.599,475,2.517,476,2.966,477,2.222,478,2.966,479,2.517,480,2.966,481,2.966]],["title/classes/ConfigDataSource.html",[137,0.487,482,2.362]],["body/classes/ConfigDataSource.html",[2,0.346,3,0.314,7,0.193,12,2.018,25,0.379,26,0.824,27,1.776,31,3.915,32,2.392,40,1.22,48,1.08,51,2.453,52,2.029,57,1.694,61,1.302,62,0.025,63,0.679,64,0.574,65,1.004,70,1.327,71,1.89,91,2.161,92,1.077,99,1.792,120,1.23,126,1.702,130,1.832,136,0.314,137,0.662,142,2.122,212,0.838,237,0.016,238,0.016,302,3.284,335,1.389,340,2.082,353,2.147,356,1.08,361,2.563,365,5.006,465,2.453,482,3.211,483,2.969,484,4.589,485,4.925,486,5.802,487,4.757,488,4.925,489,5.802,490,4.038,491,3.498,492,4.757,493,4.038,494,3.498,495,5.406,496,3.498,497,4.757,498,4.757,499,3.498,500,4.757,501,6.607,502,3.498,503,3.498,504,5.406,505,3.498,506,4.757,507,3.498,508,4.038,509,3.498,510,3.498,511,2.969,512,3.498,513,3.498,514,3.498,515,3.498,516,2.969,517,3.498,518,2.928,519,3.498,520,3.498,521,4.757,522,3.498,523,3.498,524,3.498,525,3.498,526,3.498]],["title/interfaces/ConfigInterface.html",[333,0.525,336,1.39]],["body/interfaces/ConfigInterface.html",[2,0.424,3,0.488,7,0.237,25,0.465,26,0.943,62,0.025,63,0.73,64,0.622,88,1.485,90,1.737,92,1.109,136,0.616,212,0.699,226,0.852,237,0.018,238,0.018,333,1.039,334,1.82,335,1.704,336,2.161,337,2.267,338,1.501,339,1.845,340,1.325,341,1.82,342,1.82,343,1.963,344,1.947,345,2.027,346,1.788,347,1.501,348,1.704,349,2.495,350,1.82,351,1.82,352,1.598,353,2.373,354,1.598,355,1.325,356,1.325,357,1.501,358,2.027,359,1.82,360,1.82,361,1.598,362,1.598,363,1.82]],["title/components/ConfigListComponent.html",[0,0.695,211,1.224]],["body/components/ConfigListComponent.html",[0,0.92,1,0.647,2,0.183,3,0.266,4,0.839,5,0.839,6,0.839,7,0.102,12,1.256,13,2.28,15,0.784,17,1.392,18,2.837,19,2.329,21,1.344,23,1.344,25,0.201,26,0.513,27,1.951,31,3.505,32,2.309,40,0.76,44,2.607,48,0.915,51,1.681,52,1.481,53,1.011,54,2.527,55,1.803,56,2.061,57,1.676,59,1.38,61,1.116,62,0.025,63,0.633,64,0.605,65,0.86,70,1.296,71,1.887,88,0.808,90,1.49,91,1.578,92,0.786,95,1.392,99,1.144,105,1.57,106,2.514,108,1.829,115,1.94,120,1.18,121,0.418,123,0.784,126,0.9,130,0.969,131,0.969,134,1.578,136,0.166,137,0.257,142,1.946,162,3.596,169,1.551,175,3.145,176,2.776,182,1.823,203,0.647,204,1.344,205,1.344,206,1.344,207,0.839,208,0.839,209,0.608,210,1.344,211,1.481,212,0.811,213,0.839,214,0.689,215,1.344,216,1.103,217,1.796,218,0.647,219,1.681,220,0.647,221,0.689,222,0.839,223,0.647,224,0.839,225,0.647,226,0.588,227,0.689,228,0.839,229,1.036,230,1.471,231,0.608,232,0.647,233,0.839,234,0.647,235,0.839,236,0.839,237,0.01,238,0.01,261,0.839,302,1.047,307,2.219,337,1.729,340,0.571,348,0.735,361,1.726,401,2.219,430,2.5,431,3.145,435,3.596,436,3.596,437,2.859,440,3.145,441,3.596,449,5.12,452,1.386,459,3.891,460,1.57,461,1.57,462,1.386,463,1.57,464,1.57,465,1.922,466,3.596,467,2.514,468,2.514,470,2.514,471,2.514,472,2.514,474,2.514,475,2.514,479,2.514,482,2.859,484,3.596,493,3.934,508,2.514,527,5.577,528,4.923,529,1.57,530,2.859,531,2.962,532,2.962,533,4.236,534,4.236,535,4.236,536,4.236,537,4.236,538,4.236,539,4.236,540,2.514,541,2.962,542,2.514,543,4.236,544,4.236,545,2.514,546,1.85,547,4.236,548,2.962,549,2.962,550,2.962,551,1.85,552,4.635,553,2.962,554,1.85,555,2.514,556,2.962,557,1.85,558,1.85,559,1.85,560,1.85,561,1.85,562,1.85,563,1.85,564,2.962,565,1.85,566,1.85,567,1.85,568,1.85,569,1.85,570,1.85,571,1.85,572,1.85,573,1.85,574,4.236,575,1.85,576,1.85,577,3.596,578,1.248,579,1.85,580,1.386,581,1.138,582,1.386,583,1.85,584,1.85,585,1.85,586,1.57,587,3.705,588,4.236,589,4.236,590,2.962,591,1.85,592,2.962,593,4.236,594,3.705,595,2.962,596,4.236,597,1.85,598,1.85,599,2.962,600,2.962,601,1.85,602,1.85,603,1.85,604,1.386,605,4.635,606,2.962,607,1.57,608,2.962,609,0.969,610,0.969,611,1.57,612,2.962,613,1.85,614,1.85,615,2.962,616,2.962,617,2.962,618,2.219,619,2.962,620,1.85,621,1.85,622,1.85,623,1.85,624,1.85,625,1.85,626,1.85,627,1.85,628,1.85,629,1.85,630,1.85,631,1.57,632,2.962,633,2.514,634,2.962,635,2.962,636,2.962,637,1.57]],["title/modules/ConfigModule.html",[239,1.304,250,1.981]],["body/modules/ConfigModule.html",[2,0.33,3,0.299,7,0.184,16,2.411,19,1.242,20,2.053,62,0.025,66,1.733,70,0.976,120,1.475,121,0.754,124,2.251,125,2.251,136,0.51,137,0.464,141,1.325,195,1.623,203,1.166,211,2.358,212,0.841,214,2.4,216,2.4,218,2.158,220,2.158,225,2.158,226,0.914,227,2.298,229,2.253,231,2.027,237,0.016,238,0.016,239,2.118,241,1.888,242,2.251,250,4.036,253,3.107,254,1.888,256,3.559,258,3.45,259,3.45,261,1.513,262,3.45,274,3.45,315,3.908,316,2.499,317,4.476,318,3.908,319,3.908,320,2.499,321,3.908,322,3.908,323,3.908,324,3.908,330,2.831,331,3.45,332,2.831,451,2.499,452,3.45,528,2.499,580,2.499,581,2.053,582,2.499,638,2.831,639,2.831,640,2.831,641,2.831,642,3.797,643,3.797,644,3.335,645,4.605,646,4.605,647,4.605,648,4.605,649,4.605,650,4.605,651,4.605,652,4.605,653,4.605,654,4.605,655,4.605,656,4.605,657,3.335,658,3.908,659,2.499,660,4.476,661,3.335,662,2.499,663,3.335,664,3.908,665,2.499,666,2.831,667,3.335,668,3.335,669,3.335,670,3.908,671,2.251,672,3.335,673,3.335,674,3.335]],["title/modules/ConfigRoutingModule.html",[239,1.304,643,2.154]],["body/modules/ConfigRoutingModule.html",[0,1.264,2,0.441,3,0.4,7,0.247,62,0.025,77,2.959,110,4.299,114,3.34,120,1.454,121,1.008,123,1.89,136,0.5,137,0.62,142,1.559,167,4.773,183,3.784,184,3.784,185,3.784,209,1.831,212,0.86,218,1.949,225,1.949,231,1.831,237,0.019,238,0.019,239,1.66,251,3.434,256,3.761,273,4.731,282,3.784,283,3.784,295,4.773,325,3.784,340,1.967,643,3.43,658,3.784,659,3.34,660,5.161,664,3.784,665,3.34,670,3.784,671,3.008,675,4.458,676,4.458,677,3.784,678,3.784,679,3.784,680,3.784,681,4.458]],["title/interfaces/ConfigsInterface.html",[333,0.525,356,1.081]],["body/interfaces/ConfigsInterface.html",[2,0.415,3,0.481,7,0.232,25,0.455,26,0.93,62,0.025,63,0.748,64,0.651,88,1.464,90,1.739,92,1.098,136,0.614,212,0.69,226,0.833,237,0.018,238,0.018,333,1.036,334,1.78,335,1.667,336,1.667,337,1.876,338,1.467,339,2.034,340,1.296,341,1.78,342,1.78,343,1.943,344,1.904,345,1.998,346,1.762,347,1.467,348,1.667,349,2.475,350,1.78,351,1.78,352,1.563,353,2.558,354,1.563,355,1.296,356,1.657,357,2.179,358,1.998,359,1.78,360,1.78,361,1.563,362,1.563,363,1.78]],["title/injectables/DatabaseService.html",[52,1.224,288,1.304]],["body/injectables/DatabaseService.html",[2,0.197,3,0.178,7,0.11,25,0.216,26,0.544,27,2.12,32,2.3,40,0.997,48,1.201,52,1.098,53,0.543,57,1.731,59,0.741,61,1.334,62,0.025,63,0.633,64,0.607,65,1.028,66,1.031,70,1.426,71,2.174,83,3.409,90,1.626,91,1.902,92,0.948,95,1.031,98,2.516,99,1.802,108,1.277,110,1.343,115,2.516,120,1.018,121,0.45,126,0.968,132,1.126,133,1.126,134,1.169,135,1.042,136,0.178,137,0.277,140,1.042,142,1.36,182,1.225,212,0.765,237,0.011,238,0.011,288,1.448,333,0.471,337,1.098,338,1.544,339,0.615,343,1.756,346,1.45,347,0.696,353,1.908,355,1.363,356,1.65,358,1.902,359,1.331,360,1.331,362,1.644,363,1.649,364,1.126,376,3.747,384,3.747,388,3.3,400,3.3,457,1.689,465,2.003,485,3.747,530,1.343,540,2.665,542,3.747,545,2.665,555,4.954,578,1.343,609,2.985,610,2.799,682,1.491,683,4.415,684,4.415,685,4.415,686,4.415,687,4.415,688,3.14,689,3.747,690,3.888,691,5.106,692,4.415,693,4.415,694,3.14,695,3.14,696,4.415,697,4.415,698,3.14,699,3.14,700,3.14,701,1.99,702,5.138,703,1.99,704,1.99,705,4.415,706,4.415,707,1.99,708,3.14,709,1.99,710,1.99,711,3.14,712,3.307,713,2.89,714,1.99,715,1.99,716,1.99,717,1.99,718,1.99,719,3.14,720,1.99,721,3.3,722,3.14,723,1.99,724,3.14,725,1.99,726,3.888,727,1.99,728,1.99,729,3.14,730,1.99,731,2.665,732,1.99,733,1.99,734,3.14,735,1.99,736,1.99,737,1.99,738,3.14,739,1.99,740,1.99,741,1.99,742,1.99,743,1.343,744,3.3,745,1.689,746,3.14,747,1.99,748,3.14,749,2.665,750,1.99,751,1.99,752,1.99,753,3.888,754,1.99,755,3.14,756,1.689,757,1.99,758,1.99,759,3.888,760,3.825,761,4.271,762,1.99,763,3.14,764,3.14,765,1.99,766,1.99,767,1.99,768,1.99,769,1.99,770,1.99,771,1.99,772,1.99,773,1.99,774,1.99,775,1.99,776,3.307,777,1.99,778,1.99,779,3.888,780,3.888,781,1.99,782,1.99,783,1.99,784,3.14,785,4.805,786,1.99,787,1.99,788,1.99,789,1.99,790,1.225,791,1.99,792,1.689,793,1.99,794,1.689,795,4.415,796,1.99,797,1.99,798,1.99,799,1.99,800,1.99,801,1.99,802,1.99,803,1.99,804,3.14]],["title/classes/DriveQueryBuilder.html",[137,0.487,805,2.362]],["body/classes/DriveQueryBuilder.html",[2,0.188,3,0.171,7,0.377,9,2.32,14,0.865,25,0.329,26,0.526,32,1.507,40,0.778,48,0.588,53,0.828,57,1.614,59,2.146,60,1.286,61,1.483,62,0.025,63,0.716,64,0.656,65,1.143,70,1.423,76,2.908,88,1.176,90,1.657,91,0.71,92,0.354,136,0.339,137,0.654,140,3.135,141,2.414,198,3.388,221,1.408,237,0.01,238,0.01,300,2.047,339,0.937,347,0.666,366,1.286,418,2.908,421,4.324,455,3.084,805,4.685,806,4.757,807,3.916,808,2.575,809,2.273,810,1.476,811,3.033,812,3.033,813,3.033,814,3.033,815,3.033,816,3.033,817,3.033,818,3.033,819,3.033,820,3.033,821,3.033,822,3.033,823,3.033,824,3.033,825,3.033,826,4.704,827,1.906,828,4.309,829,3.033,830,2.047,831,3.033,832,1.906,833,2.575,834,3.033,835,1.906,836,4.352,837,5.882,838,3.033,839,1.906,840,5.986,841,3.033,842,1.906,843,4.317,844,3.033,845,5.762,846,4.309,847,3.657,848,3.033,849,4.212,850,1.906,851,4.309,852,4.63,853,1.906,854,1.906,855,2.139,856,1.906,857,3.208,858,1.906,859,3.033,860,3.033,861,1.906,862,1.906,863,1.906,864,4.253,865,3.033,866,1.906,867,3.033,868,1.906,869,4.309,870,3.033,871,1.906,872,1.906,873,1.906,874,3.779,875,3.033,876,1.906,877,3.033,878,1.906,879,1.906,880,1.617,881,5.341,882,1.617,883,1.617,884,1.617,885,1.617,886,1.617,887,1.428,888,1.617,889,1.617,890,1.617,891,1.617,892,1.617,893,1.617,894,1.617,895,1.617,896,1.617,897,1.617,898,1.617,899,1.617,900,1.617,901,1.617,902,1.617,903,1.617,904,1.617,905,1.617,906,1.617,907,1.617,908,1.617,909,1.617,910,1.617,911,6.077,912,1.906,913,3.033,914,3.033,915,3.779,916,1.906,917,1.906]],["title/interfaces/FolderCreation.html",[333,0.525,346,1.15]],["body/interfaces/FolderCreation.html",[2,0.405,3,0.474,7,0.227,25,0.445,26,0.916,62,0.025,63,0.746,64,0.697,88,1.442,90,1.726,92,1.085,136,0.611,212,0.679,226,0.814,237,0.018,238,0.018,333,1.032,334,1.738,335,1.628,336,1.628,337,1.848,338,1.433,339,1.806,340,1.266,341,1.738,342,1.738,343,1.921,344,1.86,345,1.968,346,1.921,347,2.16,348,1.628,349,2.453,350,2.62,351,2.62,352,1.527,353,2.322,354,1.527,355,1.266,356,1.266,357,1.433,358,1.968,359,1.738,360,1.738,361,1.527,362,1.527,363,1.738,918,6.747]],["title/components/FolderCreationComponent.html",[0,0.695,220,1.224]],["body/components/FolderCreationComponent.html",[0,1.027,1,0.817,2,0.231,3,0.209,4,1.06,5,1.06,6,1.06,7,0.129,12,1.507,13,2.648,15,0.99,17,1.58,18,2.968,19,2.436,20,1.437,21,1.613,23,1.613,25,0.253,26,0.616,27,2.091,32,1.682,40,0.911,44,2.96,48,0.721,53,0.97,57,1.677,61,0.856,62,0.025,63,0.723,64,0.63,65,0.66,70,1.268,71,1.906,88,0.97,91,1.927,92,1.238,95,1.862,99,1.329,108,0.767,120,1.019,121,0.528,131,1.223,134,1.791,136,0.209,137,0.325,142,1.243,178,2.663,203,0.817,204,1.613,205,1.613,206,1.613,207,1.06,208,1.06,209,0.767,210,1.613,211,0.817,212,0.665,213,1.06,214,0.87,215,1.613,216,0.87,217,1.507,218,0.817,219,1.952,220,1.682,221,2.371,222,1.06,223,0.817,224,1.06,225,0.817,226,0.706,227,0.87,228,1.06,229,0.817,230,1.412,231,0.767,232,0.817,233,1.06,234,0.817,235,1.06,236,1.06,237,0.012,238,0.012,254,2.435,261,1.06,296,1.437,333,0.351,345,1.927,346,1.862,347,1.243,348,1.91,349,2.423,350,2.039,351,2.039,355,1.485,398,4.082,418,3.492,421,2.96,455,2.96,465,1.06,511,1.983,609,1.223,611,3.017,662,4.935,790,1.437,794,1.983,810,2.094,919,5.592,920,1.983,921,4.082,922,3.554,923,3.554,924,4.809,925,4.809,926,4.809,927,4.809,928,5.174,929,4.809,930,3.554,931,4.809,932,4.303,933,4.809,934,4.303,935,3.224,936,3.603,937,2.336,938,2.336,939,4.303,940,2.336,941,2.336,942,2.336,943,2.336,944,2.336,945,2.336,946,3.554,947,4.809,948,2.336,949,2.336,950,2.336,951,2.336,952,2.399,953,5.174,954,2.336,955,2.336,956,2.336,957,2.336,958,2.336,959,2.336,960,2.336,961,4.303,962,3.554,963,2.336,964,2.336,965,2.336,966,2.336,967,4.303,968,2.336,969,2.336,970,3.554,971,2.336,972,2.336,973,3.554,974,2.336,975,2.336,976,3.554,977,2.336,978,3.554,979,2.336,980,5.451]],["title/injectables/GoogleService.html",[17,1.15,288,1.304]],["body/injectables/GoogleService.html",[2,0.223,3,0.202,7,0.191,9,0.838,14,1.021,17,2.049,25,0.244,26,0.599,27,1.765,29,3.04,32,1.78,40,0.886,46,4.004,47,4.004,48,1.067,51,1.567,52,1.65,53,1.389,57,1.637,59,1.566,60,1.783,61,1.347,62,0.025,63,0.699,64,0.553,65,1.038,66,1.135,67,2.126,70,1.388,71,2.208,76,2.331,82,1.686,83,2.126,88,1.147,90,1.65,91,1.566,92,0.781,95,1.135,98,2.813,99,1.727,120,1,121,0.509,126,1.095,132,1.274,133,1.274,134,1.287,135,1.178,136,0.31,137,0.656,140,1.178,141,2.221,142,1.78,151,1.91,168,1.686,194,4.004,195,1.681,212,0.444,221,1.757,237,0.012,238,0.012,239,1.287,288,1.566,292,3.306,303,2.126,339,0.695,347,1.878,355,1.067,455,2.126,530,1.519,610,1.178,702,2.932,712,4.434,713,3.574,721,5.024,731,3.569,743,1.519,744,4.004,745,1.91,749,4.559,756,2.932,760,2.588,761,2.588,776,1.686,807,2.38,808,2.932,809,1.686,849,1.686,852,1.91,887,1.686,981,1.519,982,3.455,983,4.717,984,4.717,985,4.717,986,3.625,987,4.717,988,3.455,989,3.455,990,3.455,991,4.717,992,3.455,993,2.25,994,3.455,995,3.455,996,2.25,997,2.588,998,2.25,999,5.371,1000,3.455,1001,2.25,1002,3.455,1003,4.004,1004,5.089,1005,2.25,1006,3.455,1007,3.455,1008,2.25,1009,3.455,1010,2.25,1011,2.25,1012,3.455,1013,2.25,1014,2.25,1015,3.455,1016,4.717,1017,2.25,1018,2.25,1019,3.455,1020,2.331,1021,4.717,1022,3.455,1023,2.25,1024,3.455,1025,1.91,1026,1.91,1027,1.519,1028,1.91,1029,1.91,1030,1.91,1031,3.15,1032,1.686,1033,1.91,1034,3.455,1035,2.25,1036,2.25,1037,1.686,1038,2.25,1039,2.25,1040,2.25,1041,2.25,1042,2.25,1043,2.25,1044,2.25,1045,3.455,1046,2.25,1047,2.25,1048,2.25,1049,2.25,1050,2.25,1051,2.25,1052,2.25,1053,2.25,1054,2.25,1055,2.25,1056,2.25,1057,2.25,1058,2.25,1059,2.25,1060,2.25,1061,2.25,1062,2.25,1063,2.25,1064,2.25,1065,5.089,1066,3.455,1067,4.717,1068,3.455,1069,3.455,1070,2.25,1071,2.25,1072,3.455,1073,2.25,1074,2.25,1075,2.25,1076,3.455,1077,2.25,1078,2.25,1079,2.25,1080,2.25]],["title/interfaces/GroupFolderInterface.html",[333,0.525,343,1.15]],["body/interfaces/GroupFolderInterface.html",[2,0.411,3,0.478,7,0.23,25,0.451,26,0.924,62,0.025,63,0.747,64,0.65,65,1.22,88,1.694,90,1.738,92,1.093,136,0.613,212,0.685,226,0.825,237,0.018,238,0.018,333,1.034,334,1.763,335,1.651,336,1.651,337,1.865,338,1.454,339,1.818,340,1.284,341,1.763,342,1.763,343,2.04,344,2.817,345,2.392,346,1.752,347,1.454,348,1.651,349,2.466,350,1.763,351,1.763,352,1.548,353,2.338,354,1.548,355,1.284,356,1.284,357,1.454,358,1.986,359,1.763,360,1.763,361,1.548,362,1.548,363,1.763]],["title/interfaces/GroupInterface.html",[333,0.525,352,1.304]],["body/interfaces/GroupInterface.html",[2,0.399,3,0.57,7,0.223,25,0.438,26,0.907,62,0.025,63,0.744,64,0.672,65,1.14,88,1.428,90,1.734,92,1.078,136,0.61,212,0.672,226,1.219,237,0.018,238,0.018,333,1.029,334,1.712,335,1.603,336,1.603,337,1.83,338,1.412,339,2.013,340,1.246,341,1.712,342,1.712,343,2.18,344,1.831,345,1.949,346,2.018,347,1.412,348,1.603,349,2.439,350,1.712,351,1.712,352,1.949,353,2.527,354,2.287,355,1.896,356,1.246,357,1.412,358,1.949,359,1.712,360,1.712,361,1.503,362,1.503,363,1.712]],["title/components/HomeComponent.html",[0,0.695,223,1.224]],["body/components/HomeComponent.html",[0,1.264,1,1.038,2,0.294,3,0.266,4,1.347,5,1.347,6,1.347,7,0.164,9,1.106,12,2.1,13,3.047,14,1.347,15,1.259,18,3.083,19,2.531,21,1.925,23,1.925,25,0.322,26,0.735,27,1.953,31,2.863,32,1.998,40,1.088,44,3.325,48,1.31,51,2.246,52,1.889,53,1.158,54,2.978,55,2.065,56,2.629,57,1.524,59,1.58,60,1.799,61,0.715,62,0.025,63,0.537,64,0.42,65,0.551,66,1.394,70,1.049,71,1.731,83,2.611,90,1.022,91,1.58,92,0.788,95,1.627,99,1.31,108,0.975,113,4.048,117,2.863,120,1.211,121,0.671,123,1.259,130,1.555,134,2.012,136,0.38,137,0.59,141,1.685,142,1.038,144,2.224,168,2.224,169,1.555,182,2.611,203,1.038,204,1.925,205,1.925,206,1.925,207,1.347,208,1.347,209,0.975,210,1.925,211,1.038,212,0.804,213,1.347,214,1.106,215,1.925,216,1.106,217,1.799,218,1.038,219,2.246,220,1.038,221,1.106,222,1.347,223,2.227,224,1.347,225,1.038,226,0.842,227,1.106,228,1.347,229,1.038,230,1.685,231,0.975,232,1.038,233,1.347,234,1.038,235,1.347,236,1.347,237,0.014,238,0.014,261,1.347,301,3.179,303,2.611,313,3.463,328,2.52,337,1.038,401,2.224,427,2.863,428,2.863,429,3.179,430,2.004,604,2.224,609,2.593,610,1.555,631,4.203,633,3.602,637,4.203,810,2.409,935,3.71,936,4.048,952,4.298,1081,2.52,1082,4.243,1083,4.243,1084,5.944,1085,5.402,1086,5.402,1087,5.402,1088,2.52,1089,4.243,1090,2.969,1091,2.969,1092,2.969,1093,2.969,1094,2.969,1095,2.52,1096,4.243,1097,4.243,1098,2.969,1099,2.969,1100,2.969,1101,2.969,1102,2.969,1103,2.969,1104,2.969,1105,2.52,1106,4.243,1107,3.602]],["title/interfaces/JSONConfiguration.html",[333,0.525,362,1.304]],["body/interfaces/JSONConfiguration.html",[2,0.415,3,0.481,7,0.232,25,0.455,26,0.93,62,0.025,63,0.726,64,0.651,88,1.464,90,1.735,92,1.098,136,0.614,212,0.828,226,0.833,237,0.018,238,0.018,333,1.036,334,1.78,335,1.667,336,1.667,337,2.252,338,1.467,339,1.826,340,1.296,341,1.78,342,1.78,343,1.943,344,1.904,345,1.998,346,1.762,347,1.467,348,1.667,349,2.475,350,1.78,351,1.78,352,1.563,353,2.558,354,1.563,355,1.296,356,1.296,357,1.467,358,2.321,359,1.78,360,1.78,361,1.563,362,1.998,363,2.643]],["title/components/PresetConfigComponent.html",[0,0.695,229,1.224]],["body/components/PresetConfigComponent.html",[0,1.074,1,0.905,2,0.256,3,0.232,4,1.175,5,1.175,6,1.175,7,0.143,12,1.629,15,1.098,17,1.664,18,3.019,19,2.479,21,1.742,23,1.742,25,0.281,26,0.666,27,2.212,32,1.981,40,0.985,48,1.186,51,2.077,52,1.771,53,1.249,54,3.129,55,2.632,56,2.757,57,1.629,61,0.925,62,0.025,63,0.587,64,0.501,65,0.713,70,1.146,71,1.601,90,1.103,91,2.015,92,1.004,95,1.504,98,2.397,99,1.564,108,1.664,120,1.304,121,0.585,123,1.098,126,1.26,130,1.356,131,1.356,134,1.886,136,0.232,137,0.36,142,1.981,144,1.94,198,2.174,203,0.905,204,1.742,205,1.742,206,1.742,207,1.175,208,1.175,209,0.851,210,1.742,211,0.905,212,0.827,213,1.175,214,0.964,215,1.742,216,0.964,217,1.629,218,0.905,219,2.077,220,0.905,221,1.705,222,1.175,223,0.905,224,1.175,225,0.905,226,0.762,227,0.964,228,1.175,229,1.771,230,2.73,231,0.851,232,0.905,233,1.175,234,0.905,235,1.175,236,1.175,237,0.013,238,0.013,261,1.175,339,0.799,345,0.964,355,0.799,357,0.905,364,1.465,391,2.198,392,3.794,430,3.089,432,2.877,433,2.877,437,3.418,465,1.742,477,3.794,578,1.747,581,3.958,586,2.198,609,1.356,610,1.356,618,3.794,743,1.747,790,2.364,792,2.198,935,3.43,936,3.794,1037,2.877,1088,2.198,1108,4.818,1109,2.198,1110,4.299,1111,4.299,1112,4.299,1113,3.26,1114,3.84,1115,3.26,1116,2.589,1117,2.877,1118,2.589,1119,2.589,1120,2.589,1121,3.26,1122,2.589,1123,2.589,1124,2.589,1125,2.589,1126,2.589,1127,2.589,1128,2.589,1129,2.589,1130,2.589,1131,2.589,1132,2.589,1133,4.578,1134,4.578,1135,4.578,1136,2.589,1137,2.198,1138,2.589,1139,2.589,1140,2.589,1141,2.589,1142,2.589,1143,2.589,1144,2.589,1145,2.589,1146,2.589,1147,2.589,1148,2.198,1149,2.589,1150,2.589,1151,2.198,1152,2.589,1153,2.589,1154,2.198,1155,2.198,1156,1.94,1157,3.26,1158,3.26,1159,3.26]],["title/components/PresetConfigPageComponent.html",[0,0.695,231,1.15]],["body/components/PresetConfigPageComponent.html",[0,1.164,1,1.112,2,0.314,3,0.285,4,1.442,5,1.442,6,1.442,7,0.176,15,1.348,18,3.112,19,2.555,21,2.021,23,2.021,25,0.345,26,0.772,27,2.242,32,1.557,40,1.142,54,2.853,55,2.501,56,2.167,57,1.715,61,0.766,62,0.024,63,0.558,64,0.508,65,0.59,70,1.181,71,1.948,90,1.073,91,2.264,92,1.128,95,1.044,98,1.665,99,1.587,108,1.689,120,0.944,121,0.719,134,2.075,136,0.285,137,0.442,169,1.665,198,2.521,203,1.112,204,2.021,205,2.021,206,2.021,207,1.442,208,1.442,209,1.044,210,2.021,211,1.112,212,0.886,213,1.442,214,1.184,215,2.021,216,1.184,217,1.889,218,1.112,219,2.332,220,1.112,221,1.184,222,1.442,223,1.112,224,1.442,225,1.112,226,0.884,227,1.184,228,1.442,229,2.373,230,2.758,231,1.83,232,1.112,233,1.442,234,1.112,235,1.442,236,1.442,237,0.015,238,0.015,302,2.521,432,3.337,433,3.337,437,3.469,477,3.851,581,3.609,582,2.382,618,4.675,671,3.469,1037,3.337,1105,2.699,1108,3.851,1110,4.363,1111,4.363,1112,5.297,1113,3.78,1115,2.699,1117,2.382,1121,2.699,1157,3.78,1158,3.78,1159,3.78,1160,2.699,1161,4.454,1162,3.179,1163,6.556,1164,3.179,1165,3.179,1166,3.179,1167,3.179,1168,3.179,1169,3.179,1170,3.179,1171,3.179,1172,3.179,1173,3.179,1174,3.179]],["title/injectables/PreventAuthGuardService.html",[252,1.981,288,1.304]],["body/injectables/PreventAuthGuardService.html",[2,0.323,3,0.292,7,0.18,9,1.689,12,2.388,14,1.48,17,2.138,25,0.354,26,0.786,27,2.165,29,2.95,40,1.163,48,1.007,53,1.878,54,3.447,55,3.293,56,3.293,57,1.518,59,1.941,60,2.21,61,0.786,62,0.025,63,0.354,64,0.557,65,0.605,66,2.207,67,3.466,70,1.332,77,2.981,88,1.615,95,1.489,108,1.489,120,1.105,121,0.737,123,1.383,136,0.505,137,0.783,140,3.208,141,2.237,169,2.374,170,2.444,171,2.444,237,0.015,238,0.015,251,3.099,252,3.557,288,2.098,289,4.59,290,2.444,291,4.423,292,4.005,293,4.59,294,2.768,295,4.938,296,2.007,299,4.423,300,4.135,301,3.904,302,2.95,303,3.207,305,2.444,306,3.397,307,3.397,1175,3.261,1176,3.261,1177,5.211]],["title/interfaces/RuleInterface.html",[333,0.525,338,1.224]],["body/interfaces/RuleInterface.html",[2,0.404,3,0.472,7,0.226,25,0.443,26,0.913,62,0.025,63,0.745,64,0.667,65,1.214,88,1.438,90,1.743,92,1.083,136,0.611,212,0.677,226,0.81,237,0.018,238,0.018,333,1.031,334,1.73,335,1.62,336,1.62,337,1.842,338,1.842,339,2.019,340,1.904,341,2.615,342,2.615,343,1.917,344,1.851,345,1.962,346,1.731,347,1.427,348,1.62,349,2.449,350,1.73,351,1.73,352,1.52,353,2.317,354,1.52,355,1.26,356,1.26,357,1.427,358,1.962,359,1.73,360,1.73,361,1.52,362,1.52,363,1.73]],["title/components/SettingsComponent.html",[0,0.695,232,1.224]],["body/components/SettingsComponent.html",[0,1.273,1,2.125,2,0.347,3,0.315,4,1.593,5,1.593,6,1.593,7,0.194,9,1.308,14,1.593,15,1.489,17,1.909,18,3.152,19,2.607,21,2.164,23,2.164,25,0.381,32,1.894,40,1.223,48,1.473,51,2.458,52,2.032,53,1.478,57,1.49,59,1.777,60,2.023,61,0.846,62,0.025,63,0.588,64,0.347,65,0.652,66,1.78,70,1.148,71,1.894,99,1.473,108,1.154,115,2.498,117,3.922,120,1.232,121,0.794,130,1.839,131,1.839,132,1.988,133,1.988,134,2.263,135,1.839,136,0.428,137,0.664,141,1.395,187,2.981,200,4.049,203,1.228,204,2.164,205,2.164,206,2.164,207,1.593,208,1.593,209,1.154,210,2.164,211,1.228,212,0.781,213,1.593,214,1.308,215,2.164,216,1.308,217,2.023,218,1.228,219,2.458,220,1.228,221,1.308,222,1.593,223,1.228,224,1.593,225,1.228,226,0.947,227,1.308,228,1.593,229,1.228,230,1.895,231,1.154,232,2.281,233,1.593,234,1.228,235,1.593,236,1.593,237,0.016,238,0.016,254,2.7,276,2.631,427,3.219,428,3.219,429,3.574,609,1.839,610,2.498,689,4.933,1178,2.631,1179,4.77,1180,4.77,1181,5.811,1182,5.811,1183,3.512,1184,3.512,1185,3.512,1186,3.512,1187,3.512,1188,3.512,1189,3.512,1190,3.512,1191,3.512,1192,3.512,1193,4.049,1194,4.049,1195,4.049]],["title/injectables/SorterService.html",[288,1.304,313,1.981]],["body/injectables/SorterService.html",[2,0.269,3,0.244,7,0.151,17,1.705,25,0.295,26,0.691,32,2.137,40,1.022,48,1.23,51,2.139,52,1.814,53,1.087,57,1.479,61,1.25,62,0.025,63,0.563,64,0.589,65,0.963,66,0.894,70,1.263,71,1.393,90,0.96,95,1.309,99,1.456,108,1.549,120,1.223,121,0.615,132,1.541,133,1.541,134,1.014,135,1.425,136,0.244,137,0.379,142,2.017,212,0.742,237,0.013,238,0.013,288,1.756,296,1.675,305,2.039,313,2.255,333,0.408,337,1.393,343,1.705,352,1.932,354,1.014,356,1.602,357,0.952,364,1.541,403,2.31,412,4.897,413,2.31,415,4.465,417,5.849,420,5.849,421,1.675,490,3.382,516,2.31,578,1.837,604,2.039,607,2.31,609,2.087,610,1.425,712,3.532,713,2.668,743,2.689,760,2.039,761,2.985,776,2.039,805,1.837,807,1.541,810,1.325,830,3.893,843,2.985,847,4.897,952,3.501,997,2.039,1025,2.31,1026,2.31,1095,2.31,1137,2.31,1148,2.31,1196,2.039,1197,3.985,1198,3.985,1199,3.985,1200,3.985,1201,2.722,1202,3.985,1203,2.722,1204,3.985,1205,2.722,1206,2.722,1207,3.985,1208,6.841,1209,2.722,1210,2.722,1211,2.722,1212,3.382,1213,2.722,1214,2.722,1215,2.722,1216,2.722,1217,2.722,1218,2.722,1219,2.722,1220,2.722,1221,2.722,1222,2.722,1223,2.722,1224,2.722,1225,4.001,1226,2.722,1227,2.722,1228,2.722,1229,2.722,1230,2.722,1231,2.722,1232,2.722,1233,2.722,1234,2.722,1235,2.722,1236,2.722,1237,2.722,1238,2.722,1239,2.722,1240,2.722,1241,2.722,1242,3.985,1243,2.722,1244,2.722,1245,3.985,1246,4.714,1247,4.714,1248,4.714,1249,4.714,1250,2.722,1251,2.722,1252,2.722,1253,5.769,1254,2.722,1255,2.722,1256,2.722,1257,2.722,1258,2.722,1259,2.722,1260,2.722,1261,2.722,1262,2.722,1263,2.722]],["title/interfaces/TutorialInterface.html",[333,0.525,358,1.304]],["body/interfaces/TutorialInterface.html",[2,0.42,3,0.484,7,0.235,25,0.46,26,0.936,62,0.025,63,0.728,64,0.639,88,1.707,90,1.731,92,1.103,136,0.615,212,0.694,226,0.842,237,0.018,238,0.018,333,1.038,334,1.8,335,1.685,336,1.685,337,1.889,338,1.484,339,1.835,340,1.31,341,1.8,342,1.8,343,1.953,344,1.925,345,2.012,346,1.775,347,1.484,348,1.685,349,2.485,350,1.8,351,1.8,352,1.581,353,2.361,354,1.581,355,1.31,356,1.31,357,1.484,358,2.214,359,2.654,360,2.654,361,2.214,362,1.581,363,1.8]],["title/pipes/UnNamedPipe.html",[642,2.154,1264,2.362]],["body/pipes/UnNamedPipe.html",[2,0.499,3,0.452,7,0.279,12,2.139,15,2.139,40,1.293,57,1.293,61,1.215,62,0.024,63,0.721,64,0.499,65,0.936,70,1.274,92,1.115,120,1.069,121,1.14,136,0.452,137,0.702,237,0.02,238,0.02,465,2.288,642,3.698,997,3.778,1264,4.332,1265,5.101,1266,4.281,1267,6.009,1268,4.281,1269,6.009,1270,6.419,1271,5.043,1272,6.009,1273,5.043]],["title/components/UnauthenticatedComponent.html",[0,0.695,234,1.224]],["body/components/UnauthenticatedComponent.html",[0,1.242,1,1.121,2,0.317,3,0.287,4,1.455,5,1.455,6,1.455,7,0.325,9,1.669,10,3.356,14,1.455,15,1.36,17,2.055,18,3.116,19,2.558,21,2.033,23,2.033,25,0.348,26,0.776,27,1.472,29,2.536,40,1.434,48,0.99,53,1.89,57,1.324,59,1.669,60,1.9,61,0.772,62,0.024,63,0.638,64,0.553,65,0.595,66,1.933,67,3.178,70,0.68,71,1.121,76,3.023,99,1.383,115,2.928,120,0.95,121,0.725,131,1.679,134,2.082,136,0.402,137,0.623,140,1.679,141,1.779,188,2.721,203,1.121,204,2.033,205,2.033,206,2.033,207,1.455,208,1.455,209,1.053,210,2.033,211,1.121,212,0.756,213,1.455,214,1.194,215,2.033,216,1.194,217,1.9,218,1.121,219,2.343,220,1.121,221,1.194,222,1.455,223,1.121,224,1.455,225,1.121,226,0.889,227,1.194,228,1.455,229,1.121,230,2.22,231,1.053,232,1.121,233,1.455,234,2.267,235,2.343,236,1.455,237,0.015,238,0.015,292,3.928,293,3.356,296,1.973,306,2.402,333,0.672,421,2.757,427,3.023,810,3.259,836,3.023,843,3.356,921,3.803,952,4.113,1020,3.023,1274,2.721,1275,4.48,1276,4.48,1277,4.48,1278,5.591,1279,3.206,1280,3.206,1281,4.48,1282,3.206,1283,4.745,1284,4.745,1285,4.745,1286,4.48,1287,4.48,1288,4.48,1289,4.48,1290,4.48,1291,4.48,1292,4.48,1293,4.48,1294,4.48,1295,5.591,1296,4.48,1297,4.48,1298,4.48,1299,5.591,1300,4.745,1301,4.48,1302,4.48]],["title/changelog.html",[75,1.805,518,1.805,1303,2.489]],["body/changelog.html",[7,0.296,10,4.015,51,2.431,62,0.021,176,4.015,237,0.021,238,0.021,855,3.033,1155,4.549,1303,5.287,1304,5.359,1305,5.287,1306,5.359,1307,5.359,1308,5.359,1309,5.359,1310,6.228,1311,5.359,1312,5.359,1313,4.549,1314,6.228,1315,5.359,1316,5.359,1317,5.359]],["title/coverage.html",[1318,4.04]],["body/coverage.html",[0,1.341,1,1.082,7,0.171,8,3.273,17,1.016,52,1.082,53,1.192,62,0.025,64,0.306,99,0.955,127,2.318,128,2.318,135,3.04,137,0.705,209,1.016,211,1.082,212,0.827,214,1.152,216,1.152,218,1.082,220,1.082,223,1.082,225,1.082,226,0.867,227,1.152,229,1.082,230,1.229,231,1.016,232,1.082,234,1.082,237,0.015,238,0.015,251,1.62,252,1.751,275,2.318,288,2.162,289,3.273,290,3.273,313,1.751,333,0.965,334,2.727,336,1.229,338,1.082,340,0.955,343,1.016,346,1.016,352,1.152,356,0.955,358,1.152,362,1.152,364,1.751,365,3.273,366,2.948,426,2.626,451,2.318,465,3.255,482,2.088,483,2.626,527,2.626,528,2.318,529,2.626,580,2.318,581,1.904,642,1.904,659,2.318,662,2.318,665,2.318,666,2.626,671,2.088,682,3.795,713,1.751,805,2.088,806,2.318,807,1.751,836,2.088,855,1.751,919,2.626,920,2.626,981,4.179,986,2.948,1027,4.739,1031,2.318,1032,2.318,1081,2.626,1108,3.273,1109,2.626,1156,5.027,1160,4.299,1178,3.273,1196,3.273,1264,2.088,1265,2.626,1266,2.626,1274,2.626,1318,2.626,1319,3.094,1320,3.094,1321,5.114,1322,6.867,1323,2.626,1324,6.431,1325,2.626,1326,2.626,1327,2.626,1328,3.094,1329,3.094,1330,4.369,1331,3.094,1332,3.094,1333,3.094,1334,3.094,1335,4.369,1336,5.065,1337,4.369,1338,4.369,1339,3.094,1340,4.369,1341,3.094,1342,3.094,1343,3.094,1344,3.094,1345,3.094,1346,3.094,1347,3.709,1348,2.626,1349,3.094,1350,3.094,1351,3.094,1352,3.094,1353,4.369,1354,3.094,1355,3.094,1356,3.094,1357,4.369,1358,2.626,1359,2.626,1360,3.709,1361,2.626,1362,4.369,1363,3.094,1364,5.065,1365,3.094,1366,2.626,1367,2.626,1368,3.709,1369,2.626,1370,3.094,1371,3.094]],["title/dependencies.html",[241,2.38,1372,2.932]],["body/dependencies.html",[62,0.025,121,1.115,123,2.091,126,2.885,129,3.694,237,0.02,238,0.02,241,2.791,261,2.237,269,5.032,270,4.442,316,3.694,320,3.694,392,3.694,1373,4.93,1374,7.074,1375,4.93,1376,5.929,1377,4.93,1378,4.93,1379,4.93,1380,4.93,1381,4.93,1382,4.93,1383,5.929,1384,4.93,1385,4.93,1386,4.93,1387,4.93,1388,4.93,1389,4.185,1390,4.93,1391,4.93,1392,4.93,1393,4.93,1394,4.93,1395,4.93]],["title/miscellaneous/enumerations.html",[1396,1.66,1397,3.57]],["body/miscellaneous/enumerations.html",[7,0.323,25,0.522,53,1.314,62,0.02,64,0.476,92,1.334,221,1.793,237,0.02,238,0.02,366,3.943,806,3.607,807,3.307,810,2.343,849,4.378,855,2.725,880,4.086,881,6.102,882,4.086,883,4.086,884,4.086,885,4.086,886,4.086,887,3.607,888,4.086,889,4.086,890,4.086,891,4.086,892,4.086,893,4.086,894,4.086,895,4.086,896,4.086,897,4.086,898,4.086,899,4.086,900,4.086,901,4.086,902,4.086,903,4.086,904,4.086,905,4.086,906,4.086,907,4.086,908,4.086,909,4.086,910,4.086,1396,2.725,1397,4.96,1398,4.814]],["title/miscellaneous/functions.html",[713,2.38,1396,1.66]],["body/miscellaneous/functions.html",[25,0.595,61,1.32,62,0.022,63,0.595,64,0.542,65,1.017,237,0.021,238,0.021,340,1.693,713,3.102,981,3.699,986,4.258,1033,4.653,1396,3.102,1399,4.653]],["title/index.html",[25,0.318,75,1.805,518,1.805]],["body/index.html",[7,0.25,9,1.686,19,1.686,27,1.487,53,1.535,62,0.023,115,2.37,198,2.562,237,0.019,238,0.019,292,2.786,333,0.679,455,2.786,810,3.205,833,3.842,855,3.465,857,3.842,1020,3.054,1154,3.842,1195,3.842,1283,4.776,1284,5.197,1285,4.776,1300,3.842,1305,5.699,1389,3.842,1400,4.526,1401,4.526,1402,3.842,1403,3.842,1404,4.526,1405,4.526,1406,4.526,1407,3.842,1408,4.526,1409,4.526,1410,3.842,1411,4.526,1412,4.526,1413,4.526,1414,4.526,1415,4.526,1416,4.526,1417,4.526,1418,4.526,1419,4.526,1420,4.526,1421,4.526,1422,4.526,1423,4.526,1424,4.526,1425,4.526,1426,4.526,1427,4.526,1428,3.842,1429,3.842,1430,6.122,1431,6.122,1432,5.626,1433,4.526,1434,4.526,1435,4.526,1436,4.526,1437,4.526,1438,6.122,1439,4.526,1440,4.526,1441,4.526,1442,4.526,1443,4.526,1444,4.526,1445,4.526,1446,4.526,1447,3.842,1448,5.626,1449,4.526,1450,4.526,1451,4.526,1452,3.842,1453,4.526,1454,4.526,1455,4.526,1456,4.526,1457,4.587,1458,4.526,1459,3.842]],["title/license.html",[75,1.805,518,1.805,1457,2.197]],["body/license.html",[7,0.261,16,2.467,62,0.02,98,2.467,178,3.53,195,2.293,237,0.02,238,0.02,300,3.179,488,3.999,577,3.999,830,4.206,855,2.667,864,3.999,1020,3.892,1313,3.999,1402,3.999,1403,3.999,1410,5.929,1428,3.999,1429,3.999,1457,3.53,1459,3.999,1460,6.233,1461,4.711,1462,5.767,1463,4.711,1464,4.711,1465,4.711,1466,5.767,1467,4.711,1468,6.495,1469,5.767,1470,6.233,1471,4.711,1472,5.767,1473,4.711,1474,4.711,1475,4.711,1476,4.711,1477,4.711,1478,4.711,1479,4.711,1480,4.711,1481,4.711,1482,4.711,1483,4.711,1484,4.711,1485,5.767,1486,5.767,1487,4.711,1488,4.711,1489,5.767,1490,4.711,1491,4.711,1492,4.711,1493,4.711,1494,4.711,1495,4.711,1496,4.711,1497,4.711,1498,4.711,1499,4.711,1500,4.711,1501,4.711,1502,4.711,1503,4.711,1504,4.711,1505,4.711,1506,4.711,1507,4.711]],["title/modules.html",[239,1.773]],["body/modules.html",[62,0.021,237,0.021,238,0.021,239,2.017,240,3.654,249,3.332,250,3.064,270,4.953,643,3.332,1452,5.612,1508,6.611,1509,6.799,1510,5.414,1511,5.414]],["title/overview.html",[1512,4.04]],["body/overview.html",[0,0.779,1,2.364,16,2.054,17,1.996,52,2.002,62,0.024,66,1.289,77,1.909,136,0.352,137,0.546,195,1.909,203,1.372,209,2.165,211,2.305,214,2.133,216,2.133,218,2.002,220,2.002,223,2.002,225,2.002,227,2.133,229,2.002,231,1.881,232,2.002,234,2.002,237,0.017,238,0.017,239,1.913,240,4.791,241,2.22,242,2.647,243,3.33,244,3.33,245,3.33,246,3.33,247,3.33,248,3.33,249,4.3,250,4.072,251,2.998,252,3.241,253,3.466,254,2.22,288,1.461,308,3.33,309,3.33,311,3.33,312,3.33,313,3.241,333,0.589,638,3.33,639,3.33,640,3.33,641,3.33,642,3.524,643,3.524,790,2.414,1264,2.647,1512,3.33,1513,4.359,1514,3.923,1515,3.33,1516,3.33,1517,3.923]],["title/routes.html",[77,2.316]],["body/routes.html",[62,0.022,77,2.741,237,0.022,238,0.022]],["title/todo.html",[75,1.805,518,1.805,1518,2.489]],["body/todo.html",[62,0.022,63,0.606,198,3.161,237,0.022,238,0.022,1518,4.741,1519,5.585,1520,5.585]],["title/miscellaneous/variables.html",[1027,2.838,1396,1.66]],["body/miscellaneous/variables.html",[3,0.346,8,1.477,9,0.734,16,1.032,20,2.378,25,0.214,53,1.387,59,0.734,60,0.836,62,0.025,63,0.665,64,0.632,65,1.121,70,0.418,77,0.959,78,1.673,82,1.477,91,2.311,92,1.176,93,2.644,95,1.912,98,1.032,99,0.609,108,1.571,110,2.963,111,1.673,113,1.477,114,2.334,115,1.631,116,1.673,117,1.33,127,2.895,128,2.895,129,4.258,132,2.707,133,2.707,135,3.285,167,2.334,182,1.917,195,0.959,212,0.497,217,0.836,226,0.767,230,2.115,237,0.011,238,0.011,275,2.895,302,2.485,335,1.744,339,1.477,340,1.477,341,1.638,342,1.638,345,1.439,349,0.783,354,1.439,355,0.609,357,1.535,415,1.477,418,2.963,428,1.33,459,3.29,462,2.334,465,2.17,530,1.33,677,4.059,678,3.279,679,3.279,680,3.279,682,1.477,790,3.129,807,3.468,809,2.334,810,1.88,830,2.607,836,2.607,981,1.33,986,2.607,1003,3.727,1027,2.102,1028,1.673,1029,1.673,1030,1.673,1031,2.895,1032,2.895,1107,1.673,1117,2.895,1151,2.644,1156,3.989,1178,1.477,1193,1.673,1194,2.644,1196,1.477,1212,4.316,1225,1.673,1268,5.267,1321,1.673,1323,4.059,1325,5.574,1326,4.316,1327,4.316,1347,1.673,1348,3.279,1358,1.673,1359,1.673,1360,4.686,1361,1.673,1366,1.673,1367,3.279,1368,1.673,1369,3.279,1396,1.115,1399,4.059,1407,1.673,1447,1.673,1513,1.673,1515,1.673,1516,3.279,1521,1.971,1522,3.116,1523,1.971,1524,1.971,1525,5.084,1526,1.971,1527,1.971,1528,1.971,1529,3.116,1530,1.971,1531,3.116,1532,1.971,1533,1.971,1534,1.971,1535,1.971,1536,1.971,1537,1.971,1538,1.971,1539,3.864,1540,1.971,1541,6.601,1542,1.971,1543,1.971,1544,1.971,1545,3.116,1546,1.971,1547,5.683,1548,5.521,1549,4.391,1550,4.391,1551,5.521,1552,5.683,1553,3.116,1554,1.971,1555,3.116,1556,3.864,1557,1.971,1558,5.084,1559,4.782,1560,4.782,1561,4.782,1562,4.782,1563,1.971,1564,1.971,1565,3.864,1566,3.864,1567,3.864,1568,1.971,1569,3.116,1570,3.116,1571,3.116,1572,4.391,1573,3.116,1574,3.864,1575,1.971,1576,3.864,1577,1.971,1578,1.971,1579,1.971,1580,4.782,1581,1.971,1582,3.116,1583,1.971,1584,1.971,1585,1.971,1586,1.971,1587,1.971,1588,1.971,1589,1.971,1590,1.971,1591,3.864,1592,3.864,1593,3.864,1594,3.864,1595,1.971,1596,1.971,1597,1.971,1598,4.391]]],"invertedIndex":[["",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"interfaces/TutorialInterface.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":465,"title":{},"body":{"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{},"components/PresetConfigComponent.html":{},"pipes/UnNamedPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.5",{"_index":1552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.8.26",{"_index":1395,"title":{},"body":{"dependencies.html":{}}}],["0.9}px",{"_index":615,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["0/1",{"_index":1322,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1331,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1346,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1345,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1339,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1363,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":1342,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":1354,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1362,"title":{},"body":{"coverage.html":{}}}],["0/31",{"_index":1336,"title":{},"body":{"coverage.html":{}}}],["0/32",{"_index":1338,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1364,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1365,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1330,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1357,"title":{},"body":{"coverage.html":{}}}],["06",{"_index":1314,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":790,"title":{},"body":{"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{},"components/PresetConfigComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.0.0",{"_index":1312,"title":{},"body":{"changelog.html":{}}}],["1.5",{"_index":464,"title":{},"body":{"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{}}}],["1/1",{"_index":1324,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":508,"title":{},"body":{"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["100",{"_index":1156,"title":{},"body":{"components/PresetConfigComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["1280",{"_index":461,"title":{},"body":{"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{}}}],["14",{"_index":1514,"title":{},"body":{"overview.html":{}}}],["17/17",{"_index":1332,"title":{},"body":{"coverage.html":{}}}],["19",{"_index":1328,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":462,"title":{},"body":{"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"miscellaneous/variables.html":{}}}],["2.0.8",{"_index":1386,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":1393,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1384,"title":{},"body":{"dependencies.html":{}}}],["2/5",{"_index":1352,"title":{},"body":{"coverage.html":{}}}],["2/9",{"_index":1344,"title":{},"body":{"coverage.html":{}}}],["2018",{"_index":1313,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["22",{"_index":1343,"title":{},"body":{"coverage.html":{}}}],["250",{"_index":173,"title":{},"body":{"components/AppComponent.html":{}}}],["3",{"_index":1516,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["3.1.0",{"_index":1388,"title":{},"body":{"dependencies.html":{}}}],["3.2.1",{"_index":1391,"title":{},"body":{"dependencies.html":{}}}],["3.4.3",{"_index":1381,"title":{},"body":{"dependencies.html":{}}}],["3/7",{"_index":1350,"title":{},"body":{"coverage.html":{}}}],["362606538820",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["4",{"_index":1513,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["4/21",{"_index":1329,"title":{},"body":{"coverage.html":{}}}],["4/4",{"_index":1333,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1351,"title":{},"body":{"coverage.html":{}}}],["42",{"_index":1349,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":1515,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["500",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["5000",{"_index":1104,"title":{},"body":{"components/HomeComponent.html":{}}}],["53",{"_index":1355,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1390,"title":{},"body":{"dependencies.html":{}}}],["6.0.0",{"_index":1374,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":1376,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1353,"title":{},"body":{"coverage.html":{}}}],["640",{"_index":463,"title":{},"body":{"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{}}}],["750",{"_index":1099,"title":{},"body":{"components/HomeComponent.html":{}}}],["8/15",{"_index":1356,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":1517,"title":{},"body":{"overview.html":{}}}],["9th",{"_index":1585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9}px",{"_index":473,"title":{},"body":{"components/ConfigComponent.html":{}}}],["_activeconfigchang",{"_index":683,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["_authstat",{"_index":984,"title":{},"body":{"injectables/GoogleService.html":{}}}],["_closecommand",{"_index":1110,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["_configsubject",{"_index":684,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["_folderpick",{"_index":1032,"title":{},"body":{"injectables/GoogleService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["_folderpicked.asobserv",{"_index":1024,"title":{},"body":{"injectables/GoogleService.html":{}}}],["_folderpicked.error(tru",{"_index":1038,"title":{},"body":{"injectables/GoogleService.html":{}}}],["_folderpicked.next(data.docs[0",{"_index":1036,"title":{},"body":{"injectables/GoogleService.html":{}}}],["abov",{"_index":1484,"title":{},"body":{"license.html":{}}}],["abreu",{"_index":1413,"title":{},"body":{"index.html":{}}}],["accepttutori",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["access",{"_index":293,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{},"components/UnauthenticatedComponent.html":{}}}],["accessor",{"_index":957,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["account",{"_index":1195,"title":{},"body":{"components/SettingsComponent.html":{},"index.html":{}}}],["action",{"_index":577,"title":{},"body":{"components/ConfigListComponent.html":{},"license.html":{}}}],["activ",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["activeconfig",{"_index":337,"title":{},"body":{"interfaces/Config.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"injectables/SorterService.html":{},"interfaces/TutorialInterface.html":{}}}],["activeconfigchang",{"_index":685,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["activeconfigchangesubscript",{"_index":533,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["activeconfignam",{"_index":1084,"title":{},"body":{"components/HomeComponent.html":{}}}],["actual_compon",{"_index":236,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["ad",{"_index":1155,"title":{},"body":{"components/PresetConfigComponent.html":{},"changelog.html":{}}}],["add",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"classes/DriveQueryBuilder.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"index.html":{},"todo.html":{}}}],["addconfig",{"_index":688,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["addconfig(config",{"_index":700,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["addconfig(configbuilder.configfromgroup(group",{"_index":1150,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["addgroup",{"_index":367,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["addgroup(config",{"_index":372,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["addpar",{"_index":1078,"title":{},"body":{"injectables/GoogleService.html":{}}}],["addpreset",{"_index":1113,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["addpreset(presetid",{"_index":1115,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["address",{"_index":846,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["addview(view",{"_index":1060,"title":{},"body":{"injectables/GoogleService.html":{}}}],["adher",{"_index":1308,"title":{},"body":{"changelog.html":{}}}],["afterviewinit",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{}}}],["aizasyb",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["allow",{"_index":1016,"title":{},"body":{"injectables/GoogleService.html":{}}}],["alt",{"_index":762,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["and/or",{"_index":1478,"title":{},"body":{"license.html":{}}}],["angular",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["angular/anim",{"_index":1373,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1375,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/collect",{"_index":509,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["angular/cli",{"_index":1440,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":316,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"dependencies.html":{}}}],["angular/compil",{"_index":1377,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":320,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1378,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"dependencies.html":{}}}],["angular/material/button",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/menu",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/tab",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigRoutingModule.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"injectables/PreventAuthGuardService.html":{},"dependencies.html":{}}}],["angularj",{"_index":1437,"title":{},"body":{"index.html":{}}}],["angularonboardingmodul",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["angularonboardingmodule.forroot(aoconfig",{"_index":287,"title":{},"body":{"modules/AppModule.html":{}}}],["angularonboardingservic",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["anim",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["animate('0.1",{"_index":1545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["anyinvalid",{"_index":975,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["aoconfig",{"_index":275,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["aoservic",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["aoservice.navigatesubject.subscribe(path",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["api",{"_index":983,"title":{},"body":{"injectables/GoogleService.html":{}}}],["apikey",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["app",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"modules/AuthenticatedModule.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"index.html":{}}}],["app.compon",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"components/ConfigComponent.html":{},"components/SettingsComponent.html":{}}}],["app.component.html",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["app.rout",{"_index":278,"title":{},"body":{"modules/AppModule.html":{}}}],["app/config",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"modules/ConfigRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["app/config/cr",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"modules/ConfigRoutingModule.html":{}}}],["app/config/edit",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"modules/ConfigRoutingModule.html":{}}}],["app/config/preset",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"modules/ConfigRoutingModule.html":{}}}],["app/hom",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["app/set",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appconfig",{"_index":677,"title":{},"body":{"modules/ConfigRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["appconfigcr",{"_index":678,"title":{},"body":{"modules/ConfigRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["appconfigedit",{"_index":680,"title":{},"body":{"modules/ConfigRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["appconfigpreset",{"_index":679,"title":{},"body":{"modules/ConfigRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["appdatafold",{"_index":748,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["apphom",{"_index":1558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applic",{"_index":11,"title":{},"body":{"components/AppComponent.html":{}}}],["application/vnd.googl",{"_index":881,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["appmodul",{"_index":240,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approut",{"_index":277,"title":{},"body":{"modules/AppModule.html":{}}}],["apps.audio",{"_index":882,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.docu",{"_index":883,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.draw",{"_index":885,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.driv",{"_index":909,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.fil",{"_index":886,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.fold",{"_index":887,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"miscellaneous/enumerations.html":{}}}],["apps.form",{"_index":889,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.fusiont",{"_index":891,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.map",{"_index":893,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.photo",{"_index":895,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.present",{"_index":897,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.script",{"_index":899,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.sit",{"_index":901,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.spreadsheet",{"_index":903,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.unknown",{"_index":905,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["apps.video",{"_index":907,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["appset",{"_index":1561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aren't",{"_index":294,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{}}}],["arg",{"_index":1270,"title":{},"body":{"pipes/UnNamedPipe.html":{}}}],["aris",{"_index":1507,"title":{},"body":{"license.html":{}}}],["array",{"_index":353,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"interfaces/TutorialInterface.html":{}}}],["arredondo",{"_index":1406,"title":{},"body":{"index.html":{}}}],["art_track",{"_index":1298,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["ashhad",{"_index":1417,"title":{},"body":{"index.html":{}}}],["assets/images/istem",{"_index":1589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["associ",{"_index":1428,"title":{},"body":{"index.html":{},"license.html":{}}}],["audio",{"_index":880,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["authenitc",{"_index":1030,"title":{},"body":{"injectables/GoogleService.html":{},"miscellaneous/variables.html":{}}}],["authent",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"injectables/GoogleService.html":{},"injectables/PreventAuthGuardService.html":{},"components/UnauthenticatedComponent.html":{}}}],["authenticatedmodul",{"_index":249,"title":{"modules/AuthenticatedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules.html":{},"overview.html":{}}}],["authenticatedmodule.forroot",{"_index":285,"title":{},"body":{"modules/AppModule.html":{}}}],["authguardservic",{"_index":251,"title":{"injectables/AuthGuardService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/ConfigRoutingModule.html":{},"injectables/PreventAuthGuardService.html":{},"coverage.html":{},"overview.html":{}}}],["authinst",{"_index":1031,"title":{},"body":{"injectables/GoogleService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authinstance.currentuser.get().getauthresponse().access_token",{"_index":1057,"title":{},"body":{"injectables/GoogleService.html":{}}}],["authinstance.issignedin.get",{"_index":1045,"title":{},"body":{"injectables/GoogleService.html":{}}}],["authinstance.issignedin.listen",{"_index":1042,"title":{},"body":{"injectables/GoogleService.html":{}}}],["authinstance.signin",{"_index":1063,"title":{},"body":{"injectables/GoogleService.html":{}}}],["authinstance.signout",{"_index":1064,"title":{},"body":{"injectables/GoogleService.html":{}}}],["author",{"_index":1498,"title":{},"body":{"license.html":{}}}],["authstat",{"_index":985,"title":{},"body":{"injectables/GoogleService.html":{}}}],["authstatu",{"_index":1044,"title":{},"body":{"injectables/GoogleService.html":{}}}],["auto",{"_index":1444,"title":{},"body":{"index.html":{}}}],["avail",{"_index":1511,"title":{},"body":{"modules.html":{}}}],["base",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/UnauthenticatedComponent.html":{},"changelog.html":{}}}],["basic",{"_index":1533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["beed",{"_index":874,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["befor",{"_index":840,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["behaviorsubject",{"_index":495,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["behaviorsubject(tru",{"_index":498,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["between",{"_index":1225,"title":{},"body":{"injectables/SorterService.html":{},"miscellaneous/variables.html":{}}}],["bodi",{"_index":774,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["boolean",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"interfaces/TutorialInterface.html":{}}}],["bootstrap",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"overview.html":{}}}],["brandon",{"_index":1402,"title":{},"body":{"index.html":{},"license.html":{}}}],["break",{"_index":420,"title":{},"body":{"classes/ConfigBuilder.html":{},"injectables/SorterService.html":{}}}],["bring",{"_index":1535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["brows",{"_index":1509,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":271,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":809,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"miscellaneous/variables.html":{}}}],["builder",{"_index":743,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"components/PresetConfigComponent.html":{},"injectables/SorterService.html":{}}}],["builder.t",{"_index":366,"title":{},"body":{"classes/ConfigBuilder.html":{},"classes/DriveQueryBuilder.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["builder.ts:106",{"_index":871,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:109",{"_index":381,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["builder.ts:117",{"_index":861,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:128",{"_index":842,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:138",{"_index":379,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["builder.ts:139",{"_index":835,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:150",{"_index":839,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:161",{"_index":863,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:172",{"_index":866,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:183",{"_index":873,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:196",{"_index":876,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:209",{"_index":854,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:34",{"_index":377,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["builder.ts:40",{"_index":832,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:48",{"_index":858,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:50",{"_index":827,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:52",{"_index":390,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["builder.ts:6",{"_index":387,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["builder.ts:73",{"_index":850,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:84",{"_index":878,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["builder.ts:95",{"_index":868,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["built",{"_index":859,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["button",{"_index":1534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c",{"_index":1461,"title":{},"body":{"license.html":{}}}],["calculatestart",{"_index":487,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["calculatestart(pag",{"_index":500,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["call",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["callback",{"_index":1004,"title":{},"body":{"injectables/GoogleService.html":{}}}],["canactiv",{"_index":295,"title":{},"body":{"injectables/AuthGuardService.html":{},"modules/ConfigRoutingModule.html":{},"injectables/PreventAuthGuardService.html":{}}}],["cancel",{"_index":1037,"title":{},"body":{"injectables/GoogleService.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["case",{"_index":417,"title":{},"body":{"classes/ConfigBuilder.html":{},"injectables/SorterService.html":{}}}],["catch(err",{"_index":792,"title":{},"body":{"injectables/DatabaseService.html":{},"components/PresetConfigComponent.html":{}}}],["categori",{"_index":1581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cb",{"_index":712,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"injectables/SorterService.html":{}}}],["cb(resp",{"_index":1066,"title":{},"body":{"injectables/GoogleService.html":{}}}],["cb(true",{"_index":1080,"title":{},"body":{"injectables/GoogleService.html":{}}}],["cd",{"_index":1435,"title":{},"body":{"index.html":{}}}],["cesped",{"_index":1414,"title":{},"body":{"index.html":{}}}],["chang",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigListComponent.html":{},"changelog.html":{}}}],["changedetector",{"_index":549,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["changedetectorref",{"_index":547,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["changelog",{"_index":1303,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changelogchang",{"_index":1315,"title":{},"body":{"changelog.html":{}}}],["charg",{"_index":1465,"title":{},"body":{"license.html":{}}}],["checkinterv",{"_index":1144,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["checkout",{"_index":1436,"title":{},"body":{"index.html":{}}}],["choos",{"_index":1536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["claim",{"_index":1501,"title":{},"body":{"license.html":{}}}],["class",{"_index":137,"title":{"classes/ConfigBuilder.html":{},"classes/ConfigDataSource.html":{},"classes/DriveQueryBuilder.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["classes(period",{"_index":1587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["classes/config",{"_index":578,"title":{},"body":{"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"components/PresetConfigComponent.html":{},"injectables/SorterService.html":{}}}],["classes/dr",{"_index":1025,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/SorterService.html":{}}}],["classifi",{"_index":341,"title":{},"body":{"interfaces/Config.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"interfaces/TutorialInterface.html":{},"miscellaneous/variables.html":{}}}],["clear",{"_index":1193,"title":{},"body":{"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["clearconfig",{"_index":689,"title":{},"body":{"injectables/DatabaseService.html":{},"components/SettingsComponent.html":{}}}],["clearinterval(checkinterv",{"_index":1145,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["clearinterval(databaseinitalizedcheck",{"_index":1098,"title":{},"body":{"components/HomeComponent.html":{}}}],["clearinterval(googleinitinterv",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["clientid",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["clone",{"_index":1433,"title":{},"body":{"index.html":{}}}],["close",{"_index":618,"title":{},"body":{"components/ConfigListComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["closecommand",{"_index":477,"title":{},"body":{"components/ConfigComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["closesubscript",{"_index":616,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["closesubscription.unsubscrib",{"_index":619,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["cluster_appmodul",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_appcomponent_provid",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authenticatedmodul",{"_index":308,"title":{},"body":{"modules/AuthenticatedModule.html":{},"overview.html":{}}}],["cluster_authenticatedmodule_declar",{"_index":309,"title":{},"body":{"modules/AuthenticatedModule.html":{},"overview.html":{}}}],["cluster_authenticatedmodule_export",{"_index":311,"title":{},"body":{"modules/AuthenticatedModule.html":{},"overview.html":{}}}],["cluster_authenticatedmodule_import",{"_index":310,"title":{},"body":{"modules/AuthenticatedModule.html":{}}}],["cluster_authenticatedmodule_provid",{"_index":312,"title":{},"body":{"modules/AuthenticatedModule.html":{},"overview.html":{}}}],["cluster_configmodul",{"_index":638,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_declar",{"_index":639,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_export",{"_index":641,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_import",{"_index":640,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["commonmodul",{"_index":315,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["compat",{"_index":1389,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["compdoc",{"_index":1445,"title":{},"body":{"index.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthenticatedModule.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigRoutingModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component_templ",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["componentinst",{"_index":474,"title":{},"body":{"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{}}}],["componentinstance.closecommand.subscrib",{"_index":617,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["components/auth/unauthenticated/unauthenticated.compon",{"_index":279,"title":{},"body":{"modules/AppModule.html":{}}}],["components/shared/config",{"_index":657,"title":{},"body":{"modules/ConfigModule.html":{}}}],["components/shared/edit",{"_index":658,"title":{},"body":{"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{}}}],["components/shared/fold",{"_index":661,"title":{},"body":{"modules/ConfigModule.html":{}}}],["components/shared/new",{"_index":664,"title":{},"body":{"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{}}}],["components/tabs/config/config",{"_index":668,"title":{},"body":{"modules/ConfigModule.html":{}}}],["components/tabs/config/config.compon",{"_index":325,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigRoutingModule.html":{}}}],["components/tabs/config/preset",{"_index":670,"title":{},"body":{"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{}}}],["components/tabs/home/home.compon",{"_index":326,"title":{},"body":{"modules/AuthenticatedModule.html":{}}}],["components/tabs/settings/settings.compon",{"_index":327,"title":{},"body":{"modules/AuthenticatedModule.html":{}}}],["condit",{"_index":1483,"title":{},"body":{"license.html":{}}}],["config",{"_index":212,"title":{"interfaces/Config.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"interfaces/TutorialInterface.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config'},{'nam",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["config.compon",{"_index":582,"title":{},"body":{"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/PresetConfigPageComponent.html":{}}}],["config.component.html",{"_index":433,"title":{},"body":{"components/ConfigComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["config.component.scss",{"_index":432,"title":{},"body":{"components/ConfigComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["config.component.t",{"_index":1109,"title":{},"body":{"components/PresetConfigComponent.html":{},"coverage.html":{}}}],["config.component.ts:18",{"_index":1120,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.component.ts:20",{"_index":1122,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.component.ts:22",{"_index":1123,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.component.ts:23",{"_index":1124,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.component.ts:24",{"_index":1114,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.component.ts:27",{"_index":1126,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.component.ts:28",{"_index":1125,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.component.ts:34",{"_index":1119,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.component.ts:36",{"_index":1118,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.component.ts:40",{"_index":1116,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.data.createfold",{"_index":1130,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.data.group",{"_index":1131,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["config.group",{"_index":399,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["config.id",{"_index":400,"title":{},"body":{"classes/ConfigBuilder.html":{},"injectables/DatabaseService.html":{}}}],["config.nam",{"_index":401,"title":{},"body":{"classes/ConfigBuilder.html":{},"components/ConfigListComponent.html":{},"components/HomeComponent.html":{}}}],["config.name.length",{"_index":402,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["config/config.modul",{"_index":329,"title":{},"body":{"modules/AuthenticatedModule.html":{}}}],["config/preset",{"_index":581,"title":{},"body":{"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"coverage.html":{}}}],["configbuild",{"_index":364,"title":{"classes/ConfigBuilder.html":{}},"body":{"classes/ConfigBuilder.html":{},"injectables/DatabaseService.html":{},"components/PresetConfigComponent.html":{},"injectables/SorterService.html":{},"coverage.html":{}}}],["configbuilder.foldernamebuild",{"_index":1258,"title":{},"body":{"injectables/SorterService.html":{}}}],["configbuilder.generatenewconfig",{"_index":777,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["configchangesubscript",{"_index":534,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["configcompon",{"_index":209,"title":{"components/ConfigComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthenticatedModule.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigRoutingModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["configdatasourc",{"_index":482,"title":{"classes/ConfigDataSource.html":{}},"body":{"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"coverage.html":{}}}],["configdatasource(this.pagin",{"_index":585,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["configfromgroup",{"_index":368,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["configfromgroup(group",{"_index":378,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["confighold",{"_index":393,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["configholder.groups[0].createfold",{"_index":394,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["configholder.groups[0].destin",{"_index":395,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["configid",{"_index":555,"title":{},"body":{"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{}}}],["configindex",{"_index":787,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["configinterfac",{"_index":336,"title":{"interfaces/ConfigInterface.html":{}},"body":{"interfaces/Config.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"interfaces/TutorialInterface.html":{},"coverage.html":{}}}],["configkey",{"_index":552,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["configlistcompon",{"_index":211,"title":{"components/ConfigListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["configmodalcompon",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["configmodul",{"_index":250,"title":{"modules/ConfigModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"modules.html":{},"overview.html":{}}}],["configmodule.forroot",{"_index":284,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{}}}],["confignam",{"_index":388,"title":{},"body":{"classes/ConfigBuilder.html":{},"injectables/DatabaseService.html":{}}}],["configroutingmodul",{"_index":643,"title":{"modules/ConfigRoutingModule.html":{}},"body":{"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["configs.find(config",{"_index":786,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["configs[config].id",{"_index":521,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["configs[config].nam",{"_index":522,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["configs[config]['nam",{"_index":523,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["configsinterfac",{"_index":356,"title":{"interfaces/ConfigsInterface.html":{}},"body":{"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"injectables/SorterService.html":{},"interfaces/TutorialInterface.html":{},"coverage.html":{}}}],["configsubject",{"_index":485,"title":{},"body":{"classes/ConfigDataSource.html":{},"injectables/DatabaseService.html":{}}}],["configur",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["configuration'",{"_index":631,"title":{},"body":{"components/ConfigListComponent.html":{},"components/HomeComponent.html":{}}}],["configuration.json",{"_index":746,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["configuration\\'",{"_index":637,"title":{},"body":{"components/ConfigListComponent.html":{},"components/HomeComponent.html":{}}}],["connect",{"_index":488,"title":{},"body":{"classes/ConfigDataSource.html":{},"license.html":{}}}],["console.error",{"_index":610,"title":{},"body":{"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{}}}],["console.error(err",{"_index":794,"title":{},"body":{"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{}}}],["console.error(resp.err",{"_index":1068,"title":{},"body":{"injectables/GoogleService.html":{}}}],["const",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigRoutingModule.html":{},"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"injectables/SorterService.html":{}}}],["constantli",{"_index":1422,"title":{},"body":{"index.html":{}}}],["constraint",{"_index":342,"title":{},"body":{"interfaces/Config.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"interfaces/TutorialInterface.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{}}}],["constructor(aoservic",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(app",{"_index":1183,"title":{},"body":{"components/SettingsComponent.html":{}}}],["constructor(appcompon",{"_index":439,"title":{},"body":{"components/ConfigComponent.html":{}}}],["constructor(changedetector",{"_index":546,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["constructor(databas",{"_index":993,"title":{},"body":{"injectables/GoogleService.html":{}}}],["constructor(googl",{"_index":296,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/FolderCreationComponent.html":{},"injectables/PreventAuthGuardService.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{}}}],["constructor(pagin",{"_index":491,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["constructor(parentfolderid",{"_index":825,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["constructor(priv",{"_index":511,"title":{},"body":{"classes/ConfigDataSource.html":{},"components/FolderCreationComponent.html":{}}}],["constructor(publ",{"_index":306,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{},"components/UnauthenticatedComponent.html":{}}}],["constructor(zon",{"_index":1088,"title":{},"body":{"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{}}}],["contact@brandoncravener.com",{"_index":1456,"title":{},"body":{"index.html":{}}}],["contain",{"_index":913,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["content",{"_index":856,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["content'",{"_index":869,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["context",{"_index":1369,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contract",{"_index":1504,"title":{},"body":{"license.html":{}}}],["contribut",{"_index":1446,"title":{},"body":{"index.html":{}}}],["contributor",{"_index":1416,"title":{},"body":{"index.html":{}}}],["control",{"_index":1107,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["copi",{"_index":1468,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1460,"title":{},"body":{"license.html":{}}}],["core",{"_index":1382,"title":{},"body":{"dependencies.html":{}}}],["countributor",{"_index":1401,"title":{},"body":{"index.html":{}}}],["coverag",{"_index":1318,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["craven",{"_index":1403,"title":{},"body":{"index.html":{},"license.html":{}}}],["creat",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"miscellaneous/variables.html":{}}}],["createconfig",{"_index":690,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["createconfig(confignam",{"_index":704,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["createconfigbuttonst",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["createdaft",{"_index":812,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["createdafter(d",{"_index":834,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["createdafter(rule.data.firstd",{"_index":1226,"title":{},"body":{"injectables/SorterService.html":{}}}],["createdbefor",{"_index":813,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["createdbefore(d",{"_index":838,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["createdbefore(rule.data.secondd",{"_index":1227,"title":{},"body":{"injectables/SorterService.html":{}}}],["createdfold",{"_index":1132,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["createdtim",{"_index":914,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["createfold",{"_index":355,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"interfaces/RuleInterface.html":{},"interfaces/TutorialInterface.html":{},"miscellaneous/variables.html":{}}}],["createfolder(fold",{"_index":1138,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["createfolder(nam",{"_index":995,"title":{},"body":{"injectables/GoogleService.html":{}}}],["createfolder(newfoldernam",{"_index":1259,"title":{},"body":{"injectables/SorterService.html":{}}}],["createfolderconfig",{"_index":382,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["createfolderconfig.name.typ",{"_index":422,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["createfolderconfig.name.valu",{"_index":423,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["createfolderconfig.prefix.typ",{"_index":416,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["createfolderconfig.prefix.valu",{"_index":419,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["createfolderconfig.suffix.typ",{"_index":424,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["createfolderconfig.suffix.valu",{"_index":425,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["createfolders.foreach(fold",{"_index":1136,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["createresponse.result.id",{"_index":758,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["creation",{"_index":921,"title":{},"body":{"components/FolderCreationComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["creation'},{'nam",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["creation.compon",{"_index":663,"title":{},"body":{"modules/ConfigModule.html":{}}}],["creation.component.html",{"_index":923,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.scss",{"_index":922,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.t",{"_index":920,"title":{},"body":{"components/FolderCreationComponent.html":{},"coverage.html":{}}}],["creation.component.ts:112",{"_index":949,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:13",{"_index":938,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:140",{"_index":941,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:147",{"_index":945,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:15",{"_index":940,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:17",{"_index":956,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:19",{"_index":954,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:33",{"_index":950,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:51",{"_index":955,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:53",{"_index":951,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:55",{"_index":959,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:61",{"_index":937,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:65",{"_index":942,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:73",{"_index":943,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:79",{"_index":944,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation.component.ts:96",{"_index":948,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["creation/fold",{"_index":662,"title":{},"body":{"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"coverage.html":{}}}],["creationd",{"_index":1222,"title":{},"body":{"injectables/SorterService.html":{}}}],["creationen",{"_index":1111,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["current",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"components/UnauthenticatedComponent.html":{}}}],["customiz",{"_index":1300,"title":{},"body":{"components/UnauthenticatedComponent.html":{},"index.html":{}}}],["damag",{"_index":1502,"title":{},"body":{"license.html":{}}}],["data",{"_index":340,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigRoutingModule.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"interfaces/TutorialInterface.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["data.act",{"_index":1034,"title":{},"body":{"injectables/GoogleService.html":{}}}],["data.push",{"_index":524,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["databas",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"changelog.html":{}}}],["database/database.servic",{"_index":1026,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/SorterService.html":{}}}],["databaseinitalizedcheck",{"_index":1094,"title":{},"body":{"components/HomeComponent.html":{}}}],["databaseservic",{"_index":52,"title":{"injectables/DatabaseService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"coverage.html":{},"overview.html":{}}}],["datasourc",{"_index":484,"title":{},"body":{"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["date",{"_index":421,"title":{},"body":{"classes/ConfigBuilder.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{}}}],["date.toisostring().split('.')[0",{"_index":915,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["deal",{"_index":1469,"title":{},"body":{"license.html":{}}}],["declar",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"components/ConfigComponent.html":{},"modules/ConfigModule.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{},"overview.html":{}}}],["declinetutori",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["decor",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigListComponent.html":{}}}],["default",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{}}}],["delet",{"_index":1194,"title":{},"body":{"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["delete_forev",{"_index":634,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["deleteaccount",{"_index":1181,"title":{},"body":{"components/SettingsComponent.html":{}}}],["deleteconfig",{"_index":540,"title":{},"body":{"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{}}}],["deleteconfig(configid",{"_index":708,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["deleteconfig(configkey",{"_index":550,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["depend",{"_index":241,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"components/ConfigComponent.html":{},"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["design",{"_index":1594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["destin",{"_index":354,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"injectables/SorterService.html":{},"interfaces/TutorialInterface.html":{},"miscellaneous/variables.html":{}}}],["destinationfold",{"_index":386,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["destinationloc",{"_index":706,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["determin",{"_index":299,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{}}}],["develop",{"_index":1407,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["dialog",{"_index":440,"title":{},"body":{"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{}}}],["dialoginst",{"_index":468,"title":{},"body":{"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{}}}],["dialoginstance.clos",{"_index":479,"title":{},"body":{"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{}}}],["dialoginstance.componentinst",{"_index":475,"title":{},"body":{"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{}}}],["dialogsubscript",{"_index":476,"title":{},"body":{"components/ConfigComponent.html":{}}}],["dialogsubscription.unsubscrib",{"_index":480,"title":{},"body":{"components/ConfigComponent.html":{}}}],["dialogwidth",{"_index":466,"title":{},"body":{"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{}}}],["dialogwidth}px",{"_index":470,"title":{},"body":{"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{}}}],["direct",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["disablefeature(google.picker.feature.support_team_dr",{"_index":1054,"title":{},"body":{"injectables/GoogleService.html":{}}}],["disabletrash",{"_index":826,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["disconnect",{"_index":489,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["discoverydoc",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["distribut",{"_index":1476,"title":{},"body":{"license.html":{}}}],["doc:buildandserv",{"_index":1443,"title":{},"body":{"index.html":{}}}],["document",{"_index":855,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{}}}],["document.body.clientheight",{"_index":472,"title":{},"body":{"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{}}}],["document.body.clientwidth",{"_index":460,"title":{},"body":{"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{}}}],["document.getelementbyid('loader').remov",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["done",{"_index":928,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["draw",{"_index":884,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["drive",{"_index":810,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["drivemimetyp",{"_index":849,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"miscellaneous/enumerations.html":{}}}],["drivemimetype.fold",{"_index":1070,"title":{},"body":{"injectables/GoogleService.html":{}}}],["drivequeri",{"_index":1208,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.createdafter(rule.data.d",{"_index":1223,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.createdbefore(rule.data.d",{"_index":1224,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.excludesowner(own",{"_index":1221,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.excludetype(typ",{"_index":1218,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.fulltextcontains(rule.data.fulltext",{"_index":1211,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.get",{"_index":1238,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.hasowner(own",{"_index":1220,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.modifiedafter(rule.data.d",{"_index":1234,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.modifiedbefore(rule.data.d",{"_index":1235,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.namecontains(titl",{"_index":1214,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.nameexcludes(titl",{"_index":1215,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.openedafter(rule.data.d",{"_index":1229,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.openedbefore(rule.data.d",{"_index":1230,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequery.requirestype(typ",{"_index":1217,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequerybuild",{"_index":805,"title":{"classes/DriveQueryBuilder.html":{}},"body":{"classes/DriveQueryBuilder.html":{},"injectables/SorterService.html":{},"coverage.html":{}}}],["drivequerybuilder(destination.folderid",{"_index":1239,"title":{},"body":{"injectables/SorterService.html":{}}}],["drivequerybuilder(group.source.folderid",{"_index":1209,"title":{},"body":{"injectables/SorterService.html":{}}}],["durat",{"_index":1103,"title":{},"body":{"components/HomeComponent.html":{}}}],["dynam",{"_index":1379,"title":{},"body":{"dependencies.html":{}}}],["eas",{"_index":1553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["easi",{"_index":1028,"title":{},"body":{"injectables/GoogleService.html":{},"miscellaneous/variables.html":{}}}],["easier",{"_index":1287,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["edit",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"miscellaneous/variables.html":{}}}],["editconfig",{"_index":541,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["editconfig(configid",{"_index":553,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["editconfigmodalcompon",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editconfigpagecompon",{"_index":218,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editingconfig",{"_index":686,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["effect",{"_index":1289,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["element",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["element.id",{"_index":1129,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["elementref",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["email",{"_index":845,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["enabl",{"_index":359,"title":{},"body":{"interfaces/Config.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"interfaces/TutorialInterface.html":{}}}],["engin",{"_index":1593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enter",{"_index":1547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entrycompon",{"_index":645,"title":{},"body":{"modules/ConfigModule.html":{}}}],["enum",{"_index":879,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["enumer",{"_index":1397,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":1360,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":609,"title":{},"body":{"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{}}}],["event",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/FolderCreationComponent.html":{},"license.html":{}}}],["event.check",{"_index":972,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["event.url",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["eventemitt",{"_index":939,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["exampl",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/ConfigComponent.html":{},"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["exclud",{"_index":847,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"injectables/SorterService.html":{}}}],["excludesown",{"_index":814,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["excludesowner(email",{"_index":841,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["excludetyp",{"_index":815,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["excludetype(mimetyp",{"_index":848,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["exclus",{"_index":844,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["execute(resp",{"_index":1065,"title":{},"body":{"injectables/GoogleService.html":{}}}],["export",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"interfaces/TutorialInterface.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"overview.html":{}}}],["express",{"_index":1491,"title":{},"body":{"license.html":{}}}],["extend",{"_index":1161,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["fabanim",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["faccoldi",{"_index":1409,"title":{},"body":{"index.html":{}}}],["fadeoutin",{"_index":1323,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["fals",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"injectables/SorterService.html":{},"miscellaneous/variables.html":{}}}],["featur",{"_index":1426,"title":{},"body":{"index.html":{}}}],["fernando",{"_index":1405,"title":{},"body":{"index.html":{}}}],["field",{"_index":749,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"interfaces/TutorialInterface.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{}}}],["file.id",{"_index":1251,"title":{},"body":{"injectables/SorterService.html":{}}}],["file.parents.join",{"_index":1077,"title":{},"body":{"injectables/GoogleService.html":{}}}],["fileid",{"_index":721,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{}}}],["fileresourc",{"_index":1069,"title":{},"body":{"injectables/GoogleService.html":{}}}],["fileresource['par",{"_index":1071,"title":{},"body":{"injectables/GoogleService.html":{}}}],["files(id",{"_index":750,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["finish",{"_index":924,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["firebas",{"_index":1317,"title":{},"body":{"changelog.html":{}}}],["firstgroupnam",{"_index":384,"title":{},"body":{"classes/ConfigBuilder.html":{},"injectables/DatabaseService.html":{}}}],["firstgrouprul",{"_index":376,"title":{},"body":{"classes/ConfigBuilder.html":{},"injectables/DatabaseService.html":{}}}],["fit",{"_index":1494,"title":{},"body":{"license.html":{}}}],["fix",{"_index":1550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["folder",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"miscellaneous/enumerations.html":{}}}],["folder.parent.folderid",{"_index":974,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["folder[attribute].typ",{"_index":978,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["folder[attribute].value.length",{"_index":979,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["foldercr",{"_index":346,"title":{"interfaces/FolderCreation.html":{}},"body":{"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"interfaces/TutorialInterface.html":{},"coverage.html":{}}}],["foldercreationcompon",{"_index":220,"title":{"components/FolderCreationComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["folderid",{"_index":345,"title":{},"body":{"interfaces/Config.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"interfaces/RuleInterface.html":{},"interfaces/TutorialInterface.html":{},"miscellaneous/variables.html":{}}}],["foldernamebuild",{"_index":369,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["foldernamebuilder(createfolderconfig",{"_index":380,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["folderpick",{"_index":986,"title":{},"body":{"injectables/GoogleService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["folderpicked(data",{"_index":1033,"title":{},"body":{"injectables/GoogleService.html":{},"miscellaneous/functions.html":{}}}],["folderpickedlisten",{"_index":964,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["folderpickedlistener.unsubscrib",{"_index":970,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["folderpicker.setvisible(tru",{"_index":1062,"title":{},"body":{"injectables/GoogleService.html":{}}}],["follow",{"_index":1482,"title":{},"body":{"license.html":{}}}],["form",{"_index":888,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["format",{"_index":1306,"title":{},"body":{"changelog.html":{}}}],["formsmodul",{"_index":318,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["forroot",{"_index":332,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["foundgroup",{"_index":1140,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["foundgroup.destin",{"_index":1143,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["free",{"_index":1429,"title":{},"body":{"index.html":{},"license.html":{}}}],["friendli",{"_index":1427,"title":{},"body":{"index.html":{}}}],["fulli",{"_index":1299,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["fulltext",{"_index":1210,"title":{},"body":{"injectables/SorterService.html":{}}}],["fulltextcontain",{"_index":816,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["fulltextcontains(text",{"_index":853,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["function",{"_index":713,"title":{"miscellaneous/functions.html":{}},"body":{"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"injectables/SorterService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["furnish",{"_index":1481,"title":{},"body":{"license.html":{}}}],["fustiont",{"_index":890,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["g",{"_index":1283,"title":{},"body":{"components/UnauthenticatedComponent.html":{},"index.html":{}}}],["gapi",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gapi.auth2.getauthinst",{"_index":1041,"title":{},"body":{"injectables/GoogleService.html":{}}}],["gapi.cli",{"_index":769,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["gapi.client.dr",{"_index":1241,"title":{},"body":{"injectables/SorterService.html":{}}}],["gapi.client.drive.fil",{"_index":744,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{}}}],["gapi.client.drive.files.upd",{"_index":1074,"title":{},"body":{"injectables/GoogleService.html":{}}}],["gapi.client.init(config).then",{"_index":1040,"title":{},"body":{"injectables/GoogleService.html":{}}}],["gapi.load('client:auth2",{"_index":1039,"title":{},"body":{"injectables/GoogleService.html":{}}}],["gapi.load('pick",{"_index":1047,"title":{},"body":{"injectables/GoogleService.html":{}}}],["gener",{"_index":833,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"index.html":{}}}],["generatenewconfig",{"_index":370,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["generatenewconfig(confignam",{"_index":383,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["geo",{"_index":1595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["geometri",{"_index":1580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get",{"_index":75,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"components/AppComponent.html":{}}}],["getactiveconfig",{"_index":542,"title":{},"body":{"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{}}}],["getactiveconfig(configkey",{"_index":556,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["getauthstatu",{"_index":987,"title":{},"body":{"injectables/GoogleService.html":{}}}],["getconfig",{"_index":691,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["getconfig(configid",{"_index":711,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["getdialogwidth",{"_index":435,"title":{},"body":{"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{}}}],["getdrivequeri",{"_index":1197,"title":{},"body":{"injectables/SorterService.html":{}}}],["getdrivequery(group",{"_index":1200,"title":{},"body":{"injectables/SorterService.html":{}}}],["getfileinfo",{"_index":988,"title":{},"body":{"injectables/GoogleService.html":{}}}],["getfileinfo(fileid",{"_index":1000,"title":{},"body":{"injectables/GoogleService.html":{}}}],["getitem",{"_index":1575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getroutest",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["getroutestate(outlet",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["gettutori",{"_index":692,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["getuntitledfil",{"_index":1198,"title":{},"body":{"injectables/SorterService.html":{}}}],["getuntitledfiles(destin",{"_index":1202,"title":{},"body":{"injectables/SorterService.html":{}}}],["getvalu",{"_index":958,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["git",{"_index":1432,"title":{},"body":{"index.html":{}}}],["gitter",{"_index":1451,"title":{},"body":{"index.html":{}}}],["global",{"_index":1439,"title":{},"body":{"index.html":{}}}],["go",{"_index":301,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/HomeComponent.html":{},"injectables/PreventAuthGuardService.html":{}}}],["googl",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["google.picker.docsview(google.picker.viewid.fold",{"_index":1048,"title":{},"body":{"injectables/GoogleService.html":{}}}],["google.picker.pickerbuild",{"_index":1053,"title":{},"body":{"injectables/GoogleService.html":{}}}],["google/google.servic",{"_index":305,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{},"injectables/SorterService.html":{}}}],["googleinitinterv",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["googleservic",{"_index":17,"title":{"injectables/GoogleService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/PresetConfigComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gotoconfigpag",{"_index":1086,"title":{},"body":{"components/HomeComponent.html":{}}}],["grade",{"_index":1586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grant",{"_index":1464,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1510,"title":{},"body":{"modules.html":{}}}],["group",{"_index":357,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"interfaces/RuleInterface.html":{},"injectables/SorterService.html":{},"interfaces/TutorialInterface.html":{},"miscellaneous/variables.html":{}}}],["group.createfold",{"_index":403,"title":{},"body":{"classes/ConfigBuilder.html":{},"injectables/SorterService.html":{}}}],["group.createfolder.nam",{"_index":404,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["group.createfolder.name.value.length",{"_index":408,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["group.createfolder.par",{"_index":405,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["group.createfolder.parent.folderid",{"_index":1260,"title":{},"body":{"injectables/SorterService.html":{}}}],["group.createfolder.prefix",{"_index":406,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["group.createfolder.suffix",{"_index":407,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["group.destin",{"_index":1244,"title":{},"body":{"injectables/SorterService.html":{}}}],["group.destination.folderid",{"_index":1252,"title":{},"body":{"injectables/SorterService.html":{}}}],["group.destination.presetid",{"_index":1142,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["group.rules.foreach(rul",{"_index":1148,"title":{},"body":{"components/PresetConfigComponent.html":{},"injectables/SorterService.html":{}}}],["group.source.renameuntitl",{"_index":1254,"title":{},"body":{"injectables/SorterService.html":{}}}],["group['id",{"_index":1147,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["groupfolderinterfac",{"_index":343,"title":{"interfaces/GroupFolderInterface.html":{}},"body":{"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"injectables/SorterService.html":{},"interfaces/TutorialInterface.html":{},"coverage.html":{}}}],["groupinterfac",{"_index":352,"title":{"interfaces/GroupInterface.html":{}},"body":{"interfaces/Config.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"injectables/SorterService.html":{},"interfaces/TutorialInterface.html":{},"coverage.html":{}}}],["groups.find(group",{"_index":1141,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["groups.foreach(group",{"_index":1146,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["guard.servic",{"_index":283,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigRoutingModule.html":{}}}],["guard.service.t",{"_index":290,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{},"coverage.html":{}}}],["guard.service.ts:14",{"_index":297,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["guard.service.ts:22",{"_index":304,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["guard.service.ts:29",{"_index":298,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["guard.service.ts:48",{"_index":1175,"title":{},"body":{"injectables/PreventAuthGuardService.html":{}}}],["guard.service.ts:56",{"_index":1177,"title":{},"body":{"injectables/PreventAuthGuardService.html":{}}}],["guard.service.ts:63",{"_index":1176,"title":{},"body":{"injectables/PreventAuthGuardService.html":{}}}],["hammerj",{"_index":1385,"title":{},"body":{"dependencies.html":{}}}],["hanafi",{"_index":1418,"title":{},"body":{"index.html":{}}}],["handl",{"_index":303,"title":{},"body":{"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"injectables/PreventAuthGuardService.html":{}}}],["hasown",{"_index":817,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["hasowner(email",{"_index":860,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["height",{"_index":1568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["herebi",{"_index":1463,"title":{},"body":{"license.html":{}}}],["high",{"_index":1584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hold",{"_index":1019,"title":{},"body":{"injectables/GoogleService.html":{}}}],["holder",{"_index":1499,"title":{},"body":{"license.html":{}}}],["home",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["home'},{'nam",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["home.component.html",{"_index":1083,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":1082,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecompon",{"_index":223,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthenticatedModule.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["html",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["https://github.com/brandoncravener/g",{"_index":1434,"title":{},"body":{"index.html":{}}}],["https://www.googleapis.com/auth/dr",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["https://www.googleapis.com/auth/drive.appdata",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["https://www.googleapis.com/discovery/v1/apis/drive/v3/rest",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["https://www.googleapis.com/upload/drive/v3/fil",{"_index":771,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["i",{"_index":1597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":339,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"interfaces/RuleInterface.html":{},"interfaces/TutorialInterface.html":{},"miscellaneous/variables.html":{}}}],["identifi",{"_index":1319,"title":{},"body":{"coverage.html":{}}}],["ignor",{"_index":851,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["imageurl",{"_index":1588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implement",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"injectables/PreventAuthGuardService.html":{},"pipes/UnNamedPipe.html":{}}}],["impli",{"_index":1492,"title":{},"body":{"license.html":{}}}],["import",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{}}}],["inact",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["includ",{"_index":830,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"injectables/SorterService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["index",{"_index":25,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"interfaces/TutorialInterface.html":{},"components/UnauthenticatedComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"interfaces/TutorialInterface.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{}}}],["inform",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["inherit",{"_index":1163,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["init",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{}}}],["init(config",{"_index":1002,"title":{},"body":{"injectables/GoogleService.html":{}}}],["initi",{"_index":1006,"title":{},"body":{"injectables/GoogleService.html":{}}}],["inject",{"_index":288,"title":{"injectables/AuthGuardService.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"injectables/PreventAuthGuardService.html":{},"injectables/SorterService.html":{}},"body":{"injectables/AuthGuardService.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"injectables/PreventAuthGuardService.html":{},"injectables/SorterService.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":931,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["inputfold",{"_index":932,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["instal",{"_index":1430,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/ConfigComponent.html":{},"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"miscellaneous/variables.html":{}}}],["instanceof",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["integr",{"_index":1592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["interact",{"_index":982,"title":{},"body":{"injectables/GoogleService.html":{}}}],["interfac",{"_index":333,"title":{"interfaces/Config.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"interfaces/TutorialInterface.html":{}},"body":{"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"injectables/SorterService.html":{},"interfaces/TutorialInterface.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["isactiveconfig",{"_index":1085,"title":{},"body":{"components/HomeComponent.html":{}}}],["isn't",{"_index":1275,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["ispag",{"_index":1112,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["issu",{"_index":1448,"title":{},"body":{"index.html":{}}}],["istem",{"_index":1579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ivan",{"_index":1412,"title":{},"body":{"index.html":{}}}],["jasmin",{"_index":1387,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":1383,"title":{},"body":{"dependencies.html":{}}}],["json.parse(response.bodi",{"_index":768,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["json.stringify(this.configur",{"_index":775,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["jsonconfigur",{"_index":362,"title":{"interfaces/JSONConfiguration.html":{}},"body":{"interfaces/Config.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"interfaces/TutorialInterface.html":{},"coverage.html":{}}}],["keep",{"_index":1307,"title":{},"body":{"changelog.html":{}}}],["key",{"_index":335,"title":{},"body":{"interfaces/Config.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"interfaces/TutorialInterface.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":1490,"title":{},"body":{"license.html":{}}}],["label",{"_index":112,"title":{},"body":{"components/AppComponent.html":{}}}],["land",{"_index":1555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lane",{"_index":1408,"title":{},"body":{"index.html":{}}}],["lastmodifi",{"_index":1233,"title":{},"body":{"injectables/SorterService.html":{}}}],["lastopen",{"_index":1228,"title":{},"body":{"injectables/SorterService.html":{}}}],["leav",{"_index":1548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legend",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"overview.html":{}}}],["liabil",{"_index":1503,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":1500,"title":{},"body":{"license.html":{}}}],["licens",{"_index":1457,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["limit",{"_index":1472,"title":{},"body":{"license.html":{}}}],["link.label",{"_index":197,"title":{},"body":{"components/AppComponent.html":{}}}],["list",{"_index":530,"title":{},"body":{"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"miscellaneous/variables.html":{}}}],["list'},{'nam",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["list.compon",{"_index":669,"title":{},"body":{"modules/ConfigModule.html":{}}}],["list.component.html",{"_index":532,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.scss",{"_index":531,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.t",{"_index":529,"title":{},"body":{"components/ConfigListComponent.html":{},"coverage.html":{}}}],["list.component.ts:111",{"_index":558,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:122",{"_index":562,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:143",{"_index":563,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:157",{"_index":554,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:179",{"_index":551,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:18",{"_index":575,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:187",{"_index":565,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:191",{"_index":557,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:195",{"_index":560,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:20",{"_index":566,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:21",{"_index":573,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:22",{"_index":571,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:23",{"_index":576,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:24",{"_index":568,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:25",{"_index":567,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:27",{"_index":570,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:28",{"_index":572,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:29",{"_index":569,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:30",{"_index":548,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:41",{"_index":561,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list.component.ts:54",{"_index":559,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["list/config",{"_index":528,"title":{},"body":{"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"coverage.html":{}}}],["listen",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigListComponent.html":{}}}],["listfil",{"_index":989,"title":{},"body":{"injectables/GoogleService.html":{}}}],["listfiles(queri",{"_index":1007,"title":{},"body":{"injectables/GoogleService.html":{}}}],["listresponse.result.files.length",{"_index":752,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["listresponse.result.files[0].id",{"_index":754,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["liter",{"_index":918,"title":{},"body":{"interfaces/FolderCreation.html":{}}}],["load",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/HomeComponent.html":{}}}],["loadconfig",{"_index":490,"title":{},"body":{"classes/ConfigDataSource.html":{},"injectables/SorterService.html":{}}}],["loadconfig(cb",{"_index":1204,"title":{},"body":{"injectables/SorterService.html":{}}}],["loadconfigs(pag",{"_index":506,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["loaderremov",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["loadingsubject",{"_index":486,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["loadingsubscript",{"_index":535,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["localconfig",{"_index":396,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["localconfig.groups.push",{"_index":397,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["locat",{"_index":360,"title":{},"body":{"interfaces/Config.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"interfaces/TutorialInterface.html":{}}}],["log",{"_index":1281,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["login",{"_index":1278,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["logo",{"_index":1420,"title":{},"body":{"index.html":{}}}],["logo.png",{"_index":1590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["made",{"_index":1419,"title":{},"body":{"index.html":{}}}],["main",{"_index":1400,"title":{},"body":{"index.html":{}}}],["major",{"_index":1453,"title":{},"body":{"index.html":{}}}],["make",{"_index":1296,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["manag",{"_index":1447,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["manager/develop",{"_index":1404,"title":{},"body":{"index.html":{}}}],["map",{"_index":892,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["matbuttonmodul",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["matcardmodul",{"_index":321,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["match",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"interfaces/TutorialInterface.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["matdatepickermodul",{"_index":646,"title":{},"body":{"modules/ConfigModule.html":{}}}],["matdialog",{"_index":441,"title":{},"body":{"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{}}}],["matdialogmodul",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{}}}],["matexpansionmodul",{"_index":647,"title":{},"body":{"modules/ConfigModule.html":{}}}],["matformfieldmodul",{"_index":648,"title":{},"body":{"modules/ConfigModule.html":{}}}],["matgridlistmodul",{"_index":649,"title":{},"body":{"modules/ConfigModule.html":{}}}],["maticonmodul",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["matinputmodul",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["matlistmodul",{"_index":322,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["matmenumodul",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["matnativedatemodul",{"_index":650,"title":{},"body":{"modules/ConfigModule.html":{}}}],["matpagin",{"_index":574,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["matpaginatormodul",{"_index":651,"title":{},"body":{"modules/ConfigModule.html":{}}}],["matprogressbarmodul",{"_index":652,"title":{},"body":{"modules/ConfigModule.html":{}}}],["matselectmodul",{"_index":653,"title":{},"body":{"modules/ConfigModule.html":{}}}],["matslidetogglechang",{"_index":947,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["matslidetogglemodul",{"_index":654,"title":{},"body":{"modules/ConfigModule.html":{}}}],["matsnackbar",{"_index":936,"title":{},"body":{"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{}}}],["matsnackbarmodul",{"_index":323,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["matsteppermodul",{"_index":655,"title":{},"body":{"modules/ConfigModule.html":{}}}],["mattablemodul",{"_index":656,"title":{},"body":{"modules/ConfigModule.html":{}}}],["mattabsmodul",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodul",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["mattooltipmodul",{"_index":324,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["maxheight",{"_index":471,"title":{},"body":{"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{}}}],["media",{"_index":763,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["memberof",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"components/ConfigComponent.html":{},"modules/ConfigModule.html":{},"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["merchant",{"_index":1493,"title":{},"body":{"license.html":{}}}],["merg",{"_index":1474,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{}}}],["method",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{}}}],["mimetyp",{"_index":852,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{}}}],["miscellan",{"_index":1396,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1459,"title":{},"body":{"index.html":{},"license.html":{}}}],["mock",{"_index":1367,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["modal'},{'nam",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["modal.compon",{"_index":452,"title":{},"body":{"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{}}}],["modal.component.t",{"_index":1335,"title":{},"body":{"coverage.html":{}}}],["modal/config",{"_index":451,"title":{},"body":{"components/ConfigComponent.html":{},"modules/ConfigModule.html":{},"coverage.html":{}}}],["modal/edit",{"_index":580,"title":{},"body":{"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"coverage.html":{}}}],["modifi",{"_index":864,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"license.html":{}}}],["modifiedaft",{"_index":818,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["modifiedafter(d",{"_index":862,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["modifiedafter(rule.data.firstd",{"_index":1236,"title":{},"body":{"injectables/SorterService.html":{}}}],["modifiedbefor",{"_index":819,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["modifiedbefore(d",{"_index":865,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["modifiedbefore(rule.data.secondd",{"_index":1237,"title":{},"body":{"injectables/SorterService.html":{}}}],["modifiedtim",{"_index":916,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["modul",{"_index":239,"title":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"injectables/GoogleService.html":{},"modules.html":{},"overview.html":{}}}],["modules/authenticated/authenticated.modul",{"_index":280,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/config/config.modul",{"_index":281,"title":{},"body":{"modules/AppModule.html":{}}}],["modulewithprovid",{"_index":317,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["more",{"_index":1302,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["more_vert",{"_index":196,"title":{},"body":{"components/AppComponent.html":{}}}],["move",{"_index":1253,"title":{},"body":{"injectables/SorterService.html":{}}}],["movefil",{"_index":990,"title":{},"body":{"injectables/GoogleService.html":{}}}],["movefile(fileid",{"_index":1009,"title":{},"body":{"injectables/GoogleService.html":{}}}],["much",{"_index":1301,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["name",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"interfaces/TutorialInterface.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["namecontain",{"_index":820,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["namecontains('untitl",{"_index":1240,"title":{},"body":{"injectables/SorterService.html":{}}}],["namecontains(str",{"_index":867,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["named.pip",{"_index":673,"title":{},"body":{"modules/ConfigModule.html":{}}}],["named.pipe.t",{"_index":1266,"title":{},"body":{"pipes/UnNamedPipe.html":{},"coverage.html":{}}}],["named.pipe.ts:7",{"_index":1271,"title":{},"body":{"pipes/UnNamedPipe.html":{}}}],["nameexclud",{"_index":821,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["nameexcludes(str",{"_index":870,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["namingopt",{"_index":925,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["navigationend",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["necessari",{"_index":1425,"title":{},"body":{"index.html":{}}}],["need",{"_index":857,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"index.html":{}}}],["never",{"_index":1286,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["new",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newconfig",{"_index":726,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["newconfigid",{"_index":608,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["newconfigpagecompon",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["newfolderid",{"_index":1263,"title":{},"body":{"injectables/SorterService.html":{}}}],["newfoldernam",{"_index":1257,"title":{},"body":{"injectables/SorterService.html":{}}}],["newgroupdestin",{"_index":374,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["newgroupnam",{"_index":373,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["newgroupsourc",{"_index":375,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["newrulesteppercompon",{"_index":227,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ng",{"_index":1441,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{}}}],["ngmodul",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{}}}],["ngondestroy",{"_index":436,"title":{},"body":{"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{}}}],["ngoninit",{"_index":437,"title":{},"body":{"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["ngzone",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{}}}],["noconfig",{"_index":536,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["none",{"_index":953,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["noninfring",{"_index":1497,"title":{},"body":{"license.html":{}}}],["notabl",{"_index":1304,"title":{},"body":{"changelog.html":{}}}],["notic",{"_index":1485,"title":{},"body":{"license.html":{}}}],["now",{"_index":1106,"title":{},"body":{"components/HomeComponent.html":{}}}],["null",{"_index":349,"title":{},"body":{"interfaces/Config.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"interfaces/TutorialInterface.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":361,"title":{},"body":{"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"interfaces/TutorialInterface.html":{}}}],["numberconfig",{"_index":693,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["numconfig",{"_index":588,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["numnon",{"_index":976,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["object",{"_index":1003,"title":{},"body":{"injectables/GoogleService.html":{},"miscellaneous/variables.html":{}}}],["observ",{"_index":504,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["obtain",{"_index":1467,"title":{},"body":{"license.html":{}}}],["ok",{"_index":1102,"title":{},"body":{"components/HomeComponent.html":{}}}],["oldpages",{"_index":537,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["om1dhhvv5d9npas7jj02mbtvi5mjksmo.apps.googleusercontent.com",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["on",{"_index":636,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["onboard",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["ondestroy",{"_index":431,"title":{},"body":{"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{}}}],["oninit",{"_index":430,"title":{},"body":{"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{}}}],["opac",{"_index":1551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["open",{"_index":455,"title":{},"body":{"components/ConfigComponent.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"index.html":{}}}],["openconfigmod",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["openconfigmodalfunc",{"_index":45,"title":{},"body":{"components/AppComponent.html":{}}}],["openconfigmodallisten",{"_index":434,"title":{},"body":{"components/ConfigComponent.html":{}}}],["openedaft",{"_index":822,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["openedafter(d",{"_index":872,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["openedafter(rule.data.firstd",{"_index":1231,"title":{},"body":{"injectables/SorterService.html":{}}}],["openedbefor",{"_index":823,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["openedbefore(d",{"_index":875,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["openedbefore(rule.data.secondd",{"_index":1232,"title":{},"body":{"injectables/SorterService.html":{}}}],["openfilepick",{"_index":991,"title":{},"body":{"injectables/GoogleService.html":{}}}],["openfolderpick",{"_index":929,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["opennewconfigdialog",{"_index":438,"title":{},"body":{"components/ConfigComponent.html":{}}}],["openpreset",{"_index":543,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["option",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["option.nam",{"_index":980,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["organ",{"_index":1285,"title":{},"body":{"components/UnauthenticatedComponent.html":{},"index.html":{}}}],["otherwis",{"_index":1506,"title":{},"body":{"license.html":{}}}],["out",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"injectables/GoogleService.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["outlet",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["outlet.activatedroutedata.st",{"_index":193,"title":{},"body":{"components/AppComponent.html":{}}}],["output",{"_index":933,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["outputstr",{"_index":414,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["overview",{"_index":1512,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":843,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{}}}],["packag",{"_index":1372,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":302,"title":{},"body":{"injectables/AuthGuardService.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"miscellaneous/variables.html":{}}}],["page'},{'nam",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["page.compon",{"_index":660,"title":{},"body":{"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{}}}],["page.component.t",{"_index":1160,"title":{},"body":{"components/PresetConfigPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:11",{"_index":1167,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["page.component.ts:13",{"_index":1162,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["page/edit",{"_index":659,"title":{},"body":{"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"coverage.html":{}}}],["page/new",{"_index":665,"title":{},"body":{"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"coverage.html":{}}}],["page/preset",{"_index":671,"title":{},"body":{"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"components/PresetConfigPageComponent.html":{},"coverage.html":{}}}],["pages",{"_index":501,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["pagin",{"_index":493,"title":{},"body":{"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{}}}],["paginatorsubscript",{"_index":538,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["param",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"injectables/PreventAuthGuardService.html":{},"components/UnauthenticatedComponent.html":{}}}],["paramet",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":347,"title":{},"body":{"interfaces/Config.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"interfaces/TutorialInterface.html":{}}}],["parentfolderid",{"_index":828,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["parentfolderisroot",{"_index":926,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["particular",{"_index":1495,"title":{},"body":{"license.html":{}}}],["pass",{"_index":598,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["patch",{"_index":772,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["path",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"modules/ConfigRoutingModule.html":{},"injectables/DatabaseService.html":{},"miscellaneous/variables.html":{}}}],["permiss",{"_index":1462,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1480,"title":{},"body":{"license.html":{}}}],["person",{"_index":1466,"title":{},"body":{"license.html":{}}}],["phi",{"_index":1596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["photo",{"_index":894,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["physic",{"_index":1591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pick",{"_index":1035,"title":{},"body":{"injectables/GoogleService.html":{}}}],["pickedfold",{"_index":966,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["pickedfolder.id",{"_index":968,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["pickedfolder.nam",{"_index":969,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["pipe",{"_index":1264,"title":{"pipes/UnNamedPipe.html":{}},"body":{"pipes/UnNamedPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipes/un",{"_index":672,"title":{},"body":{"modules/ConfigModule.html":{}}}],["pipetransform",{"_index":1272,"title":{},"body":{"pipes/UnNamedPipe.html":{}}}],["pleas",{"_index":1454,"title":{},"body":{"index.html":{}}}],["popup",{"_index":1015,"title":{},"body":{"injectables/GoogleService.html":{}}}],["portion",{"_index":1488,"title":{},"body":{"license.html":{}}}],["posit",{"_index":1549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix",{"_index":350,"title":{},"body":{"interfaces/Config.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"interfaces/TutorialInterface.html":{}}}],["present",{"_index":896,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["preset",{"_index":230,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["preset.categori",{"_index":1158,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["preset.descript",{"_index":1159,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["preset.nam",{"_index":1157,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["presetconfigcompon",{"_index":229,"title":{"components/PresetConfigComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["presetconfigcomponent:18",{"_index":1168,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["presetconfigcomponent:20",{"_index":1169,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["presetconfigcomponent:22",{"_index":1171,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["presetconfigcomponent:23",{"_index":1172,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["presetconfigcomponent:24",{"_index":1170,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["presetconfigcomponent:27",{"_index":1174,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["presetconfigcomponent:28",{"_index":1173,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["presetconfigcomponent:34",{"_index":1166,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["presetconfigcomponent:36",{"_index":1165,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["presetconfigcomponent:40",{"_index":1164,"title":{},"body":{"components/PresetConfigPageComponent.html":{}}}],["presetconfigpagecompon",{"_index":231,"title":{"components/PresetConfigPageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["presetid",{"_index":1117,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"miscellaneous/variables.html":{}}}],["presets.find(el",{"_index":1128,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["prevent",{"_index":291,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{}}}],["preventauthguardservic",{"_index":252,"title":{"injectables/PreventAuthGuardService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{},"coverage.html":{},"overview.html":{}}}],["prevpar",{"_index":1076,"title":{},"body":{"injectables/GoogleService.html":{}}}],["privat",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{}}}],["problem",{"_index":1154,"title":{},"body":{"components/PresetConfigComponent.html":{},"index.html":{}}}],["product",{"_index":1539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":1305,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["promis",{"_index":702,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{}}}],["promise((resolv",{"_index":760,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"injectables/SorterService.html":{}}}],["properti",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"injectables/SorterService.html":{},"interfaces/TutorialInterface.html":{},"components/UnauthenticatedComponent.html":{}}}],["provid",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/UnauthenticatedComponent.html":{},"index.html":{}}}],["publish",{"_index":1475,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":1496,"title":{},"body":{"license.html":{}}}],["q",{"_index":745,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{}}}],["quarter",{"_index":1598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["quartersarray",{"_index":1348,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["queri",{"_index":807,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{},"injectables/SorterService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["query'",{"_index":811,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["quick",{"_index":1290,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["reactiveformsmodul",{"_index":319,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["read",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["readconfigur",{"_index":694,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["readconfiguration(fileid",{"_index":719,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["refer",{"_index":1029,"title":{},"body":{"injectables/GoogleService.html":{},"miscellaneous/variables.html":{}}}],["refresh",{"_index":632,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["refreshconfig",{"_index":544,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["regist",{"_index":330,"title":{},"body":{"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{}}}],["reject",{"_index":761,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"injectables/SorterService.html":{}}}],["reject('no",{"_index":801,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["reject(err",{"_index":796,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["reject(resp.err",{"_index":1072,"title":{},"body":{"injectables/GoogleService.html":{}}}],["reject(resp.error",{"_index":1248,"title":{},"body":{"injectables/SorterService.html":{}}}],["relat",{"_index":1415,"title":{},"body":{"index.html":{}}}],["removeitem",{"_index":1578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["removepar",{"_index":1079,"title":{},"body":{"injectables/GoogleService.html":{}}}],["renam",{"_index":1520,"title":{},"body":{"todo.html":{}}}],["renamefil",{"_index":992,"title":{},"body":{"injectables/GoogleService.html":{}}}],["renamefile(fileid",{"_index":1012,"title":{},"body":{"injectables/GoogleService.html":{}}}],["renameuntitl",{"_index":344,"title":{},"body":{"interfaces/Config.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"interfaces/TutorialInterface.html":{}}}],["report",{"_index":1455,"title":{},"body":{"index.html":{}}}],["repositori",{"_index":1450,"title":{},"body":{"index.html":{}}}],["request",{"_index":770,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["requestsreciv",{"_index":1134,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["requestss",{"_index":1133,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["requir",{"_index":836,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requirestyp",{"_index":824,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["requirestype(mimetyp",{"_index":877,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["reset",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"components/SettingsComponent.html":{},"overview.html":{}}}],["resettour",{"_index":1182,"title":{},"body":{"components/SettingsComponent.html":{}}}],["resolv",{"_index":776,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"injectables/SorterService.html":{}}}],["resolve(0",{"_index":803,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["resolve(resp.id",{"_index":1073,"title":{},"body":{"injectables/GoogleService.html":{}}}],["resolve(respons",{"_index":765,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["resolve(this.configuration.activeconfig",{"_index":800,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["resolve(this.configuration.configs.length",{"_index":802,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["resourc",{"_index":756,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{}}}],["resp",{"_index":1246,"title":{},"body":{"injectables/SorterService.html":{}}}],["resp.err",{"_index":1067,"title":{},"body":{"injectables/GoogleService.html":{}}}],["resp.error",{"_index":1247,"title":{},"body":{"injectables/SorterService.html":{}}}],["resp.files.foreach(fil",{"_index":1249,"title":{},"body":{"injectables/SorterService.html":{}}}],["rest",{"_index":1293,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["restrict",{"_index":1471,"title":{},"body":{"license.html":{}}}],["result",{"_index":237,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"interfaces/TutorialInterface.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["retriv",{"_index":603,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["return",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"miscellaneous/variables.html":{}}}],["right",{"_index":1473,"title":{},"body":{"license.html":{}}}],["rlasaf",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["root",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"components/FolderCreationComponent.html":{},"miscellaneous/variables.html":{}}}],["root'},{'nam",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["roottogglechang",{"_index":930,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["roottogglechange(ev",{"_index":946,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["rout",{"_index":77,"title":{"routes.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"modules/ConfigRoutingModule.html":{},"injectables/PreventAuthGuardService.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{}}}],["router.navigatebyurl(path",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["routeranim",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routermodul",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigRoutingModule.html":{}}}],["routermodule.forchild(rout",{"_index":681,"title":{},"body":{"modules/ConfigRoutingModule.html":{}}}],["routermodule.forroot(approut",{"_index":286,"title":{},"body":{"modules/AppModule.html":{}}}],["routeroutlet",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["routing.modul",{"_index":674,"title":{},"body":{"modules/ConfigModule.html":{}}}],["routing.module.t",{"_index":676,"title":{},"body":{"modules/ConfigRoutingModule.html":{}}}],["rule",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"interfaces/TutorialInterface.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rule.classifi",{"_index":413,"title":{},"body":{"classes/ConfigBuilder.html":{},"injectables/SorterService.html":{}}}],["rule.constraint",{"_index":412,"title":{},"body":{"classes/ConfigBuilder.html":{},"injectables/SorterService.html":{}}}],["rule.data",{"_index":411,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["rule.data.filetyp",{"_index":1216,"title":{},"body":{"injectables/SorterService.html":{}}}],["rule.data.own",{"_index":1219,"title":{},"body":{"injectables/SorterService.html":{}}}],["rule.data.titl",{"_index":1213,"title":{},"body":{"injectables/SorterService.html":{}}}],["rule.id",{"_index":410,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["rule.nam",{"_index":409,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["rule['id",{"_index":1149,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["ruleinterfac",{"_index":338,"title":{"interfaces/RuleInterface.html":{}},"body":{"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"interfaces/TutorialInterface.html":{},"coverage.html":{}}}],["run",{"_index":1431,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"components/PresetConfigComponent.html":{},"dependencies.html":{}}}],["scale(0",{"_index":1542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scale(1",{"_index":1543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["school",{"_index":1582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scope",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["screen",{"_index":1564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["script",{"_index":898,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["sdk",{"_index":910,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["search",{"_index":829,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["select",{"_index":429,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"components/SettingsComponent.html":{}}}],["selector",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["sell",{"_index":1479,"title":{},"body":{"license.html":{}}}],["semant",{"_index":1309,"title":{},"body":{"changelog.html":{}}}],["serv",{"_index":1442,"title":{},"body":{"index.html":{}}}],["servic",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/GoogleService.html":{},"injectables/PreventAuthGuardService.html":{},"components/UnauthenticatedComponent.html":{}}}],["serviceremov",{"_index":1316,"title":{},"body":{"changelog.html":{}}}],["services/auth/auth",{"_index":282,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigRoutingModule.html":{}}}],["services/database/database.servic",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/SettingsComponent.html":{}}}],["services/google/google.servic",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/PresetConfigComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["services/sorter/sorter.servic",{"_index":328,"title":{},"body":{"modules/AuthenticatedModule.html":{},"components/HomeComponent.html":{}}}],["set",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["setactiveconfig",{"_index":545,"title":{},"body":{"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{}}}],["setactiveconfig(configid",{"_index":722,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["setactiveconfig(configkey",{"_index":564,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["setappid(362606538820",{"_index":1055,"title":{},"body":{"injectables/GoogleService.html":{}}}],["setcallback(folderpick",{"_index":1061,"title":{},"body":{"injectables/GoogleService.html":{}}}],["setdeveloperkey('aizasyb",{"_index":1058,"title":{},"body":{"injectables/GoogleService.html":{}}}],["setincludefolders(tru",{"_index":1049,"title":{},"body":{"injectables/GoogleService.html":{}}}],["setinterv",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{}}}],["setitem",{"_index":1577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setoauthtoken",{"_index":1056,"title":{},"body":{"injectables/GoogleService.html":{}}}],["setownedbyme(tru",{"_index":1052,"title":{},"body":{"injectables/GoogleService.html":{}}}],["setparent('root",{"_index":1051,"title":{},"body":{"injectables/GoogleService.html":{}}}],["setselectablemimetypes('application/vnd.googl",{"_index":1059,"title":{},"body":{"injectables/GoogleService.html":{}}}],["setselectfolderenabled(tru",{"_index":1050,"title":{},"body":{"injectables/GoogleService.html":{}}}],["settimeout",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["settimeout(_",{"_index":611,"title":{},"body":{"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{}}}],["settings'},{'nam",{"_index":233,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["settings.component.html",{"_index":1180,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.scss",{"_index":1179,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings_pow",{"_index":633,"title":{},"body":{"components/ConfigListComponent.html":{},"components/HomeComponent.html":{}}}],["settingscompon",{"_index":232,"title":{"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthenticatedModule.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["shall",{"_index":1486,"title":{},"body":{"license.html":{}}}],["shared/config",{"_index":450,"title":{},"body":{"components/ConfigComponent.html":{}}}],["shared/edit",{"_index":579,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["shown",{"_index":427,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["showtour",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["sign",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleService.html":{}}}],["signin",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleService.html":{}}}],["signout",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleService.html":{}}}],["simplist",{"_index":1295,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["site",{"_index":900,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["slidedown",{"_index":1325,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["slideleft",{"_index":1326,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["slideright",{"_index":1327,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["small",{"_index":1563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["snackbar",{"_index":935,"title":{},"body":{"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{}}}],["softwar",{"_index":1410,"title":{},"body":{"index.html":{},"license.html":{}}}],["solv",{"_index":1421,"title":{},"body":{"index.html":{}}}],["sort",{"_index":952,"title":{},"body":{"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{}}}],["sorter",{"_index":1284,"title":{},"body":{"components/UnauthenticatedComponent.html":{},"index.html":{}}}],["sorterservic",{"_index":313,"title":{"injectables/SorterService.html":{}},"body":{"modules/AuthenticatedModule.html":{},"components/HomeComponent.html":{},"injectables/SorterService.html":{},"coverage.html":{},"overview.html":{}}}],["sortusersdr",{"_index":1087,"title":{},"body":{"components/HomeComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"modules/AuthenticatedModule.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"interfaces/TutorialInterface.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"miscellaneous/variables.html":{}}}],["source.t",{"_index":483,"title":{},"body":{"classes/ConfigDataSource.html":{},"coverage.html":{}}}],["source.ts:10",{"_index":494,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["source.ts:12",{"_index":492,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["source.ts:16",{"_index":502,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["source.ts:20",{"_index":503,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["source.ts:24",{"_index":505,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["source.ts:29",{"_index":507,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["source.ts:8",{"_index":499,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["source.ts:9",{"_index":496,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["sourcefold",{"_index":385,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["sourceloc",{"_index":705,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["space",{"_index":747,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["spec\\.t",{"_index":1538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spreadsheet",{"_index":902,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["src/.../animations.t",{"_index":1525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.component.t",{"_index":1527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../consts.t",{"_index":1521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../database.service.t",{"_index":1529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../drive",{"_index":1398,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.prod.t",{"_index":1524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":1523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../google.service.t",{"_index":1399,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../jestglobalmocks.t",{"_index":1530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../presets.t",{"_index":1531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../settings.component.t",{"_index":1526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../sorter.service.t",{"_index":1528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.t",{"_index":1522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/animations.t",{"_index":1321,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.ts:116",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:139",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:143",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:147",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:151",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:156",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:168",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:32",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:33",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:35",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:36",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:37",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:38",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:39",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:40",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:41",{"_index":102,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:42",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:55",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:65",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/classes/config",{"_index":365,"title":{},"body":{"classes/ConfigBuilder.html":{},"classes/ConfigDataSource.html":{},"coverage.html":{}}}],["src/app/classes/dr",{"_index":806,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/components/auth/unauthenticated/unauthenticated.component.t",{"_index":1274,"title":{},"body":{"components/UnauthenticatedComponent.html":{},"coverage.html":{}}}],["src/app/components/auth/unauthenticated/unauthenticated.component.ts:16",{"_index":1279,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["src/app/components/auth/unauthenticated/unauthenticated.component.ts:22",{"_index":1282,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["src/app/components/auth/unauthenticated/unauthenticated.component.ts:29",{"_index":1280,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["src/app/components/shared/config",{"_index":1334,"title":{},"body":{"coverage.html":{}}}],["src/app/components/shared/edit",{"_index":1337,"title":{},"body":{"coverage.html":{}}}],["src/app/components/shared/fold",{"_index":919,"title":{},"body":{"components/FolderCreationComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/new",{"_index":1340,"title":{},"body":{"coverage.html":{}}}],["src/app/components/tabs/config/config",{"_index":527,"title":{},"body":{"components/ConfigListComponent.html":{},"coverage.html":{}}}],["src/app/components/tabs/config/config.component.t",{"_index":426,"title":{},"body":{"components/ConfigComponent.html":{},"coverage.html":{}}}],["src/app/components/tabs/config/config.component.ts:23",{"_index":448,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/components/tabs/config/config.component.ts:25",{"_index":442,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/components/tabs/config/config.component.ts:38",{"_index":446,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/components/tabs/config/config.component.ts:47",{"_index":444,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/components/tabs/config/config.component.ts:51",{"_index":445,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/components/tabs/config/config.component.ts:55",{"_index":443,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/components/tabs/config/config.component.ts:66",{"_index":447,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/components/tabs/config/preset",{"_index":1108,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"coverage.html":{}}}],["src/app/components/tabs/config/presets.t",{"_index":1347,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/tabs/home/home.component.t",{"_index":1081,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/components/tabs/home/home.component.ts:21",{"_index":1093,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/tabs/home/home.component.ts:22",{"_index":1089,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/tabs/home/home.component.ts:41",{"_index":1091,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/tabs/home/home.component.ts:61",{"_index":1092,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/tabs/home/home.component.ts:69",{"_index":1090,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/tabs/settings/settings.component.t",{"_index":1178,"title":{},"body":{"components/SettingsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/tabs/settings/settings.component.ts:23",{"_index":1184,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/components/tabs/settings/settings.component.ts:34",{"_index":1185,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/components/tabs/settings/settings.component.ts:38",{"_index":1187,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/components/tabs/settings/settings.component.ts:43",{"_index":1186,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/authenticated/authenticated.module.t",{"_index":314,"title":{},"body":{"modules/AuthenticatedModule.html":{}}}],["src/app/modules/config/config",{"_index":675,"title":{},"body":{"modules/ConfigRoutingModule.html":{}}}],["src/app/modules/config/config.module.t",{"_index":644,"title":{},"body":{"modules/ConfigModule.html":{}}}],["src/app/pipes/un",{"_index":1265,"title":{},"body":{"pipes/UnNamedPipe.html":{},"coverage.html":{}}}],["src/app/services/auth/auth",{"_index":289,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{},"coverage.html":{}}}],["src/app/services/database/database.service.t",{"_index":682,"title":{},"body":{"injectables/DatabaseService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/database/database.service.ts:118",{"_index":707,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:139",{"_index":701,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:147",{"_index":725,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:158",{"_index":714,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:167",{"_index":709,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:182",{"_index":703,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:194",{"_index":723,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:206",{"_index":710,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:219",{"_index":715,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:22",{"_index":732,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:223",{"_index":718,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:23",{"_index":733,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:236",{"_index":716,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:24",{"_index":740,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:240",{"_index":730,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:32",{"_index":736,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:34",{"_index":735,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:35",{"_index":739,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:36",{"_index":737,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:37",{"_index":741,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:38",{"_index":742,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:39",{"_index":699,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:43",{"_index":717,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:76",{"_index":720,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:89",{"_index":727,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database/database.service.ts:96",{"_index":728,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/google/google.service.t",{"_index":981,"title":{},"body":{"injectables/GoogleService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/google/google.service.ts:104",{"_index":1011,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:114",{"_index":998,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:127",{"_index":1014,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:136",{"_index":1017,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:141",{"_index":1008,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:151",{"_index":1001,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:166",{"_index":996,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:184",{"_index":1013,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:197",{"_index":1010,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:44",{"_index":1018,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:51",{"_index":1023,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:53",{"_index":994,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/google/google.service.ts:69",{"_index":1005,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/app/services/sorter/sorter.service.t",{"_index":1196,"title":{},"body":{"injectables/SorterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/sorter/sorter.service.ts:118",{"_index":1203,"title":{},"body":{"injectables/SorterService.html":{}}}],["src/app/services/sorter/sorter.service.ts:124",{"_index":1205,"title":{},"body":{"injectables/SorterService.html":{}}}],["src/app/services/sorter/sorter.service.ts:140",{"_index":1206,"title":{},"body":{"injectables/SorterService.html":{}}}],["src/app/services/sorter/sorter.service.ts:16",{"_index":1199,"title":{},"body":{"injectables/SorterService.html":{}}}],["src/app/services/sorter/sorter.service.ts:28",{"_index":1201,"title":{},"body":{"injectables/SorterService.html":{}}}],["src/consts.t",{"_index":1358,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.t",{"_index":1359,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":1361,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/interfac",{"_index":510,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["src/interfaces.t",{"_index":334,"title":{},"body":{"interfaces/Config.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"interfaces/TutorialInterface.html":{},"coverage.html":{}}}],["src/jestglobalmocks.t",{"_index":1366,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.t",{"_index":1368,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":518,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"classes/ConfigDataSource.html":{}}}],["state",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"modules/ConfigRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["statement",{"_index":1320,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":331,"title":{},"body":{"modules/AuthenticatedModule.html":{},"classes/ConfigBuilder.html":{},"modules/ConfigModule.html":{}}}],["statu",{"_index":999,"title":{},"body":{"injectables/GoogleService.html":{}}}],["stem",{"_index":1151,"title":{},"body":{"components/PresetConfigComponent.html":{},"miscellaneous/variables.html":{}}}],["step",{"_index":1532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stepper'},{'nam",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["stepper.compon",{"_index":667,"title":{},"body":{"modules/ConfigModule.html":{}}}],["stepper.component.t",{"_index":1341,"title":{},"body":{"coverage.html":{}}}],["stepper/new",{"_index":666,"title":{},"body":{"modules/ConfigModule.html":{},"coverage.html":{}}}],["storag",{"_index":1574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storage[key",{"_index":1576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"interfaces/RuleInterface.html":{},"injectables/SorterService.html":{},"interfaces/TutorialInterface.html":{}}}],["style",{"_index":1541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["styleurl",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["subject",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["sublicens",{"_index":1477,"title":{},"body":{"license.html":{}}}],["subscrib",{"_index":1021,"title":{},"body":{"injectables/GoogleService.html":{}}}],["subscribe(clos",{"_index":478,"title":{},"body":{"components/ConfigComponent.html":{}}}],["subscript",{"_index":449,"title":{},"body":{"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{}}}],["substanti",{"_index":1487,"title":{},"body":{"license.html":{}}}],["success",{"_index":1242,"title":{},"body":{"injectables/SorterService.html":{}}}],["suffix",{"_index":351,"title":{},"body":{"interfaces/Config.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"interfaces/TutorialInterface.html":{}}}],["suitabl",{"_index":1297,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["suppli",{"_index":837,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["support",{"_index":1452,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1508,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":415,"title":{},"body":{"classes/ConfigBuilder.html":{},"injectables/SorterService.html":{},"miscellaneous/variables.html":{}}}],["tab",{"_index":428,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["tabl",{"_index":1371,"title":{},"body":{"coverage.html":{}}}],["tablecolumn",{"_index":539,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1370,"title":{},"body":{"coverage.html":{}}}],["tablink",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["tabsen",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["take",{"_index":199,"title":{},"body":{"components/AppComponent.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["templateurl",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["test",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"miscellaneous/variables.html":{}}}],["tester",{"_index":1411,"title":{},"body":{"index.html":{}}}],["text",{"_index":418,"title":{},"body":{"classes/ConfigBuilder.html":{},"classes/DriveQueryBuilder.html":{},"components/FolderCreationComponent.html":{},"miscellaneous/variables.html":{}}}],["then(createrespons",{"_index":757,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["then(id",{"_index":1139,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["then(listrespons",{"_index":751,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["then(newfolderid",{"_index":1261,"title":{},"body":{"injectables/SorterService.html":{}}}],["then(respons",{"_index":764,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["thirdparti",{"_index":908,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["this._activeconfigchanged.asobserv",{"_index":734,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this._activeconfigchanged.error(err",{"_index":798,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this._activeconfigchanged.next(configid",{"_index":797,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this._authstate.asobserv",{"_index":1022,"title":{},"body":{"injectables/GoogleService.html":{}}}],["this._authstate.next(authinstance.issignedin.get",{"_index":1043,"title":{},"body":{"injectables/GoogleService.html":{}}}],["this._authstate.next(authstatu",{"_index":1046,"title":{},"body":{"injectables/GoogleService.html":{}}}],["this._closecommand.asobserv",{"_index":1121,"title":{},"body":{"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["this._closecommand.next(tru",{"_index":1127,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["this._configsubject.asobserv",{"_index":738,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this._configsubject.next(fals",{"_index":793,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this._configsubject.next(tru",{"_index":779,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.activeconfig",{"_index":605,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.activeconfigchangesubscript",{"_index":606,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.activeconfigchangesubscription.unsubscrib",{"_index":630,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.activeconfignam",{"_index":1096,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.aoservice.exit",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["this.aoservice.start",{"_index":192,"title":{},"body":{"components/AppComponent.html":{}}}],["this.app.aoservice.reset",{"_index":1190,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.app.showtour",{"_index":1189,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.appcomponent.openconfigmodal$.subscribe(open",{"_index":454,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.authent",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["this.calculatestart(pag",{"_index":519,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["this.changedetector.detectchang",{"_index":596,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.clos",{"_index":1152,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["this.config",{"_index":516,"title":{},"body":{"classes/ConfigDataSource.html":{},"injectables/SorterService.html":{}}}],["this.config.groups.foreach(group",{"_index":1243,"title":{},"body":{"injectables/SorterService.html":{}}}],["this.configchangesubscript",{"_index":600,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.configchangesubscription.unsubscrib",{"_index":629,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.configid",{"_index":753,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.configs.slice(start",{"_index":520,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["this.configsubject.asobserv",{"_index":512,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["this.configsubject.complet",{"_index":513,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["this.configsubject.next(data",{"_index":525,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["this.configur",{"_index":767,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.configuration.activeconfig",{"_index":795,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.configuration.activeconfig.length",{"_index":799,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.configuration.config",{"_index":785,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.configuration.configs.findindex(config",{"_index":788,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.configuration.configs.foreach(config",{"_index":783,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.configuration.configs.push(config",{"_index":781,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.configuration.configs.push(newconfig",{"_index":778,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.configuration.configs.splice(configindex",{"_index":789,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.configuration.tutori",{"_index":804,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.createconfigbuttonst",{"_index":181,"title":{},"body":{"components/AppComponent.html":{}}}],["this.createfold",{"_index":961,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["this.createfolder.par",{"_index":967,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["this.creationen",{"_index":1135,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["this.databas",{"_index":586,"title":{},"body":{"components/ConfigListComponent.html":{},"components/PresetConfigComponent.html":{}}}],["this.database.activeconfigchanged.subscrib",{"_index":607,"title":{},"body":{"components/ConfigListComponent.html":{},"injectables/SorterService.html":{}}}],["this.database.clearconfigs().catch(err",{"_index":1188,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.database.clearconfigs().then",{"_index":1192,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.database.configsubject.subscrib",{"_index":601,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.database.deleteconfig(configkey",{"_index":625,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.database.editingconfig",{"_index":621,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.database.getactiveconfig().then",{"_index":604,"title":{},"body":{"components/ConfigListComponent.html":{},"components/HomeComponent.html":{},"injectables/SorterService.html":{}}}],["this.database.getconfig",{"_index":517,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["this.database.getconfig(activeconfig",{"_index":1095,"title":{},"body":{"components/HomeComponent.html":{},"injectables/SorterService.html":{}}}],["this.database.init",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{}}}],["this.database.numberconfigs().then(numconfig",{"_index":587,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.database.setactiveconfig(configkey",{"_index":626,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.datasourc",{"_index":584,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.datasource.loadconfig",{"_index":594,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.datasource.loadconfigs(0",{"_index":597,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.datasource.loading$.subscrib",{"_index":613,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.dialog.open(configmodalcompon",{"_index":469,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.dialog.open(editconfigmodalcompon",{"_index":622,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.dialog.open(presetconfigcompon",{"_index":614,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.editingconfig",{"_index":784,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.finish",{"_index":963,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["this.getdialogwidth",{"_index":467,"title":{},"body":{"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{}}}],["this.getfileinfo(fileid",{"_index":1075,"title":{},"body":{"injectables/GoogleService.html":{}}}],["this.googl",{"_index":1137,"title":{},"body":{"components/PresetConfigComponent.html":{},"injectables/SorterService.html":{}}}],["this.google.authstate$.subscribe(st",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["this.google.folderpicked$.subscrib",{"_index":965,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["this.google.getauthstatu",{"_index":307,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/ConfigListComponent.html":{},"injectables/PreventAuthGuardService.html":{}}}],["this.google.init",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["this.google.listfiles(this.getdrivequery(group",{"_index":1245,"title":{},"body":{"injectables/SorterService.html":{}}}],["this.google.listfiles(this.getuntitledfiles(group.sourc",{"_index":1255,"title":{},"body":{"injectables/SorterService.html":{}}}],["this.google.movefil",{"_index":1250,"title":{},"body":{"injectables/SorterService.html":{}}}],["this.google.movefile(file.id",{"_index":1262,"title":{},"body":{"injectables/SorterService.html":{}}}],["this.google.openfilepick",{"_index":971,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["this.google.renamefile(file.id",{"_index":1256,"title":{},"body":{"injectables/SorterService.html":{}}}],["this.google.signin",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["this.google.signout",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"components/SettingsComponent.html":{}}}],["this.init",{"_index":457,"title":{},"body":{"components/ConfigComponent.html":{},"injectables/DatabaseService.html":{}}}],["this.inputfold",{"_index":962,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["this.isactiveconfig",{"_index":1097,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.load",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigListComponent.html":{}}}],["this.loadconfig",{"_index":1207,"title":{},"body":{"injectables/SorterService.html":{}}}],["this.loaderremov",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadingsubject.asobserv",{"_index":497,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["this.loadingsubject.complet",{"_index":514,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["this.loadingsubject.next(fals",{"_index":526,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["this.loadingsubject.next(tru",{"_index":515,"title":{},"body":{"classes/ConfigDataSource.html":{}}}],["this.loadingsubscript",{"_index":612,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.loadingsubscription.unsubscrib",{"_index":627,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.noconfig",{"_index":589,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.oldpages",{"_index":592,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.openconfigmodal.asobserv",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["this.openconfigmodal.next(tru",{"_index":189,"title":{},"body":{"components/AppComponent.html":{}}}],["this.openconfigmodallisten",{"_index":453,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.openconfigmodallistener.unsubscrib",{"_index":458,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.opennewconfigdialog",{"_index":456,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.paginator.length",{"_index":599,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.paginator.page.subscrib",{"_index":591,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.paginator.pageindex",{"_index":595,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.paginator.pages",{"_index":593,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.paginatorsubscript",{"_index":590,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.paginatorsubscription.unsubscrib",{"_index":628,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.parentfolderisroot",{"_index":973,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["this.queri",{"_index":911,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["this.readconfiguration(this.configid).then(respons",{"_index":766,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.refreshconfig",{"_index":602,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.resettour",{"_index":1191,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.rlasaf",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.events.subscribe(ev",{"_index":177,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navig",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{}}}],["this.router.navigate(['/app/config/cr",{"_index":481,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.router.navigate(['/app/config/edit",{"_index":623,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.router.navigate(['/app/config/preset",{"_index":620,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.router.navigate(['/app/hom",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/PreventAuthGuardService.html":{}}}],["this.router.navigatebyurl('/app/config",{"_index":1105,"title":{},"body":{"components/HomeComponent.html":{},"components/PresetConfigPageComponent.html":{}}}],["this.setactiveconfig",{"_index":624,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["this.showtour",{"_index":191,"title":{},"body":{"components/AppComponent.html":{}}}],["this.snackbar.open('googl",{"_index":1101,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.snackbar.open('ther",{"_index":1153,"title":{},"body":{"components/PresetConfigComponent.html":{}}}],["this.sorterservice.sort().then",{"_index":1100,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.tabsen",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["this.updatelocalconfigur",{"_index":755,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.updateremoteconfigur",{"_index":791,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.updateremoteconfiguration().catch(err",{"_index":780,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.updateremoteconfiguration().then",{"_index":759,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.updateremoteconfiguration().then(r",{"_index":782,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.valid",{"_index":960,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["this.valueattributes.foreach(attribut",{"_index":977,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["this.zone.run",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{}}}],["thumb_down",{"_index":202,"title":{},"body":{"components/AppComponent.html":{}}}],["thumb_up",{"_index":201,"title":{},"body":{"components/AppComponent.html":{}}}],["titl",{"_index":1212,"title":{},"body":{"injectables/SorterService.html":{},"miscellaneous/variables.html":{}}}],["todo",{"_index":1518,"title":{"todo.html":{}},"body":{"todo.html":{}}}],["tort",{"_index":1505,"title":{},"body":{"license.html":{}}}],["tour",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/SettingsComponent.html":{}}}],["tracker",{"_index":1449,"title":{},"body":{"index.html":{}}}],["transform",{"_index":1268,"title":{},"body":{"pipes/UnNamedPipe.html":{},"miscellaneous/variables.html":{}}}],["transform(valu",{"_index":1269,"title":{},"body":{"pipes/UnNamedPipe.html":{}}}],["transit",{"_index":1556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('act",{"_index":1546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('appconfig",{"_index":1560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('appconfigcr",{"_index":1566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('appconfigedit",{"_index":1565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('appconfigpreset",{"_index":1567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('apphom",{"_index":1559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('appset",{"_index":1562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('inact",{"_index":1544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('land",{"_index":1557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatex",{"_index":1573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatex(0",{"_index":1572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatex(100",{"_index":1571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatey(0",{"_index":1570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatey(100",{"_index":1569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trash",{"_index":831,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["trashed=fals",{"_index":912,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["tri",{"_index":635,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["trigger('createconfigfabst",{"_index":1540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigger('routertransit",{"_index":1554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"miscellaneous/variables.html":{}}}],["tutori",{"_index":363,"title":{},"body":{"interfaces/Config.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"interfaces/TutorialInterface.html":{}}}],["tutorialinterfac",{"_index":358,"title":{"interfaces/TutorialInterface.html":{}},"body":{"interfaces/Config.html":{},"interfaces/ConfigInterface.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"interfaces/FolderCreation.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"interfaces/TutorialInterface.html":{},"coverage.html":{}}}],["type",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Config.html":{},"classes/ConfigBuilder.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{},"interfaces/RuleInterface.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"interfaces/TutorialInterface.html":{},"pipes/UnNamedPipe.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["types/uuid",{"_index":1380,"title":{},"body":{"dependencies.html":{}}}],["unauthent",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{}}}],["unauthenticated.component.html",{"_index":1277,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["unauthenticated.component.scss",{"_index":1276,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["unauthenticatedcompon",{"_index":234,"title":{"components/UnauthenticatedComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/FolderCreationComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"components/UnauthenticatedComponent.html":{},"coverage.html":{},"overview.html":{}}}],["undefin",{"_index":348,"title":{},"body":{"interfaces/Config.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/JSONConfiguration.html":{},"interfaces/RuleInterface.html":{},"interfaces/TutorialInterface.html":{}}}],["under",{"_index":1458,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":904,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["unnam",{"_index":1267,"title":{},"body":{"pipes/UnNamedPipe.html":{}}}],["unnamedpip",{"_index":642,"title":{"pipes/UnNamedPipe.html":{}},"body":{"modules/ConfigModule.html":{},"pipes/UnNamedPipe.html":{},"coverage.html":{},"overview.html":{}}}],["unreleas",{"_index":1311,"title":{},"body":{"changelog.html":{}}}],["untitl",{"_index":1519,"title":{},"body":{"todo.html":{}}}],["updat",{"_index":731,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{}}}],["updateconfig",{"_index":695,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["updateconfig(newconfig",{"_index":724,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["updatelocalconfigur",{"_index":696,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["updateremoteconfigur",{"_index":697,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["updatetutori",{"_index":698,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["updatetutorial(upd",{"_index":729,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["uploadtyp",{"_index":773,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["us",{"_index":1020,"title":{},"body":{"injectables/GoogleService.html":{},"components/UnauthenticatedComponent.html":{},"index.html":{},"license.html":{}}}],["user",{"_index":292,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/GoogleService.html":{},"injectables/PreventAuthGuardService.html":{},"components/UnauthenticatedComponent.html":{},"index.html":{}}}],["userid",{"_index":687,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["util",{"_index":808,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"injectables/GoogleService.html":{}}}],["uuid",{"_index":392,"title":{},"body":{"classes/ConfigBuilder.html":{},"components/PresetConfigComponent.html":{},"dependencies.html":{}}}],["v4",{"_index":391,"title":{},"body":{"classes/ConfigBuilder.html":{},"components/PresetConfigComponent.html":{}}}],["valid",{"_index":398,"title":{},"body":{"classes/ConfigBuilder.html":{},"components/FolderCreationComponent.html":{}}}],["valu",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"interfaces/ConfigInterface.html":{},"components/ConfigListComponent.html":{},"interfaces/ConfigsInterface.html":{},"injectables/DatabaseService.html":{},"classes/DriveQueryBuilder.html":{},"interfaces/FolderCreation.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"interfaces/GroupFolderInterface.html":{},"interfaces/GroupInterface.html":{},"components/HomeComponent.html":{},"interfaces/JSONConfiguration.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"interfaces/RuleInterface.html":{},"interfaces/TutorialInterface.html":{},"pipes/UnNamedPipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":1273,"title":{},"body":{"pipes/UnNamedPipe.html":{}}}],["valueattribut",{"_index":927,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["valuechang",{"_index":934,"title":{},"body":{"components/FolderCreationComponent.html":{}}}],["var",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{}}}],["variabl",{"_index":1027,"title":{"miscellaneous/variables.html":{}},"body":{"injectables/GoogleService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["verifyconfig",{"_index":371,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["verifyconfig(config",{"_index":389,"title":{},"body":{"classes/ConfigBuilder.html":{}}}],["version",{"_index":1310,"title":{},"body":{"changelog.html":{}}}],["video",{"_index":906,"title":{},"body":{"classes/DriveQueryBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["view",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleService.html":{},"miscellaneous/variables.html":{}}}],["view_list",{"_index":1288,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["viewchild",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigListComponent.html":{}}}],["viewchild('routeroutlet",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchild(matpagin",{"_index":583,"title":{},"body":{"components/ConfigListComponent.html":{}}}],["viewedbymetim",{"_index":917,"title":{},"body":{"classes/DriveQueryBuilder.html":{}}}],["visit",{"_index":1291,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["void",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"classes/ConfigDataSource.html":{},"components/ConfigListComponent.html":{},"injectables/DatabaseService.html":{},"components/FolderCreationComponent.html":{},"injectables/GoogleService.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"components/UnauthenticatedComponent.html":{}}}],["warranti",{"_index":1489,"title":{},"body":{"license.html":{}}}],["way",{"_index":1423,"title":{},"body":{"index.html":{}}}],["web",{"_index":1392,"title":{},"body":{"dependencies.html":{}}}],["websit",{"_index":1292,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["whenev",{"_index":1424,"title":{},"body":{"index.html":{}}}],["whether",{"_index":300,"title":{},"body":{"injectables/AuthGuardService.html":{},"classes/DriveQueryBuilder.html":{},"injectables/PreventAuthGuardService.html":{},"license.html":{}}}],["width",{"_index":459,"title":{},"body":{"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"miscellaneous/variables.html":{}}}],["wilson",{"_index":1583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["window['gapi",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["without",{"_index":1470,"title":{},"body":{"license.html":{}}}],["work",{"_index":1294,"title":{},"body":{"components/UnauthenticatedComponent.html":{}}}],["workaround",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleService.html":{},"components/SettingsComponent.html":{},"injectables/SorterService.html":{},"miscellaneous/variables.html":{}}}],["yarn",{"_index":1438,"title":{},"body":{"index.html":{}}}],["ye",{"_index":997,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/SorterService.html":{},"pipes/UnNamedPipe.html":{}}}],["ye9ixt29vl_eau7bzvzv5qe17flfpzm",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleService.html":{}}}],["zon",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["zone",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/ConfigComponent.html":{},"components/ConfigListComponent.html":{},"components/HomeComponent.html":{},"components/PresetConfigComponent.html":{},"components/PresetConfigPageComponent.html":{},"injectables/PreventAuthGuardService.html":{}}}],["zone.j",{"_index":1394,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticatedModule.html":{},"modules/ConfigModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Base application component.\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            GoogleService\n                \n            \n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                aoService\n                            \n                            \n                                    Public\n                                authenticated\n                            \n                            \n                                    Public\n                                createConfigButtonState\n                            \n                            \n                                    Public\n                                loaded\n                            \n                            \n                                    Private\n                                loaderRemoved\n                            \n                            \n                                    Private\n                                openConfigModal\n                            \n                            \n                                    Public\n                                openConfigModal$\n                            \n                            \n                                    Public\n                                rlaSafe\n                            \n                            \n                                routerOutlet\n                            \n                            \n                                    Public\n                                showTour\n                            \n                            \n                                    Public\n                                tabLinks\n                            \n                            \n                                    Public\n                                tabsEnabled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                acceptTutorial\n                            \n                            \n                                declineTutorial\n                            \n                            \n                                getRouteState\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                openConfigModalFunc\n                            \n                            \n                                signIn\n                            \n                            \n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(aoService: AngularOnboardingService, database: DatabaseService, google: GoogleService, router: Router, zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:55\n                            \n                        \n\n                \n                    \n                            Creates an instance of AppComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        aoService\n                                                  \n                                                        \n                                                                    AngularOnboardingService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        database\n                                                  \n                                                        \n                                                                    DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        google\n                                                  \n                                                        \n                                                                    GoogleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Declare the Google Service as google\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Declare the Router as router\n\n                                                        \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Declare NgZone as zon\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            acceptTutorial\n                            \n                            \n                        \n                    \n                \n                \n                    \nacceptTutorial()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:156\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            declineTutorial\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeclineTutorial()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:151\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRouteState\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRouteState(outlet: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:168\n                            \n                        \n\n\n                \n                    \n                            Gets the current route information.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        outlet\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The route\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:116\n                            \n                        \n\n\n                \n                    \n                            Called after the view is initalized.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openConfigModalFunc\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenConfigModalFunc()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:147\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signIn\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignIn()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:143\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:139\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            aoService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        aoService:     AngularOnboardingService\n\n                    \n                \n                    \n                        \n                            Type :     AngularOnboardingService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authenticated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authenticated:     Boolean\n\n                    \n                \n                    \n                        \n                            Type :     Boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            createConfigButtonState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        createConfigButtonState:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'inactive'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loaded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loaded:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loaderRemoved\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loaderRemoved:     Boolean\n\n                    \n                \n                    \n                        \n                            Type :     Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            openConfigModal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        openConfigModal:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            openConfigModal$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        openConfigModal$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.openConfigModal.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rlaSafe\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rlaSafe:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            routerOutlet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        routerOutlet:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            showTour\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showTour:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tabLinks\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tabLinks:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      path: 'app/home',\n      label: 'Home'\n    },\n    {\n      path: 'app/config',\n      label: 'Configuration'\n    },\n    {\n      path: 'app/settings',\n      label: 'Settings'\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tabsEnabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tabsEnabled:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, NgZone, ViewChild } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { AngularOnboardingService } from 'angular-onboarding';\nimport { Subject } from 'rxjs';\n\nimport { fabAnimation, routerAnimation } from '../animations';\nimport { DatabaseService } from './services/database/database.service';\nimport { GoogleService } from './services/google/google.service';\n\n/**\n * Workaround for testing\n */\ndeclare var gapi: any;\n\n/**\n * Base application component.\n *\n * @export\n * @class AppComponent\n * @implements {AfterViewInit}\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  providers: [GoogleService],\n  animations: [routerAnimation, fabAnimation]\n})\nexport class AppComponent implements AfterViewInit {\n  @ViewChild('routerOutlet', { read: ElementRef }) routerOutlet: ElementRef;\n\n  private loaderRemoved: Boolean = false;\n  private openConfigModal: Subject = new Subject();\n\n  public loaded = false;\n  public showTour = true;\n  public rlaSafe = false;\n  public tabsEnabled = true;\n  public authenticated: Boolean;\n  public createConfigButtonState = 'inactive';\n  public openConfigModal$ = this.openConfigModal.asObservable();\n  public tabLinks = [\n    {\n      path: 'app/home',\n      label: 'Home'\n    },\n    {\n      path: 'app/config',\n      label: 'Configuration'\n    },\n    {\n      path: 'app/settings',\n      label: 'Settings'\n    }\n  ];\n\n  /**\n   * Creates an instance of AppComponent.\n   * @param {GoogleService} google Declare the Google Service as google\n   * @param {Router} router Declare the Router as router\n   * @param {NgZone} zone  Declare NgZone as zon\n   * @memberof AppComponent\n   */\n  constructor(\n    public aoService: AngularOnboardingService,\n    private database: DatabaseService,\n    private google: GoogleService,\n    private router: Router,\n    private zone: NgZone\n  ) {\n    const googleInitInterval = setInterval(() => {\n      aoService.navigateSubject.subscribe(path => {\n        router.navigateByUrl(path);\n      });\n      if (window['gapi']) {\n        this.google.init({\n          apiKey: 'AIzaSyB-yE9IXT29Vl_eAU7bzvzv5Qe17flfpzM',\n          clientId:\n            '362606538820-om1dhhvv5d9npas7jj02mbtvi5mjksmo.apps.googleusercontent.com',\n          discoveryDocs: [\n            'https://www.googleapis.com/discovery/v1/apis/drive/v3/rest'\n          ],\n          scope:\n            'https://www.googleapis.com/auth/drive https://www.googleapis.com/auth/drive.appdata'\n        });\n        this.google.authState$.subscribe(state => {\n          if (!this.loaderRemoved) {\n            this.loaded = true;\n            setTimeout(() => {\n              document.getElementById('loader').remove();\n              this.loaderRemoved = true;\n            }, 500);\n          }\n          this.authenticated = state;\n          if (state) {\n            this.database.initalize();\n            this.zone.run(() => {\n              this.router.navigate(['/app/home']);\n            });\n          } else {\n            this.zone.run(() => {\n              this.router.navigate(['/']);\n            });\n          }\n        });\n        clearInterval(googleInitInterval);\n      }\n    }, 250);\n  }\n\n  /**\n   * Called after the view is initalized.\n   *\n   * @memberof AppComponent\n   */\n  public ngAfterViewInit() {\n    this.rlaSafe = true;\n    // Listen for route changes\n    this.router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        if (event.url === '/app/config') {\n          this.createConfigButtonState = 'active';\n        } else {\n          this.createConfigButtonState = 'inactive';\n        }\n        if (\n          event.url === '/app/config/create' ||\n          event.url === '/app/config/presets' ||\n          event.url === '/app/config/edit'\n        ) {\n          this.tabsEnabled = false;\n        } else {\n          this.tabsEnabled = true;\n        }\n      }\n    });\n  }\n\n  signOut() {\n    this.google.signOut();\n  }\n\n  signIn() {\n    this.google.signIn();\n  }\n\n  openConfigModalFunc() {\n    this.openConfigModal.next(true);\n  }\n\n  declineTutorial() {\n    this.aoService.exit();\n    this.showTour = false;\n  }\n\n  acceptTutorial() {\n    this.aoService.start();\n    this.showTour = false;\n  }\n\n  /**\n   * Gets the current route information.\n   *\n   * @param {any} outlet The route\n   * @returns\n   * @memberof AppComponent\n   */\n  getRouteState(outlet) {\n    return outlet.activatedRouteData.state;\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n    \n    \n  \n\n\n  \n    \n    \n      \n    \n    \n      \n        Sign Out\n      \n      \n        more_vert\n      \n      \n        Sign In\n      \n    \n  \n  \n    \n      \n        {{ link.label }}\n      \n    \n  \n\n\n  \n  \n\n\nadd\n\n\n  Would you like to take a tour?\n  \n    thumb_up\n  \n  \n    thumb_down\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                          Sign Out                    more_vert                    Sign In                                {{ link.label }}                add  Would you like to take a tour?      thumb_up        thumb_down  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'ConfigListComponent', 'selector': 'app-config-list'},{'name': 'ConfigModalComponent', 'selector': 'app-config-modal'},{'name': 'EditConfigModalComponent', 'selector': 'app-edit-config-modal'},{'name': 'EditConfigPageComponent', 'selector': 'app-edit-config-page'},{'name': 'FolderCreationComponent', 'selector': 'app-folder-creation'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NewConfigPageComponent', 'selector': 'app-new-rule-page'},{'name': 'NewRuleStepperComponent', 'selector': 'app-new-rule-stepper'},{'name': 'PresetConfigComponent', 'selector': 'app-preset-config'},{'name': 'PresetConfigPageComponent', 'selector': 'app-preset-config-page'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'UnauthenticatedComponent', 'selector': 'app-unauthenticated'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_AppComponent_providers\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nUnauthenticatedComponent\n\nUnauthenticatedComponent\n\nAppModule -->\n\nUnauthenticatedComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nGoogleService\n\nGoogleService\n\nAppComponent -->\n\nGoogleService->AppComponent\n\n\n\nAppModule -->\n\nGoogleService->AppModule\n\n\n\n\n\nAuthenticatedModule\n\nAuthenticatedModule\n\nAppModule -->\n\nAuthenticatedModule->AppModule\n\n\n\n\n\nConfigModule\n\nConfigModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nAuthGuardService\n\nAuthGuardService\n\nAppModule -->\n\nAuthGuardService->AppModule\n\n\n\n\n\nDatabaseService\n\nDatabaseService\n\nAppModule -->\n\nDatabaseService->AppModule\n\n\n\n\n\nPreventAuthGuardService\n\nPreventAuthGuardService\n\nAppModule -->\n\nPreventAuthGuardService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                UnauthenticatedComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthGuardService\n                            \n                            \n                                     DatabaseService\n                            \n                            \n                                     GoogleService\n                            \n                            \n                                     PreventAuthGuardService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AuthenticatedModule\n                            \n                            \n                                    ConfigModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MatDialogModule, MatIconModule, MatInputModule, MatToolbarModule } from '@angular/material';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule } from '@angular/router';\nimport { AngularOnboardingModule } from 'angular-onboarding';\n\nimport { aoConfig } from './../consts';\nimport { AppComponent } from './app.component';\nimport { appRoutes } from './app.routes';\nimport { UnauthenticatedComponent } from './components/auth/unauthenticated/unauthenticated.component';\nimport { AuthenticatedModule } from './modules/authenticated/authenticated.module';\nimport { ConfigModule } from './modules/config/config.module';\nimport { AuthGuardService, PreventAuthGuardService } from './services/auth/auth-guard.service';\nimport { DatabaseService } from './services/database/database.service';\nimport { GoogleService } from './services/google/google.service';\n\n@NgModule({\n  declarations: [AppComponent, UnauthenticatedComponent],\n  imports: [\n    BrowserModule,\n    MatMenuModule,\n    MatIconModule,\n    MatTabsModule,\n    MatInputModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatToolbarModule,\n    ConfigModule.forRoot(),\n    BrowserAnimationsModule,\n    AuthenticatedModule.forRoot(),\n    RouterModule.forRoot(appRoutes),\n    AngularOnboardingModule.forRoot(aoConfig)\n  ],\n  providers: [\n    DatabaseService,\n    GoogleService,\n    AuthGuardService,\n    PreventAuthGuardService,\n    AppComponent\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuardService.html":{"url":"injectables/AuthGuardService.html","title":"injectable - AuthGuardService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth/auth-guard.service.ts\n        \n\n            \n                Description\n            \n            \n                Prevent a user from accessing a route if they aren't authenticated.\n\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                google\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                zone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(google: GoogleService, router: Router, zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth/auth-guard.service.ts:14\n                            \n                        \n\n                \n                    \n                            Creates an instance of AuthGuardService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        google\n                                                  \n                                                        \n                                                                    GoogleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Declare the Google Service as google.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Declare the Router as router\n\n                                                        \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Declare NgZone as zone\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth/auth-guard.service.ts:29\n                            \n                        \n\n\n                \n                    \n                            Determines whether the user can go to the page and handle it.\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Whether or not the user can access the route\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            google\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        google:     GoogleService\n\n                    \n                \n                    \n                        \n                            Type :     GoogleService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth/auth-guard.service.ts:22\n                            \n                        \n\n                \n                    \n                        Declare the Google Service as google.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth/auth-guard.service.ts:22\n                            \n                        \n\n                \n                    \n                        Declare the Router as router\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            zone\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zone:     NgZone\n\n                    \n                \n                    \n                        \n                            Type :     NgZone\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth/auth-guard.service.ts:22\n                            \n                        \n\n                \n                    \n                        Declare NgZone as zone\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n\nimport { GoogleService } from '../google/google.service';\n\n/**\n * Prevent a user from accessing a route if they aren't authenticated.\n *\n * @export\n * @class AuthGuardService\n * @implements {CanActivate}\n */\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n/**\n * Creates an instance of AuthGuardService.\n * @param {GoogleService} google Declare the Google Service as google.\n * @param {Router} router Declare the Router as router\n * @param {NgZone} zone Declare NgZone as zone\n * @memberof AuthGuardService\n */\nconstructor(public google: GoogleService, public router: Router, public zone: NgZone) { }\n  /**\n   * Determines whether the user can go to the page and handle it.\n   *\n   * @returns {boolean} Whether or not the user can access the route\n   * @memberof AuthGuardService\n   */\n  canActivate(): boolean {\n    if (this.google.getAuthStatus()) {\n      return true;\n    }\n    this.zone.run(() => {\n      this.router.navigate(['/']);\n    });\n    return false;\n  }\n}\n\n/**\n * Prevent a user from accessing a route if they are authenticated.\n *\n * @export\n * @class PreventAuthGuardService\n * @implements {CanActivate}\n */\n@Injectable()\nexport class PreventAuthGuardService implements CanActivate {\n/**\n * Creates an instance of PreventAuthGuardService.\n * @param {GoogleService} google Declare the Google Service as google.\n * @param {Router} router Declare the Router as router\n * @param {NgZone} zone Declare NgZone as zone\n * @memberof PreventAuthGuardService\n */\nconstructor(public google: GoogleService, public router: Router, public zone: NgZone) { }\n  /**\n   * Determines whether the user can go to the page and handle it.\n   *\n   * @returns {boolean} Whether or not the user can access the route\n   * @memberof PreventAuthGuardService\n   */\n  canActivate(): boolean {\n    if (!this.google.getAuthStatus()) {\n      return true;\n    }\n    this.zone.run(() => {\n      this.router.navigate(['/app/home']);\n    });\n    return false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthenticatedModule.html":{"url":"modules/AuthenticatedModule.html","title":"module - AuthenticatedModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthenticatedModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthenticatedModule\n\n\n\ncluster_AuthenticatedModule_declarations\n\n\n\ncluster_AuthenticatedModule_imports\n\n\n\ncluster_AuthenticatedModule_exports\n\n\n\ncluster_AuthenticatedModule_providers\n\n\n\n\nConfigComponent\n\nConfigComponent\n\n\n\nAuthenticatedModule\n\nAuthenticatedModule\n\nAuthenticatedModule -->\n\nConfigComponent->AuthenticatedModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAuthenticatedModule -->\n\nHomeComponent->AuthenticatedModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nAuthenticatedModule -->\n\nSettingsComponent->AuthenticatedModule\n\n\n\n\n\nConfigComponent \n\nConfigComponent \n\nConfigComponent  -->\n\nAuthenticatedModule->ConfigComponent \n\n\n\n\n\nConfigModule\n\nConfigModule\n\nAuthenticatedModule -->\n\nConfigModule->AuthenticatedModule\n\n\n\n\n\nSorterService\n\nSorterService\n\nAuthenticatedModule -->\n\nSorterService->AuthenticatedModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/authenticated/authenticated.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Handles all authenticated components\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ConfigComponent\n                            \n                            \n                                HomeComponent\n                            \n                            \n                                SettingsComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     SorterService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ConfigModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ConfigComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  MatButtonModule,\n  MatCardModule,\n  MatDialogModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatSnackBarModule,\n  MatTooltipModule,\n} from '@angular/material';\nimport { AngularOnboardingModule } from 'angular-onboarding';\n\nimport { ConfigComponent } from '../../components/tabs/config/config.component';\nimport { HomeComponent } from '../../components/tabs/home/home.component';\nimport { SettingsComponent } from '../../components/tabs/settings/settings.component';\nimport { SorterService } from '../../services/sorter/sorter.service';\nimport { ConfigModule } from '../config/config.module';\n\n/**\n * Handles all authenticated components\n *\n * @export\n * @class AuthenticatedModule\n */\n@NgModule({\n  declarations: [HomeComponent, ConfigComponent, SettingsComponent],\n  imports: [\n    FormsModule,\n    CommonModule,\n    MatIconModule,\n    MatListModule,\n    MatCardModule,\n    MatInputModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    ReactiveFormsModule,\n    ConfigModule.forRoot(),\n    AngularOnboardingModule\n  ],\n  providers: [SorterService],\n  exports: [ConfigComponent]\n})\nexport class AuthenticatedModule {\n  /**\n   * Register with the root module of the app\n   *\n   * @static\n   * @returns {ModuleWithProviders} This module\n   * @memberof AuthenticatedModule\n   */\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: AuthenticatedModule,\n      providers: []\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Config.html":{"url":"interfaces/Config.html","title":"interface - Config","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Config\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        key\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Config {\n  name: String;\n  key: String;\n}\n\nexport interface ConfigInterface {\n  activeConfig: string;\n}\n\nexport interface RuleInterface {\n  id: string;\n  name: string;\n  data?: any;\n  classifier?: string;\n  constraint?: string;\n}\n\nexport interface GroupFolderInterface {\n  name?: string;\n  renameUntitled?: boolean;\n  folderID?: string;\n}\n\nexport interface FolderCreation {\n  parent: {\n    folderID: string | undefined;\n    name: string | null;\n  };\n  prefix: {\n    type: string | null;\n    value: string;\n  };\n  name: {\n    type: string | null;\n    value: string;\n  };\n  suffix: {\n    type: string | null;\n    value: string;\n  };\n}\n\nexport interface GroupInterface {\n  id: string;\n  name: string;\n  rules: Array;\n  source: GroupFolderInterface;\n  destination?: GroupFolderInterface;\n  createFolder?: FolderCreation;\n}\n\nexport interface ConfigsInterface {\n  id: string;\n  name: string;\n  groups: Array;\n}\n\nexport interface TutorialInterface {\n  enabled: boolean;\n  location: number;\n}\n\nexport interface JSONConfiguration {\n  configs: Array;\n  activeConfig: string;\n  tutorial: TutorialInterface;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigBuilder.html":{"url":"classes/ConfigBuilder.html","title":"class - ConfigBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/config-builder.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                addGroup\n                            \n                            \n                                    Static\n                                configFromGroup\n                            \n                            \n                                    Static\n                                folderNameBuilder\n                            \n                            \n                                    Static\n                                generateNewConfig\n                            \n                            \n                                    Static\n                                verifyConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            addGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addGroup(config: ConfigsInterface, newGroupName: string, newGroupDestination: GroupFolderInterface, newGroupSource: GroupFolderInterface, firstGroupRule: RuleInterface)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/config-builder.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    ConfigsInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        newGroupName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        newGroupDestination\n                                                        \n                                                                    GroupFolderInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        newGroupSource\n                                                        \n                                                                    GroupFolderInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        firstGroupRule\n                                                        \n                                                                    RuleInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ConfigsInterface\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            configFromGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        configFromGroup(groups: , name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/config-builder.ts:138\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        groups\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ConfigsInterface\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            folderNameBuilder\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        folderNameBuilder(createFolderConfig: FolderCreation)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/config-builder.ts:109\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createFolderConfig\n                                                        \n                                                                    FolderCreation\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            generateNewConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        generateNewConfig(configName: string, firstGroupName: string, sourceFolder: GroupFolderInterface, destinationFolder: GroupFolderInterface, createFolder: FolderCreation, firstGroupRule: RuleInterface)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/config-builder.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        firstGroupName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        sourceFolder\n                                                        \n                                                                    GroupFolderInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        destinationFolder\n                                                        \n                                                                    GroupFolderInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        createFolder\n                                                        \n                                                                    FolderCreation\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        firstGroupRule\n                                                        \n                                                                    RuleInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ConfigsInterface\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            verifyConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        verifyConfig(config: ConfigsInterface)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/config-builder.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    ConfigsInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { v4 as uuid } from 'uuid';\n\nimport { ConfigsInterface, FolderCreation, GroupFolderInterface, RuleInterface } from '../../interfaces';\n\nexport class ConfigBuilder {\n  static generateNewConfig(\n    configName: string,\n    firstGroupName: string,\n    sourceFolder: GroupFolderInterface,\n    destinationFolder: GroupFolderInterface,\n    createFolder: FolderCreation,\n    firstGroupRule: RuleInterface\n  ): ConfigsInterface {\n    const configHolder: ConfigsInterface = {\n      name: configName,\n      groups: [\n        {\n          id: uuid(),\n          name: firstGroupName,\n          source: sourceFolder,\n          rules: [firstGroupRule]\n        }\n      ],\n      id: uuid()\n    };\n    if (createFolder) {\n      configHolder.groups[0].createFolder = createFolder;\n    } else {\n      configHolder.groups[0].destination = destinationFolder;\n    }\n    return configHolder;\n  }\n\n  static addGroup(\n    config: ConfigsInterface,\n    newGroupName: string,\n    newGroupDestination: GroupFolderInterface,\n    newGroupSource: GroupFolderInterface,\n    firstGroupRule: RuleInterface\n  ): ConfigsInterface {\n    const localConfig: ConfigsInterface = config;\n    localConfig.groups.push({\n      id: uuid(),\n      name: newGroupName,\n      source: newGroupSource,\n      destination: newGroupDestination,\n      rules: [firstGroupRule]\n    });\n    return localConfig;\n  }\n\n  static verifyConfig(config: ConfigsInterface): boolean {\n    let valid = true;\n    if (\n      !config.groups ||\n      !config.id ||\n      !config.name ||\n      config.name.length  {\n        if (group.createFolder) {\n          if (\n            !group.createFolder.name ||\n            !group.createFolder.parent ||\n            !group.createFolder.prefix ||\n            !group.createFolder.suffix ||\n            group.createFolder.name.value.length  {\n            if (\n              !rule.name ||\n              !rule.id ||\n              !rule.data ||\n              !rule.constraint ||\n              !rule.classifier\n            ) {\n              valid = false;\n            }\n          });\n        }\n      });\n    }\n    return valid;\n  }\n\n  static folderNameBuilder(createFolderConfig: FolderCreation): string {\n    let outputString = '';\n    switch (createFolderConfig.prefix.type) {\n      case 'text':\n        outputString += createFolderConfig.prefix.value;\n        break;\n      case 'date':\n        outputString += Date();\n        break;\n    }\n    switch (createFolderConfig.name.type) {\n      case 'text':\n        outputString += ` ${createFolderConfig.name.value}`;\n        break;\n      case 'date':\n        outputString += ` ${Date()}`;\n        break;\n    }\n    switch (createFolderConfig.suffix.type) {\n      case 'text':\n        outputString += ` ${createFolderConfig.suffix.value}`;\n        break;\n      case 'date':\n        outputString += ` ${Date()}`;\n        break;\n    }\n    return outputString;\n  }\n\n  static configFromGroup(groups, name: string): ConfigsInterface {\n    return {\n      id: uuid(),\n      name: name,\n      groups: groups\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfigComponent.html":{"url":"components/ConfigComponent.html","title":"component - ConfigComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfigComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tabs/config/config.component.ts\n\n\n    \n        Description\n    \n    \n        Declare component to be shown when the config tab is selected.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-config\n            \n\n            \n                styleUrls\n                config.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./config.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                initalized\n                            \n                            \n                                    Private\n                                openConfigModalListener\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getDialogWidth\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openNewConfigDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(appComponent: AppComponent, dialog: MatDialog, router: Router, zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tabs/config/config.component.ts:25\n                            \n                        \n\n                \n                    \n                            Creates an instance of ConfigComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appComponent\n                                                  \n                                                        \n                                                                    AppComponent\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getDialogWidth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getDialogWidth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config.component.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config.component.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openNewConfigDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenNewConfigDialog()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config.component.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            initalized\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        initalized:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            openConfigModalListener\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        openConfigModalListener:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { AfterViewInit, Component, NgZone, OnDestroy, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { AppComponent } from '../../../app.component';\nimport { ConfigModalComponent } from '../../shared/config-modal/config-modal.component';\n\n/**\n * Declare component to be shown when the config tab is selected.\n *\n * @export\n * @class ConfigComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-config',\n  templateUrl: './config.component.html',\n  styleUrls: ['./config.component.scss'],\n})\nexport class ConfigComponent implements OnInit, AfterViewInit, OnDestroy {\n\n  public initalized = false;\n\n  private openConfigModalListener: Subscription;\n\n  /**\n   * Creates an instance of ConfigComponent.\n   * @memberof ConfigComponent\n   */\n  constructor(\n    private appComponent: AppComponent,\n    private dialog: MatDialog,\n    private router: Router,\n    private zone: NgZone\n  ) { }\n\n  ngOnInit() {\n    this.openConfigModalListener =\n      this.appComponent.openConfigModal$.subscribe(open => {\n        if (open === true) {\n          this.openNewConfigDialog();\n        }\n      });\n  }\n\n  ngAfterViewInit() {\n    this.initalized = true;\n  }\n\n  ngOnDestroy() {\n    this.openConfigModalListener.unsubscribe();\n  }\n\n  public getDialogWidth() {\n    const width: number = document.body.clientWidth;\n    if (width >= 1280) {\n      return (width / 2);\n    } else if (width >= 640) {\n      return (width / 1.5);\n    } else {\n      return 0;\n    }\n  }\n\n  openNewConfigDialog() {\n    const dialogWidth = this.getDialogWidth();\n    if (dialogWidth) {\n      const dialogInstance = this.dialog.open(ConfigModalComponent, {\n        width: `${dialogWidth}px`,\n        maxHeight: `${document.body.clientHeight * .9}px`\n      });\n      const componentInstance = dialogInstance.componentInstance;\n      const dialogSubscription =\n        componentInstance\n          .closeCommand\n          .subscribe(close => {\n            dialogInstance.close();\n            dialogSubscription.unsubscribe();\n          });\n    } else {\n      this.zone.run(() => {\n        this.router.navigate(['/app/config/create']);\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'ConfigListComponent', 'selector': 'app-config-list'},{'name': 'ConfigModalComponent', 'selector': 'app-config-modal'},{'name': 'EditConfigModalComponent', 'selector': 'app-edit-config-modal'},{'name': 'EditConfigPageComponent', 'selector': 'app-edit-config-page'},{'name': 'FolderCreationComponent', 'selector': 'app-folder-creation'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NewConfigPageComponent', 'selector': 'app-new-rule-page'},{'name': 'NewRuleStepperComponent', 'selector': 'app-new-rule-stepper'},{'name': 'PresetConfigComponent', 'selector': 'app-preset-config'},{'name': 'PresetConfigPageComponent', 'selector': 'app-preset-config-page'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'UnauthenticatedComponent', 'selector': 'app-unauthenticated'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfigComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigDataSource.html":{"url":"classes/ConfigDataSource.html","title":"class - ConfigDataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigDataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/config-data-source.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        DataSource\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                configs\n                            \n                            \n                                    Private\n                                configSubject\n                            \n                            \n                                    Public\n                                loading$\n                            \n                            \n                                    Private\n                                loadingSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                calculateStart\n                            \n                            \n                                connect\n                            \n                            \n                                disconnect\n                            \n                            \n                                loadConfigs\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(paginator: , database: DatabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/config-data-source.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        paginator\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        database\n                                                  \n                                                        \n                                                                    DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            configs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        configs:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/config-data-source.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            configSubject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        configSubject:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject([])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/config-data-source.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loading$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loading$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.loadingSubject.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/config-data-source.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadingSubject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadingSubject:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(true)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/config-data-source.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            calculateStart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        calculateStart(page: number, pageSize: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/config-data-source.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        pageSize\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            connect\n                            \n                            \n                        \n                    \n                \n                \n                    \nconnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/config-data-source.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disconnect\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisconnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/config-data-source.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadConfigs\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadConfigs(page: number, pageSize: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/config-data-source.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                0\n                                                        \n\n                                                \n                                                \n                                                        pageSize\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                10\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { DataSource } from '@angular/cdk/collections';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Config, ConfigsInterface } from 'src/interfaces';\n\nimport { DatabaseService } from '../services/database/database.service';\n\nexport class ConfigDataSource implements DataSource {\n  private loadingSubject = new BehaviorSubject(true);\n  private configSubject = new BehaviorSubject([]);\n  private configs: Array;\n\n  public loading$ = this.loadingSubject.asObservable();\n\n  constructor(private paginator, private database: DatabaseService) {}\n\n  private calculateStart(page: number, pageSize: number): number {\n    return page ? page * pageSize : 0;\n  }\n\n  connect(): Observable {\n    return this.configSubject.asObservable();\n  }\n\n  disconnect(): void {\n    this.configSubject.complete();\n    this.loadingSubject.complete();\n  }\n\n  loadConfigs(page: number = 0, pageSize: number = 10) {\n    this.loadingSubject.next(true);\n    this.configs = this.database.getConfigs();\n    const start = this.calculateStart(page, pageSize);\n    const configs = this.configs.slice(start, start + pageSize);\n    const data = [];\n    for (const config in configs) {\n      if (configs[config].id && configs[config].name) {\n        const name = configs[config]['name'];\n        data.push({\n          name: name,\n          key: configs[config].id\n        });\n      }\n    }\n    this.configSubject.next(data);\n    this.loadingSubject.next(false);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfigInterface.html":{"url":"interfaces/ConfigInterface.html","title":"interface - ConfigInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ConfigInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        activeConfig\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activeConfig\n                                    \n                                \n                                \n                                    \n                                        activeConfig:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Config {\n  name: String;\n  key: String;\n}\n\nexport interface ConfigInterface {\n  activeConfig: string;\n}\n\nexport interface RuleInterface {\n  id: string;\n  name: string;\n  data?: any;\n  classifier?: string;\n  constraint?: string;\n}\n\nexport interface GroupFolderInterface {\n  name?: string;\n  renameUntitled?: boolean;\n  folderID?: string;\n}\n\nexport interface FolderCreation {\n  parent: {\n    folderID: string | undefined;\n    name: string | null;\n  };\n  prefix: {\n    type: string | null;\n    value: string;\n  };\n  name: {\n    type: string | null;\n    value: string;\n  };\n  suffix: {\n    type: string | null;\n    value: string;\n  };\n}\n\nexport interface GroupInterface {\n  id: string;\n  name: string;\n  rules: Array;\n  source: GroupFolderInterface;\n  destination?: GroupFolderInterface;\n  createFolder?: FolderCreation;\n}\n\nexport interface ConfigsInterface {\n  id: string;\n  name: string;\n  groups: Array;\n}\n\nexport interface TutorialInterface {\n  enabled: boolean;\n  location: number;\n}\n\nexport interface JSONConfiguration {\n  configs: Array;\n  activeConfig: string;\n  tutorial: TutorialInterface;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfigListComponent.html":{"url":"components/ConfigListComponent.html","title":"component - ConfigListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfigListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tabs/config/config-list/config-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-config-list\n            \n\n            \n                styleUrls\n                config-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./config-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activeConfig\n                            \n                            \n                                    Private\n                                activeConfigChangeSubscription\n                            \n                            \n                                    Private\n                                configChangeSubscription\n                            \n                            \n                                    Public\n                                dataSource\n                            \n                            \n                                    Public\n                                loading\n                            \n                            \n                                    Private\n                                loadingSubscription\n                            \n                            \n                                    Public\n                                noConfigs\n                            \n                            \n                                    Private\n                                oldPageSize\n                            \n                            \n                                paginator\n                            \n                            \n                                    Private\n                                paginatorSubscription\n                            \n                            \n                                    Public\n                                tableColumns\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteConfig\n                            \n                            \n                                editConfig\n                            \n                            \n                                getActiveConfig\n                            \n                            \n                                getDialogWidth\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openPresets\n                            \n                            \n                                refreshConfigs\n                            \n                            \n                                setActiveConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(changeDetector: ChangeDetectorRef, database: DatabaseService, google: GoogleService, dialog: MatDialog, router: Router, zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tabs/config/config-list/config-list.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changeDetector\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        database\n                                                  \n                                                        \n                                                                    DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        google\n                                                  \n                                                        \n                                                                    GoogleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteConfig(configKey: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:179\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configKey\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \neditConfig(configID: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:157\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getActiveConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetActiveConfig(configKey: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:191\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configKey\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDialogWidth\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDialogWidth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:111\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:195\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openPresets\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenPresets()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:122\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refreshConfigs\n                            \n                            \n                        \n                    \n                \n                \n                    \nrefreshConfigs()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:143\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setActiveConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetActiveConfig(configKey: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:187\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configKey\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            activeConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeConfig:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            activeConfigChangeSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeConfigChangeSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            configChangeSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        configChangeSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dataSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dataSource:     ConfigDataSource\n\n                    \n                \n                    \n                        \n                            Type :     ConfigDataSource\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loading:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadingSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadingSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            noConfigs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        noConfigs:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            oldPageSize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        oldPageSize:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        paginator:     MatPaginator\n\n                    \n                \n                    \n                        \n                            Type :     MatPaginator\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            paginatorSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        paginatorSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tableColumns\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tableColumns:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['name', 'actions']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/config-list/config-list.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { AfterViewInit, ChangeDetectorRef, Component, NgZone, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog, MatPaginator } from '@angular/material';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { ConfigDataSource } from '../../../../classes/config-data-source';\nimport { DatabaseService } from '../../../../services/database/database.service';\nimport { GoogleService } from '../../../../services/google/google.service';\nimport { EditConfigModalComponent } from '../../../shared/edit-config-modal/edit-config-modal.component';\nimport { PresetConfigComponent } from '../preset-config/preset-config.component';\n\n@Component({\n  selector: 'app-config-list',\n  templateUrl: './config-list.component.html',\n  styleUrls: ['./config-list.component.scss']\n})\nexport class ConfigListComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  private activeConfig: string;\n  private oldPageSize = 10;\n  private loadingSubscription: Subscription;\n  private paginatorSubscription: Subscription;\n  private configChangeSubscription: Subscription;\n  private activeConfigChangeSubscription: Subscription;\n\n  public loading = true;\n  public noConfigs = true;\n  public dataSource: ConfigDataSource;\n  public tableColumns = ['name', 'actions'];\n\n  constructor(\n    private changeDetector: ChangeDetectorRef,\n    private database: DatabaseService,\n    private google: GoogleService,\n    private dialog: MatDialog,\n    private router: Router,\n    private zone: NgZone\n  ) {}\n\n  ngOnInit() {\n    if (this.google.getAuthStatus()) {\n      this.dataSource = new ConfigDataSource(this.paginator, this.database);\n      this.database.numberConfigs().then(numConfigs => {\n        if (numConfigs === 0) {\n          this.noConfigs = true;\n        } else {\n          this.noConfigs = false;\n        }\n      });\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.google.getAuthStatus()) {\n      // Listen for page changes\n      this.paginatorSubscription = this.paginator.page.subscribe(() => {\n        if (this.oldPageSize === this.paginator.pageSize) {\n          this.dataSource.loadConfigs(\n            this.paginator.pageIndex,\n            this.paginator.pageSize\n          );\n          this.changeDetector.detectChanges();\n        } else {\n          this.dataSource.loadConfigs(0, this.paginator.pageSize);\n          this.changeDetector.detectChanges();\n          this.oldPageSize = this.paginator.pageSize;\n          this.paginator.pageIndex = 0;\n        }\n      });\n      // Load the configurations\n      this.dataSource.loadConfigs();\n      this.changeDetector.detectChanges();\n      // Pass the number of configs to the paginator\n      this.database.numberConfigs().then(numConfigs => {\n        this.paginator.length = numConfigs;\n      });\n      // Listen for config changes\n      this.configChangeSubscription = this.database.configSubject.subscribe(\n        created => {\n          this.refreshConfigs();\n          this.loading = false;\n        }\n      );\n      // Retrive the active config\n      this.database.getActiveConfig().then(\n        activeConfig => {\n          this.activeConfig = activeConfig;\n        },\n        () => {\n          this.activeConfig = undefined;\n        }\n      );\n      // Listen for active config changes\n      this.activeConfigChangeSubscription = this.database.activeConfigChanged.subscribe(\n        newConfigID => {\n          this.activeConfig = newConfigID;\n        },\n        err => console.error\n      );\n      setTimeout(_ => {\n        this.loadingSubscription = this.dataSource.loading$.subscribe(\n          loading => {\n            this.loading = loading;\n          }\n        );\n      });\n    }\n  }\n\n  getDialogWidth() {\n    const width: number = document.body.clientWidth;\n    if (width >= 1280) {\n      return width / 2;\n    } else if (width >= 640) {\n      return width / 1.5;\n    } else {\n      return 0;\n    }\n  }\n\n  openPresets() {\n    const dialogWidth = this.getDialogWidth();\n    if (dialogWidth) {\n      const dialogInstance = this.dialog.open(PresetConfigComponent, {\n        width: `${dialogWidth}px`,\n        maxHeight: `${document.body.clientHeight * 0.9}px`\n      });\n      const componentInstance = dialogInstance.componentInstance;\n      const closeSubscription = componentInstance.closeCommand.subscribe(\n        close => {\n          dialogInstance.close();\n          closeSubscription.unsubscribe();\n        }\n      );\n    } else {\n      this.zone.run(() => {\n        this.router.navigate(['/app/config/presets']);\n      });\n    }\n  }\n\n  refreshConfigs() {\n    this.loading = true;\n    this.dataSource.loadConfigs();\n    this.changeDetector.detectChanges();\n    this.database.numberConfigs().then(numConfigs => {\n      if (numConfigs === 0) {\n        this.noConfigs = true;\n      } else {\n        this.noConfigs = false;\n      }\n      this.paginator.length = numConfigs;\n    });\n  }\n\n  editConfig(configID: string) {\n    this.database.editingConfig = configID;\n    const dialogWidth = this.getDialogWidth();\n    if (dialogWidth) {\n      const dialogInstance = this.dialog.open(EditConfigModalComponent, {\n        width: `${dialogWidth}px`,\n        maxHeight: `${document.body.clientHeight * 0.9}px`\n      });\n      const componentInstance = dialogInstance.componentInstance;\n      const closeSubscription = componentInstance.closeCommand.subscribe(\n        close => {\n          dialogInstance.close();\n          closeSubscription.unsubscribe();\n        }\n      );\n    } else {\n      this.zone.run(() => {\n        this.router.navigate(['/app/config/edit']);\n      });\n    }\n  }\n\n  deleteConfig(configKey: string) {\n    this.loading = true;\n    if (configKey === this.activeConfig) {\n      this.setActiveConfig('');\n    }\n    this.database.deleteConfig(configKey);\n  }\n\n  setActiveConfig(configKey: string) {\n    this.database.setActiveConfig(configKey);\n  }\n\n  getActiveConfig(configKey: string): boolean {\n    return this.activeConfig === configKey ? true : false;\n  }\n\n  ngOnDestroy() {\n    if (this.loadingSubscription) {\n      this.loadingSubscription.unsubscribe();\n    }\n    if (this.paginatorSubscription) {\n      this.paginatorSubscription.unsubscribe();\n    }\n    if (this.configChangeSubscription) {\n      this.configChangeSubscription.unsubscribe();\n    }\n    if (this.activeConfigChangeSubscription) {\n      this.activeConfigChangeSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n  Configuration's\n  \n    \n      \n        list\n      \n    \n    \n    \n      refresh\n    \n  \n\n\n  \n\n\n  \n    \n    \n      Name\n      {{config.name}}\n    \n    \n      Actions\n      \n        \n          edit\n        \n        \n          settings_power\n        \n        \n          delete_forever\n        \n      \n    \n    \n    \n  \n\n  \n  \n\nYou have no configurations try creating one!\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Configuration\\'s                    list                        refresh                        Name      {{config.name}}              Actions                        edit                          settings_power                          delete_forever                                You have no configurations try creating one!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'ConfigListComponent', 'selector': 'app-config-list'},{'name': 'ConfigModalComponent', 'selector': 'app-config-modal'},{'name': 'EditConfigModalComponent', 'selector': 'app-edit-config-modal'},{'name': 'EditConfigPageComponent', 'selector': 'app-edit-config-page'},{'name': 'FolderCreationComponent', 'selector': 'app-folder-creation'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NewConfigPageComponent', 'selector': 'app-new-rule-page'},{'name': 'NewRuleStepperComponent', 'selector': 'app-new-rule-stepper'},{'name': 'PresetConfigComponent', 'selector': 'app-preset-config'},{'name': 'PresetConfigPageComponent', 'selector': 'app-preset-config-page'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'UnauthenticatedComponent', 'selector': 'app-unauthenticated'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfigListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigModule.html":{"url":"modules/ConfigModule.html","title":"module - ConfigModule","body":"\n                   \n\n\n\n\n  Modules\n  ConfigModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_declarations\n\n\n\ncluster_ConfigModule_imports\n\n\n\ncluster_ConfigModule_exports\n\n\n\n\nConfigListComponent\n\nConfigListComponent\n\n\n\nConfigModule\n\nConfigModule\n\nConfigModule -->\n\nConfigListComponent->ConfigModule\n\n\n\n\n\nConfigModalComponent\n\nConfigModalComponent\n\nConfigModule -->\n\nConfigModalComponent->ConfigModule\n\n\n\n\n\nEditConfigModalComponent\n\nEditConfigModalComponent\n\nConfigModule -->\n\nEditConfigModalComponent->ConfigModule\n\n\n\n\n\nEditConfigPageComponent\n\nEditConfigPageComponent\n\nConfigModule -->\n\nEditConfigPageComponent->ConfigModule\n\n\n\n\n\nFolderCreationComponent\n\nFolderCreationComponent\n\nConfigModule -->\n\nFolderCreationComponent->ConfigModule\n\n\n\n\n\nNewConfigPageComponent\n\nNewConfigPageComponent\n\nConfigModule -->\n\nNewConfigPageComponent->ConfigModule\n\n\n\n\n\nNewRuleStepperComponent\n\nNewRuleStepperComponent\n\nConfigModule -->\n\nNewRuleStepperComponent->ConfigModule\n\n\n\n\n\nPresetConfigComponent\n\nPresetConfigComponent\n\nConfigModule -->\n\nPresetConfigComponent->ConfigModule\n\n\n\n\n\nPresetConfigPageComponent\n\nPresetConfigPageComponent\n\nConfigModule -->\n\nPresetConfigPageComponent->ConfigModule\n\n\n\n\n\nUnNamedPipe\n\nUnNamedPipe\n\nConfigModule -->\n\nUnNamedPipe->ConfigModule\n\n\n\n\n\nConfigListComponent \n\nConfigListComponent \n\nConfigListComponent  -->\n\nConfigModule->ConfigListComponent \n\n\n\n\n\nConfigRoutingModule\n\nConfigRoutingModule\n\nConfigModule -->\n\nConfigRoutingModule->ConfigModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/config/config.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ConfigListComponent\n                            \n                            \n                                ConfigModalComponent\n                            \n                            \n                                EditConfigModalComponent\n                            \n                            \n                                EditConfigPageComponent\n                            \n                            \n                                FolderCreationComponent\n                            \n                            \n                                NewConfigPageComponent\n                            \n                            \n                                NewRuleStepperComponent\n                            \n                            \n                                PresetConfigComponent\n                            \n                            \n                                PresetConfigPageComponent\n                            \n                            \n                                UnNamedPipe\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                ConfigModalComponent\n                            \n                            \n                                EditConfigModalComponent\n                            \n                            \n                                PresetConfigComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ConfigRoutingModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ConfigListComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  MatButtonModule,\n  MatCardModule,\n  MatDatepickerModule,\n  MatExpansionModule,\n  MatFormFieldModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatSelectModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTooltipModule,\n} from '@angular/material';\nimport { AngularOnboardingModule } from 'angular-onboarding';\n\nimport { ConfigModalComponent } from '../../components/shared/config-modal/config-modal.component';\nimport { EditConfigModalComponent } from '../../components/shared/edit-config-modal/edit-config-modal.component';\nimport { EditConfigPageComponent } from '../../components/shared/edit-config-page/edit-config-page.component';\nimport { FolderCreationComponent } from '../../components/shared/folder-creation/folder-creation.component';\nimport { NewConfigPageComponent } from '../../components/shared/new-config-page/new-config-page.component';\nimport { NewRuleStepperComponent } from '../../components/shared/new-rule-stepper/new-rule-stepper.component';\nimport { ConfigListComponent } from '../../components/tabs/config/config-list/config-list.component';\nimport { PresetConfigPageComponent } from '../../components/tabs/config/preset-config-page/preset-config-page.component';\nimport { PresetConfigComponent } from '../../components/tabs/config/preset-config/preset-config.component';\nimport { UnNamedPipe } from '../../pipes/un-named.pipe';\nimport { ConfigRoutingModule } from './config-routing.module';\n\n@NgModule({\n  declarations: [\n    ConfigListComponent,\n    NewConfigPageComponent,\n    ConfigModalComponent,\n    NewRuleStepperComponent,\n    EditConfigModalComponent,\n    EditConfigPageComponent,\n    FolderCreationComponent,\n    PresetConfigComponent,\n    PresetConfigPageComponent,\n    UnNamedPipe\n  ],\n  imports: [\n    FormsModule,\n    CommonModule,\n    MatIconModule,\n    MatListModule,\n    MatCardModule,\n    MatInputModule,\n    MatTableModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatTooltipModule,\n    MatStepperModule,\n    MatGridListModule,\n    MatSnackBarModule,\n    MatPaginatorModule,\n    MatFormFieldModule,\n    MatExpansionModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    ReactiveFormsModule,\n    ConfigRoutingModule,\n    MatProgressBarModule,\n    MatSlideToggleModule,\n    AngularOnboardingModule\n  ],\n  entryComponents: [ConfigModalComponent, EditConfigModalComponent, PresetConfigComponent],\n  exports: [ConfigListComponent]\n})\nexport class ConfigModule {\n  /**\n   * Register with the root module of the app\n   *\n   * @static\n   * @returns {ModuleWithProviders} This module\n   * @memberof ConfigModule\n   */\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: ConfigModule,\n      providers: []\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigRoutingModule.html":{"url":"modules/ConfigRoutingModule.html","title":"module - ConfigRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  ConfigRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/config/config-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { EditConfigPageComponent } from '../../components/shared/edit-config-page/edit-config-page.component';\nimport { NewConfigPageComponent } from '../../components/shared/new-config-page/new-config-page.component';\nimport { ConfigComponent } from '../../components/tabs/config/config.component';\nimport { PresetConfigPageComponent } from '../../components/tabs/config/preset-config-page/preset-config-page.component';\nimport { AuthGuardService } from '../../services/auth/auth-guard.service';\n\n\nconst routes: Routes = [\n  {\n    path: 'app/config',\n    component: ConfigComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      state: 'appConfig'\n    }\n  },\n  {\n    path: 'app/config/create',\n    component: NewConfigPageComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      state: 'appConfigCreate'\n    }\n  },\n  {\n    path: 'app/config/presets',\n    component: PresetConfigPageComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      state: 'appConfigPresets'\n    }\n  },\n  {\n    path: 'app/config/edit',\n    component: EditConfigPageComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      state: 'appConfigEdit'\n    }\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ConfigRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfigsInterface.html":{"url":"interfaces/ConfigsInterface.html","title":"interface - ConfigsInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ConfigsInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        groups\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        groups\n                                    \n                                \n                                \n                                    \n                                        groups:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Config {\n  name: String;\n  key: String;\n}\n\nexport interface ConfigInterface {\n  activeConfig: string;\n}\n\nexport interface RuleInterface {\n  id: string;\n  name: string;\n  data?: any;\n  classifier?: string;\n  constraint?: string;\n}\n\nexport interface GroupFolderInterface {\n  name?: string;\n  renameUntitled?: boolean;\n  folderID?: string;\n}\n\nexport interface FolderCreation {\n  parent: {\n    folderID: string | undefined;\n    name: string | null;\n  };\n  prefix: {\n    type: string | null;\n    value: string;\n  };\n  name: {\n    type: string | null;\n    value: string;\n  };\n  suffix: {\n    type: string | null;\n    value: string;\n  };\n}\n\nexport interface GroupInterface {\n  id: string;\n  name: string;\n  rules: Array;\n  source: GroupFolderInterface;\n  destination?: GroupFolderInterface;\n  createFolder?: FolderCreation;\n}\n\nexport interface ConfigsInterface {\n  id: string;\n  name: string;\n  groups: Array;\n}\n\nexport interface TutorialInterface {\n  enabled: boolean;\n  location: number;\n}\n\nexport interface JSONConfiguration {\n  configs: Array;\n  activeConfig: string;\n  tutorial: TutorialInterface;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseService.html":{"url":"injectables/DatabaseService.html","title":"injectable - DatabaseService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  DatabaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/database/database.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _activeConfigChanged\n                            \n                            \n                                    Private\n                                _configSubject\n                            \n                            \n                                    Public\n                                activeConfigChanged\n                            \n                            \n                                    Private\n                                configID\n                            \n                            \n                                    Public\n                                configs\n                            \n                            \n                                    Public\n                                configSubject\n                            \n                            \n                                    Private\n                                configuration\n                            \n                            \n                                    Public\n                                editingConfig\n                            \n                            \n                                    Public\n                                initalized\n                            \n                            \n                                    Public\n                                userID\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addConfig\n                            \n                            \n                                clearConfigs\n                            \n                            \n                                createConfig\n                            \n                            \n                                deleteConfig\n                            \n                            \n                                getActiveConfig\n                            \n                            \n                                getConfig\n                            \n                            \n                                getConfigs\n                            \n                            \n                                getTutorial\n                            \n                            \n                                initalize\n                            \n                            \n                                numberConfigs\n                            \n                            \n                                    Private\n                                readConfiguration\n                            \n                            \n                                setActiveConfig\n                            \n                            \n                                updateConfig\n                            \n                            \n                                    Private\n                                updateLocalConfiguration\n                            \n                            \n                                    Private\n                                updateRemoteConfiguration\n                            \n                            \n                                updateTutorial\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/database/database.service.ts:39\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \naddConfig(config: ConfigsInterface)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:139\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    ConfigsInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clearConfigs\n                            \n                            \n                        \n                    \n                \n                \n                    \nclearConfigs()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:182\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateConfig(configName: string, firstGroupName: string, sourceLocation: GroupFolderInterface, destinationLocation: GroupFolderInterface, createFolder: FolderCreation, firstGroupRule: RuleInterface)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:118\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        firstGroupName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        sourceLocation\n                                                        \n                                                                    GroupFolderInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        destinationLocation\n                                                        \n                                                                    GroupFolderInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        createFolder\n                                                        \n                                                                    FolderCreation\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        firstGroupRule\n                                                        \n                                                                    RuleInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteConfig(configID: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:167\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getActiveConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetActiveConfig()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:206\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetConfig(configID: string, cb: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:158\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        cb\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getConfigs\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetConfigs()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:219\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Array\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTutorial\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTutorial()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:236\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     TutorialInterface\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initalize\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitalize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            numberConfigs\n                            \n                            \n                        \n                    \n                \n                \n                    \nnumberConfigs()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:223\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            readConfiguration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        readConfiguration(fileID: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setActiveConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetActiveConfig(configID: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:194\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateConfig(newConfig: ConfigsInterface)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:147\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newConfig\n                                                        \n                                                                    ConfigsInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateLocalConfiguration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateLocalConfiguration()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:89\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateRemoteConfiguration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateRemoteConfiguration()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:96\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateTutorial\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateTutorial(updated: TutorialInterface)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:240\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        updated\n                                                        \n                                                                    TutorialInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _activeConfigChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _activeConfigChanged:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _configSubject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _configSubject:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            activeConfigChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeConfigChanged:     \n\n                    \n                \n                    \n                        \n                            Default value : this._activeConfigChanged.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            configID\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        configID:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            configs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        configs:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            configSubject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        configSubject:     \n\n                    \n                \n                    \n                        \n                            Default value : this._configSubject.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            configuration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        configuration:     JSONConfiguration\n\n                    \n                \n                    \n                        \n                            Type :     JSONConfiguration\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    configs: [],\n    activeConfig: '',\n    tutorial: {\n      enabled: true,\n      location: 0\n    }\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editingConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editingConfig:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            initalized\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        initalized:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userID\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userID:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/database/database.service.ts:39\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport {\n  ConfigsInterface,\n  FolderCreation,\n  GroupFolderInterface,\n  JSONConfiguration,\n  RuleInterface,\n} from '../../../interfaces';\nimport { ConfigBuilder } from '../../classes/config-builder';\nimport { TutorialInterface } from './../../../interfaces';\n\n/**\n * Workaround for testing\n */\ndeclare var gapi: any;\ndeclare var google: any;\n\n@Injectable()\nexport class DatabaseService {\n  private _activeConfigChanged = new Subject();\n  private _configSubject = new Subject();\n  private configuration: JSONConfiguration = {\n    configs: [],\n    activeConfig: '',\n    tutorial: {\n      enabled: true,\n      location: 0\n    }\n  };\n  private configID: string;\n\n  public activeConfigChanged = this._activeConfigChanged.asObservable();\n  public configSubject = this._configSubject.asObservable();\n  public configs: Array;\n  public editingConfig: string;\n  public initalized = false;\n  public userID: string;\n\n  constructor() {}\n\n  initalize(): void {\n    gapi.client.drive.files\n      .list({\n        q: `name = 'configuration.json'`,\n        spaces: 'appDataFolder',\n        fields: 'files(id)'\n      })\n      .then(listResponse => {\n        if (listResponse.result.files.length > 0) {\n          this.configID = listResponse.result.files[0].id;\n          this.updateLocalConfiguration();\n        } else {\n          gapi.client.drive.files\n            .create({\n              resource: {\n                name: 'configuration.json',\n                parents: ['appDataFolder']\n              },\n              fields: 'id'\n            })\n            .then(createResponse => {\n              this.configID = createResponse.result.id;\n              this.updateRemoteConfiguration().then(() => {\n                this.updateLocalConfiguration();\n              }, err => console.error);\n            }, err => console.error);\n        }\n      }, err => console.error);\n  }\n\n  /*\n  Configuration functions\n  */\n  private readConfiguration(fileID: string): Promise {\n    return new Promise((resolve, reject) => {\n      gapi.client.drive.files\n        .get({\n          fileId: fileID,\n          alt: 'media'\n        })\n        .then(response => {\n          resolve(response);\n        }, err => reject);\n    });\n  }\n\n  private updateLocalConfiguration() {\n    this.readConfiguration(this.configID).then(response => {\n      this.configuration = JSON.parse(response.body);\n      this.initalized = true;\n    }, err => console.error);\n  }\n\n  private updateRemoteConfiguration(): Promise {\n    return new Promise((resolve, reject) => {\n      gapi.client\n        .request({\n          path: `https://www.googleapis.com/upload/drive/v3/files/${\n            this.configID\n          }`,\n          method: 'PATCH',\n          params: {\n            uploadType: 'media'\n          },\n          body: JSON.stringify(this.configuration)\n        })\n        .then(response => {\n          resolve();\n        }, err => reject);\n    });\n  }\n\n  /*\n  Config functions\n  */\n  createConfig(\n    configName: string,\n    firstGroupName: string,\n    sourceLocation: GroupFolderInterface,\n    destinationLocation: GroupFolderInterface,\n    createFolder: FolderCreation,\n    firstGroupRule: RuleInterface\n  ): void {\n    const newConfig = ConfigBuilder.generateNewConfig(\n      configName,\n      firstGroupName,\n      sourceLocation,\n      destinationLocation,\n      createFolder,\n      firstGroupRule\n    );\n    this.configuration.configs.push(newConfig);\n    this._configSubject.next(true);\n    this.updateRemoteConfiguration().catch(err => console.error);\n  }\n\n  addConfig(config: ConfigsInterface): Promise {\n    return new Promise((resolve, reject) => {\n      this.configuration.configs.push(config);\n      this.updateRemoteConfiguration().then(res => resolve, err => reject);\n      resolve();\n    });\n  }\n\n  updateConfig(newConfig: ConfigsInterface): void {\n    this.configuration.configs.forEach(config => {\n      if (config.id === this.editingConfig) {\n        config = newConfig;\n        this.editingConfig = '';\n        this._configSubject.next(true);\n        this.updateRemoteConfiguration().catch(err => console.error);\n      }\n    });\n  }\n\n  getConfig(configID: string, cb: Function): void {\n    const configs = this.configuration.configs;\n    cb(\n      configs.find(config => {\n        return config.id === configID;\n      })\n    );\n  }\n\n  deleteConfig(configID: string): void {\n    const configIndex = this.configuration.configs.findIndex(config => {\n      return config.id === configID;\n    });\n    this.configuration.configs.splice(configIndex, 1);\n    this.updateRemoteConfiguration()\n      .then(() => {\n        this._configSubject.next(true);\n      })\n      .catch(err => {\n        this._configSubject.next(false);\n        console.error(err);\n      });\n  }\n\n  clearConfigs(): Promise {\n    return new Promise((resolve, reject) => {\n      if (this.configuration.configs) {\n        this.configuration.configs = [];\n      }\n      if (this.configuration.activeConfig) {\n        this.configuration.activeConfig = '';\n      }\n      this.updateRemoteConfiguration().then(() => resolve(), err => reject(err));\n    });\n  }\n\n  setActiveConfig(configID: string): void {\n    this.configuration.activeConfig = configID;\n    this.updateRemoteConfiguration().then(\n      () => {\n        this._activeConfigChanged.next(configID);\n      },\n      err => {\n        this._activeConfigChanged.error(err);\n      }\n    );\n  }\n\n  getActiveConfig(): Promise {\n    return new Promise((resolve, reject) => {\n      if (\n        this.configuration.activeConfig &&\n        this.configuration.activeConfig.length > 0\n      ) {\n        resolve(this.configuration.activeConfig);\n      } else {\n        reject('No active config');\n      }\n    });\n  }\n\n  getConfigs(): Array {\n    return this.configuration.configs;\n  }\n\n  numberConfigs(): Promise {\n    return new Promise((resolve, reject) => {\n      if (this.configuration.configs) {\n        resolve(this.configuration.configs.length);\n      } else {\n        resolve(0);\n      }\n    });\n  }\n\n  /*\n    Tutorial Functions\n  */\n  getTutorial(): TutorialInterface {\n    return this.configuration.tutorial;\n  }\n\n  updateTutorial(updated: TutorialInterface) {\n    this.configuration.tutorial = updated;\n    this.updateRemoteConfiguration().catch(err => console.error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DriveQueryBuilder.html":{"url":"classes/DriveQueryBuilder.html","title":"class - DriveQueryBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DriveQueryBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/drive-query-builder.ts\n        \n\n            \n                Description\n            \n            \n                A utility class to build Google Drive query's\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                query\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createdAfter\n                            \n                            \n                                createdBefore\n                            \n                            \n                                excludesOwner\n                            \n                            \n                                excludeType\n                            \n                            \n                                fullTextContains\n                            \n                            \n                                get\n                            \n                            \n                                hasOwner\n                            \n                            \n                                modifiedAfter\n                            \n                            \n                                modifiedBefore\n                            \n                            \n                                nameContains\n                            \n                            \n                                nameExcludes\n                            \n                            \n                                openedAfter\n                            \n                            \n                                openedBefore\n                            \n                            \n                                requiresType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(parentFolderID: string, disableTrashed: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/drive-query-builder.ts:50\n                            \n                        \n\n                \n                    \n                            Creates an instance of DriveQueryBuilder.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        parentFolderID\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The ID of the folder to search in\n\n                                                        \n                                                \n                                                \n                                                        disableTrashed\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Whether or not to include file in trash\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            query\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        query:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:40\n                            \n                        \n\n                \n                    \n                        The current generated query\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAfter\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreatedAfter(date: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:139\n                            \n                        \n\n\n                \n                    \n                            Require the file to be created after the supplied date\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The date the file should be created after\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdBefore\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreatedBefore(date: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:150\n                            \n                        \n\n\n                \n                    \n                            Require the file to be created before the supplied date\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The date the file should be created before\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            excludesOwner\n                            \n                            \n                        \n                    \n                \n                \n                    \nexcludesOwner(email: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:128\n                            \n                        \n\n\n                \n                    \n                            Adds a owner exclusion to the query\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The owners email address to exclude\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            excludeType\n                            \n                            \n                        \n                    \n                \n                \n                    \nexcludeType(mimeType: DriveMimeType)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:73\n                            \n                        \n\n\n                \n                    \n                            Add a file type to ignore to the query\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        mimeType\n                                                        \n                                                                    DriveMimeType\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The file type to ignore\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fullTextContains\n                            \n                            \n                        \n                    \n                \n                \n                    \nfullTextContains(text: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:209\n                            \n                        \n\n\n                \n                    \n                            Require the document name, description, content, or indexable text to have the supplied text\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The text the document needs to have\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:48\n                            \n                        \n\n\n                \n                    \n                            Returns the current query\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The built query\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasOwner\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasOwner(email: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:117\n                            \n                        \n\n\n                \n                    \n                            Adds a owner requirement to the query\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The owners email address\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modifiedAfter\n                            \n                            \n                        \n                    \n                \n                \n                    \nmodifiedAfter(date: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:161\n                            \n                        \n\n\n                \n                    \n                            Require the file to be modified after the supplied date\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The date the file should be modified after\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modifiedBefore\n                            \n                            \n                        \n                    \n                \n                \n                    \nmodifiedBefore(date: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:172\n                            \n                        \n\n\n                \n                    \n                            Require the file to be modified before the supplied date\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The date the file should be modified before\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nameContains\n                            \n                            \n                        \n                    \n                \n                \n                    \nnameContains(string: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:95\n                            \n                        \n\n\n                \n                    \n                            Add a name content's requirement to the query\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        string\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The string the name needs\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nameExcludes\n                            \n                            \n                        \n                    \n                \n                \n                    \nnameExcludes(string: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:106\n                            \n                        \n\n\n                \n                    \n                            Add a name content's to exclude from the query\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        string\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openedAfter\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenedAfter(date: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:183\n                            \n                        \n\n\n                \n                    \n                            Require the file to be opened after the supplied date\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The date the file beeds to be opened after\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openedBefore\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenedBefore(date: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:196\n                            \n                        \n\n\n                \n                    \n                            Require the file to be opened before the supplied date\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The date the file beeds to be opened before\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requiresType\n                            \n                            \n                        \n                    \n                \n                \n                    \nrequiresType(mimeType: DriveMimeType)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/drive-query-builder.ts:84\n                            \n                        \n\n\n                \n                    \n                            Add a file type to require to the query\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        mimeType\n                                                        \n                                                                    DriveMimeType\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The file type to require\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DriveQueryBuilder\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export enum DriveMimeType {\n  audio = 'application/vnd.google-apps.audio',\n  document = 'application/vnd.google-apps.document',\n  drawing = 'application/vnd.google-apps.drawing',\n  file = 'application/vnd.google-apps.file',\n  folder = 'application/vnd.google-apps.folder',\n  form = 'application/vnd.google-apps.form',\n  fustiontable = 'application/vnd.google-apps.fusiontable',\n  map = 'application/vnd.google-apps.map',\n  photo = 'application/vnd.google-apps.photo',\n  presentation = 'application/vnd.google-apps.presentation',\n  script = 'application/vnd.google-apps.script',\n  site = 'application/vnd.google-apps.site',\n  spreadsheet = 'application/vnd.google-apps.spreadsheet',\n  unknown = 'application/vnd.google-apps.unknown',\n  video = 'application/vnd.google-apps.video',\n  thirdParty = 'application/vnd.google-apps.drive-sdk'\n}\n\n/**\n * A utility class to build Google Drive query's\n *\n * @export\n * @class DriveQueryBuilder\n */\nexport class DriveQueryBuilder {\n  /**\n   * The current generated query\n   *\n   * @private\n   * @type {string}\n   * @memberof DriveQueryBuilder\n   */\n  private query = '';\n\n  /**\n   * Returns the current query\n   *\n   * @returns {string} The built query\n   * @memberof DriveQueryBuilder\n   */\n  get(): string {\n    return this.query;\n  }\n\n  /**\n   * Creates an instance of DriveQueryBuilder.\n   * @param {string} parentFolderID The ID of the folder to search in\n   * @param {boolean} disableTrashed Whether or not to include file in trash\n   * @memberof DriveQueryBuilder\n   */\n  constructor(parentFolderID: string, disableTrashed: boolean) {\n    if (parentFolderID) {\n      this.query += `'${parentFolderID}' in parents`;\n    }\n    if (disableTrashed) {\n      this.query += ' and trashed=false';\n    }\n  }\n\n  /**\n   * Add a file type to ignore to the query\n   *\n   * @param {DriveMimeType} mimeType The file type to ignore\n   * @memberof DriveQueryBuilder\n   */\n  excludeType(mimeType: DriveMimeType): DriveQueryBuilder {\n    this.query += ` and mimeType != '${mimeType}'`;\n    return this;\n  }\n\n  /**\n   * Add a file type to require to the query\n   *\n   * @param {DriveMimeType} mimeType The file type to require\n   * @memberof DriveQueryBuilder\n   */\n  requiresType(mimeType: DriveMimeType): DriveQueryBuilder {\n    this.query += ` and mimeType = '${mimeType}'`;\n    return this;\n  }\n\n  /**\n   * Add a name content's requirement to the query\n   *\n   * @param {string} string The string the name needs\n   * @memberof DriveQueryBuilder\n   */\n  nameContains(string: string): DriveQueryBuilder {\n    this.query += ` and name contains '${string}'`;\n    return this;\n  }\n\n  /**\n   * Add a name content's to exclude from the query\n   *\n   * @param {string} string\n   * @memberof DriveQueryBuilder\n   */\n  nameExcludes(string: string): DriveQueryBuilder {\n    this.query += ` and not name contains '${string}'`;\n    return this;\n  }\n\n  /**\n   * Adds a owner requirement to the query\n   *\n   * @param {string} email The owners email address\n   * @memberof DriveQueryBuilder\n   */\n  hasOwner(email: string): DriveQueryBuilder {\n    this.query += ` and ${email} in owners`;\n    return this;\n  }\n\n  /**\n   * Adds a owner exclusion to the query\n   *\n   * @param {string} email The owners email address to exclude\n   * @memberof DriveQueryBuilder\n   */\n  excludesOwner(email: string): DriveQueryBuilder {\n    this.query += ` and not ${email} in  owners`;\n    return this;\n  }\n\n  /**\n   * Require the file to be created after the supplied date\n   *\n   * @param {Date} date The date the file should be created after\n   * @memberof DriveQueryBuilder\n   */\n  createdAfter(date: Date): DriveQueryBuilder {\n    this.query += ` and createdTime >= '${date.toISOString().split('.')[0]}'`;\n    return this;\n  }\n\n  /**\n   * Require the file to be created before the supplied date\n   *\n   * @param {Date} date The date the file should be created before\n   * @memberof DriveQueryBuilder\n   */\n  createdBefore(date: Date): DriveQueryBuilder {\n    this.query += ` and createdTime = '${date.toISOString().split('.')[0]}'`;\n    return this;\n  }\n\n  /**\n   * Require the file to be modified before the supplied date\n   *\n   * @param {Date} date The date the file should be modified before\n   * @memberof DriveQueryBuilder\n   */\n  modifiedBefore(date: Date): DriveQueryBuilder {\n    this.query += ` and modifiedTime = '${\n      date.toISOString().split('.')[0]\n    }'`;\n    return this;\n  }\n\n  /**\n   * Require the file to be opened before the supplied date\n   *\n   * @param {Date} date The date the file beeds to be opened before\n   * @memberof DriveQueryBuilder\n   */\n  openedBefore(date: Date): DriveQueryBuilder {\n    this.query += ` and viewedByMeTime \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FolderCreation.html":{"url":"interfaces/FolderCreation.html","title":"interface - FolderCreation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FolderCreation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        parent\n                                \n                                \n                                        prefix\n                                \n                                \n                                        suffix\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                    \n                                \n                                \n                                    \n                                        parent:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prefix\n                                    \n                                \n                                \n                                    \n                                        prefix:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        suffix\n                                    \n                                \n                                \n                                    \n                                        suffix:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Config {\n  name: String;\n  key: String;\n}\n\nexport interface ConfigInterface {\n  activeConfig: string;\n}\n\nexport interface RuleInterface {\n  id: string;\n  name: string;\n  data?: any;\n  classifier?: string;\n  constraint?: string;\n}\n\nexport interface GroupFolderInterface {\n  name?: string;\n  renameUntitled?: boolean;\n  folderID?: string;\n}\n\nexport interface FolderCreation {\n  parent: {\n    folderID: string | undefined;\n    name: string | null;\n  };\n  prefix: {\n    type: string | null;\n    value: string;\n  };\n  name: {\n    type: string | null;\n    value: string;\n  };\n  suffix: {\n    type: string | null;\n    value: string;\n  };\n}\n\nexport interface GroupInterface {\n  id: string;\n  name: string;\n  rules: Array;\n  source: GroupFolderInterface;\n  destination?: GroupFolderInterface;\n  createFolder?: FolderCreation;\n}\n\nexport interface ConfigsInterface {\n  id: string;\n  name: string;\n  groups: Array;\n}\n\nexport interface TutorialInterface {\n  enabled: boolean;\n  location: number;\n}\n\nexport interface JSONConfiguration {\n  configs: Array;\n  activeConfig: string;\n  tutorial: TutorialInterface;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FolderCreationComponent.html":{"url":"components/FolderCreationComponent.html","title":"component - FolderCreationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FolderCreationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/folder-creation/folder-creation.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-folder-creation\n            \n\n            \n                styleUrls\n                folder-creation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./folder-creation.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createFolder\n                            \n                            \n                                    Public\n                                finished\n                            \n                            \n                                    Public\n                                namingOptions\n                            \n                            \n                                    Public\n                                parentFolderIsRoot\n                            \n                            \n                                    Private\n                                valueAttributes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                done\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                opened\n                            \n                            \n                                openFolderPicker\n                            \n                            \n                                reset\n                            \n                            \n                                rootToggleChange\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                inputFolder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(google: GoogleService, snackbar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        google\n                                                  \n                                                        \n                                                                    GoogleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        inputFolder\n                    \n                    \n                            \n                            Type:    FolderCreation\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:13\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            done\n                            \n                            \n                        \n                    \n                \n                \n                    \ndone()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:140\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            opened\n                            \n                            \n                        \n                    \n                \n                \n                    \nopened()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openFolderPicker\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenFolderPicker()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:79\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:147\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rootToggleChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nrootToggleChange(event: MatSlideToggleChange)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:96\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    MatSlideToggleChange\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validate\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalidate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:112\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            createFolder\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        createFolder:     FolderCreation\n\n                    \n                \n                    \n                        \n                            Type :     FolderCreation\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    parent: {\n      folderID: undefined,\n      name: null\n    },\n    prefix: {\n      type: null,\n      value: ''\n    },\n    name: {\n      type: null,\n      value: ''\n    },\n    suffix: {\n      type: null,\n      value: ''\n    }\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            finished\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        finished:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            namingOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        namingOptions:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      name: 'Text',\n      value: 'text'\n    },\n    {\n      name: 'Sorting Date',\n      value: 'date'\n    },\n    {\n      name: 'None',\n      value: 'none'\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            parentFolderIsRoot\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parentFolderIsRoot:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            valueAttributes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        valueAttributes:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['prefix', 'name', 'suffix']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/shared/folder-creation/folder-creation.component.ts:55\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { AfterViewInit, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatSlideToggleChange, MatSnackBar } from '@angular/material';\n\nimport { FolderCreation } from '../../../../interfaces';\nimport { GoogleService } from '../../../services/google/google.service';\n\n@Component({\n  selector: 'app-folder-creation',\n  templateUrl: './folder-creation.component.html',\n  styleUrls: ['./folder-creation.component.scss']\n})\nexport class FolderCreationComponent implements AfterViewInit {\n  @Input() inputFolder: FolderCreation;\n\n  @Output() valueChange = new EventEmitter();\n\n  private valueAttributes = ['prefix', 'name', 'suffix'];\n\n  public namingOptions = [\n    {\n      name: 'Text',\n      value: 'text'\n    },\n    {\n      name: 'Sorting Date',\n      value: 'date'\n    },\n    {\n      name: 'None',\n      value: 'none'\n    }\n  ];\n  public createFolder: FolderCreation = {\n    parent: {\n      folderID: undefined,\n      name: null\n    },\n    prefix: {\n      type: null,\n      value: ''\n    },\n    name: {\n      type: null,\n      value: ''\n    },\n    suffix: {\n      type: null,\n      value: ''\n    }\n  };\n  public parentFolderIsRoot = false;\n\n  public finished = false;\n\n  public get value(): FolderCreation {\n    if (this.validate()) {\n      return this.createFolder;\n    } else {\n      return null;\n    }\n  }\n\n  constructor(private google: GoogleService, private snackbar: MatSnackBar) {}\n\n  ngAfterViewInit() {\n    if (this.inputFolder) {\n      setTimeout(_ => {\n        this.createFolder = this.inputFolder;\n      });\n    }\n  }\n\n  opened() {\n    setTimeout(_ => {\n      this.finished = false;\n    });\n  }\n\n  openFolderPicker() {\n    const folderPickedListener = this.google.folderPicked$.subscribe(\n      pickedFolder => {\n        this.createFolder.parent = {\n          folderID: pickedFolder.id,\n          name: pickedFolder.name\n        };\n        folderPickedListener.unsubscribe();\n      },\n      err => {\n        console.error(err);\n        folderPickedListener.unsubscribe();\n      }\n    );\n    this.google.openFilePicker();\n  }\n\n  rootToggleChange(event: MatSlideToggleChange) {\n    if (event.checked) {\n      this.parentFolderIsRoot = true;\n      this.createFolder.parent = {\n        folderID: 'root',\n        name: 'My Drive'\n      };\n    } else {\n      this.parentFolderIsRoot = false;\n      this.createFolder.parent = {\n        folderID: undefined,\n        name: null\n      };\n    }\n  }\n\n  validate(): boolean {\n    const folder = this.createFolder;\n    if (folder) {\n      if (folder.parent.folderID !== undefined) {\n        let anyInvalid = false;\n        let numNone = 0;\n        this.valueAttributes.forEach(attribute => {\n          if (folder[attribute].type === 'none') {\n            numNone += 1;\n          }\n          if (folder[attribute].type === 'text') {\n            if (folder[attribute].value.length \n    \n\n    \n        \n  \n    \n      \n        Folder Creation\n      \n    \n    \n      \n        \n          \n          \n            folder\n          \n        \n        My Drive\n      \n      \n        \n          \n            {{ option.name }}\n          \n        \n        \n          \n            {{ option.name }}\n          \n        \n        \n          \n            {{ option.name }}\n          \n        \n      \n      \n        \n          \n        \n        \n          \n        \n        \n          \n        \n      \n    \n    \n      Done\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Folder Creation                                                            folder                          My Drive                                          {{ option.name }}                                                {{ option.name }}                                                {{ option.name }}                                                                                                                                Done      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'ConfigListComponent', 'selector': 'app-config-list'},{'name': 'ConfigModalComponent', 'selector': 'app-config-modal'},{'name': 'EditConfigModalComponent', 'selector': 'app-edit-config-modal'},{'name': 'EditConfigPageComponent', 'selector': 'app-edit-config-page'},{'name': 'FolderCreationComponent', 'selector': 'app-folder-creation'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NewConfigPageComponent', 'selector': 'app-new-rule-page'},{'name': 'NewRuleStepperComponent', 'selector': 'app-new-rule-stepper'},{'name': 'PresetConfigComponent', 'selector': 'app-preset-config'},{'name': 'PresetConfigPageComponent', 'selector': 'app-preset-config-page'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'UnauthenticatedComponent', 'selector': 'app-unauthenticated'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FolderCreationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleService.html":{"url":"injectables/GoogleService.html","title":"injectable - GoogleService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  GoogleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/google/google.service.ts\n        \n\n            \n                Description\n            \n            \n                Utility class to handle all interacting with the Google API\n\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _authState\n                            \n                            \n                                    Public\n                                authState$\n                            \n                            \n                                    Public\n                                folderPicked$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createFolder\n                            \n                            \n                                getAuthStatus\n                            \n                            \n                                getFileInfo\n                            \n                            \n                                init\n                            \n                            \n                                listFiles\n                            \n                            \n                                moveFile\n                            \n                            \n                                openFilePicker\n                            \n                            \n                                renameFile\n                            \n                            \n                                signIn\n                            \n                            \n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(database: DatabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/google/google.service.ts:53\n                            \n                        \n\n                \n                    \n                            Creates an instance of GoogleService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        database\n                                                  \n                                                        \n                                                                    DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createFolder\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateFolder(name: string, parent?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:166\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        parent\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAuthStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAuthStatus()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:114\n                            \n                        \n\n\n                \n                    \n                            Returns the users current authentication status.\n\n\n                            \n                            \n                            \n                                Returns :     Boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFileInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFileInfo(fileID: string, fields: string, cb: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:151\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        fields\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        cb\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit(config: Object, callback?: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:69\n                            \n                        \n\n\n                \n                    \n                            Initialize the Google API\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        callback\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listFiles\n                            \n                            \n                        \n                    \n                \n                \n                    \nlistFiles(query: string, cb: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:141\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        cb\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moveFile\n                            \n                            \n                        \n                    \n                \n                \n                    \nmoveFile(fileID: string, folder: string, cb: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:197\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        folder\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        cb\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openFilePicker\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenFilePicker()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:104\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            renameFile\n                            \n                            \n                        \n                    \n                \n                \n                    \nrenameFile(fileID: string, name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:184\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signIn\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignIn()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:127\n                            \n                        \n\n\n                \n                    \n                            Opens a popup allowing the user to sign in.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:136\n                            \n                        \n\n\n                \n                    \n                            Signs a user out\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _authState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _authState:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:44\n                            \n                        \n\n                \n                    \n                        Holds a subject that is used to update subscribers with the authentication status.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authState$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authState$:     \n\n                    \n                \n                    \n                        \n                            Default value : this._authState.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:51\n                            \n                        \n\n                \n                    \n                        Allows other modules / services to subscribe to the authentication status.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            folderPicked$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        folderPicked$:     \n\n                    \n                \n                    \n                        \n                            Default value : _folderPicked.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/google/google.service.ts:53\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { DriveMimeType } from '../../classes/drive-query-builder';\nimport { DatabaseService } from '../database/database.service';\n\n/**\n * Workaround for testing\n */\ndeclare var gapi: any;\ndeclare var google: any;\n\n/**\n * Variable for easy reference to the authenitcation instance.\n */\nlet authInstance;\n\nlet folderPicker;\n\nconst _folderPicked = new Subject();\n\nfunction folderPicked(data: any): void {\n  if (data.action === 'picked') {\n    _folderPicked.next(data.docs[0]);\n  } else if (data.action === 'cancel') {\n    _folderPicked.error(true);\n  }\n}\n\n/**\n * Utility class to handle all interacting with the Google API\n *\n * @export\n * @class GoogleService\n */\n@Injectable()\nexport class GoogleService {\n  /**\n   * Holds a subject that is used to update subscribers with the authentication status.\n   *\n   * @private\n   * @memberof GoogleService\n   */\n  private _authState = new Subject();\n\n  /**\n   * Allows other modules / services to subscribe to the authentication status.\n   *\n   * @memberof GoogleService\n   */\n  public authState$ = this._authState.asObservable();\n\n  public folderPicked$ = _folderPicked.asObservable();\n\n  /**\n   * Creates an instance of GoogleService.\n   * @memberof GoogleService\n   */\n  constructor(\n    private database: DatabaseService\n  ) {}\n\n  /**\n   * Initialize the Google API\n   *\n   * @param {Object} config\n   * @memberof GoogleService\n   */\n  init(config: Object, callback?: Function) {\n    gapi.load('client:auth2', () => {\n      gapi.client.init(config).then(() => {\n        authInstance = gapi.auth2.getAuthInstance();\n        authInstance.isSignedIn.listen(() => {\n          this._authState.next(authInstance.isSignedIn.get());\n        });\n        const authStatus = authInstance.isSignedIn.get();\n        this._authState.next(authStatus);\n        gapi.load('picker', () => {\n          const view = new google.picker.DocsView(google.picker.ViewId.FOLDERS)\n            .setIncludeFolders(true)\n            .setSelectFolderEnabled(true)\n            .setParent('root')\n            .setOwnedByMe(true);\n\n          folderPicker = new google.picker.PickerBuilder()\n            .disableFeature(google.picker.Feature.SUPPORT_TEAM_DRIVES)\n            .setAppId(362606538820)\n            .setOAuthToken(\n              authInstance.currentUser.get().getAuthResponse().access_token\n            )\n            .setDeveloperKey('AIzaSyB-yE9IXT29Vl_eAU7bzvzv5Qe17flfpzM')\n            .setSelectableMimeTypes('application/vnd.google-apps.folder')\n            .addView(view)\n            .setCallback(folderPicked)\n            .build();\n          if (callback) {\n            callback();\n          }\n        });\n      }, console.error);\n    });\n  }\n\n  openFilePicker() {\n    folderPicker.setVisible(true);\n  }\n\n  /**\n   * Returns the users current authentication status.\n   *\n   * @returns {Boolean}\n   * @memberof GoogleService\n   */\n  getAuthStatus(): Boolean {\n    if (authInstance) {\n      return authInstance.isSignedIn.get();\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Opens a popup allowing the user to sign in.\n   *\n   * @memberof GoogleService\n   */\n  signIn(): void {\n    authInstance.signIn();\n  }\n\n  /**\n   * Signs a user out\n   *\n   * @memberof GoogleService\n   */\n  signOut(): void {\n    authInstance.signOut();\n    this.database.initalized = false;\n  }\n\n  listFiles(query: string, cb: Function): void {\n    gapi.client.drive.files\n      .list({\n        q: query\n      })\n      .execute(resp => {\n        cb(resp);\n      });\n  }\n\n  getFileInfo(fileID: string, fields: string, cb: Function): void {\n    gapi.client.drive.files\n      .get({\n        fileId: fileID,\n        fields: fields\n      })\n      .execute(resp => {\n        if (resp.err) {\n          console.error(resp.err);\n        } else {\n          cb(resp);\n        }\n      });\n  }\n\n  createFolder(name: string, parent?: string): Promise {\n    const fileResource = {\n      name: name,\n      mimeType: DriveMimeType.folder\n    };\n    if (parent) { fileResource['parents'] = [parent]; }\n    return new Promise((resolve, reject) => {\n      gapi.client.drive.files\n        .create({\n          resource: fileResource,\n          fields: 'id'\n        })\n        .execute(resp => {\n          if (resp.err) { reject(resp.err); } else { resolve(resp.id); }\n        });\n    });\n  }\n\n  renameFile(fileID: string, name: string) {\n    return new Promise((resolve, reject) => {\n      gapi.client.drive.files.update({\n        'fileId': fileID,\n        'resource': {\n          'name': name\n        }\n      }).execute(resp => {\n        if (resp.err) { reject(resp.err); } else { resolve(); }\n      });\n    });\n  }\n\n  moveFile(fileID: string, folder: string, cb: Function): void {\n    this.getFileInfo(fileID, 'parents', file => {\n      const prevParents = file.parents.join(',');\n      gapi.client.drive.files\n        .update({\n          fileId: fileID,\n          addParents: folder,\n          removeParents: prevParents\n        })\n        .execute(resp => {\n          if (resp.err) {\n            console.error(resp.err);\n          } else {\n            cb(true);\n          }\n        });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GroupFolderInterface.html":{"url":"interfaces/GroupFolderInterface.html","title":"interface - GroupFolderInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GroupFolderInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        folderID\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        renameUntitled\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        folderID\n                                    \n                                \n                                \n                                    \n                                        folderID:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        renameUntitled\n                                    \n                                \n                                \n                                    \n                                        renameUntitled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Config {\n  name: String;\n  key: String;\n}\n\nexport interface ConfigInterface {\n  activeConfig: string;\n}\n\nexport interface RuleInterface {\n  id: string;\n  name: string;\n  data?: any;\n  classifier?: string;\n  constraint?: string;\n}\n\nexport interface GroupFolderInterface {\n  name?: string;\n  renameUntitled?: boolean;\n  folderID?: string;\n}\n\nexport interface FolderCreation {\n  parent: {\n    folderID: string | undefined;\n    name: string | null;\n  };\n  prefix: {\n    type: string | null;\n    value: string;\n  };\n  name: {\n    type: string | null;\n    value: string;\n  };\n  suffix: {\n    type: string | null;\n    value: string;\n  };\n}\n\nexport interface GroupInterface {\n  id: string;\n  name: string;\n  rules: Array;\n  source: GroupFolderInterface;\n  destination?: GroupFolderInterface;\n  createFolder?: FolderCreation;\n}\n\nexport interface ConfigsInterface {\n  id: string;\n  name: string;\n  groups: Array;\n}\n\nexport interface TutorialInterface {\n  enabled: boolean;\n  location: number;\n}\n\nexport interface JSONConfiguration {\n  configs: Array;\n  activeConfig: string;\n  tutorial: TutorialInterface;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GroupInterface.html":{"url":"interfaces/GroupInterface.html","title":"interface - GroupInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GroupInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        createFolder\n                                \n                                \n                                            Optional\n                                        destination\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        rules\n                                \n                                \n                                        source\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createFolder\n                                    \n                                \n                                \n                                    \n                                        createFolder:     FolderCreation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FolderCreation\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                    \n                                \n                                \n                                    \n                                        destination:     GroupFolderInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     GroupFolderInterface\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rules\n                                    \n                                \n                                \n                                    \n                                        rules:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:     GroupFolderInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     GroupFolderInterface\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Config {\n  name: String;\n  key: String;\n}\n\nexport interface ConfigInterface {\n  activeConfig: string;\n}\n\nexport interface RuleInterface {\n  id: string;\n  name: string;\n  data?: any;\n  classifier?: string;\n  constraint?: string;\n}\n\nexport interface GroupFolderInterface {\n  name?: string;\n  renameUntitled?: boolean;\n  folderID?: string;\n}\n\nexport interface FolderCreation {\n  parent: {\n    folderID: string | undefined;\n    name: string | null;\n  };\n  prefix: {\n    type: string | null;\n    value: string;\n  };\n  name: {\n    type: string | null;\n    value: string;\n  };\n  suffix: {\n    type: string | null;\n    value: string;\n  };\n}\n\nexport interface GroupInterface {\n  id: string;\n  name: string;\n  rules: Array;\n  source: GroupFolderInterface;\n  destination?: GroupFolderInterface;\n  createFolder?: FolderCreation;\n}\n\nexport interface ConfigsInterface {\n  id: string;\n  name: string;\n  groups: Array;\n}\n\nexport interface TutorialInterface {\n  enabled: boolean;\n  location: number;\n}\n\nexport interface JSONConfiguration {\n  configs: Array;\n  activeConfig: string;\n  tutorial: TutorialInterface;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tabs/home/home.component.ts\n\n\n    \n        Description\n    \n    \n        Declare a component to be shown when the home tab is selected.\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeConfigName\n                            \n                            \n                                    Public\n                                isActiveConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToConfigPage\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                sortUsersDrive\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(zone: NgZone, router: Router, snackBar: MatSnackBar, database: DatabaseService, sorterService: SorterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tabs/home/home.component.ts:22\n                            \n                        \n\n                \n                    \n                            Creates an instance of HomeComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        database\n                                                  \n                                                        \n                                                                    DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        sorterService\n                                                  \n                                                        \n                                                                    SorterService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToConfigPage\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToConfigPage()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/home/home.component.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/home/home.component.ts:41\n                            \n                        \n\n\n                \n                    \n                            Handle component initalization\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortUsersDrive\n                            \n                            \n                        \n                    \n                \n                \n                    \nsortUsersDrive()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/home/home.component.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            activeConfigName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeConfigName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Loading...'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/home/home.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isActiveConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isActiveConfig:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/home/home.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { AfterViewInit, Component, NgZone } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\nimport { Router } from '@angular/router';\n\nimport { DatabaseService } from '../../../services/database/database.service';\nimport { SorterService } from '../../../services/sorter/sorter.service';\n\n/**\n * Declare a component to be shown when the home tab is selected.\n *\n * @export\n * @class HomeComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements AfterViewInit {\n  public isActiveConfig = false;\n  public activeConfigName = 'Loading...';\n\n  /**\n   * Creates an instance of HomeComponent.\n   * @memberof HomeComponent\n   */\n  constructor(\n    private zone: NgZone,\n    private router: Router,\n    private snackBar: MatSnackBar,\n    private database: DatabaseService,\n    private sorterService: SorterService\n  ) {}\n\n  /**\n   * Handle component initalization\n   *\n   * @memberof HomeComponent\n   */\n  ngAfterViewInit() {\n    const databaseInitalizedCheck = setInterval(() => {\n      if (this.database.initalized) {\n        this.database.getActiveConfig().then(\n          activeConfig => {\n            this.database.getConfig(activeConfig, config => {\n              this.activeConfigName = config.name;\n            });\n            this.isActiveConfig = true;\n          },\n          err => {\n            this.activeConfigName = err;\n            this.isActiveConfig = false;\n          }\n        );\n        clearInterval(databaseInitalizedCheck);\n      }\n    }, 750);\n  }\n\n  sortUsersDrive() {\n    this.sorterService.sort().then(() => {\n      this.snackBar.open('Google Drive sorted!', 'OK', {\n        duration: 5000\n      });\n    }, err => console.error);\n  }\n\n  goToConfigPage() {\n    this.zone.run(() => {\n      this.router.navigateByUrl('/app/config');\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        settings_power\n        Active Config\n      \n      \n        {{ activeConfigName }}\n      \n    \n    \n      \n        sort\n        Sorting\n      \n      \n        Sort Now\n      \n    \n  \n  \n    \n      \n        settings\n        Configuration's\n      \n      \n        Configuration's control how your Google Drive is sorted!\n      \n      \n        Go to Configuration's\n      \n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    settings_power        Active Config                    {{ activeConfigName }}                            sort        Sorting                    Sort Now                                settings        Configuration\\'s                    Configuration\\'s control how your Google Drive is sorted!                    Go to Configuration\\'s            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'ConfigListComponent', 'selector': 'app-config-list'},{'name': 'ConfigModalComponent', 'selector': 'app-config-modal'},{'name': 'EditConfigModalComponent', 'selector': 'app-edit-config-modal'},{'name': 'EditConfigPageComponent', 'selector': 'app-edit-config-page'},{'name': 'FolderCreationComponent', 'selector': 'app-folder-creation'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NewConfigPageComponent', 'selector': 'app-new-rule-page'},{'name': 'NewRuleStepperComponent', 'selector': 'app-new-rule-stepper'},{'name': 'PresetConfigComponent', 'selector': 'app-preset-config'},{'name': 'PresetConfigPageComponent', 'selector': 'app-preset-config-page'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'UnauthenticatedComponent', 'selector': 'app-unauthenticated'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JSONConfiguration.html":{"url":"interfaces/JSONConfiguration.html","title":"interface - JSONConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JSONConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        activeConfig\n                                \n                                \n                                        configs\n                                \n                                \n                                        tutorial\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activeConfig\n                                    \n                                \n                                \n                                    \n                                        activeConfig:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        configs\n                                    \n                                \n                                \n                                    \n                                        configs:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tutorial\n                                    \n                                \n                                \n                                    \n                                        tutorial:     TutorialInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TutorialInterface\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Config {\n  name: String;\n  key: String;\n}\n\nexport interface ConfigInterface {\n  activeConfig: string;\n}\n\nexport interface RuleInterface {\n  id: string;\n  name: string;\n  data?: any;\n  classifier?: string;\n  constraint?: string;\n}\n\nexport interface GroupFolderInterface {\n  name?: string;\n  renameUntitled?: boolean;\n  folderID?: string;\n}\n\nexport interface FolderCreation {\n  parent: {\n    folderID: string | undefined;\n    name: string | null;\n  };\n  prefix: {\n    type: string | null;\n    value: string;\n  };\n  name: {\n    type: string | null;\n    value: string;\n  };\n  suffix: {\n    type: string | null;\n    value: string;\n  };\n}\n\nexport interface GroupInterface {\n  id: string;\n  name: string;\n  rules: Array;\n  source: GroupFolderInterface;\n  destination?: GroupFolderInterface;\n  createFolder?: FolderCreation;\n}\n\nexport interface ConfigsInterface {\n  id: string;\n  name: string;\n  groups: Array;\n}\n\nexport interface TutorialInterface {\n  enabled: boolean;\n  location: number;\n}\n\nexport interface JSONConfiguration {\n  configs: Array;\n  activeConfig: string;\n  tutorial: TutorialInterface;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PresetConfigComponent.html":{"url":"components/PresetConfigComponent.html","title":"component - PresetConfigComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PresetConfigComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tabs/config/preset-config/preset-config.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-preset-config\n            \n\n            \n                styleUrls\n                preset-config.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./preset-config.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _closeCommand\n                            \n                            \n                                    Public\n                                closeCommand\n                            \n                            \n                                    Public\n                                creationEnabled\n                            \n                            \n                                    Public\n                                isPage\n                            \n                            \n                                    Public\n                                presets\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                zone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addPreset\n                            \n                            \n                                close\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(zone: NgZone, router: Router, snackbar: MatSnackBar, google: GoogleService, database: DatabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        google\n                                                  \n                                                        \n                                                                    GoogleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        database\n                                                  \n                                                        \n                                                                    DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addPreset\n                            \n                            \n                        \n                    \n                \n                \n                    \naddPreset(presetID: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        presetID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \nclose()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _closeCommand\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _closeCommand:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            closeCommand\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        closeCommand:     \n\n                    \n                \n                    \n                        \n                            Default value : this._closeCommand.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            creationEnabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        creationEnabled:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isPage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isPage:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            presets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        presets:     \n\n                    \n                \n                    \n                        \n                            Default value : presets\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            zone\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zone:     NgZone\n\n                    \n                \n                    \n                        \n                            Type :     NgZone\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config/preset-config.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, NgZone, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { v4 as uuid } from 'uuid';\n\nimport { ConfigBuilder } from '../../../../classes/config-builder';\nimport { DatabaseService } from '../../../../services/database/database.service';\nimport { GoogleService } from '../../../../services/google/google.service';\nimport { presets } from '../presets';\n\n@Component({\n  selector: 'app-preset-config',\n  templateUrl: './preset-config.component.html',\n  styleUrls: ['./preset-config.component.scss']\n})\nexport class PresetConfigComponent implements OnInit {\n  private _closeCommand = new Subject();\n\n  public closeCommand = this._closeCommand.asObservable();\n\n  public isPage = false;\n  public presets = presets;\n  public creationEnabled = true;\n\n  constructor(\n    public zone: NgZone,\n    public router: Router,\n    private snackbar: MatSnackBar,\n    private google: GoogleService,\n    private database: DatabaseService\n  ) {}\n\n  ngOnInit() {}\n\n  close() {\n    this._closeCommand.next(true);\n  }\n\n  addPreset(presetID: string) {\n    const config = presets.find(element => {\n      return element.id === presetID;\n    });\n    const createFolders = config.data.createFolders;\n    const groups = config.data.groups;\n    const createdFolders = [];\n    let requestsSent = 0;\n    let requestsRecived = 0;\n    this.creationEnabled = false;\n    createFolders.forEach(folder => {\n      requestsSent += 1;\n      this.google\n        .createFolder(folder)\n        .then(id => {\n          requestsRecived += 1;\n          const foundGroup = groups.find(group => {\n            return group.destination.presetID === folder;\n          });\n          foundGroup.destination = {\n            folderID: id,\n            name: folder\n          };\n        })\n        .catch(err => console.error);\n    });\n    const checkInterval = setInterval(() => {\n      if (requestsSent === requestsRecived) {\n        clearInterval(checkInterval);\n        groups.forEach(group => {\n          group['id'] = uuid();\n          group.rules.forEach(rule => {\n            rule['id'] = uuid();\n          });\n        });\n        this.database\n          .addConfig(ConfigBuilder.configFromGroup(groups, 'I-STEM'))\n          .then(\n            () => {\n              this.close();\n              this.creationEnabled = true;\n            },\n            err => {\n              this.snackbar.open('There was a problem adding your preset!');\n              this.creationEnabled = true;\n            }\n          );\n      }\n    }, 100);\n  }\n}\n\n    \n\n    \n        \n  Preset Configs\n  Preset Configs\n  \n    \n      \n          \n        {{ preset.name }}\n        {{ preset.category }}\n      \n      \n        {{ preset.description }}\n      \n      \n        Add Preset\n      \n    \n    \n      Cancel\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Preset Configs  Preset Configs                              {{ preset.name }}        {{ preset.category }}                    {{ preset.description }}                    Add Preset                    Cancel      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'ConfigListComponent', 'selector': 'app-config-list'},{'name': 'ConfigModalComponent', 'selector': 'app-config-modal'},{'name': 'EditConfigModalComponent', 'selector': 'app-edit-config-modal'},{'name': 'EditConfigPageComponent', 'selector': 'app-edit-config-page'},{'name': 'FolderCreationComponent', 'selector': 'app-folder-creation'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NewConfigPageComponent', 'selector': 'app-new-rule-page'},{'name': 'NewRuleStepperComponent', 'selector': 'app-new-rule-stepper'},{'name': 'PresetConfigComponent', 'selector': 'app-preset-config'},{'name': 'PresetConfigPageComponent', 'selector': 'app-preset-config-page'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'UnauthenticatedComponent', 'selector': 'app-unauthenticated'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PresetConfigComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PresetConfigPageComponent.html":{"url":"components/PresetConfigPageComponent.html","title":"component - PresetConfigPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PresetConfigPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tabs/config/preset-config-page/preset-config-page.component.ts\n\n\n\n    \n        Extends\n    \n    \n            PresetConfigComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-preset-config-page\n            \n\n            \n                styleUrls\n                .preset-config/preset-config.component.scss\n            \n\n\n\n            \n                templateUrl\n                ../preset-config/preset-config.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isPage\n                            \n                            \n                                    Private\n                                _closeCommand\n                            \n                            \n                                    Public\n                                closeCommand\n                            \n                            \n                                    Public\n                                creationEnabled\n                            \n                            \n                                    Public\n                                isPage\n                            \n                            \n                                    Public\n                                presets\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                zone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                addPreset\n                            \n                            \n                                close\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \nclose()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config-page/preset-config-page.component.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addPreset\n                            \n                            \n                        \n                    \n                \n                \n                    \naddPreset(presetID: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PresetConfigComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PresetConfigComponent:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        presetID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \nclose()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PresetConfigComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PresetConfigComponent:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PresetConfigComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PresetConfigComponent:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isPage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isPage:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tabs/config/preset-config-page/preset-config-page.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _closeCommand\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _closeCommand:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from     PresetConfigComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PresetConfigComponent:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            closeCommand\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        closeCommand:     \n\n                    \n                \n                    \n                        \n                            Default value : this._closeCommand.asObservable()\n                        \n                    \n                            \n                                \n                                    Inherited from     PresetConfigComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PresetConfigComponent:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            creationEnabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        creationEnabled:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                            \n                                \n                                    Inherited from     PresetConfigComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PresetConfigComponent:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isPage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isPage:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     PresetConfigComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PresetConfigComponent:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            presets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        presets:     \n\n                    \n                \n                    \n                        \n                            Default value : presets\n                        \n                    \n                            \n                                \n                                    Inherited from     PresetConfigComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PresetConfigComponent:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                            \n                                \n                                    Inherited from     PresetConfigComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PresetConfigComponent:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            zone\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zone:     NgZone\n\n                    \n                \n                    \n                        \n                            Type :     NgZone\n\n                        \n                    \n                            \n                                \n                                    Inherited from     PresetConfigComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PresetConfigComponent:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { PresetConfigComponent } from '../preset-config/preset-config.component';\n\n@Component({\n  selector: 'app-preset-config-page',\n  templateUrl: '../preset-config/preset-config.component.html',\n  styleUrls: ['../preset-config/preset-config.component.scss']\n})\nexport class PresetConfigPageComponent extends PresetConfigComponent {\n  public isPage = true;\n\n  close() {\n    this.zone.run(() => {\n      this.router.navigateByUrl('/app/config');\n    });\n  }\n}\n\n    \n\n    \n        \n  Preset Configs\n  Preset Configs\n  \n    \n      \n          \n        {{ preset.name }}\n        {{ preset.category }}\n      \n      \n        {{ preset.description }}\n      \n      \n        Add Preset\n      \n    \n    \n      Cancel\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Preset Configs  Preset Configs                              {{ preset.name }}        {{ preset.category }}                    {{ preset.description }}                    Add Preset                    Cancel      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'ConfigListComponent', 'selector': 'app-config-list'},{'name': 'ConfigModalComponent', 'selector': 'app-config-modal'},{'name': 'EditConfigModalComponent', 'selector': 'app-edit-config-modal'},{'name': 'EditConfigPageComponent', 'selector': 'app-edit-config-page'},{'name': 'FolderCreationComponent', 'selector': 'app-folder-creation'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NewConfigPageComponent', 'selector': 'app-new-rule-page'},{'name': 'NewRuleStepperComponent', 'selector': 'app-new-rule-stepper'},{'name': 'PresetConfigComponent', 'selector': 'app-preset-config'},{'name': 'PresetConfigPageComponent', 'selector': 'app-preset-config-page'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'UnauthenticatedComponent', 'selector': 'app-unauthenticated'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PresetConfigPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PreventAuthGuardService.html":{"url":"injectables/PreventAuthGuardService.html","title":"injectable - PreventAuthGuardService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  PreventAuthGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth/auth-guard.service.ts\n        \n\n            \n                Description\n            \n            \n                Prevent a user from accessing a route if they are authenticated.\n\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                google\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                zone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(google: GoogleService, router: Router, zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth/auth-guard.service.ts:48\n                            \n                        \n\n                \n                    \n                            Creates an instance of PreventAuthGuardService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        google\n                                                  \n                                                        \n                                                                    GoogleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Declare the Google Service as google.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Declare the Router as router\n\n                                                        \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Declare NgZone as zone\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth/auth-guard.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            Determines whether the user can go to the page and handle it.\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Whether or not the user can access the route\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            google\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        google:     GoogleService\n\n                    \n                \n                    \n                        \n                            Type :     GoogleService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth/auth-guard.service.ts:56\n                            \n                        \n\n                \n                    \n                        Declare the Google Service as google.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth/auth-guard.service.ts:56\n                            \n                        \n\n                \n                    \n                        Declare the Router as router\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            zone\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zone:     NgZone\n\n                    \n                \n                    \n                        \n                            Type :     NgZone\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth/auth-guard.service.ts:56\n                            \n                        \n\n                \n                    \n                        Declare NgZone as zone\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n\nimport { GoogleService } from '../google/google.service';\n\n/**\n * Prevent a user from accessing a route if they aren't authenticated.\n *\n * @export\n * @class AuthGuardService\n * @implements {CanActivate}\n */\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n/**\n * Creates an instance of AuthGuardService.\n * @param {GoogleService} google Declare the Google Service as google.\n * @param {Router} router Declare the Router as router\n * @param {NgZone} zone Declare NgZone as zone\n * @memberof AuthGuardService\n */\nconstructor(public google: GoogleService, public router: Router, public zone: NgZone) { }\n  /**\n   * Determines whether the user can go to the page and handle it.\n   *\n   * @returns {boolean} Whether or not the user can access the route\n   * @memberof AuthGuardService\n   */\n  canActivate(): boolean {\n    if (this.google.getAuthStatus()) {\n      return true;\n    }\n    this.zone.run(() => {\n      this.router.navigate(['/']);\n    });\n    return false;\n  }\n}\n\n/**\n * Prevent a user from accessing a route if they are authenticated.\n *\n * @export\n * @class PreventAuthGuardService\n * @implements {CanActivate}\n */\n@Injectable()\nexport class PreventAuthGuardService implements CanActivate {\n/**\n * Creates an instance of PreventAuthGuardService.\n * @param {GoogleService} google Declare the Google Service as google.\n * @param {Router} router Declare the Router as router\n * @param {NgZone} zone Declare NgZone as zone\n * @memberof PreventAuthGuardService\n */\nconstructor(public google: GoogleService, public router: Router, public zone: NgZone) { }\n  /**\n   * Determines whether the user can go to the page and handle it.\n   *\n   * @returns {boolean} Whether or not the user can access the route\n   * @memberof PreventAuthGuardService\n   */\n  canActivate(): boolean {\n    if (!this.google.getAuthStatus()) {\n      return true;\n    }\n    this.zone.run(() => {\n      this.router.navigate(['/app/home']);\n    });\n    return false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RuleInterface.html":{"url":"interfaces/RuleInterface.html","title":"interface - RuleInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RuleInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        classifier\n                                \n                                \n                                            Optional\n                                        constraint\n                                \n                                \n                                            Optional\n                                        data\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        classifier\n                                    \n                                \n                                \n                                    \n                                        classifier:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        constraint\n                                    \n                                \n                                \n                                    \n                                        constraint:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Config {\n  name: String;\n  key: String;\n}\n\nexport interface ConfigInterface {\n  activeConfig: string;\n}\n\nexport interface RuleInterface {\n  id: string;\n  name: string;\n  data?: any;\n  classifier?: string;\n  constraint?: string;\n}\n\nexport interface GroupFolderInterface {\n  name?: string;\n  renameUntitled?: boolean;\n  folderID?: string;\n}\n\nexport interface FolderCreation {\n  parent: {\n    folderID: string | undefined;\n    name: string | null;\n  };\n  prefix: {\n    type: string | null;\n    value: string;\n  };\n  name: {\n    type: string | null;\n    value: string;\n  };\n  suffix: {\n    type: string | null;\n    value: string;\n  };\n}\n\nexport interface GroupInterface {\n  id: string;\n  name: string;\n  rules: Array;\n  source: GroupFolderInterface;\n  destination?: GroupFolderInterface;\n  createFolder?: FolderCreation;\n}\n\nexport interface ConfigsInterface {\n  id: string;\n  name: string;\n  groups: Array;\n}\n\nexport interface TutorialInterface {\n  enabled: boolean;\n  location: number;\n}\n\nexport interface JSONConfiguration {\n  configs: Array;\n  activeConfig: string;\n  tutorial: TutorialInterface;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tabs/settings/settings.component.ts\n\n\n    \n        Description\n    \n    \n        Declare the component to be shown when the settings tab is selected.\n\n    \n\n\n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n            \n                styleUrls\n                settings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearConfigs\n                            \n                            \n                                deleteAccount\n                            \n                            \n                                resetTour\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(app: AppComponent, google: GoogleService, database: DatabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tabs/settings/settings.component.ts:23\n                            \n                        \n\n                \n                    \n                            Creates an instance of SettingsComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                    AppComponent\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        google\n                                                  \n                                                        \n                                                                    GoogleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        database\n                                                  \n                                                        \n                                                                    DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clearConfigs\n                            \n                            \n                        \n                    \n                \n                \n                    \nclearConfigs()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/settings/settings.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteAccount()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/settings/settings.component.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetTour\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetTour()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tabs/settings/settings.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { DatabaseService } from '../../../services/database/database.service';\nimport { GoogleService } from '../../../services/google/google.service';\nimport { AppComponent } from './../../../app.component';\n\n/**\n * Workaround for testing\n */\ndeclare var gapi: any;\n\n/**\n * Declare the component to be shown when the settings tab is selected.\n *\n * @export\n * @class SettingsComponent\n */\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent {\n  /**\n   * Creates an instance of SettingsComponent.\n   * @memberof SettingsComponent\n   */\n  constructor(\n    private app: AppComponent,\n    private google: GoogleService,\n    private database: DatabaseService,\n  ) {}\n\n  clearConfigs() {\n    this.database.clearConfigs().catch(err => console.error);\n  }\n\n  resetTour() {\n    this.app.showTour = true;\n    this.app.aoService.reset();\n  }\n\n  deleteAccount() {\n    this.resetTour();\n    this.database.clearConfigs().then(() => {\n      this.google.signOut();\n    }, err => console.error);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Clear Configurations\n    \n  \n  \n    \n      Reset Tour\n    \n  \n  \n    \n      Delete Account\n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Clear Configurations                  Reset Tour                  Delete Account      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'ConfigListComponent', 'selector': 'app-config-list'},{'name': 'ConfigModalComponent', 'selector': 'app-config-modal'},{'name': 'EditConfigModalComponent', 'selector': 'app-edit-config-modal'},{'name': 'EditConfigPageComponent', 'selector': 'app-edit-config-page'},{'name': 'FolderCreationComponent', 'selector': 'app-folder-creation'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NewConfigPageComponent', 'selector': 'app-new-rule-page'},{'name': 'NewRuleStepperComponent', 'selector': 'app-new-rule-stepper'},{'name': 'PresetConfigComponent', 'selector': 'app-preset-config'},{'name': 'PresetConfigPageComponent', 'selector': 'app-preset-config-page'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'UnauthenticatedComponent', 'selector': 'app-unauthenticated'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SorterService.html":{"url":"injectables/SorterService.html","title":"injectable - SorterService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SorterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/sorter/sorter.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getDriveQuery\n                            \n                            \n                                    Private\n                                getUntitledFiles\n                            \n                            \n                                loadConfig\n                            \n                            \n                                sort\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(google: GoogleService, database: DatabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/sorter/sorter.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        google\n                                                  \n                                                        \n                                                                    GoogleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        database\n                                                  \n                                                        \n                                                                    DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getDriveQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getDriveQuery(group: GroupInterface)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/sorter/sorter.service.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        group\n                                                        \n                                                                    GroupInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getUntitledFiles\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getUntitledFiles(destination: GroupFolderInterface)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/sorter/sorter.service.ts:118\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        destination\n                                                        \n                                                                    GroupFolderInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadConfig(cb?: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/sorter/sorter.service.ts:124\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cb\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                            \n                        \n                    \n                \n                \n                    \nsort()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/sorter/sorter.service.ts:140\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     ConfigsInterface\n\n                    \n                \n                    \n                        \n                            Type :     ConfigsInterface\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/sorter/sorter.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { ConfigsInterface, GroupFolderInterface, GroupInterface } from '../../../interfaces';\nimport { ConfigBuilder } from '../../classes/config-builder';\nimport { DriveQueryBuilder } from '../../classes/drive-query-builder';\nimport { DatabaseService } from '../database/database.service';\nimport { GoogleService } from '../google/google.service';\n\n/**\n * Workaround for testing\n */\ndeclare var gapi: any;\n\n@Injectable()\nexport class SorterService {\n  config: ConfigsInterface;\n\n  constructor(\n    private google: GoogleService,\n    private database: DatabaseService\n  ) {\n    this.loadConfig();\n    this.database.activeConfigChanged.subscribe(() => {\n      this.loadConfig();\n    });\n  }\n\n  private getDriveQuery(group: GroupInterface): string {\n    let driveQuery = new DriveQueryBuilder(group.source.folderID, true);\n    group.rules.forEach(rule => {\n      switch (rule.classifier) {\n        case 'fullText':\n          driveQuery = driveQuery.fullTextContains(rule.data.fullText);\n          break;\n        case 'title':\n          const title = rule.data.title;\n          switch (rule.constraint) {\n            case 'include':\n              driveQuery = driveQuery.nameContains(title);\n              break;\n            case 'exclude':\n              driveQuery = driveQuery.nameExcludes(title);\n              break;\n          }\n          break;\n        case 'type':\n          const type = rule.data.fileType;\n          switch (rule.constraint) {\n            case 'include':\n              driveQuery = driveQuery.requiresType(type);\n              break;\n            case 'exclude':\n              driveQuery = driveQuery.excludeType(type);\n              break;\n          }\n          break;\n        case 'owner':\n          const owner = rule.data.owner;\n          switch (rule.constraint) {\n            case 'include':\n              driveQuery = driveQuery.hasOwner(owner);\n              break;\n            case 'exclude':\n              driveQuery = driveQuery.excludesOwner(owner);\n              break;\n          }\n          break;\n        case 'creationDate':\n          switch (rule.constraint) {\n            case 'include':\n              driveQuery = driveQuery.createdAfter(rule.data.date);\n              break;\n            case 'exclude':\n              driveQuery = driveQuery.createdBefore(rule.data.date);\n              break;\n            case 'between':\n              driveQuery = driveQuery\n                .createdAfter(rule.data.firstDate)\n                .createdBefore(rule.data.secondDate);\n              break;\n          }\n          break;\n        case 'lastOpened':\n          switch (rule.constraint) {\n            case 'include':\n              driveQuery = driveQuery.openedAfter(rule.data.date);\n              break;\n            case 'exclude':\n              driveQuery = driveQuery.openedBefore(rule.data.date);\n              break;\n            case 'between':\n              driveQuery = driveQuery\n                .openedAfter(rule.data.firstDate)\n                .openedBefore(rule.data.secondDate);\n              break;\n          }\n          break;\n        case 'lastModified':\n          switch (rule.constraint) {\n            case 'include':\n              driveQuery = driveQuery.modifiedAfter(rule.data.date);\n              break;\n            case 'exclude':\n              driveQuery = driveQuery.modifiedBefore(rule.data.date);\n              break;\n            case 'between':\n              driveQuery = driveQuery\n                .modifiedAfter(rule.data.firstDate)\n                .modifiedBefore(rule.data.secondDate);\n              break;\n          }\n          break;\n      }\n    });\n    return driveQuery.get();\n  }\n\n  private getUntitledFiles(destination: GroupFolderInterface) {\n    return new DriveQueryBuilder(destination.folderID, true)\n      .nameContains('Untitled')\n      .get();\n  }\n\n  loadConfig(cb?: Function): void {\n    this.database.getActiveConfig().then(\n      activeConfig => {\n        if (activeConfig) {\n          this.database.getConfig(activeConfig, config => {\n            this.config = config;\n            if (cb) {\n              cb();\n            }\n          });\n        }\n      },\n      err => {}\n    );\n  }\n\n  sort() {\n    return new Promise((resolve, reject) => {\n      const drive = gapi.client.drive;\n      const success = true;\n      this.config.groups.forEach(group => {\n        if (group.destination) {\n          this.google.listFiles(this.getDriveQuery(group), resp => {\n            if (resp.error) {\n              reject(resp.error);\n            } else {\n              resp.files.forEach(file => {\n                this.google.moveFile(\n                  file.id,\n                  group.destination.folderID,\n                  moved => {\n                    if (!moved) {\n                      moved = false;\n                    }\n                  }\n                );\n              }, this);\n            }\n          });\n          if (group.source.renameUntitled) {\n            this.google.listFiles(this.getUntitledFiles(group.source), resp => {\n              if (resp.error) {\n                reject(resp.error);\n              } else {\n                resp.files.forEach(file => {\n                  this.google.renameFile(file.id, Date());\n                });\n              }\n            });\n          }\n        } else {\n          const newFolderName = ConfigBuilder.folderNameBuilder(\n            group.createFolder\n          );\n          this.google\n            .createFolder(newFolderName, group.createFolder.parent.folderID)\n            .then(newFolderID => {\n              this.google.listFiles(this.getDriveQuery(group), resp => {\n                if (resp.error) {\n                  reject(resp.error);\n                } else {\n                  resp.files.forEach(file => {\n                    this.google.moveFile(file.id, newFolderID, moved => {\n                      if (!moved) {\n                        moved = false;\n                      }\n                    });\n                  }, this);\n                }\n              });\n            }, err => console.error);\n        }\n      });\n      if (success) {\n        resolve();\n      } else {\n        reject();\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TutorialInterface.html":{"url":"interfaces/TutorialInterface.html","title":"interface - TutorialInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TutorialInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        enabled\n                                \n                                \n                                        location\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                    \n                                \n                                \n                                    \n                                        enabled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Config {\n  name: String;\n  key: String;\n}\n\nexport interface ConfigInterface {\n  activeConfig: string;\n}\n\nexport interface RuleInterface {\n  id: string;\n  name: string;\n  data?: any;\n  classifier?: string;\n  constraint?: string;\n}\n\nexport interface GroupFolderInterface {\n  name?: string;\n  renameUntitled?: boolean;\n  folderID?: string;\n}\n\nexport interface FolderCreation {\n  parent: {\n    folderID: string | undefined;\n    name: string | null;\n  };\n  prefix: {\n    type: string | null;\n    value: string;\n  };\n  name: {\n    type: string | null;\n    value: string;\n  };\n  suffix: {\n    type: string | null;\n    value: string;\n  };\n}\n\nexport interface GroupInterface {\n  id: string;\n  name: string;\n  rules: Array;\n  source: GroupFolderInterface;\n  destination?: GroupFolderInterface;\n  createFolder?: FolderCreation;\n}\n\nexport interface ConfigsInterface {\n  id: string;\n  name: string;\n  groups: Array;\n}\n\nexport interface TutorialInterface {\n  enabled: boolean;\n  location: number;\n}\n\nexport interface JSONConfiguration {\n  configs: Array;\n  activeConfig: string;\n  tutorial: TutorialInterface;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/UnNamedPipe.html":{"url":"pipes/UnNamedPipe.html","title":"pipe - UnNamedPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  UnNamedPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/un-named.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        unNamed\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: any, args?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/un-named.pipe.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        args\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'unNamed'\n})\nexport class UnNamedPipe implements PipeTransform {\n  transform(value: any, args?: any): any {\n    return (value.length > 0) ? value : 'No Name';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UnauthenticatedComponent.html":{"url":"components/UnauthenticatedComponent.html","title":"component - UnauthenticatedComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UnauthenticatedComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/auth/unauthenticated/unauthenticated.component.ts\n\n\n    \n        Description\n    \n    \n        Declare the component to be shown when the user isn't authenticated.\n\n    \n\n\n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-unauthenticated\n            \n\n            \n                styleUrls\n                unauthenticated.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./unauthenticated.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                google\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(google: GoogleService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/auth/unauthenticated/unauthenticated.component.ts:16\n                            \n                        \n\n                \n                    \n                            Creates an instance of UnauthenticatedComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        google\n                                                  \n                                                        \n                                                                    GoogleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Declare the Google Service as google.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/auth/unauthenticated/unauthenticated.component.ts:29\n                            \n                        \n\n\n                \n                    \n                            Method to log the user in.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            google\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        google:     GoogleService\n\n                    \n                \n                    \n                        \n                            Type :     GoogleService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/auth/unauthenticated/unauthenticated.component.ts:22\n                            \n                        \n\n                \n                    \n                        Declare the Google Service as google.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { GoogleService } from '../../../services/google/google.service';\n\n/**\n * Declare the component to be shown when the user isn't authenticated.\n *\n * @export\n * @class UnauthenticatedComponent\n */\n@Component({\n  selector: 'app-unauthenticated',\n  templateUrl: './unauthenticated.component.html',\n  styleUrls: ['./unauthenticated.component.scss']\n})\nexport class UnauthenticatedComponent {\n  /**\n   * Creates an instance of UnauthenticatedComponent.\n   * @param {GoogleService} google Declare the Google Service as google.\n   * @memberof UnauthenticatedComponent\n   */\n  constructor(public google: GoogleService) {}\n\n  /**\n   * Method to log the user in.\n   *\n   * @memberof UnauthenticatedComponent\n   */\n  login() {\n    this.google.signIn();\n  }\n}\n\n    \n\n    \n        \n  \n    G-Drive Sorter\n    An organized Google Drive™ has never been easier\n    Get Organized\n  \n\n\n  \n    \n      view_list\n      Effectively Sort Files\n      Sorting your drive only requires a quick visit to this website. And we do the rest of the work for you!\n    \n    \n      accessibility\n      Simplistic Use\n      Preset configurations and a simplistic user interface makes the G-Drive sorter suitable for all Google Drive users.\n    \n    \n      art_track\n      Fully Customizable\n      Fully customizable configurations that sorts all Google Drive files based on type, creation date, name, current owner, and much more.\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      G-Drive Sorter    An organized Google Drive™ has never been easier    Get Organized              view_list      Effectively Sort Files      Sorting your drive only requires a quick visit to this website. And we do the rest of the work for you!              accessibility      Simplistic Use      Preset configurations and a simplistic user interface makes the G-Drive sorter suitable for all Google Drive users.              art_track      Fully Customizable      Fully customizable configurations that sorts all Google Drive files based on type, creation date, name, current owner, and much more.      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'ConfigListComponent', 'selector': 'app-config-list'},{'name': 'ConfigModalComponent', 'selector': 'app-config-modal'},{'name': 'EditConfigModalComponent', 'selector': 'app-edit-config-modal'},{'name': 'EditConfigPageComponent', 'selector': 'app-edit-config-page'},{'name': 'FolderCreationComponent', 'selector': 'app-folder-creation'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NewConfigPageComponent', 'selector': 'app-new-rule-page'},{'name': 'NewRuleStepperComponent', 'selector': 'app-new-rule-stepper'},{'name': 'PresetConfigComponent', 'selector': 'app-preset-config'},{'name': 'PresetConfigPageComponent', 'selector': 'app-preset-config-page'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'UnauthenticatedComponent', 'selector': 'app-unauthenticated'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UnauthenticatedComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog and this project adheres to Semantic Versioning.\nUnreleased\n1.0.0 - 2018-06-06\nAdded\n\nVersioning\nChangelogChanged\n\nDatabase serviceRemoved\n\nFirebase\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/animations.ts\n            \n            \n                variable\n            \n            \n                fabAnimation\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/animations.ts\n            \n            \n                variable\n            \n            \n                fadeOutIn\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/animations.ts\n            \n            \n                variable\n            \n            \n                routerAnimation\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/animations.ts\n            \n            \n                variable\n            \n            \n                slideDown\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/animations.ts\n            \n            \n                variable\n            \n            \n                slideLeft\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/animations.ts\n            \n            \n                variable\n            \n            \n                slideRight\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                19 %\n                (4/21)\n            \n        \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                variable\n            \n            \n                gapi\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/classes/config-builder.ts\n            \n            \n                class\n            \n            \n                ConfigBuilder\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/app/classes/config-data-source.ts\n            \n            \n                class\n            \n            \n                ConfigDataSource\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                    src/app/classes/drive-query-builder.ts\n            \n            \n                class\n            \n            \n                DriveQueryBuilder\n            \n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                    src/app/components/auth/unauthenticated/unauthenticated.component.ts\n            \n            \n                component\n            \n            \n                UnauthenticatedComponent\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/components/shared/config-modal/config-modal.component.ts\n            \n            \n                component\n            \n            \n                ConfigModalComponent\n            \n            \n                0 %\n                (0/31)\n            \n        \n        \n            \n                \n                    src/app/components/shared/edit-config-modal/edit-config-modal.component.ts\n            \n            \n                component\n            \n            \n                EditConfigModalComponent\n            \n            \n                0 %\n                (0/31)\n            \n        \n        \n            \n                \n                    src/app/components/shared/edit-config-page/edit-config-page.component.ts\n            \n            \n                component\n            \n            \n                EditConfigPageComponent\n            \n            \n                0 %\n                (0/32)\n            \n        \n        \n            \n                \n                    src/app/components/shared/folder-creation/folder-creation.component.ts\n            \n            \n                component\n            \n            \n                FolderCreationComponent\n            \n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                    src/app/components/shared/new-config-page/new-config-page.component.ts\n            \n            \n                component\n            \n            \n                NewConfigPageComponent\n            \n            \n                0 %\n                (0/32)\n            \n        \n        \n            \n                \n                    src/app/components/shared/new-rule-stepper/new-rule-stepper.component.ts\n            \n            \n                component\n            \n            \n                NewRuleStepperComponent\n            \n            \n                0 %\n                (0/31)\n            \n        \n        \n            \n                \n                    src/app/components/tabs/config/config-list/config-list.component.ts\n            \n            \n                component\n            \n            \n                ConfigListComponent\n            \n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                    src/app/components/tabs/config/config.component.ts\n            \n            \n                component\n            \n            \n                ConfigComponent\n            \n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                    src/app/components/tabs/config/preset-config-page/preset-config-page.component.ts\n            \n            \n                component\n            \n            \n                PresetConfigPageComponent\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                    src/app/components/tabs/config/preset-config/preset-config.component.ts\n            \n            \n                component\n            \n            \n                PresetConfigComponent\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                    src/app/components/tabs/config/presets.ts\n            \n            \n                variable\n            \n            \n                presets\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/components/tabs/config/presets.ts\n            \n            \n                variable\n            \n            \n                quartersArray\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/components/tabs/home/home.component.ts\n            \n            \n                component\n            \n            \n                HomeComponent\n            \n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                    src/app/components/tabs/settings/settings.component.ts\n            \n            \n                component\n            \n            \n                SettingsComponent\n            \n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                    src/app/components/tabs/settings/settings.component.ts\n            \n            \n                variable\n            \n            \n                gapi\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/pipes/un-named.pipe.ts\n            \n            \n                pipe\n            \n            \n                UnNamedPipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/services/auth/auth-guard.service.ts\n            \n            \n                injectable\n            \n            \n                AuthGuardService\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    src/app/services/auth/auth-guard.service.ts\n            \n            \n                injectable\n            \n            \n                PreventAuthGuardService\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    src/app/services/database/database.service.ts\n            \n            \n                injectable\n            \n            \n                DatabaseService\n            \n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                    src/app/services/database/database.service.ts\n            \n            \n                variable\n            \n            \n                gapi\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/services/database/database.service.ts\n            \n            \n                variable\n            \n            \n                google\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/services/google/google.service.ts\n            \n            \n                injectable\n            \n            \n                GoogleService\n            \n            \n                53 %\n                (8/15)\n            \n        \n        \n            \n                \n                    src/app/services/google/google.service.ts\n            \n            \n                function\n            \n            \n                folderPicked\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/services/google/google.service.ts\n            \n            \n                variable\n            \n            \n                _folderPicked\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/services/google/google.service.ts\n            \n            \n                variable\n            \n            \n                authInstance\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/services/google/google.service.ts\n            \n            \n                variable\n            \n            \n                folderPicker\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/services/google/google.service.ts\n            \n            \n                variable\n            \n            \n                gapi\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/services/google/google.service.ts\n            \n            \n                variable\n            \n            \n                google\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/services/sorter/sorter.service.ts\n            \n            \n                injectable\n            \n            \n                SorterService\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/app/services/sorter/sorter.service.ts\n            \n            \n                variable\n            \n            \n                gapi\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/consts.ts\n            \n            \n                variable\n            \n            \n                aoConfig\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/interfaces.ts\n            \n            \n                interface\n            \n            \n                Config\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/interfaces.ts\n            \n            \n                interface\n            \n            \n                ConfigInterface\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/interfaces.ts\n            \n            \n                interface\n            \n            \n                ConfigsInterface\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/interfaces.ts\n            \n            \n                interface\n            \n            \n                FolderCreation\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/interfaces.ts\n            \n            \n                interface\n            \n            \n                GroupFolderInterface\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/interfaces.ts\n            \n            \n                interface\n            \n            \n                GroupInterface\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/interfaces.ts\n            \n            \n                interface\n            \n            \n                JSONConfiguration\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/interfaces.ts\n            \n            \n                interface\n            \n            \n                RuleInterface\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/interfaces.ts\n            \n            \n                interface\n            \n            \n                TutorialInterface\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/jestGlobalMocks.ts\n            \n            \n                variable\n            \n            \n                mock\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.0\n        \n            @angular/cdk : 6.1.0\n        \n            @angular/common : ^6.0.0\n        \n            @angular/compiler : ^6.0.0\n        \n            @angular/core : ^6.0.0\n        \n            @angular/forms : ^6.0.0\n        \n            @angular/http : ^6.0.0\n        \n            @angular/material : 6.1.0\n        \n            @angular/platform-browser : ^6.0.0\n        \n            @angular/platform-browser-dynamic : ^6.0.0\n        \n            @angular/router : ^6.0.0\n        \n            @types/uuid : ^3.4.3\n        \n            core-js : ^2.5.4\n        \n            hammerjs : ^2.0.8\n        \n            jasmine : ^3.1.0\n        \n            rxjs : ^6.0.0\n        \n            rxjs-compat : 6\n        \n            uuid : ^3.2.1\n        \n            web-animations-js : ^2.3.1\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DriveMimeType   (src/.../drive-query-builder.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/classes/drive-query-builder.ts\n    \n        \n            \n                \n                    \n                        \n                        DriveMimeType\n                    \n                \n                    \n                        \n                            A enumerable of Google Drive file types\n\n                        \n                    \n                        \n                            \n                                 audio\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.audio\n                            \n                        \n                        \n                            \n                                 document\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.document\n                            \n                        \n                        \n                            \n                                 drawing\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.drawing\n                            \n                        \n                        \n                            \n                                 file\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.file\n                            \n                        \n                        \n                            \n                                 folder\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.folder\n                            \n                        \n                        \n                            \n                                 form\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.form\n                            \n                        \n                        \n                            \n                                 fustiontable\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.fusiontable\n                            \n                        \n                        \n                            \n                                 map\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.map\n                            \n                        \n                        \n                            \n                                 photo\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.photo\n                            \n                        \n                        \n                            \n                                 presentation\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.presentation\n                            \n                        \n                        \n                            \n                                 script\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.script\n                            \n                        \n                        \n                            \n                                 site\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.site\n                            \n                        \n                        \n                            \n                                 spreadsheet\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.spreadsheet\n                            \n                        \n                        \n                            \n                                 unknown\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.unknown\n                            \n                        \n                        \n                            \n                                 video\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.video\n                            \n                        \n                        \n                            \n                                 thirdParty\n                            \n                        \n                        \n                            \n                                Value: application/vnd.google-apps.drive-sdk\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            folderPicked   (src/.../google.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/google/google.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            folderPicked\n                            \n                            \n                        \n                    \n                \n                \n                    \nfolderPicked(data: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nG-Drive-Sorter\n\n   \n\nMain Countributors\n\nBrandon Cravener (Project Manager/Developer)\nFernando Arredondo (Developer)\nLane Faccoldi (Software Tester)\nIvan Abreu-Cespedes (Public Relations)\n\n\nOther Contributors\n\nAshhad Hanafi, made the logo for the app\n\n\nDescription\nThis project solves the problem of constantly needing to organize Google Drive files, by organizing it your way whenever necessary.\n\nFeatures\n\nUser friendly interface.\nCustomizable configuration.\nCompatible with Google Drive and associated accounts.\nFree to use.\n\n\nInstallation\nInstall this project by running:\n\n$ git clone https://github.com/BrandonCravener/G-Drive-Sorter\n$ cd G-Drive-Sorter\n$ git checkout angularjs\n$ yarn global add @angular/cli\n$ yarn\n\nRun with $ ng serve\n\nDocumentation\nAfter installing you can open the documentation with $ yarn run doc:buildandserve. The documentation is auto generated by compdoc.\n\nContribution\n\nProject Management\nIssue Tracker\nRepository\nGitter\n\n\nSupport\nIf there are any major issues with this project, please report them at: contact@brandoncravener.com\n\nLicense\n  This project is licensed under the MIT license.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Brandon Cravener\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthenticatedModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_AppComponent_providers\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthenticatedModule\n\n\n\ncluster_AuthenticatedModule_declarations\n\n\n\ncluster_AuthenticatedModule_exports\n\n\n\ncluster_AuthenticatedModule_providers\n\n\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_declarations\n\n\n\ncluster_ConfigModule_imports\n\n\n\ncluster_ConfigModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nUnauthenticatedComponent\n\nUnauthenticatedComponent\n\nAppModule -->\n\nUnauthenticatedComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nGoogleService\n\nGoogleService\n\nAppComponent -->\n\nGoogleService->AppComponent\n\n\n\nAppModule -->\n\nGoogleService->AppModule\n\n\n\n\n\nAuthenticatedModule\n\nAuthenticatedModule\n\nAppModule -->\n\nAuthenticatedModule->AppModule\n\n\n\n\n\nConfigComponent \n\nConfigComponent \n\nConfigComponent  -->\n\nAuthenticatedModule->ConfigComponent \n\n\n\n\n\nConfigModule\n\nConfigModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\nAuthenticatedModule -->\n\nConfigModule->AuthenticatedModule\n\n\n\n\n\nConfigListComponent \n\nConfigListComponent \n\nConfigListComponent  -->\n\nConfigModule->ConfigListComponent \n\n\n\n\n\nAuthGuardService\n\nAuthGuardService\n\nAppModule -->\n\nAuthGuardService->AppModule\n\n\n\n\n\nDatabaseService\n\nDatabaseService\n\nAppModule -->\n\nDatabaseService->AppModule\n\n\n\n\n\nPreventAuthGuardService\n\nPreventAuthGuardService\n\nAppModule -->\n\nPreventAuthGuardService->AppModule\n\n\n\n\n\nConfigComponent\n\nConfigComponent\n\nAuthenticatedModule -->\n\nConfigComponent->AuthenticatedModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAuthenticatedModule -->\n\nHomeComponent->AuthenticatedModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nAuthenticatedModule -->\n\nSettingsComponent->AuthenticatedModule\n\n\n\n\n\nSorterService\n\nSorterService\n\nAuthenticatedModule -->\n\nSorterService->AuthenticatedModule\n\n\n\n\n\nConfigListComponent\n\nConfigListComponent\n\nConfigModule -->\n\nConfigListComponent->ConfigModule\n\n\n\n\n\nConfigModalComponent\n\nConfigModalComponent\n\nConfigModule -->\n\nConfigModalComponent->ConfigModule\n\n\n\n\n\nEditConfigModalComponent\n\nEditConfigModalComponent\n\nConfigModule -->\n\nEditConfigModalComponent->ConfigModule\n\n\n\n\n\nEditConfigPageComponent\n\nEditConfigPageComponent\n\nConfigModule -->\n\nEditConfigPageComponent->ConfigModule\n\n\n\n\n\nFolderCreationComponent\n\nFolderCreationComponent\n\nConfigModule -->\n\nFolderCreationComponent->ConfigModule\n\n\n\n\n\nNewConfigPageComponent\n\nNewConfigPageComponent\n\nConfigModule -->\n\nNewConfigPageComponent->ConfigModule\n\n\n\n\n\nNewRuleStepperComponent\n\nNewRuleStepperComponent\n\nConfigModule -->\n\nNewRuleStepperComponent->ConfigModule\n\n\n\n\n\nPresetConfigComponent\n\nPresetConfigComponent\n\nConfigModule -->\n\nPresetConfigComponent->ConfigModule\n\n\n\n\n\nPresetConfigPageComponent\n\nPresetConfigPageComponent\n\nConfigModule -->\n\nPresetConfigPageComponent->ConfigModule\n\n\n\n\n\nUnNamedPipe\n\nUnNamedPipe\n\nConfigModule -->\n\nUnNamedPipe->ConfigModule\n\n\n\n\n\nConfigRoutingModule\n\nConfigRoutingModule\n\nConfigModule -->\n\nConfigRoutingModule->ConfigModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            4 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        14 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        5 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 pipe\n                    \n                \n            \n            \n                \n                    \n                        \n                        3 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        9 interfaces\n                    \n                \n            \n            \n                \n                    \n                        \n                        \n                            4 routes\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTodo\n\nAdd untitled name renamer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            _folderPicked   (src/.../google.service.ts)\n                        \n                        \n                            aoConfig   (src/.../consts.ts)\n                        \n                        \n                            authInstance   (src/.../google.service.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            fabAnimation   (src/.../animations.ts)\n                        \n                        \n                            fadeOutIn   (src/.../animations.ts)\n                        \n                        \n                            folderPicker   (src/.../google.service.ts)\n                        \n                        \n                            gapi   (src/.../settings.component.ts)\n                        \n                        \n                            gapi   (src/.../app.component.ts)\n                        \n                        \n                            gapi   (src/.../sorter.service.ts)\n                        \n                        \n                            gapi   (src/.../database.service.ts)\n                        \n                        \n                            gapi   (src/.../google.service.ts)\n                        \n                        \n                            google   (src/.../database.service.ts)\n                        \n                        \n                            google   (src/.../google.service.ts)\n                        \n                        \n                            mock   (src/.../jestGlobalMocks.ts)\n                        \n                        \n                            presets   (src/.../presets.ts)\n                        \n                        \n                            quartersArray   (src/.../presets.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            routerAnimation   (src/.../animations.ts)\n                        \n                        \n                            slideDown   (src/.../animations.ts)\n                        \n                        \n                            slideLeft   (src/.../animations.ts)\n                        \n                        \n                            slideRight   (src/.../animations.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/google/google.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            _folderPicked\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _folderPicked:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authInstance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authInstance:     \n\n                    \n                \n\n                \n                    \n                        Variable for easy reference to the authenitcation instance.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            folderPicker\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        folderPicker:     \n\n                    \n                \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gapi\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gapi:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n                \n                    \n                        Workaround for testing\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            google\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        google:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/consts.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            aoConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        aoConfig:     Config\n\n                    \n                \n                    \n                        \n                            Type :     Config\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  steps: [\n    {\n      id: 0,\n      text: 'This is your Home page where basic controls and information are provided.',\n      path: '/app/home'\n    },\n    {\n      id: 1,\n      text: 'This is the Configuration page where you can view, edit, create, and delete configs.',\n      path: '/app/config'\n    },\n    {\n      id: 2,\n      text: 'This is the presets button, it brings you to a list of presets you can choose from!',\n      path: '/app/config'\n    },\n    {\n      id: 3,\n      text: 'This is the Settings page where you can manage your data.',\n      path: '/app/settings'\n    }\n  ]\n}\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n                \n                    \n                        Environment for development builds\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n                \n                    \n                        Environment for production builds\n\n                    \n                \n\n            \n        \n\n    src/animations.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            fabAnimation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fabAnimation:     \n\n                    \n                \n                    \n                        \n                            Default value : trigger('createConfigFABState', [\n  state(\n    'inactive',\n    style({\n      transform: 'scale(0)'\n    })\n  ),\n  state(\n    'active',\n    style({\n      transform: 'scale(1)'\n    })\n  ),\n  transition('inactive => active', animate('0.1s')),\n  transition('active => inactive', animate('0.1s'))\n])\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fadeOutIn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fadeOutIn:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  query(\n    ':enter, :leave',\n    style({\n      position: 'fixed',\n      width: '100%'\n    }),\n    {\n      optional: true\n    }\n  ),\n  query(\n    ':enter',\n    style({\n      opacity: 0\n    })\n  ),\n  query(\n    ':leave',\n    [\n      style({\n        opacity: 1\n      }),\n      animate(\n        '0.5s ease-out',\n        style({\n          opacity: 0\n        })\n      )\n    ],\n    {\n      optional: true\n    }\n  ),\n  query(\n    ':enter',\n    animate(\n      '0.5s 0.5s ease-in',\n      style({\n        opacity: 1\n      })\n    ),\n    {\n      optional: true\n    }\n  )\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            routerAnimation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        routerAnimation:     \n\n                    \n                \n                    \n                        \n                            Default value : trigger('routerTransition', [\n  // Landing transitions\n  transition('* => landing', fadeOutIn),\n  transition('landing => appHome', fadeOutIn),\n  // Tabs transitions\n  transition('appHome => appConfig', slideLeft),\n  transition('appConfig => appHome', slideRight),\n  transition('appHome => appSettings', slideLeft),\n  transition('appSettings => appHome', slideRight),\n  transition('appConfig => appSettings', slideLeft),\n  transition('appSettings => appConfig', slideRight),\n  // Small screen pages\n  transition('appConfig => appConfigEdit', slideDown),\n  transition('appConfigEdit => appConfig', slideDown),\n  transition('appConfig => appConfigCreate', slideDown),\n  transition('appConfigCreate => appConfig', slideDown),\n  transition('appConfig => appConfigPresets', slideDown),\n  transition('appConfigPresets => appConfig', slideDown),\n  transition('appSettings => appConfigEdit', slideDown),\n  transition('appConfigEdit => appSettings', slideDown),\n  transition('appSettings => appConfigCreate', slideDown),\n  transition('appConfigCreate => appSettings', slideDown),\n  transition('appSettings => appConfigPresets', slideDown),\n  transition('appConfigPresets => appSettings', slideDown),\n  transition('appHome => appConfigEdit', slideDown),\n  transition('appConfigEdit => appHome', slideDown),\n  transition('appHome => appConfigCreate', slideDown),\n  transition('appConfigCreate => appHome', slideDown),\n  transition('appHome => appConfigPresets', slideDown),\n  transition('appConfigPresets => appHome', slideDown)\n])\n                        \n                    \n\n                \n                    \n                        Animation for switching between routes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slideDown\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        slideDown:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  query(\n    ':enter, :leave',\n    style({\n      position: 'fixed',\n      width: '100%',\n      height: '100%'\n    }),\n    {\n      optional: false\n    }\n  ),\n  group([\n    query(\n      ':enter',\n      [\n        style({\n          transform: 'translateY(100%)',\n          opacity: 0\n        }),\n        animate(\n          '0.5s',\n          style({\n            transform: 'translateY(0%)',\n            opacity: 1\n          })\n        )\n      ],\n      {\n        optional: false\n      }\n    ),\n    query(\n      ':leave',\n      [\n        style({\n          transform: 'translateY(0%)',\n          opacity: 1\n        }),\n        animate(\n          '0.5s',\n          style({\n            transform: 'translateY(100%)',\n            opacity: 0\n          })\n        )\n      ],\n      {\n        optional: false\n      }\n    )\n  ])\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slideLeft\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        slideLeft:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  query(\n    ':enter, :leave',\n    style({\n      position: 'fixed',\n      width: '100%'\n    }),\n    {\n      optional: false\n    }\n  ),\n  group([\n    query(\n      ':enter',\n      [\n        style({\n          transform: 'translateX(100%)'\n        }),\n        animate(\n          '0.5s',\n          style({\n            transform: 'translateX(0%)'\n          })\n        )\n      ],\n      {\n        optional: false\n      }\n    ),\n    query(\n      ':leave',\n      [\n        style({\n          transform: 'translateX(0%)'\n        }),\n        animate(\n          '0.5s',\n          style({\n            transform: 'translateX(-100%)'\n          })\n        )\n      ],\n      {\n        optional: false\n      }\n    )\n  ])\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slideRight\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        slideRight:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  query(\n    ':enter, :leave',\n    style({\n      position: 'fixed',\n      width: '100%'\n    }),\n    {\n      optional: false\n    }\n  ),\n  group([\n    query(\n      ':enter',\n      [\n        style({\n          transform: 'translateX(-100%)'\n        }),\n        animate(\n          '0.5s',\n          style({\n            transform: 'translateX(0%)'\n          })\n        )\n      ],\n      {\n        optional: false\n      }\n    ),\n    query(\n      ':leave',\n      [\n        style({\n          transform: 'translateX(0%)'\n        }),\n        animate(\n          '0.5s',\n          style({\n            transform: 'translateX(100%)'\n          })\n        )\n      ],\n      {\n        optional: false\n      }\n    )\n  ])\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/components/tabs/settings/settings.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            gapi\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gapi:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n                \n                    \n                        Workaround for testing\n\n                    \n                \n\n            \n        \n\n    src/app/app.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            gapi\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gapi:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n                \n                    \n                        Workaround for testing\n\n                    \n                \n\n            \n        \n\n    src/app/services/sorter/sorter.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            gapi\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gapi:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n                \n                    \n                        Workaround for testing\n\n                    \n                \n\n            \n        \n\n    src/app/services/database/database.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            gapi\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gapi:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n                \n                    \n                        Workaround for testing\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            google\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        google:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/jestGlobalMocks.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mock\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mock:     \n\n                    \n                \n                    \n                        \n                            Default value : () => {\n  let storage = {};\n  return {\n    getItem: key => key in storage ? storage[key] : null,\n    setItem: (key, value) => storage[key] = value || '',\n    removeItem: key => delete storage[key],\n    clear: () => storage = {},\n  };\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/components/tabs/config/presets.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            presets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        presets:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    id: 'istem',\n    name: 'I-STEM Geometry Preset',\n    category: 'School',\n    description:\n      'A preset configuration for the Wilson High School 9th Grade Geometry I-STEM classes(Periods 3-5).',\n    imageURL: 'assets/images/istem-logo.png',\n    data: {\n      createFolders: [\n        'Geometry',\n        'Physics',\n        'Integrated Engineering and Design'\n      ],\n      groups: [\n        {\n          destination: {\n            presetID: 'Geometry'\n          },\n          name: 'Geometry',\n          rules: [\n            {\n              classifier: 'title',\n              constraint: 'include',\n              data: {\n                title: 'Geo'\n              },\n              name: 'Name'\n            }\n          ],\n          source: {\n            folderID: 'root',\n            name: 'My Drive'\n          }\n        },\n        {\n          destination: {\n            presetID: 'Physics'\n          },\n          name: 'Physics',\n          rules: [\n            {\n              classifier: 'title',\n              constraint: 'include',\n              data: {\n                title: 'Phys'\n              },\n              name: 'Name'\n            }\n          ],\n          source: {\n            folderID: 'root',\n            name: 'My Drive'\n          }\n        },\n        {\n          destination: {\n            presetID: 'Integrated Engineering and Design'\n          },\n          name: 'Integrated Engineering and Design',\n          rules: [\n            {\n              classifier: 'title',\n              constraint: 'include',\n              data: {\n                title: 'IED'\n              },\n              name: 'Name'\n            }\n          ],\n          source: {\n            folderID: 'root',\n            name: 'My Drive'\n          }\n        }\n      ]\n    }\n  }\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            quartersArray\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        quartersArray:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['Quarter 1', 'Quarter 2', 'Quarter 3', 'Quarter 4']\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
