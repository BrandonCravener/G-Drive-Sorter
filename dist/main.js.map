{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/animations.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/classes/config-builder.ts","webpack:///./src/app/classes/drive-query-builder.ts","webpack:///./src/app/components/auth/unauthenticated/unauthenticated.component.html","webpack:///./src/app/components/auth/unauthenticated/unauthenticated.component.scss","webpack:///./src/app/components/auth/unauthenticated/unauthenticated.component.ts","webpack:///./src/app/components/shared/config-modal/config-modal.component.html","webpack:///./src/app/components/shared/config-modal/config-modal.component.scss","webpack:///./src/app/components/shared/config-modal/config-modal.component.ts","webpack:///./src/app/components/shared/edit-config-modal/edit-config-modal.component.html","webpack:///./src/app/components/shared/edit-config-modal/edit-config-modal.component.scss","webpack:///./src/app/components/shared/edit-config-modal/edit-config-modal.component.ts","webpack:///./src/app/components/shared/edit-config-page/edit-config-page.component.ts","webpack:///./src/app/components/shared/folder-creation/folder-creation.component.html","webpack:///./src/app/components/shared/folder-creation/folder-creation.component.scss","webpack:///./src/app/components/shared/folder-creation/folder-creation.component.ts","webpack:///./src/app/components/shared/new-config-page/new-config-page.component.ts","webpack:///./src/app/components/shared/new-rule-stepper/new-rule-stepper.component.html","webpack:///./src/app/components/shared/new-rule-stepper/new-rule-stepper.component.scss","webpack:///./src/app/components/shared/new-rule-stepper/new-rule-stepper.component.ts","webpack:///./src/app/components/tabs/config/config-list/config-list.component.html","webpack:///./src/app/components/tabs/config/config-list/config-list.component.scss","webpack:///./src/app/components/tabs/config/config-list/config-list.component.ts","webpack:///./src/app/components/tabs/config/config.component.html","webpack:///./src/app/components/tabs/config/config.component.scss","webpack:///./src/app/components/tabs/config/config.component.ts","webpack:///./src/app/components/tabs/config/preset-config-page/preset-config-page.component.ts","webpack:///./src/app/components/tabs/config/preset-config/preset-config.component.html","webpack:///./src/app/components/tabs/config/preset-config/preset-config.component.scss","webpack:///./src/app/components/tabs/config/preset-config/preset-config.component.ts","webpack:///./src/app/components/tabs/config/presets.ts","webpack:///./src/app/components/tabs/home/home.component.html","webpack:///./src/app/components/tabs/home/home.component.scss","webpack:///./src/app/components/tabs/home/home.component.ts","webpack:///./src/app/components/tabs/settings/settings.component.html","webpack:///./src/app/components/tabs/settings/settings.component.scss","webpack:///./src/app/components/tabs/settings/settings.component.ts","webpack:///./src/app/modules/authenticated/authenticated.module.ts","webpack:///./src/app/modules/config/config-routing.module.ts","webpack:///./src/app/modules/config/config.module.ts","webpack:///./src/app/pipes/un-named.pipe.ts","webpack:///./src/app/services/auth/auth-guard.service.ts","webpack:///./src/app/services/firebase/database.service.ts","webpack:///./src/app/services/google/google.service.ts","webpack:///./src/app/services/sorter/sorter.service.ts","webpack:///./src/environments/environment.prod.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./modules/config/config.module\": [\n\t\t\"./src/app/modules/config/config.module.ts\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import {\n  animate,\n  animateChild,\n  animation,\n  group,\n  query,\n  stagger,\n  state,\n  style,\n  transition,\n  trigger\n} from '@angular/animations';\nimport { Optional } from '@angular/core';\n\nconst fadeOutIn = [\n  query(\n    ':enter, :leave',\n    style({\n      position: 'fixed',\n      width: '100%'\n    }),\n    {\n      optional: true\n    }\n  ),\n  query(\n    ':enter',\n    style({\n      opacity: 0\n    })\n  ),\n  query(\n    ':leave',\n    [\n      style({\n        opacity: 1\n      }),\n      animate(\n        '0.5s ease-out',\n        style({\n          opacity: 0\n        })\n      )\n    ],\n    {\n      optional: true\n    }\n  ),\n  query(\n    ':enter',\n    animate(\n      '0.5s 0.5s ease-in',\n      style({\n        opacity: 1\n      })\n    ),\n    {\n      optional: true\n    }\n  )\n];\n\nconst slideLeft = [\n  query(\n    ':enter, :leave',\n    style({\n      position: 'fixed',\n      width: '100%'\n    }),\n    {\n      optional: false\n    }\n  ),\n  group([\n    query(\n      ':enter',\n      [\n        style({\n          transform: 'translateX(100%)'\n        }),\n        animate(\n          '0.5s',\n          style({\n            transform: 'translateX(0%)'\n          })\n        )\n      ],\n      {\n        optional: false\n      }\n    ),\n    query(\n      ':leave',\n      [\n        style({\n          transform: 'translateX(0%)'\n        }),\n        animate(\n          '0.5s',\n          style({\n            transform: 'translateX(-100%)'\n          })\n        )\n      ],\n      {\n        optional: false\n      }\n    )\n  ])\n];\n\nconst slideRight = [\n  query(\n    ':enter, :leave',\n    style({\n      position: 'fixed',\n      width: '100%'\n    }),\n    {\n      optional: false\n    }\n  ),\n  group([\n    query(\n      ':enter',\n      [\n        style({\n          transform: 'translateX(-100%)'\n        }),\n        animate(\n          '0.5s',\n          style({\n            transform: 'translateX(0%)'\n          })\n        )\n      ],\n      {\n        optional: false\n      }\n    ),\n    query(\n      ':leave',\n      [\n        style({\n          transform: 'translateX(0%)'\n        }),\n        animate(\n          '0.5s',\n          style({\n            transform: 'translateX(100%)'\n          })\n        )\n      ],\n      {\n        optional: false\n      }\n    )\n  ])\n];\n\nconst slideDown = [\n  query(\n    ':enter, :leave',\n    style({\n      position: 'fixed',\n      width: '100%',\n      height: '100%'\n    }),\n    {\n      optional: false\n    }\n  ),\n  group([\n    query(\n      ':enter',\n      [\n        style({\n          transform: 'translateY(100%)',\n          opacity: 0\n        }),\n        animate(\n          '0.5s',\n          style({\n            transform: 'translateY(0%)',\n            opacity: 1\n          })\n        )\n      ],\n      {\n        optional: false\n      }\n    ),\n    query(\n      ':leave',\n      [\n        style({\n          transform: 'translateY(0%)',\n          opacity: 1\n        }),\n        animate(\n          '0.5s',\n          style({\n            transform: 'translateY(100%)',\n            opacity: 0\n          })\n        )\n      ],\n      {\n        optional: false\n      }\n    )\n  ])\n];\n\n/**\n * Animation for switching between routes\n */\nexport const routerAnimation = trigger('routerTransition', [\n  // Landing transitions\n  transition('* => landing', fadeOutIn),\n  transition('landing => appHome', fadeOutIn),\n  // Tabs transitions\n  transition('appHome => appConfig', slideLeft),\n  transition('appConfig => appHome', slideRight),\n  transition('appHome => appSettings', slideLeft),\n  transition('appSettings => appHome', slideRight),\n  transition('appConfig => appSettings', slideLeft),\n  transition('appSettings => appConfig', slideRight),\n  // Small screen pages\n  transition('appConfig => appConfigEdit', slideDown),\n  transition('appConfigEdit => appConfig', slideDown),\n  transition('appConfig => appConfigCreate', slideDown),\n  transition('appConfigCreate => appConfig', slideDown),\n  transition('appConfig => appConfigPresets', slideDown),\n  transition('appConfigPresets => appConfig', slideDown),\n  transition('appSettings => appConfigEdit', slideDown),\n  transition('appConfigEdit => appSettings', slideDown),\n  transition('appSettings => appConfigCreate', slideDown),\n  transition('appConfigCreate => appSettings', slideDown),\n  transition('appSettings => appConfigPresets', slideDown),\n  transition('appConfigPresets => appSettings', slideDown),\n  transition('appHome => appConfigEdit', slideDown),\n  transition('appConfigEdit => appHome', slideDown),\n  transition('appHome => appConfigCreate', slideDown),\n  transition('appConfigCreate => appHome', slideDown),\n  transition('appHome => appConfigPresets', slideDown),\n  transition('appConfigPresets => appHome', slideDown)\n]);\n\nexport const fabAnimation = trigger('createConfigFABState', [\n  state(\n    'inactive',\n    style({\n      transform: 'scale(0)'\n    })\n  ),\n  state(\n    'active',\n    style({\n      transform: 'scale(1)'\n    })\n  ),\n  transition('inactive => active', animate('0.1s')),\n  transition('active => inactive', animate('0.1s'))\n]);\n","module.exports = \"<div id=\\\"loader\\\" class=\\\"loading-overlay\\\" [class.hidden]=\\\"loaded\\\">\\n  <div class=\\\"square-holder\\\">\\n    <div class=\\\"square-1\\\"></div>\\n    <div class=\\\"square-2\\\"></div>\\n    <div class=\\\"square-3\\\"></div>\\n    <div class=\\\"square-4\\\"></div>\\n  </div>\\n</div>\\n<mat-toolbar color=\\\"primary\\\">\\n  <mat-toolbar-row>\\n    <div></div>\\n    <div>\\n      <img class=\\\"toolbar-logo\\\" src=\\\"assets/images/icon.png\\\" alt=\\\"G-Drive Sorter Logo\\\">\\n    </div>\\n    <div>\\n      <mat-menu #appMenu=\\\"matMenu\\\">\\n        <button mat-menu-item (click)=\\\"signOut()\\\">Sign Out</button>\\n      </mat-menu>\\n      <button *ngIf=\\\"authenticated\\\" mat-icon-button [matMenuTriggerFor]=\\\"appMenu\\\">\\n        <mat-icon>more_vert</mat-icon>\\n      </button>\\n      <button *ngIf=\\\"!authenticated\\\" mat-button (click)=\\\"signIn()\\\">\\n        Sign In\\n      </button>\\n    </div>\\n  </mat-toolbar-row>\\n  <mat-toolbar-row *ngIf=\\\"authenticated\\\">\\n    <nav mat-tab-nav-bar color=\\\"accent\\\">\\n      <a mat-tab-link *ngFor=\\\"let link of tabLinks\\\" [routerLink]=\\\"link.path\\\" routerLinkActive #rla=\\\"routerLinkActive\\\" [active]=\\\"rlaSafe&&rla.isActive\\\">\\n        {{ link.label }}\\n      </a>\\n    </nav>\\n  </mat-toolbar-row>\\n</mat-toolbar>\\n<div class=\\\"container\\\" [@routerTransition]=\\\"getRouteState(route)\\\">\\n  <router-outlet #route=\\\"outlet\\\"></router-outlet>\\n</div>\\n<button class=\\\"new-config-button\\\" matTooltip=\\\"Create Config\\\" matTooltipPosition=\\\"left\\\" mat-fab color=\\\"accent\\\" [@createConfigFABState]=\\\"createConfigButtonState\\\"\\n  (click)=\\\"openConfigModalFunc()\\\">\\n  <mat-icon aria-label=\\\"Create new config button.\\\">add</mat-icon>\\n</button>\"","module.exports = \"mat-toolbar > mat-toolbar-row:first-child {\\n  justify-content: center; }\\n  mat-toolbar > mat-toolbar-row:first-child div {\\n    flex: 1; }\\n  mat-toolbar > mat-toolbar-row:first-child div:nth-child(2) {\\n    text-align: center; }\\n  mat-toolbar > mat-toolbar-row:first-child div:nth-child(3) {\\n    text-align: right; }\\n  nav.mat-tab-nav-bar {\\n  width: 100%; }\\n  .toolbar-logo {\\n  width: 65px; }\\n  ::ng-deep .mat-tab-links {\\n  display: flex; }\\n  .mat-tab-link {\\n  flex: 1 1 auto; }\\n  .new-config-button {\\n  right: 20px;\\n  bottom: 20px;\\n  position: fixed; }\\n  .square-holder {\\n  top: 50%;\\n  z-index: 9999;\\n  position: fixed;\\n  min-width: 100%;\\n  max-height: 10vw;\\n  -webkit-transform: translateY(-50%);\\n          transform: translateY(-50%); }\\n  .loading-overlay .square-1, .loading-overlay .square-2, .loading-overlay .square-3, .loading-overlay .square-4 {\\n  width: 10vw;\\n  height: 10vw;\\n  display: inline-block;\\n  background-color: #2196f3;\\n  -webkit-animation: squareAnimation 1.5s ease-in-out;\\n          animation: squareAnimation 1.5s ease-in-out;\\n  -webkit-animation-iteration-count: infinite;\\n          animation-iteration-count: infinite; }\\n  .loading-overlay {\\n  width: 100%;\\n  height: 100%;\\n  z-index: 9998;\\n  position: fixed;\\n  transition: ease-out 1s;\\n  background-color: #4caf50; }\\n  .loading-overlay .square-1 {\\n    margin-left: 15vw; }\\n  .loading-overlay .square-2 {\\n    margin-left: 10vw;\\n    -webkit-animation-delay: 0.1s;\\n            animation-delay: 0.1s; }\\n  .loading-overlay .square-3 {\\n    margin-left: 10vw;\\n    -webkit-animation-delay: 0.2s;\\n            animation-delay: 0.2s; }\\n  .loading-overlay .square-4 {\\n    margin-left: 10vw;\\n    -webkit-animation-delay: 0.3s;\\n            animation-delay: 0.3s; }\\n  .loading-overlay.hidden {\\n  opacity: 0; }\\n  @-webkit-keyframes squareAnimation {\\n  0% {\\n    -webkit-transform: translateY(0) rotate(0);\\n            transform: translateY(0) rotate(0); }\\n  50% {\\n    -webkit-transform: translateY(-10vw) rotate(120deg);\\n            transform: translateY(-10vw) rotate(120deg); }\\n  100% {\\n    -webkit-transform: translateY(0) rotate(360deg);\\n            transform: translateY(0) rotate(360deg); } }\\n  @keyframes squareAnimation {\\n  0% {\\n    -webkit-transform: translateY(0) rotate(0);\\n            transform: translateY(0) rotate(0); }\\n  50% {\\n    -webkit-transform: translateY(-10vw) rotate(120deg);\\n            transform: translateY(-10vw) rotate(120deg); }\\n  100% {\\n    -webkit-transform: translateY(0) rotate(360deg);\\n            transform: translateY(0) rotate(360deg); } }\\n\"","import { AfterViewInit, Component, NgZone } from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { fabAnimation, routerAnimation } from '../animations';\nimport { GoogleService } from './services/google/google.service';\nimport { NavigationEnd, NavigationStart, Router } from '@angular/router';\n\n/**\n * Workaround for testing\n */\ndeclare var gapi: any;\n\n/**\n * Base application component.\n *\n * @export\n * @class AppComponent\n * @implements {AfterViewInit}\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  providers: [GoogleService],\n  animations: [routerAnimation, fabAnimation]\n})\nexport class AppComponent implements AfterViewInit {\n  private openConfigModal: Subject<boolean> = new Subject<boolean>();\n  private loaderRemoved: Boolean = false;\n\n  public tabsEnabled = true;\n  public loaded: Boolean = false;\n  public authenticated: Boolean;\n  public rlaSafe: boolean = false;\n  public createConfigButtonState: string = 'inactive';\n  public openConfigModal$ = this.openConfigModal.asObservable();\n  public tabLinks = [\n    {\n      path: 'app/home',\n      label: 'Home'\n    },\n    {\n      path: 'app/config',\n      label: 'Configuration'\n    },\n    {\n      path: 'app/settings',\n      label: 'Settings'\n    }\n  ];\n\n  /**\n   * Creates an instance of AppComponent.\n   * @param {GoogleService} google Declare the Google Service as google\n   * @param {Router} router Declare the Router as router\n   * @param {NgZone} zone  Declare NgZone as zon\n   * @memberof AppComponent\n   */\n  constructor(\n    private google: GoogleService,\n    private router: Router,\n    private zone: NgZone\n  ) {\n    const googleInitInterval = setInterval(() => {\n      if (window['gapi']) {\n        this.google.init(\n          {\n            apiKey: 'AIzaSyB-yE9IXT29Vl_eAU7bzvzv5Qe17flfpzM',\n            clientId:\n              '362606538820-om1dhhvv5d9npas7jj02mbtvi5mjksmo.apps.googleusercontent.com',\n            discoveryDocs: [\n              'https://www.googleapis.com/discovery/v1/apis/drive/v3/rest'\n            ],\n            scope: 'https://www.googleapis.com/auth/drive'\n          },\n          () => {\n            console.debug('Google initalized.');\n          }\n        );\n        this.google.authState$.subscribe(state => {\n          if (!this.loaderRemoved) {\n            this.loaded = true;\n            setTimeout(() => {\n              document.getElementById('loader').remove();\n              this.loaderRemoved = true;\n            }, 500);\n          }\n          this.authenticated = state;\n          if (state) {\n            this.zone.run(() => {\n              this.router.navigate(['/app/home']);\n            });\n          } else {\n            this.zone.run(() => {\n              this.router.navigate(['/']);\n            });\n          }\n        });\n        clearInterval(googleInitInterval);\n      }\n    }, 250);\n  }\n\n  /**\n   * Called after the view is initalized.\n   *\n   * @memberof AppComponent\n   */\n  public ngAfterViewInit() {\n    this.rlaSafe = true;\n    // Listen for route changes\n    this.router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        if (event.url === '/app/config') {\n          this.createConfigButtonState = 'active';\n        } else {\n          this.createConfigButtonState = 'inactive';\n        }\n        console.log(event.url);\n        if (\n          event.url === '/app/config/create' ||\n          event.url === '/app/config/presets' ||\n          event.url === '/app/config/edit'\n        ) {\n          this.tabsEnabled = false;\n        } else {\n          this.tabsEnabled = true;\n        }\n      }\n    });\n  }\n\n  signOut() {\n    this.google.signOut();\n  }\n\n  signIn() {\n    this.google.signIn();\n  }\n\n  openConfigModalFunc() {\n    this.openConfigModal.next(true);\n  }\n\n  /**\n   * Gets the current route information.\n   *\n   * @param {any} outlet The route\n   * @returns\n   * @memberof AppComponent\n   */\n  getRouteState(outlet) {\n    return outlet.activatedRouteData.state;\n  }\n}\n","import { AngularFireAuthModule } from 'angularfire2/auth';\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\nimport { AppComponent } from './app.component';\nimport { appRoutes } from './app.routes';\nimport { AuthenticatedModule } from './modules/authenticated/authenticated.module';\nimport { AuthGuardService, PreventAuthGuardService } from './services/auth/auth-guard.service';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ConfigModule } from './modules/config/config.module';\nimport { environment } from '../environments/environment.prod';\nimport { FolderCreationComponent } from './components/shared/folder-creation/folder-creation.component';\nimport { GoogleService } from './services/google/google.service';\nimport { MatButtonModule } from '@angular/material/button';\nimport {\n  MatDialogModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatInputModule,\n  MatStepperModule,\n  MatToolbarModule\n  } from '@angular/material';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { NgModule } from '@angular/core';\nimport { ParallaxConfig, ParallaxModule } from 'ngx-parallax';\nimport { RouterModule, Routes } from '@angular/router';\nimport { UnauthenticatedComponent } from './components/auth/unauthenticated/unauthenticated.component';\n\n@NgModule({\n  declarations: [AppComponent, UnauthenticatedComponent],\n  imports: [\n    BrowserModule,\n    MatMenuModule,\n    MatIconModule,\n    MatTabsModule,\n    ParallaxModule,\n    MatInputModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatToolbarModule,\n    RouterModule.forRoot(appRoutes),\n    AngularFireAuthModule,\n    AngularFirestoreModule,\n    ConfigModule.forRoot(),\n    BrowserAnimationsModule,\n    AuthenticatedModule.forRoot(),\n    AngularFireModule.initializeApp(environment.firebase)\n  ],\n  providers: [\n    GoogleService,\n    AuthGuardService,\n    PreventAuthGuardService,\n    AppComponent\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { AuthGuardService as AuthGuard, PreventAuthGuardService as PreventAuthGuard } from './services/auth/auth-guard.service';\nimport { ConfigComponent } from './components/tabs/config/config.component';\nimport { EditConfigPageComponent } from './components/shared/edit-config-page/edit-config-page.component';\nimport { HomeComponent } from './components/tabs/home/home.component';\nimport { NewConfigPageComponent } from './components/shared/new-config-page/new-config-page.component';\nimport { Routes } from '@angular/router';\nimport { SettingsComponent } from './components/tabs/settings/settings.component';\nimport { UnauthenticatedComponent } from './components/auth/unauthenticated/unauthenticated.component';\nimport { PresetConfigPageComponent } from './components/tabs/config/preset-config-page/preset-config-page.component';\n\nexport const appRoutes: Routes = [\n  {\n    path: '',\n    component: UnauthenticatedComponent,\n    canActivate: [PreventAuthGuard],\n    data: {\n      state: 'landing'\n    }\n  },\n  {\n    path: 'app/config',\n    loadChildren: './modules/config/config.module#ConfigModule'\n  },\n  {\n    path: 'app/home',\n    component: HomeComponent,\n    canActivate: [AuthGuard],\n    data: {\n      state: 'appHome'\n    }\n  },\n  {\n    path: 'app/settings',\n    component: SettingsComponent,\n    canActivate: [AuthGuard],\n    data: {\n      state: 'appSettings'\n    }\n  },\n  {\n    path: '**',\n    redirectTo: ''\n  }\n];\n","import {\n  ConfigInterface,\n  ConfigsInterface,\n  GroupFolderInterface,\n  RuleInterface,\n  FolderCreation\n} from '../../interfaces';\nimport { v4 as uuid } from 'uuid';\n\nexport class ConfigBuilder {\n  static generateNewConfig(\n    configName: string,\n    firstGroupName: string,\n    sourceFolder: GroupFolderInterface,\n    destinationFolder: GroupFolderInterface,\n    createFolder: FolderCreation,\n    firstGroupRule: RuleInterface\n  ): ConfigsInterface {\n    const configHolder: ConfigsInterface = {\n      name: configName,\n      groups: [\n        {\n          id: uuid(),\n          name: firstGroupName,\n          source: sourceFolder,\n          rules: [firstGroupRule]\n        }\n      ],\n      id: uuid()\n    };\n    if (createFolder) {\n      configHolder.groups[0].createFolder = createFolder;\n    } else {\n      configHolder.groups[0].destination = destinationFolder;\n    }\n    return configHolder;\n  }\n\n  static addGroup(\n    config: ConfigsInterface,\n    newGroupName: string,\n    newGroupDestination: GroupFolderInterface,\n    newGroupSource: GroupFolderInterface,\n    firstGroupRule: RuleInterface\n  ): ConfigsInterface {\n    const localConfig: ConfigsInterface = config;\n    localConfig.groups.push({\n      id: uuid(),\n      name: newGroupName,\n      source: newGroupSource,\n      destination: newGroupDestination,\n      rules: [firstGroupRule]\n    });\n    return localConfig;\n  }\n\n  static verifyConfig(config: ConfigsInterface): boolean {\n    let valid = true;\n    // Check if config has name and groups\n    if (!config.name || !config.groups || config.name.length <= 0) {\n      valid = false;\n    }\n    config.groups.forEach(group => {\n      if (\n        !group.id ||\n        !group.source.folderID ||\n        !group.name ||\n        !group.rules ||\n        group.name.length <= 0\n      ) {\n        valid = false;\n      }\n      if (!group.createFolder) {\n        valid = group.destination.folderID ? true : false;\n      }\n      group.rules.forEach(rule => {\n        if (\n          !rule.classifier ||\n          !rule.constraint ||\n          !rule.data ||\n          !rule.id ||\n          !rule.name ||\n          rule.name.length <= 0\n        ) {\n          valid = false;\n        }\n      });\n    });\n    return valid;\n  }\n\n  static folderNameBuilder(createFolderConfig: FolderCreation): string {\n    let outputString: string = '';\n    switch (createFolderConfig.prefix.type) {\n      case 'text':\n        outputString += createFolderConfig.prefix.value;\n        break;\n      case 'date':\n        outputString += Date();\n        break;\n    }\n    switch (createFolderConfig.name.type) {\n      case 'text':\n        outputString += ` ${createFolderConfig.name.value}`;\n        break;\n      case 'date':\n        outputString += ` ${Date()}`;\n        break;\n    }\n    switch (createFolderConfig.suffix.type) {\n      case 'text':\n        outputString += ` ${createFolderConfig.suffix.value}`;\n        break;\n      case 'date':\n        outputString += ` ${Date()}`;\n        break;\n    }\n    return outputString;\n  }\n\n  static configFromGroup(groups, name: string): ConfigsInterface {\n    return {\n      id: uuid(),\n      name: name,\n      groups: groups\n    };\n  }\n}\n","/**\n * A enumerable of Google Drive file types\n *\n * @export\n * @enum {number}\n */\nexport enum DriveMimeType {\n  audio = 'application/vnd.google-apps.audio',\n  document = 'application/vnd.google-apps.document',\n  drawing = 'application/vnd.google-apps.drawing',\n  file = 'application/vnd.google-apps.file',\n  folder = 'application/vnd.google-apps.folder',\n  form = 'application/vnd.google-apps.form',\n  fustiontable = 'application/vnd.google-apps.fusiontable',\n  map = 'application/vnd.google-apps.map',\n  photo = 'application/vnd.google-apps.photo',\n  presentation = 'application/vnd.google-apps.presentation',\n  script = 'application/vnd.google-apps.script',\n  site = 'application/vnd.google-apps.site',\n  spreadsheet = 'application/vnd.google-apps.spreadsheet',\n  unknown = 'application/vnd.google-apps.unknown',\n  video = 'application/vnd.google-apps.video',\n  thirdParty = 'application/vnd.google-apps.drive-sdk'\n}\n\n/**\n * A utility class to build Google Drive query's\n *\n * @export\n * @class DriveQueryBuilder\n */\nexport class DriveQueryBuilder {\n  /**\n   * The current generated query\n   *\n   * @private\n   * @type {string}\n   * @memberof DriveQueryBuilder\n   */\n  private query: string = '';\n\n  /**\n   * Returns the current query\n   *\n   * @returns {string} The built query\n   * @memberof DriveQueryBuilder\n   */\n  get(): string {\n    return this.query;\n  }\n\n  /**\n   * Creates an instance of DriveQueryBuilder.\n   * @param {string} parentFolderID The ID of the folder to search in\n   * @param {boolean} disableTrashed Whether or not to include file in trash\n   * @memberof DriveQueryBuilder\n   */\n  constructor(parentFolderID: string, disableTrashed: boolean) {\n    if (parentFolderID) {\n      this.query += `'${parentFolderID}' in parents`;\n    }\n    if (disableTrashed) {\n      this.query += ' and trashed=false';\n    }\n  }\n\n  /**\n   * Add a file type to ignore to the query\n   *\n   * @param {DriveMimeType} mimeType The file type to ignore\n   * @memberof DriveQueryBuilder\n   */\n  excludeType(mimeType: DriveMimeType): DriveQueryBuilder {\n    this.query += ` and mimeType != '${mimeType}'`;\n    return this;\n  }\n\n  /**\n   * Add a file type to require to the query\n   *\n   * @param {DriveMimeType} mimeType The file type to require\n   * @memberof DriveQueryBuilder\n   */\n  requiresType(mimeType: DriveMimeType): DriveQueryBuilder {\n    this.query += ` and mimeType = '${mimeType}'`;\n    return this;\n  }\n\n  /**\n   * Add a name content's requirement to the query\n   *\n   * @param {string} string The string the name needs\n   * @memberof DriveQueryBuilder\n   */\n  nameContains(string: string): DriveQueryBuilder {\n    this.query += ` and name contains '${string}'`;\n    return this;\n  }\n\n  /**\n   * Add a name content's to exclude from the query\n   *\n   * @param {string} string\n   * @memberof DriveQueryBuilder\n   */\n  nameExcludes(string: string): DriveQueryBuilder {\n    this.query += ` and not name contains '${string}'`;\n    return this;\n  }\n\n  /**\n   * Adds a owner requirement to the query\n   *\n   * @param {string} email The owners email address\n   * @memberof DriveQueryBuilder\n   */\n  hasOwner(email: string): DriveQueryBuilder {\n    this.query += ` and ${email} in owners`;\n    return this;\n  }\n\n  /**\n   * Adds a owner exclusion to the query\n   *\n   * @param {string} email The owners email address to exclude\n   * @memberof DriveQueryBuilder\n   */\n  excludesOwner(email: string): DriveQueryBuilder {\n    this.query += ` and not ${email} in  owners`;\n    return this;\n  }\n\n  /**\n   * Require the file to be created after the supplied date\n   *\n   * @param {Date} date The date the file should be created after\n   * @memberof DriveQueryBuilder\n   */\n  createdAfter(date: Date): DriveQueryBuilder {\n    this.query += ` and createdTime >= '${date.toISOString().split('.')[0]}'`;\n    return this;\n  }\n\n  /**\n   * Require the file to be created before the supplied date\n   *\n   * @param {Date} date The date the file should be created before\n   * @memberof DriveQueryBuilder\n   */\n  createdBefore(date: Date): DriveQueryBuilder {\n    this.query += ` and createdTime <= '${date.toISOString().split('.')[0]}'`;\n    return this;\n  }\n\n  /**\n   * Require the file to be modified after the supplied date\n   *\n   * @param {Date} date The date the file should be modified after\n   * @memberof DriveQueryBuilder\n   */\n  modifiedAfter(date: Date): DriveQueryBuilder {\n    this.query += ` and modifiedTime >= '${date.toISOString().split('.')[0]}'`;\n    return this;\n  }\n\n  /**\n   * Require the file to be modified before the supplied date\n   *\n   * @param {Date} date The date the file should be modified before\n   * @memberof DriveQueryBuilder\n   */\n  modifiedBefore(date: Date): DriveQueryBuilder {\n    this.query += ` and modifiedTime <= '${date.toISOString().split('.')[0]}'`;\n    return this;\n  }\n\n  /**\n   * Require the file to be opened after the supplied date\n   *\n   * @param {Date} date The date the file beeds to be opened after\n   * @memberof DriveQueryBuilder\n   */\n  openedAfter(date: Date): DriveQueryBuilder {\n    this.query += ` and viewedByMeTime >= '${\n      date.toISOString().split('.')[0]\n    }'`;\n    return this;\n  }\n\n  /**\n   * Require the file to be opened before the supplied date\n   *\n   * @param {Date} date The date the file beeds to be opened before\n   * @memberof DriveQueryBuilder\n   */\n  openedBefore(date: Date): DriveQueryBuilder {\n    this.query += ` and viewedByMeTime <= '${\n      date.toISOString().split('.')[0]\n    }'`;\n    return this;\n  }\n}\n","module.exports = \"<div parallax>\\n  <div class=\\\"parallax-overlay\\\">\\n    <h1>G-Drive Sorter</h1>\\n    <h3>An organized Google Drive™ has never been easier</h3>\\n    <button (click)=\\\"login()\\\" mat-raised-button color=\\\"accent\\\">Get Organized</button>\\n  </div>\\n</div>\\n<div class=\\\"container\\\">\\n  <div class=\\\"usage-points row\\\">\\n    <div class=\\\"col-4 col-12-sm\\\">\\n      <h1 class=\\\"center\\\"><i class=\\\"teal-text large material-icons\\\">view_list</i></h1>\\n      <h2 class=\\\"center\\\"><b>Effectively Sort Files</b></h2>\\n      <p>Sorting your drive only requires a quick visit to this website. And we do the rest of the work for you!</p>\\n    </div>\\n    <div class=\\\"col-4 col-12-sm\\\">\\n      <h1 class=\\\"center\\\"><i class=\\\"teal-text large material-icons\\\">accessibility</i></h1>\\n      <h2 class=\\\"center\\\"><b>Simplistic Use</b></h2>\\n      <p>Preset configurations and a simplistic user interface makes the G-Drive sorter suitable for all Google Drive users.</p>\\n    </div>\\n    <div class=\\\"col-4 col-12-sm\\\">\\n      <h1 class=\\\"center\\\"><i class=\\\"teal-text large material-icons\\\">art_track</i></h1>\\n      <h2 class=\\\"center\\\"><b>Fully Customizable</b></h2>\\n      <p>Fully customizable configurations that sorts all Google Drive files based on type, creation date, name, current owner, and much more.</p>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"*[parallax] {\\n  width: 100%;\\n  height: 400px;\\n  background-image: url('messy_files.jpg');\\n  background-size: 100%; }\\n\\n.usage-points h1 i {\\n  font-size: 80px; }\\n\\n.container {\\n  width: 96%;\\n  max-width: unset; }\\n\\n.usage-points p {\\n  font-size: 1.5rem; }\\n\\n.parallax-overlay {\\n  text-align: center;\\n  padding-top: 90px; }\\n\\n.parallax-overlay > * {\\n  color: white; }\\n\\n@media all and (max-width: 650px) {\\n  *[parallax] {\\n    background-size: cover; } }\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { GoogleService } from '../../../services/google/google.service';\n\n/**\n * Declare the component to be shown when the user isn't authenticated.\n *\n * @export\n * @class UnauthenticatedComponent\n */\n@Component({\n  selector: 'app-unauthenticated',\n  templateUrl: './unauthenticated.component.html',\n  styleUrls: ['./unauthenticated.component.scss']\n})\nexport class UnauthenticatedComponent {\n  /**\n   * Creates an instance of UnauthenticatedComponent.\n   * @param {GoogleService} google Declare the Google Service as google.\n   * @memberof UnauthenticatedComponent\n   */\n  constructor(public google: GoogleService) {}\n\n  /**\n   * Method to log the user in.\n   *\n   * @memberof UnauthenticatedComponent\n   */\n  login() {\n    this.google.signIn();\n  }\n}\n","module.exports = \"<div>\\n  <h3 mat-dialog-title *ngIf=\\\"!isPage\\\">Create New Config</h3>\\n  <h3 *ngIf=\\\"isPage\\\">Create New Config</h3>\\n  <div mat-dialog-content [class.overflow-limit]=\\\"!isPage\\\">\\n    <form [formGroup]=\\\"newConfig\\\">\\n      <mat-accordion>\\n        <mat-expansion-panel [expanded]=\\\"step === 0\\\" (opened)=\\\"setStep(0)\\\">\\n          <mat-expansion-panel-header>\\n            <mat-panel-title>\\n              Config Name\\n            </mat-panel-title>\\n            <mat-panel-description *ngIf=\\\"!isPage\\\">\\n              The name of the new configuration.\\n            </mat-panel-description>\\n          </mat-expansion-panel-header>\\n          <ng-template matExpansionPanelContent>\\n            <mat-form-field class=\\\"full-width\\\" [floatLabel]=\\\"newConfig.value.floatLabel\\\">\\n              <mat-label>Name</mat-label>\\n              <input matInput formControlName=\\\"newConfigNameControl\\\" required>\\n              <mat-error>Please a config name!</mat-error>\\n            </mat-form-field>\\n            <mat-action-row>\\n              <button mat-button color=\\\"primary\\\" (click)=\\\"nextStep()\\\">Next</button>\\n            </mat-action-row>\\n          </ng-template>\\n        </mat-expansion-panel>\\n        <mat-expansion-panel [expanded]=\\\"step === 1\\\" [disabled]=\\\"!checkValidation(0)\\\" (opened)=\\\"setStep(1)\\\">\\n          <mat-expansion-panel-header>\\n            <mat-panel-title>\\n              Group Name\\n            </mat-panel-title>\\n            <mat-panel-description *ngIf=\\\"!isPage\\\">\\n              The new configuration's inital group name.\\n            </mat-panel-description>\\n          </mat-expansion-panel-header>\\n          <ng-template matExpansionPanelContent>\\n            <mat-form-field class=\\\"full-width\\\" [floatLabel]=\\\"newConfig.value.floatLabel\\\">\\n              <mat-label>Group Name</mat-label>\\n              <input matInput formControlName=\\\"newGroupNameControl\\\" required>\\n              <mat-error>Please enter a inital group name!</mat-error>\\n            </mat-form-field>\\n            <mat-action-row>\\n              <button mat-button color=\\\"warn\\\" (click)=\\\"prevStep()\\\">Previous</button>\\n              <button mat-button color=\\\"primary\\\" (click)=\\\"nextStep()\\\">Next</button>\\n            </mat-action-row>\\n          </ng-template>\\n        </mat-expansion-panel>\\n        <mat-expansion-panel [disabled]=\\\"!checkValidation(1)\\\" [expanded]=\\\"step === 2\\\" (opened)=\\\"setStep(2)\\\">\\n          <mat-expansion-panel-header>\\n            <mat-panel-title>\\n              Group Locations\\n            </mat-panel-title>\\n            <mat-panel-description *ngIf=\\\"!isPage\\\">\\n              Where all files matching group rules will go.\\n            </mat-panel-description>\\n          </mat-expansion-panel-header>\\n          <ng-template matExpansionPanelContent class=\\\"overflow-limit\\\">\\n            <div class=\\\"full-width\\\">\\n              <mat-form-field style=\\\"width: 70%;\\\">\\n                <input matInput type=\\\"text\\\" placeholder=\\\"From\\\" [value]=\\\"source.name\\\" disabled required/>\\n                <button mat-button matSuffix mat-icon-button aria-label=\\\"Pick From Folder\\\" [disabled]=\\\"folderButtonSourceDisabled\\\" (click)=\\\"openFolderPicker('source')\\\">\\n                  <mat-icon>folder</mat-icon>\\n                </button>\\n              </mat-form-field>\\n              <mat-slide-toggle (change)=\\\"rootToggleChange($event, 'source')\\\">My Drive</mat-slide-toggle>\\n            </div>\\n            <div>\\n              <mat-slide-toggle (change)=\\\"createToggleChange($event)\\\">Create Folder</mat-slide-toggle>\\n              <app-folder-creation [class.hidden]=\\\"!creatingFolder\\\"></app-folder-creation>\\n              <div class=\\\"full-width\\\" [class.hidden]=\\\"creatingFolder\\\">\\n                <div class=\\\"full-width\\\">\\n                  <mat-form-field style=\\\"width: 70%;\\\">\\n                    <input matInput type=\\\"text\\\" placeholder=\\\"To\\\" [value]=\\\"destination.name\\\" disabled required/>\\n                    <button mat-button matSuffix mat-icon-button aria-label=\\\"Pick To Folder\\\" [disabled]=\\\"folderButtonDestinationDisabled\\\" (click)=\\\"openFolderPicker('destination')\\\">\\n                      <mat-icon>folder</mat-icon>\\n                    </button>\\n                  </mat-form-field>\\n                  <mat-slide-toggle (change)=\\\"rootToggleChange($event, 'destination')\\\">My Drive</mat-slide-toggle>\\n                </div>\\n              </div>\\n            </div>\\n          </ng-template>\\n          <mat-action-row>\\n            <button mat-button color=\\\"warn\\\" (click)=\\\"prevStep()\\\">Previous</button>\\n            <button mat-button color=\\\"primary\\\" (click)=\\\"nextStep()\\\">Next</button>\\n          </mat-action-row>\\n        </mat-expansion-panel>\\n        <mat-expansion-panel [class.overflow-limit]=\\\"!isPage\\\" [disabled]=\\\"!checkValidation(2)\\\" [expanded]=\\\"step === 3\\\" (opened)=\\\"setStep(3)\\\">\\n          <mat-expansion-panel-header>\\n            <mat-panel-title>\\n              First Rule\\n            </mat-panel-title>\\n            <mat-panel-description *ngIf=\\\"!isPage\\\">\\n              The new configuration's inital group's first rule.\\n            </mat-panel-description>\\n          </mat-expansion-panel-header>\\n          <ng-template matExpansionPanelContent>\\n            <app-new-rule-stepper (valueChange)=\\\"stepperFinished($event)\\\"></app-new-rule-stepper>\\n            <mat-action-row>\\n              <button mat-button color=\\\"warn\\\" (click)=\\\"prevStep()\\\">Previous</button>\\n            </mat-action-row>\\n          </ng-template>\\n        </mat-expansion-panel>\\n      </mat-accordion>\\n    </form>\\n    <br>\\n    <div mat-dialog-actions>\\n      <button mat-button (click)=\\\"create()\\\" [disabled]=\\\"!finished\\\">Create</button>\\n      <button mat-button (click)=\\\"close()\\\">Cancel</button>\\n    </div>\\n  </div>\"","module.exports = \".overflow-limit {\\n  max-height: 60vh;\\n  overflow-y: auto; }\\n\\n.full-width {\\n  width: 100%; }\\n\\n.hidden {\\n  display: none; }\\n\"","import { AngularFireAuth } from 'angularfire2/auth';\nimport { AngularFirestore } from 'angularfire2/firestore';\nimport { Component, NgZone, OnInit, ViewChild } from '@angular/core';\nimport { ConfigBuilder } from '../../../classes/config-builder';\nimport { DatabaseService } from '../../../services/firebase/database.service';\nimport { FolderCreationComponent } from '../folder-creation/folder-creation.component';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { GoogleService } from '../../../services/google/google.service';\nimport { GroupFolderInterface } from '../../../../interfaces';\nimport {\n  MatDialogRef,\n  MatSlideToggleChange,\n  MatSnackBar\n} from '@angular/material';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-config-modal',\n  templateUrl: './config-modal.component.html',\n  styleUrls: ['./config-modal.component.scss']\n})\nexport class ConfigModalComponent implements OnInit {\n  @ViewChild(FolderCreationComponent)\n  private folderComponent: FolderCreationComponent;\n  private rule: any;\n  private folderType: string;\n  private _closeCommand = new Subject<Boolean>();\n\n  public isPage = false;\n  public step: number = -1;\n  public newConfig: FormGroup;\n  public finished: boolean = false;\n  public source: GroupFolderInterface = {\n    folderID: undefined,\n    name: null\n  };\n  public destination: GroupFolderInterface = {\n    folderID: undefined,\n    name: null\n  };\n  public creatingFolder: boolean = false;\n  public folderButtonSourceDisabled: boolean = false;\n  public closeCommand = this._closeCommand.asObservable();\n  public folderButtonDestinationDisabled: boolean = false;\n\n  constructor(\n    public zone: NgZone,\n    public router: Router,\n    private snackbar: MatSnackBar,\n    private google: GoogleService,\n    public formBuilder: FormBuilder,\n    private database: DatabaseService,\n    private firebase: AngularFirestore,\n    private firebaseAuth: AngularFireAuth\n  ) {}\n\n  ngOnInit() {\n    this.newConfig = this.formBuilder.group({\n      floatLabel: 'auto',\n      newConfigNameControl: ['', Validators.required],\n      newGroupNameControl: ['', Validators.required]\n    });\n  }\n\n  private checkAllValidation(): boolean {\n    let anyInvalid = false;\n    for (let i = 0; i < 2; i++) {\n      if (!this.checkValidation(i)) {\n        anyInvalid = true;\n      }\n    }\n    return !anyInvalid;\n  }\n\n  checkValidation(stepNumber: number): boolean {\n    switch (stepNumber) {\n      case 0:\n        return this.newConfig.get('newConfigNameControl').valid;\n      case 1:\n        return this.newConfig.get('newGroupNameControl').valid;\n      case 2:\n        if (this.creatingFolder) {\n          if (this.folderComponent.value) {\n            if (this.source.folderID === undefined) {\n              return false;\n            } else {\n              return true;\n            }\n          } else {\n            return false;\n          }\n        } else {\n          if (\n            this.source.folderID === undefined ||\n            this.destination.folderID === undefined\n          ) {\n            return false;\n          } else {\n            return true;\n          }\n        }\n      case 3:\n        return this.rule === undefined ? false : true;\n      default:\n        return false;\n    }\n  }\n\n  setStep(index: number) {\n    this.step = index;\n  }\n\n  openFolderPicker(folderType: string) {\n    let folderPickedListener = this.google.folderPicked$.subscribe(\n      pickedFolder => {\n        if (folderType === 'destination') {\n          this.destination = {\n            name: pickedFolder.name,\n            folderID: pickedFolder.id\n          };\n        } else if (folderType === 'source') {\n          this.source = {\n            name: pickedFolder.name,\n            folderID: pickedFolder.id\n          };\n        }\n        folderPickedListener.unsubscribe();\n      },\n      err => {\n        folderPickedListener.unsubscribe();\n      }\n    );\n    this.google.openFilePicker();\n  }\n\n  nextStep() {\n    if (this.checkValidation(this.step)) {\n      this.step++;\n    } else {\n      this.snackbar.open('Please complete all fields!', 'OK', {\n        duration: 3000\n      });\n    }\n  }\n\n  prevStep() {\n    this.step--;\n  }\n\n  stepperFinished(rule) {\n    this.rule = rule;\n    this.setStep(-1);\n    this.finished = this.checkAllValidation();\n  }\n\n  rootToggleChange(event: MatSlideToggleChange, folderType: string) {\n    if (event.checked) {\n      if (folderType === 'source') {\n        this.folderButtonSourceDisabled = true;\n      } else if (folderType === 'destination') {\n        this.folderButtonDestinationDisabled = true;\n      }\n      this[folderType].folderID = 'root';\n      this[folderType].name = 'My Drive';\n    } else {\n      if (folderType === 'source') {\n        this.folderButtonSourceDisabled = false;\n      } else if (folderType === 'destination') {\n        this.folderButtonDestinationDisabled = false;\n      }\n      this[folderType].folderID = undefined;\n      this[folderType].name = '';\n    }\n  }\n\n  createToggleChange(event: MatSlideToggleChange) {\n    if (event.checked) {\n      this.creatingFolder = true;\n    } else {\n      this.creatingFolder = false;\n      this.folderComponent.reset();\n    }\n  }\n\n  create() {\n    if (this.checkAllValidation()) {\n      this.database.createConfig(\n        this.newConfig.get('newConfigNameControl').value,\n        this.newConfig.get('newGroupNameControl').value,\n        this.source,\n        this.destination,\n        this.folderComponent.value,\n        this.rule\n      );\n      this._closeCommand.next(true);\n    } else {\n      this.finished = false;\n    }\n  }\n\n  close() {\n    this._closeCommand.next(true);\n  }\n}\n","module.exports = \"<div *ngIf=\\\"configLoaded | async; else loadingConfig\\\">\\n  <h3 mat-dialog-title *ngIf=\\\"!isPage\\\">Editing Config - {{ config.name | unNamed }}</h3>\\n  <h3 *ngIf=\\\"isPage\\\">Editing Config - {{ config.name | unNamed }}</h3>\\n  <div mat-dialog-content>\\n    <mat-form-field class=\\\"full-width\\\">\\n      <input matInput placeholder=\\\"Config Name\\\" [(ngModel)]=\\\"config.name\\\" required>\\n    </mat-form-field>\\n    <h4>\\n      Group's\\n      <button mat-icon-button class=\\\"right\\\" color=\\\"primary\\\" matTooltip=\\\"Add Group\\\" (click)=\\\"addGroup()\\\">\\n        <mat-icon aria-label=\\\"Add Group\\\">add</mat-icon>\\n      </button>\\n    </h4>\\n    <div style=\\\"padding: 10px 16px;\\\" class=\\\"overflow-limit\\\">\\n        <mat-expansion-panel  *ngFor=\\\"let group of config.groups\\\">\\n          <mat-expansion-panel-header>\\n            <mat-panel-title>\\n              {{ group.name | unNamed }}\\n            </mat-panel-title>\\n          </mat-expansion-panel-header>\\n          <ng-template matExpansionPanelContent class=\\\"overflow-limit\\\">\\n            <mat-form-field class=\\\"full-width\\\">\\n                <input matInput placeholder=\\\"Group Name\\\" [(ngModel)]=\\\"group.name\\\" required>\\n            </mat-form-field>\\n            <div class=\\\"full-width\\\">\\n              <mat-form-field style=\\\"width: 70%;\\\">\\n                <input matInput type=\\\"text\\\" placeholder=\\\"From\\\" [value]=\\\"group.source.name\\\" disabled required/>\\n                <button mat-button matSuffix mat-icon-button aria-label=\\\"Pick From Folder\\\" [disabled]=\\\"group.source.folderID === 'root'\\\" (click)=\\\"openFolderPicker(group.id ,'source')\\\">\\n                  <mat-icon>folder</mat-icon>\\n                </button>\\n              </mat-form-field>\\n              <mat-slide-toggle (change)=\\\"rootToggleChange($event, 'source', group.id)\\\" [checked]=\\\"group.source.folderID === 'root'\\\">My Drive</mat-slide-toggle>\\n            </div>\\n            <div>\\n              <mat-slide-toggle (change)=\\\"createFolderToggleChange(group.id, $event)\\\" [checked]=\\\"group.createFolder\\\">Create Folder</mat-slide-toggle>\\n              <app-folder-creation *ngIf=\\\"group.createFolder\\\" [inputFolder]=\\\"group.createFolder\\\" (valueChange)=\\\"createFolderChange(group.id, $event)\\\"></app-folder-creation>\\n              <div class=\\\"full-width\\\" *ngIf=\\\"!group.createFolder\\\">\\n                <div class=\\\"full-width\\\">\\n                  <mat-form-field style=\\\"width: 70%;\\\">\\n                    <input matInput type=\\\"text\\\" placeholder=\\\"To\\\" [value]=\\\"group.destination.name\\\" disabled required/>\\n                    <button mat-button matSuffix mat-icon-button aria-label=\\\"Pick To Folder\\\" [disabled]=\\\"group.destination.folderID === 'root'\\\" (click)=\\\"openFolderPicker(group.id, 'destination')\\\">\\n                      <mat-icon>folder</mat-icon>\\n                    </button>\\n                  </mat-form-field>\\n                  <mat-slide-toggle (change)=\\\"rootToggleChange($event, 'destination', group.id)\\\" [checked]=\\\"group.destination.folderID === 'root'\\\">My Drive</mat-slide-toggle>\\n                </div>\\n              </div>\\n            </div>\\n            <h5>\\n              Rule's\\n              <button mat-icon-button class=\\\"right\\\" color=\\\"accent\\\" matTooltip=\\\"Add Rule\\\" (click)=\\\"addRule(group.id)\\\">\\n                <mat-icon aria-label=\\\"Add Rule\\\">add</mat-icon>\\n              </button>\\n            </h5>\\n            <mat-expansion-panel [expanded]=\\\"editingRuleID === rule.id\\\" (opened)=\\\"editingRuleID = rule.id\\\" *ngFor=\\\"let rule of group.rules\\\">\\n              <mat-expansion-panel-header>\\n                <mat-panel-title>\\n                  {{ rule.name | unNamed }}\\n                </mat-panel-title>\\n              </mat-expansion-panel-header>\\n              <ng-template matExpansionPanelContent>\\n                <app-new-rule-stepper (valueChange)=\\\"ruleChanged($event, rule.id, group.id)\\\" [reset]=\\\"true\\\" [inputRule]=\\\"rule\\\"></app-new-rule-stepper>\\n                <mat-action-row>\\n                  <button mat-button color=\\\"warn\\\" (click)=\\\"removeRule(group.id, rule.id)\\\" [disabled]=\\\"group.rules.length < 2\\\">Remove Rule</button>\\n                </mat-action-row>\\n              </ng-template>\\n            </mat-expansion-panel>\\n            <mat-action-row>\\n              <button mat-button color=\\\"warn\\\" (click)=\\\"removeGroup(group.id)\\\" [disabled]=\\\"config.groups.length < 2\\\">Remove Group</button>\\n            </mat-action-row>\\n          </ng-template>\\n        </mat-expansion-panel>\\n    </div>\\n  </div>\\n  <div mat-dialog-actions>\\n    <button mat-button [disabled]=\\\"!valid\\\" (click)=\\\"done()\\\">Done</button>\\n    <button mat-button (click)=\\\"close()\\\">Cancel</button>\\n  </div>\\n</div>\\n<ng-template #loadingConfig>\\n  <mat-progress-bar mode=\\\"indeterminate\\\"></mat-progress-bar>\\n</ng-template>\"","module.exports = \".full-width {\\n  width: 100%; }\\n\\n.right {\\n  float: right; }\\n\\n.overflow-limit {\\n  max-height: 40vh;\\n  overflow-y: auto; }\\n\\n.hidden {\\n  display: none; }\\n\"","import { Component, Input, NgZone, OnInit } from '@angular/core';\nimport { ConfigBuilder } from '../../../classes/config-builder';\nimport { ConfigListComponent } from '../../tabs/config/config-list/config-list.component';\nimport {\n  ConfigsInterface,\n  GroupInterface,\n  RuleInterface,\n  FolderCreation\n} from '../../../../interfaces';\nimport { DatabaseService } from '../../../services/firebase/database.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { GoogleService } from '../../../services/google/google.service';\nimport {\n  MatExpansionPanel,\n  MatSlideToggleChange,\n  MatSnackBar\n} from '@angular/material';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { v4 as uuid } from 'uuid';\n\n@Component({\n  selector: 'app-edit-config-modal',\n  templateUrl: './edit-config-modal.component.html',\n  styleUrls: ['./edit-config-modal.component.scss']\n})\nexport class EditConfigModalComponent implements OnInit {\n  private _closeCommand = new Subject<Boolean>();\n  private groups: Array<GroupInterface>;\n\n  public valid: boolean = true;\n  public editingRuleID: string;\n  public config: ConfigsInterface;\n  public configLoaded: Promise<boolean>;\n  public closeCommand = this._closeCommand.asObservable();\n\n  constructor(\n    public zone: NgZone,\n    public router: Router,\n    public google: GoogleService,\n    public snackBar: MatSnackBar,\n    public formBuilder: FormBuilder,\n    public database: DatabaseService\n  ) {}\n\n  private getGroupIndex(groupID: string): number {\n    return this.config.groups.findIndex(group => {\n      return group.id === groupID;\n    });\n  }\n\n  private getRuleIndex(groupID: string, ruleID: string) {\n    return this.config.groups[this.getGroupIndex(groupID)].rules.findIndex(\n      rule => {\n        return rule.id === ruleID;\n      }\n    );\n  }\n\n  private verifyValidation(): boolean {\n    return ConfigBuilder.verifyConfig(this.config);\n  }\n\n  ngOnInit() {\n    if (this.database.editingConfig) {\n      this.database.getConfig(this.database.editingConfig, data => {\n        this.config = data;\n        this.configLoaded = Promise.resolve(true);\n      });\n    }\n  }\n\n  openFolderPicker(groupID: string, folderType: string) {\n    let folderPickedListener = this.google.folderPicked$.subscribe(\n      folder => {\n        if (folderType === 'source') {\n          this.config.groups[this.getGroupIndex(groupID)].source = {\n            name: folder.name,\n            folderID: folder.id\n          };\n        } else {\n          this.config.groups[this.getGroupIndex(groupID)].destination = {\n            name: folder.name,\n            folderID: folder.id\n          };\n        }\n        folderPickedListener.unsubscribe();\n      },\n      cancelled => {\n        if (cancelled) {\n          folderPickedListener.unsubscribe();\n        }\n      }\n    );\n    this.google.openFilePicker();\n  }\n\n  addGroup() {\n    let newConfigUUID = uuid();\n    this.config.groups.push({\n      id: newConfigUUID,\n      destination: {\n        name: ''\n      },\n      source: {\n        name: ''\n      },\n      name: '',\n      rules: []\n    });\n    this.addRule(newConfigUUID);\n    this.valid = false;\n  }\n\n  addRule(groupID: string) {\n    let newRuleUUID = uuid();\n    this.config.groups[this.getGroupIndex(groupID)].rules.push({\n      id: newRuleUUID,\n      name: ''\n    });\n    this.editingRuleID = newRuleUUID;\n    this.valid = false;\n  }\n\n  ruleChanged(newRule: RuleInterface, ruleID: string, groupID: string) {\n    this.config.groups[this.getGroupIndex(groupID)].rules[\n      this.getRuleIndex(groupID, ruleID)\n    ] = newRule;\n    this.editingRuleID = '';\n    this.valid = this.verifyValidation();\n  }\n\n  done() {\n    if (this.verifyValidation()) {\n      this.database.updateConfig(this.config);\n      this.close();\n    } else {\n      this.snackBar.open('Complete your edits!', 'OK', {\n        duration: 5000\n      });\n    }\n  }\n\n  removeGroup(groupID: string) {\n    this.config.groups.splice(this.getGroupIndex(groupID), 1);\n    this.valid = this.verifyValidation();\n  }\n\n  removeRule(groupID: string, ruleID: string) {\n    this.config.groups[this.getGroupIndex(groupID)].rules.splice(\n      this.getRuleIndex(groupID, ruleID),\n      1\n    );\n    this.valid = this.verifyValidation();\n  }\n\n  rootToggleChange(\n    event: MatSlideToggleChange,\n    folderType: string,\n    groupID: string\n  ) {\n    const groupIndex = this.getGroupIndex(groupID);\n    if (event.checked) {\n      this.config.groups[groupIndex][folderType] = {\n        folderID: 'root',\n        name: 'My Drive'\n      };\n    } else {\n      this.config.groups[groupIndex][folderType] = {\n        folderID: undefined,\n        name: null\n      };\n    }\n  }\n\n  createFolderToggleChange(groupID: string, event: MatSlideToggleChange) {\n    const groupIndex = this.getGroupIndex(groupID);\n    if (event.checked) {\n      delete this.config.groups[groupIndex].destination;\n      this.config.groups[groupIndex].createFolder = {\n        parent: {\n          folderID: undefined,\n          name: null\n        },\n        prefix: {\n          type: null,\n          value: ''\n        },\n        name: {\n          type: null,\n          value: ''\n        },\n        suffix: {\n          type: null,\n          value: ''\n        }\n      };\n    } else {\n      delete this.config.groups[groupIndex].createFolder;\n      this.config.groups[groupIndex].destination = {\n        folderID: undefined,\n        name: null\n      };\n    }\n  }\n\n  createFolderChange(groupID: string, event: FolderCreation) {\n    const groupIndex = this.getGroupIndex(groupID);\n    this.config.groups[groupIndex].createFolder = event;\n  }\n\n  close() {\n    this._closeCommand.next(true);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { EditConfigModalComponent } from '../edit-config-modal/edit-config-modal.component';\n\n@Component({\n  selector: 'app-edit-config-page',\n  templateUrl: '../edit-config-modal/edit-config-modal.component.html',\n  styleUrls: ['../edit-config-modal/edit-config-modal.component.scss']\n})\nexport class EditConfigPageComponent extends EditConfigModalComponent {\n  isPage = true;\n\n  close() {\n    this.zone.run(() => {\n      this.router.navigateByUrl('/app/config');\n    });\n  }\n}\n","module.exports = \"<mat-expansion-panel [expanded]=\\\"!finished\\\" (opened)=\\\"finished = false\\\">\\n  <mat-expansion-panel-header>\\n    <mat-panel-title>\\n      Folder Creation\\n    </mat-panel-title>\\n  </mat-expansion-panel-header>\\n  <div class=\\\"full-width overflow-limit\\\" [class.hidden]=\\\"!creatingFolder\\\">\\n    <div class=\\\"full-width\\\">\\n      <mat-form-field style=\\\"width: 70%;\\\">\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Parent\\\" [value]=\\\"createFolder.parent.name\\\" disabled required/>\\n        <button mat-button matSuffix mat-icon-button aria-label=\\\"Pick Parent Folder\\\" [disabled]=\\\"createFolder.parent.folderID === 'root' || parentFolderIsRoot\\\" (click)=\\\"openFolderPicker()\\\">\\n          <mat-icon>folder</mat-icon>\\n        </button>\\n      </mat-form-field>\\n      <mat-slide-toggle (change)=\\\"rootToggleChange($event)\\\" [checked]=\\\"createFolder.parent.folderID === 'root' || parentFolderIsRoot\\\">My Drive</mat-slide-toggle>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <mat-form-field class=\\\"col-3 col-12-sm\\\">\\n        <mat-select placeholder=\\\"Prefix\\\" [(ngModel)]=\\\"createFolder.prefix.type\\\">\\n          <mat-option *ngFor=\\\"let option of namingOptions\\\" [value]=\\\"option.value\\\">{{ option.name }}</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"col-3 col-12-sm\\\">\\n        <mat-select placeholder=\\\"Name\\\" [(ngModel)]=\\\"createFolder.name.type\\\">\\n          <mat-option *ngFor=\\\"let option of namingOptions\\\" [value]=\\\"option.value\\\">{{ option.name }}</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"col-3 col-12-sm\\\">\\n        <mat-select placeholder=\\\"Suffix\\\" [(ngModel)]=\\\"createFolder.suffix.type\\\">\\n          <mat-option *ngFor=\\\"let option of namingOptions\\\" [value]=\\\"option.value\\\">{{ option.name }}</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <mat-form-field class=\\\"col-3 col-12-sm\\\">\\n        <input matInput placeholder=\\\"Prefix Text\\\" [(ngModel)]=\\\"createFolder.prefix.value\\\" [disabled]=\\\"createFolder.prefix.type !== 'text'\\\">\\n      </mat-form-field>\\n      <mat-form-field class=\\\"col-3 col-12-sm\\\">\\n        <input matInput placeholder=\\\"Name Text\\\" [(ngModel)]=\\\"createFolder.name.value\\\" [disabled]=\\\"createFolder.name.type !== 'text'\\\">\\n      </mat-form-field>\\n      <mat-form-field class=\\\"col-3 col-12-sm\\\">\\n        <input matInput placeholder=\\\"Suffix Text\\\" [(ngModel)]=\\\"createFolder.suffix.value\\\" [disabled]=\\\"createFolder.suffix.type !== 'text'\\\">\\n      </mat-form-field>\\n    </div>\\n  </div>\\n  <mat-action-row>\\n    <button mat-button color=\\\"primary\\\" (click)=\\\"done()\\\">Done</button>\\n  </mat-action-row>\\n</mat-expansion-panel>\"","module.exports = \"\"","import {\n  AfterViewInit,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output\n  } from '@angular/core';\nimport { FolderCreation } from '../../../../interfaces';\nimport { GoogleService } from '../../../services/google/google.service';\nimport { MatSlideToggleChange, MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-folder-creation',\n  templateUrl: './folder-creation.component.html',\n  styleUrls: ['./folder-creation.component.scss']\n})\nexport class FolderCreationComponent implements AfterViewInit {\n  @Input() inputFolder: FolderCreation;\n\n  @Output() valueChange = new EventEmitter();\n\n  private valueAttributes = ['prefix', 'name', 'suffix'];\n\n  public namingOptions = [\n    {\n      name: 'Text',\n      value: 'text'\n    },\n    {\n      name: 'Sorting Date',\n      value: 'date'\n    },\n    {\n      name: 'None',\n      value: 'none'\n    }\n  ];\n  public createFolder: FolderCreation = {\n    parent: {\n      folderID: undefined,\n      name: null\n    },\n    prefix: {\n      type: null,\n      value: ''\n    },\n    name: {\n      type: null,\n      value: ''\n    },\n    suffix: {\n      type: null,\n      value: ''\n    }\n  };\n  public parentFolderIsRoot: boolean = false;\n\n  public finished: boolean = false;\n\n  public get value(): FolderCreation {\n    if (this.validate()) {\n      return this.createFolder;\n    } else {\n      return null;\n    }\n  }\n\n  constructor(\n    private google: GoogleService // private snackbar: MatSnackBar\n  ) {}\n\n  ngAfterViewInit() {\n    if (this.inputFolder) {\n      setTimeout(_ => {\n        this.createFolder = this.inputFolder;\n      });\n    }\n  }\n\n  openFolderPicker() {\n    let folderPickedListener = this.google.folderPicked$.subscribe(\n      pickedFolder => {\n        this.createFolder.parent = {\n          folderID: pickedFolder.id,\n          name: pickedFolder.name\n        };\n        folderPickedListener.unsubscribe();\n      },\n      err => {\n        console.error(err);\n        folderPickedListener.unsubscribe();\n      }\n    );\n    this.google.openFilePicker();\n  }\n\n  rootToggleChange(event: MatSlideToggleChange) {\n    if (event.checked) {\n      this.parentFolderIsRoot = true;\n      this.createFolder.parent = {\n        folderID: 'root',\n        name: 'My Drive'\n      };\n    } else {\n      this.parentFolderIsRoot = false;\n      this.createFolder.parent = {\n        folderID: undefined,\n        name: null\n      };\n    }\n  }\n\n  validate(): boolean {\n    const folder = this.createFolder;\n    if (folder) {\n      if (folder.parent.folderID !== undefined) {\n        let anyInvalid = false;\n        let numNone = 0;\n        this.valueAttributes.forEach(attribute => {\n          if (folder[attribute].type === 'none') {\n            numNone += 1;\n          }\n          if (folder[attribute].type === 'text') {\n            if (folder[attribute].value.length <= 0) {\n              anyInvalid = true;\n            }\n          }\n          if (folder[attribute].type === null) {\n            anyInvalid = true;\n          }\n        });\n        if (numNone === 3) {\n          // this.snackbar.open('All naming options can\\'t be \\'None\\'!');\n          anyInvalid = true;\n        }\n        return !anyInvalid;\n      }\n    }\n    return false;\n  }\n\n  done() {\n    if (this.validate()) {\n      this.valueChange.emit(this.createFolder);\n      this.finished = true;\n    }\n  }\n\n  reset() {\n    this.createFolder = {\n      parent: {\n        folderID: undefined,\n        name: null\n      },\n      prefix: {\n        type: null,\n        value: ''\n      },\n      name: {\n        type: null,\n        value: ''\n      },\n      suffix: {\n        type: null,\n        value: ''\n      }\n    };\n    this.parentFolderIsRoot = false;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ConfigModalComponent } from '../config-modal/config-modal.component';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NewRuleStepperComponent } from '../new-rule-stepper/new-rule-stepper.component';\n\n@Component({\n  selector: 'app-new-rule-page',\n  templateUrl: '../config-modal/config-modal.component.html',\n  styleUrls: ['../config-modal/config-modal.component.scss']\n})\nexport class NewConfigPageComponent extends ConfigModalComponent { \n  isPage = true;\n\n  close() {\n    this.zone.run(() => {\n      this.router.navigateByUrl('/app/config');\n    });\n  }\n}\n","module.exports = \"<mat-vertical-stepper (selectionChange)=\\\"stepChanged($event)\\\" linear #stepper>\\n  <mat-step label=\\\"Name\\\" [stepControl]=\\\"nameFormGroup\\\">\\n    <form [formGroup]=\\\"nameFormGroup\\\">\\n      <mat-form-field>\\n          <input matInput placeholder=\\\"Rule Name\\\" formControlName=\\\"ruleName\\\" required>\\n      </mat-form-field>\\n      <div>\\n        <button mat-button type=\\\"button\\\" matStepperNext>Next</button>\\n      </div>\\n    </form>\\n  </mat-step>\\n  <mat-step label=\\\"Trait\\\" [stepControl]=\\\"classifierFormGroup\\\">\\n    <form [formGroup]=\\\"classifierFormGroup\\\">\\n      <mat-form-field>\\n        <mat-select placeholder=\\\"Trait\\\" formControlName=\\\"classifierControl\\\" [(value)]=\\\"classifierSelectOption\\\">\\n          <mat-option *ngFor=\\\"let classifier of classifiers\\\" [value]=\\\"classifier.value\\\">\\n            {{ classifier.label }}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n      <div>\\n        <button mat-button type=\\\"button\\\" matStepperNext>Next</button>\\n        <button mat-button type=\\\"button\\\" matStepperPrevious>Back</button>\\n      </div>\\n    </form>\\n  </mat-step>\\n  <mat-step label=\\\"Limitation\\\" [stepControl]=\\\"constraintFormGroup\\\">\\n    <form [formGroup]=\\\"constraintFormGroup\\\">\\n      <mat-form-field>\\n        <mat-select placeholder=\\\"Limitation\\\" formControlName=\\\"constraintControl\\\" [(value)]=\\\"constraintSelectOption\\\">\\n          <mat-option *ngFor=\\\"let constraint of constriants\\\" [value]=\\\"constraint.value\\\">\\n            {{ constraint.label }}\\n          </mat-option>\\n          <mat-option [disabled]=\\\"betweenConstraintDisabled\\\" value=\\\"between\\\">\\n            Between\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n      <div>\\n        <button mat-button type=\\\"button\\\" matStepperNext>Next</button>\\n        <button mat-button type=\\\"button\\\" matStepperPrevious>Back</button>\\n      </div>\\n    </form>\\n  </mat-step>\\n  <mat-step label=\\\"Input\\\" [stepControl]=\\\"inputFieldGroup\\\">\\n    <form [formGroup]=\\\"inputFieldGroup\\\">\\n      <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"2:1\\\" gutterSize=\\\"4px\\\">\\n        <mat-grid-tile colspan=\\\"2\\\" *ngIf=\\\"classifierSelectOption === 'title'\\\">\\n          <mat-form-field>\\n            <input matInput placeholder=\\\"Title Text\\\" formControlName=\\\"titleTextControl\\\" [required]=\\\"classifierSelectOption === 'title'\\\">\\n          </mat-form-field>\\n        </mat-grid-tile>\\n        <mat-grid-tile colspan=\\\"2\\\" *ngIf=\\\"classifierSelectOption === 'owner'\\\">\\n          <mat-form-field>\\n            <input matInput placeholder=\\\"Owner Name\\\" formControlName=\\\"ownerTextControl\\\" [required]=\\\"classifierSelectOption === 'owner'\\\">\\n          </mat-form-field>\\n        </mat-grid-tile>\\n        <mat-grid-tile colspan=\\\"2\\\" *ngIf=\\\"classifierSelectOption === 'type'\\\">\\n          <mat-form-field>\\n            <mat-select placeholder=\\\"Drive File Type\\\" formControlName=\\\"fileTypeControl\\\" [required]=\\\"classifierSelectOption === 'type'\\\">\\n              <mat-option *ngFor=\\\"let fileType of driveFileTypes\\\" [value]=\\\"fileType.value\\\">\\n                {{ fileType.label }}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </mat-grid-tile>\\n        <mat-grid-tile colspan=\\\"2\\\" *ngIf=\\\"datePickerSingleNeeded() === 1\\\">\\n          <mat-form-field>\\n            <input matInput [matDatepicker]=\\\"datePicker\\\" placeholder=\\\"Date\\\" formControlName=\\\"dateControl\\\" [required]=\\\"datePickerSingleNeeded() === 1\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"datePicker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #datePicker startView=\\\"month\\\"></mat-datepicker>\\n          </mat-form-field>          \\n        </mat-grid-tile>\\n        <div *ngIf=\\\"datePickerSingleNeeded() === 2\\\">\\n          <mat-grid-tile colspan=\\\"2\\\">\\n            <mat-form-field>\\n              <input matInput [matDatepicker]=\\\"datePickerBetweenFirst\\\" formControlName=\\\"firstDateControl\\\" placeholder=\\\"Starting Date\\\" [required]=\\\"datePickerSingleNeeded() === 2\\\">\\n              <mat-datepicker-toggle matSuffix [for]=\\\"datePickerBetweenFirst\\\"></mat-datepicker-toggle>\\n              <mat-datepicker #datePickerBetweenFirst startView=\\\"month\\\"></mat-datepicker>\\n            </mat-form-field>          \\n          </mat-grid-tile>\\n          <mat-grid-tile colspan=\\\"2\\\">\\n            <mat-form-field>\\n              <input matInput [matDatepicker]=\\\"datePickerBetweenSecond\\\" formControlName=\\\"secondDateControl\\\" placeholder=\\\"Ending Date\\\" [required]=\\\"datePickerSingleNeeded() === 2\\\">\\n              <mat-datepicker-toggle matSuffix [for]=\\\"datePickerBetweenSecond\\\"></mat-datepicker-toggle>\\n              <mat-datepicker #datePickerBetweenSecond startView=\\\"month\\\"></mat-datepicker>\\n            </mat-form-field>          \\n          </mat-grid-tile>\\n        </div>\\n      </mat-grid-list>\\n      <div>\\n        <button mat-button type=\\\"button\\\" (click)=\\\"finished()\\\">Done</button>\\n        <button mat-button type=\\\"button\\\" matStepperPrevious>Back</button>\\n      </div>\\n    </form>\\n  </mat-step>\\n</mat-vertical-stepper>\"","module.exports = \"\"","import {\n  AfterViewInit,\n  Component,\n  EventEmitter,\n  forwardRef,\n  Input,\n  NgZone,\n  OnInit,\n  Output,\n  ViewChild\n} from '@angular/core';\nimport {\n  ControlValueAccessor,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  NG_VALUE_ACCESSOR,\n  Validators\n} from '@angular/forms';\nimport { GoogleService } from '../../../services/google/google.service';\nimport { MatVerticalStepper } from '@angular/material';\nimport { Router } from '@angular/router';\nimport { StepperSelectionEvent } from '@angular/cdk/stepper';\nimport { v4 as uuid } from 'uuid';\nimport { RuleInterface } from '../../../../interfaces';\n\nexport const DEFAULT_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NewRuleStepperComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'app-new-rule-stepper',\n  templateUrl: './new-rule-stepper.component.html',\n  styleUrls: ['./new-rule-stepper.component.scss'],\n  providers: [DEFAULT_VALUE_ACCESSOR]\n})\nexport class NewRuleStepperComponent implements OnInit {\n  @Input() inputRule: RuleInterface;\n  @Input() reset: boolean;\n\n  @Output() valueChange = new EventEmitter();\n\n  @ViewChild('stepper') stepper: MatVerticalStepper;\n\n  value: any;\n\n  // Stepper variables and methods\n  classifierFormGroup: FormGroup;\n  constraintFormGroup: FormGroup;\n  inputFieldGroup: FormGroup;\n  nameFormGroup: FormGroup;\n\n  betweenConstraintDisabled: boolean = false;\n  startEndWithDisabled: boolean = false;\n\n  classifierSelectOption: string;\n  constraintSelectOption: string;\n\n  constriants = [\n    {\n      label: \"Include's / After\",\n      value: 'include'\n    },\n    {\n      label: \"Exclude's / Before\",\n      value: 'exclude'\n    }\n  ];\n\n  classifiers = [\n    {\n      label: 'Title',\n      value: 'title',\n      inputFieldControl: 'titleTextControl',\n      hideBetween: true\n    },\n    {\n      label: 'Type',\n      value: 'type',\n      inputFieldControl: 'fileTypeControl',\n      hideBetween: true\n    },\n    {\n      label: 'Owner',\n      value: 'owner',\n      inputFieldControl: 'ownerTextControl',\n      hideBetween: true\n    },\n    {\n      label: 'Creation Date',\n      value: 'creationDate',\n      inputFieldControl: 'dateControl',\n      hideBetween: false\n    },\n    {\n      label: 'Last Opened',\n      value: 'lastOpened',\n      inputFieldControl: 'dateControl',\n      hideBetween: false\n    },\n    {\n      label: 'Last Modified',\n      value: 'lastModified',\n      inputFieldControl: 'dateControl',\n      hideBetween: false\n    }\n  ];\n\n  driveFileTypes = [\n    {\n      label: 'Sound File',\n      value: 'application/vnd.google-apps.audio'\n    },\n    {\n      label: 'Document',\n      value: 'application/vnd.google-apps.document'\n    },\n    {\n      label: 'Drawing',\n      value: 'application/vnd.google-apps.drawing'\n    },\n    {\n      label: 'Drive File',\n      value: 'application/vnd.google-apps.file'\n    },\n    {\n      label: 'Drive Folder',\n      value: 'application/vnd.google-apps.folder'\n    },\n    {\n      label: 'Forms',\n      value: 'application/vnd.google-apps.form'\n    },\n    {\n      label: 'Fusion Tables',\n      value: 'application/vnd.google-apps.fusiontable'\n    },\n    {\n      label: 'My Maps',\n      value: 'application/vnd.google-apps.map'\n    },\n    {\n      label: 'Image',\n      value: 'application/vnd.google-apps.photo'\n    },\n    {\n      label: \"Slide's\",\n      value: 'application/vnd.google-apps.presentation'\n    },\n    {\n      label: \"App's Script\",\n      value: 'application/vnd.google-apps.script'\n    },\n    {\n      label: \"Site's\",\n      value: 'application/vnd.google-apps.site'\n    },\n    {\n      label: \"Sheet's\",\n      value: 'application/vnd.google-apps.spreadsheet'\n    },\n    {\n      label: 'Video',\n      value: 'application/vnd.google-apps.video'\n    }\n  ];\n\n  constructor(\n    public formBuilder: FormBuilder,\n    public zone: NgZone,\n    public router: Router,\n    public google: GoogleService\n  ) {}\n\n  private valueArrayToObject(array: Array<object>): object {\n    const searchableObject: object = {};\n    array.forEach(value => {\n      searchableObject[value['value']] = value;\n    });\n    return searchableObject;\n  }\n\n  private checkIfBetweenDisabled(classifierValue: string): boolean {\n    return this.valueArrayToObject(this.classifiers)[classifierValue]\n      .hideBetween;\n  }\n\n  private getFieldControl(classifierValue: string): string {\n    return this.valueArrayToObject(this.classifiers)[classifierValue]\n      .inputFieldControl;\n  }\n\n  ngOnInit(): void {\n    this.nameFormGroup = this.formBuilder.group({\n      ruleName: ['', Validators.required]\n    });\n    this.classifierFormGroup = this.formBuilder.group({\n      classifierControl: ['', Validators.required]\n    });\n    this.constraintFormGroup = this.formBuilder.group({\n      constraintControl: ['', Validators.required]\n    });\n    this.inputFieldGroup = this.formBuilder.group({\n      secondDateControl: null,\n      firstDateControl: null,\n      titleTextControl: null,\n      ownerTextControl: null,\n      fileTypeControl: null,\n      dateControl: null\n    });\n    if (this.inputRule && this.inputRule.data) {\n      this.nameFormGroup.get('ruleName').setValue(this.inputRule.name);\n      this.classifierSelectOption = this.inputRule.classifier;\n      this.classifierFormGroup\n        .get('classifierControl')\n        .setValue(this.inputRule.classifier);\n      this.constraintSelectOption = this.inputRule.constraint;\n      this.constraintFormGroup\n        .get('constraintControl')\n        .setValue(this.inputRule.constraint);\n      switch (this.getFieldControl(this.classifierSelectOption)) {\n        case 'titleTextControl':\n          this.inputFieldGroup\n            .get('titleTextControl')\n            .setValue(this.inputRule.data.title);\n          break;\n        case 'fileTypeControl':\n          this.inputFieldGroup\n            .get('fileTypeControl')\n            .setValue(this.inputRule.data.fileType);\n          break;\n        case 'ownerTextControl':\n          this.inputFieldGroup\n            .get('ownerTextControl')\n            .setValue(this.inputRule.data.owner);\n          break;\n        case 'dateControl':\n          if (this.constraintSelectOption === 'between') {\n            this.inputFieldGroup\n              .get('firstDateControl')\n              .setValue(this.inputRule.data.firstDate);\n            this.inputFieldGroup\n              .get('secondDateControl')\n              .setValue(this.inputRule.data.secondDate);\n          } else {\n            this.inputFieldGroup\n              .get('dateControl')\n              .setValue(this.inputRule.data.date);\n          }\n          break;\n      }\n    }\n  }\n\n  finished(): void {\n    const data = {};\n    let ruleUUID: string;\n    if (this.inputRule) {\n      ruleUUID = this.inputRule.id;\n    } else {\n      ruleUUID = uuid();\n    }\n    switch (this.getFieldControl(this.classifierSelectOption)) {\n      case 'titleTextControl':\n        data['title'] = this.inputFieldGroup.get('titleTextControl').value;\n        break;\n      case 'fileTypeControl':\n        data['fileType'] = this.inputFieldGroup.get('fileTypeControl').value;\n        break;\n      case 'ownerTextControl':\n        data['owner'] = this.inputFieldGroup.get('ownerTextControl').value;\n        break;\n      case 'dateControl':\n        if (this.constraintSelectOption === 'between') {\n          data['firstDate'] = this.inputFieldGroup.get(\n            'firstDateControl'\n          ).value;\n          data['secondDate'] = this.inputFieldGroup.get(\n            'secondDateControl'\n          ).value;\n        } else {\n          data['date'] = this.inputFieldGroup.get('dateControl').value;\n        }\n        break;\n    }\n    const val = {\n      id: ruleUUID,\n      classifier: this.classifierFormGroup.get('classifierControl').value,\n      constraint: this.constraintFormGroup.get('constraintControl').value,\n      data: data,\n      name: this.nameFormGroup.get('ruleName').value\n    };\n    this.value = val;\n    this.valueChange.emit(this.value);\n  }\n\n  /*\n    Datepicker Need Codes:\n      0 - No picker needed\n      1 - Single picker needed\n      2 - Double picker needed\n  */\n  datePickerSingleNeeded(): number {\n    const classifierVal = this.classifierSelectOption;\n    const constraintVal = this.constraintSelectOption;\n    if (\n      classifierVal === 'creationDate' ||\n      classifierVal === 'lastOpened' ||\n      classifierVal === 'lastModified'\n    ) {\n      if (constraintVal !== 'between') {\n        return 1;\n      } else {\n        return 2;\n      }\n    }\n    return 0;\n  }\n\n  stepChanged(event: StepperSelectionEvent): void {\n    if (event.previouslySelectedIndex === 1) {\n      const classifierValue = this.classifierFormGroup.get('classifierControl')\n        .value;\n      this.betweenConstraintDisabled = this.checkIfBetweenDisabled(\n        classifierValue\n      );\n      if (this.betweenConstraintDisabled) {\n        this.constraintFormGroup.get('constraintControl').setValue('include');\n      }\n    }\n  }\n\n  openFolderPicker(): void {\n    this.google.openFilePicker();\n  }\n}\n","module.exports = \"<div class=\\\"header\\\">\\n  <span style=\\\"font-size: 2rem;\\\">Configuration's</span>\\n  <span class=\\\"right refresh-button\\\" >\\n    <button mat-icon-button color=\\\"accent\\\" (click)=\\\"openPresets()\\\" matTooltip=\\\"Preset Config's\\\" matTooltipPosition=\\\"left\\\">\\n      <mat-icon aria-label=\\\"Presets list\\\">list</mat-icon>\\n    </button>\\n    <button mat-icon-button color=\\\"accent\\\" (click)=\\\"refreshConfigs()\\\" matTooltip=\\\"Refresh Config's\\\" matTooltipPosition=\\\"right\\\">\\n      <mat-icon aria-label=\\\"Refresh configurations\\\">refresh</mat-icon>\\n    </button>\\n  </span>\\n</div>\\n<div *ngIf=\\\"loading\\\">\\n  <mat-progress-bar mode=\\\"indeterminate\\\"></mat-progress-bar>\\n</div>\\n<div [hidden]=\\\"noConfigs\\\">\\n  <mat-table #table [dataSource]=\\\"dataSource\\\">\\n    <!-- Name Column -->\\n    <ng-container matColumnDef=\\\"name\\\">\\n      <mat-header-cell *matHeaderCellDef>Name</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let config\\\">{{config.name}}</mat-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"actions\\\">\\n      <mat-header-cell class=\\\"right\\\" *matHeaderCellDef>Actions</mat-header-cell>\\n      <mat-cell class=\\\"right\\\" *matCellDef=\\\"let config\\\">\\n        <button mat-icon-button color=\\\"accent\\\" matTooltip=\\\"Edit Config\\\" (click)=\\\"editConfig(config.key)\\\">\\n          <mat-icon aria-label=\\\"Edit Config\\\">edit</mat-icon>\\n        </button>\\n        <button mat-icon-button color=\\\"primary\\\" matTooltip=\\\"Set Active\\\" (click)=\\\"setActiveConfig(config.key)\\\" [disabled]=\\\"getActiveConfig(config.key)\\\">\\n          <mat-icon aria-label=\\\"Make Config Active\\\">settings_power</mat-icon>\\n        </button>\\n        <button mat-icon-button color=\\\"warn\\\" matTooltip=\\\"Delete config\\\" (click)=\\\"deleteConfig(config.key)\\\">\\n          <mat-icon aria-label=\\\"Delete Config\\\">delete_forever</mat-icon>\\n        </button>\\n      </mat-cell>\\n    </ng-container>\\n    <mat-header-row *matHeaderRowDef=\\\"tableColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: tableColumns;\\\"></mat-row>\\n  </mat-table>\\n  \\n  <mat-paginator #paginator\\n    [pageSize]=\\\"10\\\"\\n    [pageSizeOptions]=\\\"[5, 10, 20]\\\"\\n    [showFirstLastButtons]=\\\"true\\\">\\n  </mat-paginator>\\n</div>\\n<p *ngIf=\\\"noConfigs\\\">You have no configurations try creating one!</p>\"","module.exports = \".right {\\n  float: right;\\n  text-align: right;\\n  justify-content: end; }\\n\\n.refresh-button {\\n  -ms-grid-row-align: center;\\n      align-self: center; }\\n\\n.header {\\n  display: flex;\\n  padding: 15px 0;\\n  justify-content: space-between; }\\n\"","import { AngularFireAuth } from 'angularfire2/auth';\nimport {\n  AngularFirestore,\n  AngularFirestoreCollection\n} from 'angularfire2/firestore';\nimport { BehaviorSubject } from 'rxjs';\nimport { Component, NgZone, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ConfigComponent } from '../config.component';\nimport { createDirective } from '@angular/compiler/src/core';\nimport { DatabaseService } from '../../../../services/firebase/database.service';\nimport { DataSource } from '@angular/cdk/collections';\nimport { EditConfigModalComponent } from '../../../shared/edit-config-modal/edit-config-modal.component';\nimport {\n  MatDialog,\n  MatPaginator,\n  MatTable,\n  MatTableDataSource\n} from '@angular/material';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { PresetConfigComponent } from '../preset-config/preset-config.component';\n\nexport interface Config {\n  name: String;\n  key: String;\n}\n\n@Component({\n  selector: 'app-config-list',\n  templateUrl: './config-list.component.html',\n  styleUrls: ['./config-list.component.scss']\n})\nexport class ConfigListComponent implements OnInit, OnDestroy {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  private userID: string;\n  private configCollection;\n  private activeConfig: string;\n  private oldPageSize: number = 10;\n  private loadingSubscription: Subscription;\n  private paginatorSubscription: Subscription;\n  private configChangeSubscription: Subscription;\n  private activeConfigChangeSubscription: Subscription;\n\n  public loading: boolean = true;\n  public noConfigs: boolean = true;\n  public dataSource: ConfigDataSource;\n  public tableColumns = ['name', 'actions'];\n\n  constructor(\n    private firebaseAuth: AngularFireAuth,\n    private firebase: AngularFirestore,\n    private database: DatabaseService,\n    private dialog: MatDialog,\n    private router: Router,\n    private zone: NgZone\n  ) {}\n\n  ngOnInit() {\n    if (this.firebaseAuth.auth.currentUser) {\n      this.userID = this.firebaseAuth.auth.currentUser.uid;\n      this.configCollection = this.firebase\n        .doc(`users/${this.userID}`)\n        .collection('configs');\n      this.dataSource = new ConfigDataSource(\n        this.configCollection,\n        this.paginator\n      );\n      this.database.numberConfigs(numConfigs => {\n        if (numConfigs === 0) {\n          this.noConfigs = true;\n        } else {\n          this.noConfigs = false;\n        }\n      });\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.firebaseAuth.auth.currentUser) {\n      // Listen for page changes\n      this.paginatorSubscription = this.paginator.page.subscribe(() => {\n        if (this.oldPageSize == this.paginator.pageSize) {\n          this.dataSource.loadConfigs(\n            this.paginator.pageIndex,\n            this.paginator.pageSize\n          );\n        } else {\n          this.dataSource.loadConfigs(0, this.paginator.pageSize);\n          this.oldPageSize = this.paginator.pageSize;\n          this.paginator.pageIndex = 0;\n        }\n      });\n      // Load the configurations\n      this.dataSource.loadConfigs();\n      // Pass the number of configs to the paginator\n      this.database.numberConfigs(numConfigs => {\n        this.paginator.length = numConfigs;\n      });\n      // Listen for config changes\n      this.configChangeSubscription = this.database.configSubject.subscribe(\n        created => {\n          this.refreshConfigs();\n        }\n      );\n      // Retrive the active config\n      this.database.getActiveConfig(activeConfig => {\n        this.activeConfig = activeConfig;\n      });\n      // Listen for active config changes\n      this.activeConfigChangeSubscription = this.database.activeConfigChanged.subscribe(\n        newConfigID => {\n          this.activeConfig = newConfigID;\n        },\n        err => console.error\n      );\n      setTimeout(_ => {\n        // Listen for loading state changes\n        this.loadingSubscription = this.dataSource.loading$.subscribe(\n          loading => {\n            this.loading = loading;\n          }\n        );\n      });\n    }\n  }\n\n  getDialogWidth() {\n    const width: number = document.body.clientWidth;\n    if (width >= 1280) {\n      return width / 2;\n    } else if (width >= 640) {\n      return width / 1.5;\n    } else {\n      return 0;\n    }\n  }\n\n  openPresets() {\n    let dialogWidth = this.getDialogWidth();\n    if (dialogWidth) {\n      const dialogInstance = this.dialog.open(PresetConfigComponent, {\n        width: `${dialogWidth}px`,\n        maxHeight: `${document.body.clientHeight * 0.9}px`\n      });\n      const componentInstance = dialogInstance.componentInstance;\n      let closeSubscription = componentInstance.closeCommand.subscribe(\n        close => {\n          dialogInstance.close();\n          closeSubscription.unsubscribe();\n        }\n      );\n    } else {\n      this.zone.run(() => {\n        this.router.navigate(['/app/config/presets']);\n      });\n    }\n  }\n\n  refreshConfigs() {\n    this.dataSource.loadConfigs();\n    this.database.numberConfigs(numConfigs => {\n      if (numConfigs === 0) {\n        this.noConfigs = true;\n      } else {\n        this.noConfigs = false;\n      }\n    });\n  }\n\n  editConfig(configID: string) {\n    this.database.editingConfig = configID;\n    let dialogWidth = this.getDialogWidth();\n    if (dialogWidth) {\n      const dialogInstance = this.dialog.open(EditConfigModalComponent, {\n        width: `${dialogWidth}px`,\n        maxHeight: `${document.body.clientHeight * 0.9}px`\n      });\n      const componentInstance = dialogInstance.componentInstance;\n      let closeSubscription = componentInstance.closeCommand.subscribe(\n        close => {\n          dialogInstance.close();\n          closeSubscription.unsubscribe();\n        }\n      );\n    } else {\n      this.zone.run(() => {\n        this.router.navigate(['/app/config/edit']);\n      });\n    }\n  }\n\n  deleteConfig(configKey: string) {\n    if (configKey === this.activeConfig) {\n      this.setActiveConfig('');\n    }\n    this.database.deleteConfig(configKey);\n  }\n\n  setActiveConfig(configKey: string) {\n    this.database.setActiveConfig(configKey);\n  }\n\n  getActiveConfig(configKey: string): boolean {\n    return this.activeConfig === configKey ? true : false;\n  }\n\n  ngOnDestroy() {\n    this.loadingSubscription.unsubscribe();\n    this.paginatorSubscription.unsubscribe();\n    this.configChangeSubscription.unsubscribe();\n    this.activeConfigChangeSubscription.unsubscribe();\n  }\n}\n\nexport class ConfigDataSource implements DataSource<Config> {\n  private configSubject = new BehaviorSubject<Config[]>([]);\n\n  private loadingSubject = new BehaviorSubject<boolean>(true);\n  public loading$ = this.loadingSubject.asObservable();\n\n  constructor(private configCollection, private paginator) {}\n\n  private calculateStart(page: number, pageSize: number): number {\n    return page ? page * pageSize : 0;\n  }\n\n  connect(): Observable<Config[]> {\n    return this.configSubject.asObservable();\n  }\n\n  disconnect(): void {\n    this.configSubject.complete();\n    this.loadingSubject.complete();\n  }\n\n  loadConfigs(page: number = 0, pageSize: number = 10) {\n    this.loadingSubject.next(true);\n    this.configCollection.ref\n      .orderBy('name')\n      .startAt(this.calculateStart(page, pageSize))\n      .limit(pageSize)\n      .get()\n      .then(snapshot => {\n        const configs = snapshot.docs;\n        let data = [];\n        for (const config in configs) {\n          const name = configs[config].data()['name'];\n          data.push({\n            name: name,\n            key: configs[config].id\n          });\n        }\n        this.configSubject.next(data);\n        this.loadingSubject.next(false);\n      }, err => console.error);\n  }\n}\n","module.exports = \"<app-config-list></app-config-list>\\n\"","module.exports = \"\"","import { Component, NgZone, OnInit, AfterViewInit, OnDestroy } from '@angular/core';\nimport { ConfigModalComponent } from '../../shared/config-modal/config-modal.component';\nimport { MatDialog } from '@angular/material';\nimport { RepositionScrollStrategy } from '@angular/cdk/overlay';\nimport { Router } from '@angular/router';\nimport { AppComponent } from '../../../app.component';\nimport { Subscription } from 'rxjs';\n/**\n * Declare component to be shown when the config tab is selected.\n * \n * @export\n * @class ConfigComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-config',\n  templateUrl: './config.component.html',\n  styleUrls: ['./config.component.scss'],\n})\nexport class ConfigComponent implements OnInit, AfterViewInit, OnDestroy {\n\n  public initalized: boolean = false;\n\n  private openConfigModalListener: Subscription;\n  \n  /**\n   * Creates an instance of ConfigComponent.\n   * @memberof ConfigComponent\n   */\n  constructor(\n    private appComponent: AppComponent,\n    private dialog: MatDialog, \n    private router: Router, \n    private zone: NgZone\n  ) { }\n\n  ngOnInit() {\n    this.openConfigModalListener = \n      this.appComponent.openConfigModal$.subscribe(open => {\n        if (open === true) {\n          this.openNewConfigDialog();\n        }\n      });\n  }\n\n  ngAfterViewInit() {\n    this.initalized = true;\n  }\n\n  ngOnDestroy() {\n    this.openConfigModalListener.unsubscribe();\n  }\n\n  public getDialogWidth() {\n    const width: number = document.body.clientWidth;\n    if (width >= 1280) {\n      return (width / 2);\n    } else if (width >= 640) {\n      return (width / 1.5);\n    } else {\n      return 0;\n    }\n  }\n\n  openNewConfigDialog() {\n    let dialogWidth = this.getDialogWidth();\n    if (dialogWidth) {\n      const dialogInstance = this.dialog.open(ConfigModalComponent, {\n        width: `${dialogWidth}px`,\n        maxHeight: `${document.body.clientHeight * .9}px`\n      });\n      const componentInstance = dialogInstance.componentInstance;\n      let dialogSubscription = \n        componentInstance\n          .closeCommand\n          .subscribe(close => {\n            dialogInstance.close();\n            dialogSubscription.unsubscribe();\n          });\n    } else {\n      this.zone.run(() => {\n        this.router.navigate(['/app/config/create']);\n      });\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { PresetConfigComponent } from '../preset-config/preset-config.component';\n\n@Component({\n  selector: 'app-preset-config-page',\n  templateUrl: '../preset-config/preset-config.component.html',\n  styleUrls: ['../preset-config/preset-config.component.scss']\n})\nexport class PresetConfigPageComponent extends PresetConfigComponent {\n  isPage = true;\n\n  close() {\n    this.zone.run(() => {\n      this.router.navigateByUrl('/app/config');\n    });\n  }\n}\n","module.exports = \"<div>\\n  <h3 mat-dialog-title *ngIf=\\\"!isPage\\\">Preset Configs</h3>\\n  <h3 *ngIf=\\\"isPage\\\">Preset Configs</h3>\\n  <div mat-dialog-content [class.overflow-limit]=\\\"!isPage\\\">\\n    <mat-card *ngFor=\\\"let preset of presets\\\">\\n      <mat-card-header>\\n          <div *ngIf=\\\"preset.imageURL\\\" mat-card-avatar style=\\\"background-size: cover;\\\" [style.background-image]=\\\"'url(' + preset.imageURL + ')'\\\"></div>\\n        <mat-card-title>{{ preset.name }}</mat-card-title>\\n        <mat-card-subtitle>{{ preset.category }}</mat-card-subtitle>\\n      </mat-card-header>\\n      <mat-card-content>\\n        <p>{{ preset.description }}</p>\\n      </mat-card-content>\\n      <mat-card-actions>\\n        <button mat-button (click)=\\\"addPreset(preset.id)\\\">Add Preset</button>\\n      </mat-card-actions>\\n    </mat-card>\\n    <div mat-dialog-actions>\\n      <button style=\\\"margin-top: 10px;\\\" mat-button (click)=\\\"close()\\\">Cancel</button>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"\"","import { Component, OnInit, NgZone } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { presets } from '../presets';\nimport { GoogleService } from '../../../../services/google/google.service';\nimport { v4 as uuid } from 'uuid';\nimport { ConfigBuilder } from '../../../../classes/config-builder';\nimport { DatabaseService } from '../../../../services/firebase/database.service';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-preset-config',\n  templateUrl: './preset-config.component.html',\n  styleUrls: ['./preset-config.component.scss']\n})\nexport class PresetConfigComponent implements OnInit {\n  private _closeCommand = new Subject<Boolean>();\n\n  public closeCommand = this._closeCommand.asObservable();\n\n  public presets = presets;\n\n  constructor(\n    public zone: NgZone,\n    public router: Router,\n    private snackbar: MatSnackBar,\n    private google: GoogleService,\n    private database: DatabaseService\n  ) {}\n\n  ngOnInit() {}\n\n  close() {\n    this._closeCommand.next(true);\n  }\n\n  addPreset(presetID: string) {\n    const config = presets.find(element => {\n      return element.id === presetID;\n    });\n    const createFolders = config.data.createFolders;\n    const groups = config.data.groups;\n    const createdFolders = [];\n    let requestsSent = 0;\n    let requestsRecived = 0;\n    createFolders.forEach(folder => {\n      requestsSent += 1;\n      this.google\n        .createFolder(folder)\n        .then(id => {\n          requestsRecived += 1;\n          let group = groups.find(group => {\n            return group.destination.presetID === folder;\n          });\n          group.destination = {\n            folderID: id,\n            name: folder\n          };\n        })\n        .catch(err => console.error);\n    });\n    let checkInterval = setInterval(() => {\n      if (requestsSent === requestsRecived) {\n        clearInterval(checkInterval);\n        groups.forEach(group => {\n          group['id'] = uuid();\n          group.rules.forEach(rule => {\n            rule.data['id'] = uuid();\n          });\n        });\n        this.database\n          .addConfig(ConfigBuilder.configFromGroup(groups, 'I-STEM'))\n          .then(\n            () => {\n              this.close();\n            },\n            err => {\n              this.snackbar.open('There was a problem adding your preset!');\n            }\n          );\n      }\n    }, 100);\n  }\n}\n","const quartersArray = ['Quarter 1', 'Quarter 2', 'Quarter 3', 'Quarter 4'];\n\nexport const presets: any = [\n  {\n    id: 'istem',\n    name: 'I-STEM Geometry Preset',\n    category: 'School',\n    description:\n      'A preset configuration for the Wilson High School 9th Grade Geometry I-STEM classes(Periods 3-5).',\n    imageURL: 'assets/images/istem-logo.png',\n    data: {\n      createFolders: [\n        'Geometry',\n        'Physics',\n        'Integrated Engineering and Design'\n      ],\n      groups: [\n        {\n          destination: {\n            presetID: 'Geometry'\n          },\n          name: 'Geometry',\n          rules: [\n            {\n              classifier: 'title',\n              constraint: 'include',\n              data: {\n                title: 'Geo'\n              },\n              name: 'Name'\n            }\n          ],\n          source: {\n            folderID: 'root',\n            name: 'My Drive'\n          }\n        },\n        {\n          destination: {\n            presetID: 'Physics'\n          },\n          name: 'Physics',\n          rules: [\n            {\n              classifier: 'title',\n              constraint: 'include',\n              data: {\n                title: 'Phys'\n              },\n              name: 'Name'\n            }\n          ],\n          source: {\n            folderID: 'root',\n            name: 'My Drive'\n          }\n        },\n        {\n          destination: {\n            presetID: 'Integrated Engineering and Design'\n          },\n          name: 'Integrated Engineering and Design',\n          rules: [\n            {\n              classifier: 'title',\n              constraint: 'include',\n              data: {\n                title: 'IED'\n              },\n              name: 'Name'\n            }\n          ],\n          source: {\n            folderID: 'root',\n            name: 'My Drive'\n          }\n        }\n      ]\n    }\n  }\n];\n","module.exports = \"<div class=\\\"row\\\" style=\\\"padding-top: 10px;\\\">\\n  <mat-card class=\\\"col-5 col-10-sm\\\">\\n    <mat-card-header>\\n      <mat-icon mat-card-avatar color=\\\"accent\\\">settings_power</mat-icon>\\n      <mat-card-title>Active Config</mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content>\\n      {{ activeConfigName }}\\n    </mat-card-content>\\n  </mat-card>\\n  <mat-card class=\\\"col-5 col-10-sm\\\">\\n    <mat-card-header>\\n      <mat-icon mat-card-avatar color=\\\"accent\\\">sort</mat-icon>\\n      <mat-card-title>Sorting</mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content>\\n      <button mat-raised-button style=\\\"width: 100%;\\\" color=\\\"primary\\\" [disabled]=\\\"!isActiveConfig\\\" (click)=\\\"sortUsersDrive()\\\">Sort Now</button>\\n    </mat-card-content>\\n  </mat-card>\\n</div>\\n<div class=\\\"row\\\">\\n  <mat-card class=\\\"col-5 col-10-sm\\\">\\n    <mat-card-header>\\n      <mat-icon mat-card-avatar color=\\\"accent\\\">settings</mat-icon>\\n      <mat-card-title>Configuration's</mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content>\\n      Configuration's control how your Google Drive is sorted!\\n    </mat-card-content>\\n    <mat-card-actions>\\n      <button color=\\\"primary\\\" (click)=\\\"goToConfigPage()\\\" mat-button>Go to Configuration's</button>\\n    </mat-card-actions>\\n  </mat-card>\\n</div>\"","module.exports = \"\"","import { Component, OnInit, NgZone } from '@angular/core';\nimport { DatabaseService } from '../../../services/firebase/database.service';\nimport { MatSnackBar } from '@angular/material';\nimport { SorterService } from '../../../services/sorter/sorter.service';\nimport { Router } from '@angular/router';\n\n/**\n * Declare a component to be shown when the home tab is selected.\n *\n * @export\n * @class HomeComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  public isActiveConfig: boolean = false;\n  public activeConfigName: string = 'Loading...';\n\n  /**\n   * Creates an instance of HomeComponent.\n   * @memberof HomeComponent\n   */\n  constructor(\n    private zone: NgZone,\n    private router: Router,\n    private snackBar: MatSnackBar,\n    private database: DatabaseService,\n    private sorterService: SorterService\n  ) {}\n\n  /**\n   * Handle component initalization\n   *\n   * @memberof HomeComponent\n   */\n  ngOnInit() {\n    if (this.database.userID) {\n      this.database.getActiveConfig(activeConfig => {\n        if (activeConfig) {\n          this.database.getConfig(activeConfig, config => {\n            this.activeConfigName = config.name;\n          });\n          this.isActiveConfig = true;\n        } else {\n          this.activeConfigName = 'No active configuration!';\n          this.isActiveConfig = false;\n        }\n      });\n    }\n  }\n\n  sortUsersDrive() {\n    this.sorterService.sort().then(() => {\n      this.snackBar.open('Google Drive sorted!', 'OK', {\n        duration: 5000\n      });\n    }, err => console.error);\n  }\n\n  goToConfigPage() {\n    this.zone.run(() => {\n      this.router.navigateByUrl('/app/config');\n    });\n  }\n}\n","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"center\\\">\\n        <button mat-raised-button color=\\\"warn\\\" class=\\\"buttons\\\" (click)=\\\"deleteAccount()\\\">Delete Account</button>\\n    </div>\\n</div>\"","module.exports = \".buttons {\\n  font-size: 25px;\\n  margin: 20px; }\\n\"","import { AngularFireAuth } from 'angularfire2/auth';\nimport { AngularFirestore } from 'angularfire2/firestore';\nimport { Component, OnInit } from '@angular/core';\nimport { GoogleService } from '../../../services/google/google.service';\n\n/**\n * Workaround for testing\n */\ndeclare var gapi: any;\n\n/**\n * Declare the component to be shown when the settings tab is selected.\n * \n * @export\n * @class SettingsComponent\n */\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent {\n  /**\n   * Creates an instance of SettingsComponent.\n   * @memberof SettingsComponent\n   */\n  constructor(private firebase: AngularFirestore, private firebaseAuth: AngularFireAuth, private google: GoogleService) { }\n\n  deleteAccount() {\n    this\n      .firebaseAuth\n      .auth\n      .currentUser\n      .delete()\n      .then(() => {\n        this.google.signOut();\n    }, err => console.error)\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { ConfigComponent } from '../../components/tabs/config/config.component';\nimport { ConfigListComponent } from '../../components/tabs/config/config-list/config-list.component';\nimport { ConfigModalComponent } from '../../components/shared/config-modal/config-modal.component';\nimport { ConfigModule } from '../config/config.module';\nimport { DatabaseService } from '../../services/firebase/database.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HomeComponent } from '../../components/tabs/home/home.component';\nimport {\n  MatButtonModule,\n  MatCardModule,\n  MatDatepicker,\n  MatDatepickerModule,\n  MatDialogContent,\n  MatDialogModule,\n  MatExpansionModule,\n  MatFormFieldModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatSelectModule,\n  MatSnackBarModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTooltipModule\n  } from '@angular/material';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { SettingsComponent } from '../../components/tabs/settings/settings.component';\nimport { SorterService } from '../../services/sorter/sorter.service';\n\n/**\n * Handles all authenticated components\n *\n * @export\n * @class AuthenticatedModule\n */\n@NgModule({\n  declarations: [HomeComponent, ConfigComponent, SettingsComponent],\n  imports: [\n    FormsModule,\n    CommonModule,\n    MatIconModule,\n    MatListModule,\n    MatCardModule,\n    MatInputModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    ReactiveFormsModule,\n    ConfigModule.forRoot()\n  ],\n  providers: [DatabaseService, SorterService],\n  exports: [ConfigComponent]\n})\nexport class AuthenticatedModule {\n  /**\n   * Register with the root module of the app\n   *\n   * @static\n   * @returns {ModuleWithProviders} This module\n   * @memberof AuthenticatedModule\n   */\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: AuthenticatedModule,\n      providers: []\n    };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ConfigComponent } from '../../components/tabs/config/config.component';\nimport { NewConfigPageComponent } from '../../components/shared/new-config-page/new-config-page.component';\nimport { AuthGuardService } from '../../services/auth/auth-guard.service';\nimport { PresetConfigPageComponent } from '../../components/tabs/config/preset-config-page/preset-config-page.component';\nimport { EditConfigPageComponent } from '../../components/shared/edit-config-page/edit-config-page.component';\n\n\nconst routes: Routes = [\n  {\n    path: 'app/config',\n    component: ConfigComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      state: 'appConfig'\n    }\n  },\n  {\n    path: 'app/config/create',\n    component: NewConfigPageComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      state: 'appConfigCreate'\n    }\n  },\n  {\n    path: 'app/config/presets',\n    component: PresetConfigPageComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      state: 'appConfigPresets'\n    }\n  },\n  {\n    path: 'app/config/edit',\n    component: EditConfigPageComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      state: 'appConfigEdit'\n    }\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ConfigRoutingModule { }","import { CommonModule } from '@angular/common';\nimport { ConfigListComponent } from '../../components/tabs/config/config-list/config-list.component';\nimport { ConfigModalComponent } from '../../components/shared/config-modal/config-modal.component';\nimport { EditConfigModalComponent } from '../../components/shared/edit-config-modal/edit-config-modal.component';\nimport { EditConfigPageComponent } from '../../components/shared/edit-config-page/edit-config-page.component';\nimport { FolderCreationComponent } from '../../components/shared/folder-creation/folder-creation.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  MatButtonModule,\n  MatDatepickerModule,\n  MatExpansionModule,\n  MatFormFieldModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatNativeDateModule,\n  MatPaginator,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatSelectModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTooltipModule,\n  MatCardModule\n  } from '@angular/material';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { NewConfigPageComponent } from '../../components/shared/new-config-page/new-config-page.component';\nimport { NewRuleStepperComponent } from '../../components/shared/new-rule-stepper/new-rule-stepper.component';\nimport { UnNamedPipe } from '../../pipes/un-named.pipe';\nimport { PresetConfigComponent } from '../../components/tabs/config/preset-config/preset-config.component';\nimport { PresetConfigPageComponent } from '../../components/tabs/config/preset-config-page/preset-config-page.component';\nimport { ConfigRoutingModule } from './config-routing.module';\n\n@NgModule({\n  declarations: [\n    ConfigListComponent,\n    NewConfigPageComponent,\n    ConfigModalComponent,\n    NewRuleStepperComponent,\n    EditConfigModalComponent,\n    EditConfigPageComponent,\n    FolderCreationComponent,\n    PresetConfigComponent,\n    PresetConfigPageComponent,\n    UnNamedPipe\n  ],\n  imports: [\n    FormsModule,\n    CommonModule,\n    MatIconModule,\n    MatListModule,\n    MatCardModule,\n    MatInputModule,\n    MatTableModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatTooltipModule,\n    MatStepperModule,\n    MatGridListModule,\n    MatSnackBarModule,\n    MatPaginatorModule,\n    MatFormFieldModule,\n    MatExpansionModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    ReactiveFormsModule,\n    MatProgressBarModule,\n    MatSlideToggleModule,\n    ConfigRoutingModule\n  ],\n  entryComponents: [ConfigModalComponent, EditConfigModalComponent, PresetConfigComponent],\n  exports: [ConfigListComponent]\n})\nexport class ConfigModule {\n  /**\n   * Register with the root module of the app\n   *\n   * @static\n   * @returns {ModuleWithProviders} This module\n   * @memberof ConfigModule\n   */\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: ConfigModule,\n      providers: []\n    };\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'unNamed'\n})\nexport class UnNamedPipe implements PipeTransform {\n  transform(value: any, args?: any): any {\n    return (value.length > 0) ? value : 'No Name'\n  }\n}\n","import { CanActivate, Router } from '@angular/router';\nimport { GoogleService } from '../google/google.service';\nimport { Injectable, NgZone } from '@angular/core';\n\n/**\n * Prevent a user from accessing a route if they aren't authenticated.\n * \n * @export\n * @class AuthGuardService\n * @implements {CanActivate}\n */\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n/**\n * Creates an instance of AuthGuardService.\n * @param {GoogleService} google Declare the Google Service as google.\n * @param {Router} router Declare the Router as router\n * @param {NgZone} zone Declare NgZone as zone\n * @memberof AuthGuardService\n */\nconstructor(public google: GoogleService, public router: Router, public zone: NgZone) { }\n  /**\n   * Determines whether the user can go to the page and handle it.\n   * \n   * @returns {boolean} Whether or not the user can access the route\n   * @memberof AuthGuardService\n   */\n  canActivate(): boolean {\n    if (this.google.getAuthStatus()) {\n      return true;\n    }\n    this.zone.run(() => {\n      this.router.navigate(['/']);\n    });\n    return false;\n  }\n}\n\n/**\n * Prevent a user from accessing a route if they are authenticated.\n * \n * @export\n * @class PreventAuthGuardService\n * @implements {CanActivate}\n */\n@Injectable()\nexport class PreventAuthGuardService implements CanActivate {\n/**\n * Creates an instance of PreventAuthGuardService.\n * @param {GoogleService} google Declare the Google Service as google.\n * @param {Router} router Declare the Router as router\n * @param {NgZone} zone Declare NgZone as zone\n * @memberof PreventAuthGuardService\n */\nconstructor(public google: GoogleService, public router: Router, public zone: NgZone) { }\n  /**\n   * Determines whether the user can go to the page and handle it.\n   * \n   * @returns {boolean} Whether or not the user can access the route\n   * @memberof PreventAuthGuardService\n   */\n  canActivate(): boolean {\n    if (!this.google.getAuthStatus()) {\n      return true;\n    }\n    this.zone.run(() => {\n      this.router.navigate(['/app/home']);\n    });\n    return false;\n  }\n}\n","import { AngularFireAuth } from 'angularfire2/auth';\nimport { AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument } from 'angularfire2/firestore';\nimport { ConfigBuilder } from '../../classes/config-builder';\nimport {\n  ConfigInterface,\n  ConfigsInterface,\n  GroupFolderInterface,\n  RuleInterface,\n  UserDocument,\n  FolderCreation\n} from '../../../interfaces';\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { resolve } from 'dns';\nimport { reject } from 'q';\n\n@Injectable()\nexport class DatabaseService {\n\n  private _configSubject = new Subject<Boolean>();\n  public configSubject = this._configSubject.asObservable();\n\n  private _activeConfigChanged = new Subject<string>();\n  public activeConfigChanged = this._activeConfigChanged.asObservable();\n\n  public userID: string;\n\n  private configDocument: AngularFirestoreDocument<ConfigInterface>;\n  private configsCollection: AngularFirestoreCollection<ConfigsInterface>;\n  private userDoc: AngularFirestoreDocument<UserDocument>;\n\n  public editingConfig: string;\n  \n\n  constructor(\n    private firebase: AngularFirestore,\n    private firebaseAuth: AngularFireAuth\n  ) {\n    firebase.firestore.settings({\n      timestampsInSnapshots: true\n    });\n    if (this.firebaseAuth.auth.currentUser) {\n      this.userID = firebaseAuth\n        .auth\n        .currentUser\n        .uid;\n      this.userDoc = firebase.doc(`users/${this.userID}`);\n      this.configDocument = firebase.doc(`users/${this.userID}/userData/config`);\n      this.configsCollection = this.userDoc.collection<ConfigsInterface>('configs');\n    }\n  }\n\n  createConfig(\n    configName: string,\n    firstGroupName: string,\n    sourceLocation: GroupFolderInterface,\n    destinationLocation: GroupFolderInterface,\n    createFolder: FolderCreation,\n    firstGroupRule: RuleInterface\n  ): void {\n    const newConfig = ConfigBuilder.generateNewConfig(\n      configName,\n      firstGroupName,\n      sourceLocation,\n      destinationLocation,\n      createFolder,\n      firstGroupRule\n    );\n    console.log(newConfig);\n    this\n      .configsCollection\n      .add(newConfig)\n      .then(() => {\n        this._configSubject.next(true);\n      }, err => {\n        console.error(err);\n        this._configSubject.next(false);\n      });\n  }\n\n  addConfig(config: ConfigsInterface): Promise<void> {\n    return new Promise((resolve, reject) => {\n      this.configsCollection.add(config).then(() => {\n        this._configSubject.next(true);\n        resolve();\n      }, err => {\n        console.error(err);\n        this._configSubject.next(false);\n        reject();\n      })\n    });\n  }\n\n  deleteConfig(configID: string): void {\n    this\n      .configsCollection\n      .doc(configID)\n      .delete()\n      .then(() => {\n        this._configSubject.next(true);\n      }, err => {\n        console.error(err);\n        this._configSubject.next(false);\n      })\n  }\n\n  setActiveConfig(configID: string): void {\n    this\n      .configDocument\n      .set({\n        activeConfig: configID\n      })\n      .then(() => {\n        this._activeConfigChanged.next(configID);\n      }, err => {\n        console.error(err);\n        this._activeConfigChanged.error(err);\n      })\n  }\n\n  updateConfig(newConfig: ConfigsInterface): void {\n    this.configsCollection.doc(this.editingConfig).ref.set(newConfig)\n      .then(() => {\n        this.editingConfig = '';\n        this._configSubject.next(true);\n      }, err => console.error);\n  }\n\n  getConfig(configID: string, cb: Function): void {\n    this.configsCollection.doc(configID).ref.get().then(snapshot => {\n      cb(snapshot.data());\n    }, err => console.error);\n  }\n\n  getActiveConfig(cb: Function): void {\n    if (this.configDocument) {\n      this\n      .configDocument\n      .ref\n      .get()\n      .then(snapshot => {\n        if (snapshot && snapshot.data()) {\n          cb(snapshot.data()['activeConfig']);\n        } else {\n          cb(null);\n        }\n      }, err => console.error);\n    } else {\n      cb(null);\n    }\n  }\n\n  numberConfigs(cb: Function): void {\n    if (this.configsCollection) {\n      this\n      .configsCollection\n      .ref\n      .get()\n      .then(snapshot => {\n        cb(snapshot.docs.length);\n      });\n    } else {\n      cb(0);\n    }\n  }\n}\n","import * as firebase from 'firebase/app';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport 'firebase/auth';\nimport { DriveMimeType } from '../../classes/drive-query-builder';\n\n/**\n * Workaround for testing\n */\ndeclare var gapi: any;\ndeclare var google: any;\n\n/**\n * Variable for easy reference to the authenitcation instance.\n */\nlet authInstance;\n\nlet folderPicker;\n\nlet _folderPicked = new Subject<any>();\n\nfunction folderPicked(data: any): void {\n  if (data.action === 'picked') {\n    _folderPicked.next(data.docs[0]);\n  } else if (data.action === 'cancel') {\n    _folderPicked.error(true);\n  }\n}\n\n/**\n * Utility class to handle all interacting with the Google API\n *\n * @export\n * @class GoogleService\n */\n@Injectable()\nexport class GoogleService {\n  /**\n   * Holds a subject that is used to update subscribers with the authentication status.\n   *\n   * @private\n   * @memberof GoogleService\n   */\n  private _authState = new Subject<Boolean>();\n\n  /**\n   * Allows other modules / services to subscribe to the authentication status.\n   *\n   * @memberof GoogleService\n   */\n  public authState$ = this._authState.asObservable();\n\n  public folderPicked$ = _folderPicked.asObservable();\n\n  /**\n   * Creates an instance of GoogleService.\n   * @memberof GoogleService\n   */\n  constructor(private firebaseAuth: AngularFireAuth) {}\n\n  /**\n   * Initialize the Google API\n   *\n   * @param {Object} config\n   * @memberof GoogleService\n   */\n  init(config: Object, callback?: Function) {\n    gapi.load('client:auth2', () => {\n      console.debug('GAPI: Client & Auth Loaded');\n      gapi.client.init(config).then(() => {\n        authInstance = gapi.auth2.getAuthInstance();\n        authInstance.isSignedIn.listen(() => {\n          this._authState.next(authInstance.isSignedIn.get());\n          if (authInstance.isSignedIn.get()) {\n            const credential = firebase.auth.GoogleAuthProvider.credential(\n              this.getToken()\n            );\n            this.firebaseAuth.auth.signInWithCredential(credential);\n          }\n        });\n        const authStatus = authInstance.isSignedIn.get();\n        this._authState.next(authStatus);\n        gapi.load('picker', () => {\n          console.debug('GAPI: Picker Loaded');\n          const view = new google.picker.DocsView(google.picker.ViewId.FOLDERS)\n            .setIncludeFolders(true)\n            .setSelectFolderEnabled(true)\n            .setParent('root')\n            .setOwnedByMe(true);\n\n          folderPicker = new google.picker.PickerBuilder()\n            .disableFeature(google.picker.Feature.SUPPORT_TEAM_DRIVES)\n            .setAppId(362606538820)\n            .setOAuthToken(\n              authInstance.currentUser.get().getAuthResponse().access_token\n            )\n            .setDeveloperKey('AIzaSyB-yE9IXT29Vl_eAU7bzvzv5Qe17flfpzM')\n            .setSelectableMimeTypes('application/vnd.google-apps.folder')\n            .addView(view)\n            .setCallback(folderPicked)\n            .build();\n          if (callback) {\n            callback();\n          }\n        });\n      }, console.error);\n    });\n  }\n\n  openFilePicker() {\n    folderPicker.setVisible(true);\n  }\n\n  /**\n   * Returns the users current authentication status.\n   *\n   * @returns {Boolean}\n   * @memberof GoogleService\n   */\n  getAuthStatus(): Boolean {\n    if (authInstance) {\n      return authInstance.isSignedIn.get();\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Opens a popup allowing the user to sign in.\n   *\n   * @memberof GoogleService\n   */\n  signIn(): void {\n    authInstance.signIn();\n  }\n\n  /**\n   * Signs a user out\n   *\n   * @memberof GoogleService\n   */\n  signOut(): void {\n    authInstance.signOut();\n    this.firebaseAuth.auth.signOut();\n  }\n\n  /**\n   * Gets the users id token\n   *\n   * @returns {string}\n   * @memberof GoogleService\n   */\n  getToken(): string {\n    return authInstance.currentUser.get().getAuthResponse().id_token;\n  }\n\n  listFiles(query: string, cb: Function): void {\n    gapi.client.drive.files\n      .list({\n        q: query\n      })\n      .execute(resp => {\n        cb(resp);\n      });\n  }\n\n  getFileInfo(fileID: string, fields: string, cb: Function): void {\n    gapi.client.drive.files\n      .get({\n        fileId: fileID,\n        fields: fields\n      })\n      .execute(resp => {\n        if (resp.err) {\n          console.error(resp.err);\n        } else {\n          cb(resp);\n        }\n      });\n  }\n\n  createFolder(name: string, parent?: string): Promise<string> {\n    const fileResource = {\n      name: name,\n      mimeType: DriveMimeType.folder\n    }\n    if (parent) fileResource['parents'] = [parent];\n    return new Promise((resolve, reject) => {\n      gapi.client.drive.files\n        .create({\n          resource: fileResource,\n          fields: 'id'\n        })\n        .execute(resp => {\n          if (resp.err) reject(resp.err);\n          else resolve(resp.id);\n        });\n    });\n  }\n\n  moveFile(fileID: string, folder: string, cb: Function): void {\n    this.getFileInfo(fileID, 'parents', file => {\n      const prevParents = file.parents.join(',');\n      gapi.client.drive.files\n        .update({\n          fileId: fileID,\n          addParents: folder,\n          removeParents: prevParents\n        })\n        .execute(resp => {\n          if (resp.err) {\n            console.error(resp.err);\n          } else {\n            cb(true);\n          }\n        });\n    });\n  }\n}\n","import { ConfigsInterface, GroupInterface } from '../../../interfaces';\nimport { DatabaseService } from '../firebase/database.service';\nimport {\n  DriveMimeType,\n  DriveQueryBuilder\n} from '../../classes/drive-query-builder';\nimport { GoogleService } from '../google/google.service';\nimport { Injectable } from '@angular/core';\nimport { ConfigBuilder } from '../../classes/config-builder';\n\n/**\n * Workaround for testing\n */\ndeclare var gapi: any;\n\n@Injectable()\nexport class SorterService {\n  config: ConfigsInterface;\n\n  constructor(\n    private google: GoogleService,\n    private database: DatabaseService\n  ) {\n    this.loadConfig();\n    this.database.activeConfigChanged.subscribe(() => {\n      this.loadConfig();\n    });\n  }\n\n  private getDriveQuery(group: GroupInterface): string {\n    let driveQuery = new DriveQueryBuilder(group.source.folderID, true);\n    group.rules.forEach(rule => {\n      switch (rule.classifier) {\n        case 'title':\n          let title = rule.data.title;\n          switch (rule.constraint) {\n            case 'include':\n              driveQuery = driveQuery.nameContains(title);\n              break;\n            case 'exclude':\n              driveQuery = driveQuery.nameExcludes(title);\n              break;\n          }\n          break;\n        case 'type':\n          let type = rule.data.fileType;\n          switch (rule.constraint) {\n            case 'include':\n              driveQuery = driveQuery.requiresType(type);\n              break;\n            case 'exclude':\n              driveQuery = driveQuery.excludeType(type);\n              break;\n          }\n          break;\n        case 'owner':\n          let owner = rule.data.owner;\n          switch (rule.constraint) {\n            case 'include':\n              driveQuery = driveQuery.hasOwner(owner);\n              break;\n            case 'exclude':\n              driveQuery = driveQuery.excludesOwner(owner);\n              break;\n          }\n          break;\n        case 'creationDate':\n          switch (rule.constraint) {\n            case 'include':\n              driveQuery = driveQuery.createdAfter(rule.data.date);\n              break;\n            case 'exclude':\n              driveQuery = driveQuery.createdBefore(rule.data.date);\n              break;\n            case 'between':\n              driveQuery = driveQuery\n                .createdAfter(rule.data.firstDate)\n                .createdBefore(rule.data.secondDate);\n              break;\n          }\n          break;\n        case 'lastOpened':\n          switch (rule.constraint) {\n            case 'include':\n              driveQuery = driveQuery.openedAfter(rule.data.date);\n              break;\n            case 'exclude':\n              driveQuery = driveQuery.openedBefore(rule.data.date);\n              break;\n            case 'between':\n              driveQuery = driveQuery\n                .openedAfter(rule.data.firstDate)\n                .openedBefore(rule.data.secondDate);\n              break;\n          }\n          break;\n        case 'lastModified':\n          switch (rule.constraint) {\n            case 'include':\n              driveQuery = driveQuery.modifiedAfter(rule.data.date);\n              break;\n            case 'exclude':\n              driveQuery = driveQuery.modifiedBefore(rule.data.date);\n              break;\n            case 'between':\n              driveQuery = driveQuery\n                .modifiedAfter(rule.data.firstDate)\n                .modifiedBefore(rule.data.secondDate);\n              break;\n          }\n          break;\n      }\n    });\n    return driveQuery.get();\n  }\n\n  loadConfig(cb?: Function): void {\n    this.database.getActiveConfig(activeConfig => {\n      if (activeConfig) {\n        this.database.getConfig(activeConfig, config => {\n          this.config = config;\n          if (cb) cb();\n        });\n      }\n    });\n  }\n\n  sort() {\n    return new Promise((resolve, reject) => {\n      const drive = gapi.client.drive;\n      let success = true;\n      this.config.groups.forEach(group => {\n        if (group.destination) {\n          this.google.listFiles(this.getDriveQuery(group), resp => {\n            if (resp.error) {\n              reject(resp.error);\n            } else {\n              resp.files.forEach(file => {\n                this.google.moveFile(\n                  file.id,\n                  group.destination.folderID,\n                  success => {\n                    if (!success) {\n                      success = false;\n                    }\n                  }\n                );\n              }, this);\n            }\n          });\n        } else {\n          let newFolderName = ConfigBuilder.folderNameBuilder(\n            group.createFolder\n          );\n          this.google\n            .createFolder(newFolderName, group.createFolder.parent.folderID)\n            .then(newFolderID => {\n              this.google.listFiles(this.getDriveQuery(group), resp => {\n                if (resp.error) {\n                  reject(resp.error);\n                } else {\n                  resp.files.forEach(file => {\n                    this.google.moveFile(file.id, newFolderID, success => {\n                      if (!success) {\n                        success = false;\n                      }\n                    });\n                  }, this);\n                }\n              });\n            }, err => console.error);\n        }\n      });\n      if (success) resolve();\n      else reject();\n    });\n  }\n}\n","/**\n * Environment for production builds\n */\nexport const environment = {\n  production: true,\n  firebase: {\n    apiKey: \"AIzaSyB-yE9IXT29Vl_eAU7bzvzv5Qe17flfpzM\",\n    authDomain: \"g-drive-sorter-2.firebaseapp.com\",\n    databaseURL: \"https://g-drive-sorter-2.firebaseio.com\",\n    projectId: \"g-drive-sorter-2\",\n    storageBucket: \"g-drive-sorter-2.appspot.com\",\n    messagingSenderId: \"362606538820\"\n  }\n};\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n/**\n * Environment for development builds\n */\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyB-yE9IXT29Vl_eAU7bzvzv5Qe17flfpzM\",\n    authDomain: \"g-drive-sorter-2.firebaseapp.com\",\n    databaseURL: \"https://g-drive-sorter-2.firebaseio.com\",\n    projectId: \"g-drive-sorter-2\",\n    storageBucket: \"g-drive-sorter-2.appspot.com\",\n    messagingSenderId: \"362606538820\"\n  }\n};","import { AppModule } from './app/app.module';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}